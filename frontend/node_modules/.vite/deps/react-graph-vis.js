import {
  require_SetCache,
  require_Stack,
  require_WeakMap,
  require_apply,
  require_arrayEach,
  require_arrayIncludes,
  require_arrayIncludesWith,
  require_arrayMap,
  require_baseAssign,
  require_baseAssignValue,
  require_baseClone,
  require_baseCreate,
  require_baseFlatten,
  require_baseFor,
  require_baseGetTag,
  require_baseIteratee,
  require_baseKeys,
  require_baseRest,
  require_baseUnary,
  require_cacheHas,
  require_cloneBuffer,
  require_cloneTypedArray,
  require_copyArray,
  require_copyObject,
  require_eq,
  require_flatRest,
  require_getTag,
  require_identity,
  require_initCloneObject,
  require_isArguments,
  require_isArray,
  require_isArrayLike,
  require_isBuffer,
  require_isEqual,
  require_isFunction,
  require_isIndex,
  require_isIterateeCall,
  require_isObject,
  require_isObjectLike,
  require_isPlainObject,
  require_isSymbol,
  require_isTypedArray,
  require_keysIn,
  require_last,
  require_noop,
  require_prop_types,
  require_root,
  require_setToString,
  require_shortOut,
  require_stringToPath,
  require_toInteger,
  require_toKey,
  require_toString
} from "./chunk-Z6LWJ63V.js";
import "./chunk-42ILVNMI.js";
import {
  require_react
} from "./chunk-RLJ2RCJQ.js";
import {
  __commonJS
} from "./chunk-DC5AMYBS.js";

// node_modules/lodash/fp/_mapping.js
var require_mapping = __commonJS({
  "node_modules/lodash/fp/_mapping.js"(exports) {
    exports.aliasToReal = {
      // Lodash aliases.
      "each": "forEach",
      "eachRight": "forEachRight",
      "entries": "toPairs",
      "entriesIn": "toPairsIn",
      "extend": "assignIn",
      "extendAll": "assignInAll",
      "extendAllWith": "assignInAllWith",
      "extendWith": "assignInWith",
      "first": "head",
      // Methods that are curried variants of others.
      "conforms": "conformsTo",
      "matches": "isMatch",
      "property": "get",
      // Ramda aliases.
      "__": "placeholder",
      "F": "stubFalse",
      "T": "stubTrue",
      "all": "every",
      "allPass": "overEvery",
      "always": "constant",
      "any": "some",
      "anyPass": "overSome",
      "apply": "spread",
      "assoc": "set",
      "assocPath": "set",
      "complement": "negate",
      "compose": "flowRight",
      "contains": "includes",
      "dissoc": "unset",
      "dissocPath": "unset",
      "dropLast": "dropRight",
      "dropLastWhile": "dropRightWhile",
      "equals": "isEqual",
      "identical": "eq",
      "indexBy": "keyBy",
      "init": "initial",
      "invertObj": "invert",
      "juxt": "over",
      "omitAll": "omit",
      "nAry": "ary",
      "path": "get",
      "pathEq": "matchesProperty",
      "pathOr": "getOr",
      "paths": "at",
      "pickAll": "pick",
      "pipe": "flow",
      "pluck": "map",
      "prop": "get",
      "propEq": "matchesProperty",
      "propOr": "getOr",
      "props": "at",
      "symmetricDifference": "xor",
      "symmetricDifferenceBy": "xorBy",
      "symmetricDifferenceWith": "xorWith",
      "takeLast": "takeRight",
      "takeLastWhile": "takeRightWhile",
      "unapply": "rest",
      "unnest": "flatten",
      "useWith": "overArgs",
      "where": "conformsTo",
      "whereEq": "isMatch",
      "zipObj": "zipObject"
    };
    exports.aryMethod = {
      "1": [
        "assignAll",
        "assignInAll",
        "attempt",
        "castArray",
        "ceil",
        "create",
        "curry",
        "curryRight",
        "defaultsAll",
        "defaultsDeepAll",
        "floor",
        "flow",
        "flowRight",
        "fromPairs",
        "invert",
        "iteratee",
        "memoize",
        "method",
        "mergeAll",
        "methodOf",
        "mixin",
        "nthArg",
        "over",
        "overEvery",
        "overSome",
        "rest",
        "reverse",
        "round",
        "runInContext",
        "spread",
        "template",
        "trim",
        "trimEnd",
        "trimStart",
        "uniqueId",
        "words",
        "zipAll"
      ],
      "2": [
        "add",
        "after",
        "ary",
        "assign",
        "assignAllWith",
        "assignIn",
        "assignInAllWith",
        "at",
        "before",
        "bind",
        "bindAll",
        "bindKey",
        "chunk",
        "cloneDeepWith",
        "cloneWith",
        "concat",
        "conformsTo",
        "countBy",
        "curryN",
        "curryRightN",
        "debounce",
        "defaults",
        "defaultsDeep",
        "defaultTo",
        "delay",
        "difference",
        "divide",
        "drop",
        "dropRight",
        "dropRightWhile",
        "dropWhile",
        "endsWith",
        "eq",
        "every",
        "filter",
        "find",
        "findIndex",
        "findKey",
        "findLast",
        "findLastIndex",
        "findLastKey",
        "flatMap",
        "flatMapDeep",
        "flattenDepth",
        "forEach",
        "forEachRight",
        "forIn",
        "forInRight",
        "forOwn",
        "forOwnRight",
        "get",
        "groupBy",
        "gt",
        "gte",
        "has",
        "hasIn",
        "includes",
        "indexOf",
        "intersection",
        "invertBy",
        "invoke",
        "invokeMap",
        "isEqual",
        "isMatch",
        "join",
        "keyBy",
        "lastIndexOf",
        "lt",
        "lte",
        "map",
        "mapKeys",
        "mapValues",
        "matchesProperty",
        "maxBy",
        "meanBy",
        "merge",
        "mergeAllWith",
        "minBy",
        "multiply",
        "nth",
        "omit",
        "omitBy",
        "overArgs",
        "pad",
        "padEnd",
        "padStart",
        "parseInt",
        "partial",
        "partialRight",
        "partition",
        "pick",
        "pickBy",
        "propertyOf",
        "pull",
        "pullAll",
        "pullAt",
        "random",
        "range",
        "rangeRight",
        "rearg",
        "reject",
        "remove",
        "repeat",
        "restFrom",
        "result",
        "sampleSize",
        "some",
        "sortBy",
        "sortedIndex",
        "sortedIndexOf",
        "sortedLastIndex",
        "sortedLastIndexOf",
        "sortedUniqBy",
        "split",
        "spreadFrom",
        "startsWith",
        "subtract",
        "sumBy",
        "take",
        "takeRight",
        "takeRightWhile",
        "takeWhile",
        "tap",
        "throttle",
        "thru",
        "times",
        "trimChars",
        "trimCharsEnd",
        "trimCharsStart",
        "truncate",
        "union",
        "uniqBy",
        "uniqWith",
        "unset",
        "unzipWith",
        "without",
        "wrap",
        "xor",
        "zip",
        "zipObject",
        "zipObjectDeep"
      ],
      "3": [
        "assignInWith",
        "assignWith",
        "clamp",
        "differenceBy",
        "differenceWith",
        "findFrom",
        "findIndexFrom",
        "findLastFrom",
        "findLastIndexFrom",
        "getOr",
        "includesFrom",
        "indexOfFrom",
        "inRange",
        "intersectionBy",
        "intersectionWith",
        "invokeArgs",
        "invokeArgsMap",
        "isEqualWith",
        "isMatchWith",
        "flatMapDepth",
        "lastIndexOfFrom",
        "mergeWith",
        "orderBy",
        "padChars",
        "padCharsEnd",
        "padCharsStart",
        "pullAllBy",
        "pullAllWith",
        "rangeStep",
        "rangeStepRight",
        "reduce",
        "reduceRight",
        "replace",
        "set",
        "slice",
        "sortedIndexBy",
        "sortedLastIndexBy",
        "transform",
        "unionBy",
        "unionWith",
        "update",
        "xorBy",
        "xorWith",
        "zipWith"
      ],
      "4": [
        "fill",
        "setWith",
        "updateWith"
      ]
    };
    exports.aryRearg = {
      "2": [1, 0],
      "3": [2, 0, 1],
      "4": [3, 2, 0, 1]
    };
    exports.iterateeAry = {
      "dropRightWhile": 1,
      "dropWhile": 1,
      "every": 1,
      "filter": 1,
      "find": 1,
      "findFrom": 1,
      "findIndex": 1,
      "findIndexFrom": 1,
      "findKey": 1,
      "findLast": 1,
      "findLastFrom": 1,
      "findLastIndex": 1,
      "findLastIndexFrom": 1,
      "findLastKey": 1,
      "flatMap": 1,
      "flatMapDeep": 1,
      "flatMapDepth": 1,
      "forEach": 1,
      "forEachRight": 1,
      "forIn": 1,
      "forInRight": 1,
      "forOwn": 1,
      "forOwnRight": 1,
      "map": 1,
      "mapKeys": 1,
      "mapValues": 1,
      "partition": 1,
      "reduce": 2,
      "reduceRight": 2,
      "reject": 1,
      "remove": 1,
      "some": 1,
      "takeRightWhile": 1,
      "takeWhile": 1,
      "times": 1,
      "transform": 2
    };
    exports.iterateeRearg = {
      "mapKeys": [1],
      "reduceRight": [1, 0]
    };
    exports.methodRearg = {
      "assignInAllWith": [1, 0],
      "assignInWith": [1, 2, 0],
      "assignAllWith": [1, 0],
      "assignWith": [1, 2, 0],
      "differenceBy": [1, 2, 0],
      "differenceWith": [1, 2, 0],
      "getOr": [2, 1, 0],
      "intersectionBy": [1, 2, 0],
      "intersectionWith": [1, 2, 0],
      "isEqualWith": [1, 2, 0],
      "isMatchWith": [2, 1, 0],
      "mergeAllWith": [1, 0],
      "mergeWith": [1, 2, 0],
      "padChars": [2, 1, 0],
      "padCharsEnd": [2, 1, 0],
      "padCharsStart": [2, 1, 0],
      "pullAllBy": [2, 1, 0],
      "pullAllWith": [2, 1, 0],
      "rangeStep": [1, 2, 0],
      "rangeStepRight": [1, 2, 0],
      "setWith": [3, 1, 2, 0],
      "sortedIndexBy": [2, 1, 0],
      "sortedLastIndexBy": [2, 1, 0],
      "unionBy": [1, 2, 0],
      "unionWith": [1, 2, 0],
      "updateWith": [3, 1, 2, 0],
      "xorBy": [1, 2, 0],
      "xorWith": [1, 2, 0],
      "zipWith": [1, 2, 0]
    };
    exports.methodSpread = {
      "assignAll": { "start": 0 },
      "assignAllWith": { "start": 0 },
      "assignInAll": { "start": 0 },
      "assignInAllWith": { "start": 0 },
      "defaultsAll": { "start": 0 },
      "defaultsDeepAll": { "start": 0 },
      "invokeArgs": { "start": 2 },
      "invokeArgsMap": { "start": 2 },
      "mergeAll": { "start": 0 },
      "mergeAllWith": { "start": 0 },
      "partial": { "start": 1 },
      "partialRight": { "start": 1 },
      "without": { "start": 1 },
      "zipAll": { "start": 0 }
    };
    exports.mutate = {
      "array": {
        "fill": true,
        "pull": true,
        "pullAll": true,
        "pullAllBy": true,
        "pullAllWith": true,
        "pullAt": true,
        "remove": true,
        "reverse": true
      },
      "object": {
        "assign": true,
        "assignAll": true,
        "assignAllWith": true,
        "assignIn": true,
        "assignInAll": true,
        "assignInAllWith": true,
        "assignInWith": true,
        "assignWith": true,
        "defaults": true,
        "defaultsAll": true,
        "defaultsDeep": true,
        "defaultsDeepAll": true,
        "merge": true,
        "mergeAll": true,
        "mergeAllWith": true,
        "mergeWith": true
      },
      "set": {
        "set": true,
        "setWith": true,
        "unset": true,
        "update": true,
        "updateWith": true
      }
    };
    exports.realToAlias = function() {
      var hasOwnProperty = Object.prototype.hasOwnProperty, object = exports.aliasToReal, result = {};
      for (var key in object) {
        var value = object[key];
        if (hasOwnProperty.call(result, value)) {
          result[value].push(key);
        } else {
          result[value] = [key];
        }
      }
      return result;
    }();
    exports.remap = {
      "assignAll": "assign",
      "assignAllWith": "assignWith",
      "assignInAll": "assignIn",
      "assignInAllWith": "assignInWith",
      "curryN": "curry",
      "curryRightN": "curryRight",
      "defaultsAll": "defaults",
      "defaultsDeepAll": "defaultsDeep",
      "findFrom": "find",
      "findIndexFrom": "findIndex",
      "findLastFrom": "findLast",
      "findLastIndexFrom": "findLastIndex",
      "getOr": "get",
      "includesFrom": "includes",
      "indexOfFrom": "indexOf",
      "invokeArgs": "invoke",
      "invokeArgsMap": "invokeMap",
      "lastIndexOfFrom": "lastIndexOf",
      "mergeAll": "merge",
      "mergeAllWith": "mergeWith",
      "padChars": "pad",
      "padCharsEnd": "padEnd",
      "padCharsStart": "padStart",
      "propertyOf": "get",
      "rangeStep": "range",
      "rangeStepRight": "rangeRight",
      "restFrom": "rest",
      "spreadFrom": "spread",
      "trimChars": "trim",
      "trimCharsEnd": "trimEnd",
      "trimCharsStart": "trimStart",
      "zipAll": "zip"
    };
    exports.skipFixed = {
      "castArray": true,
      "flow": true,
      "flowRight": true,
      "iteratee": true,
      "mixin": true,
      "rearg": true,
      "runInContext": true
    };
    exports.skipRearg = {
      "add": true,
      "assign": true,
      "assignIn": true,
      "bind": true,
      "bindKey": true,
      "concat": true,
      "difference": true,
      "divide": true,
      "eq": true,
      "gt": true,
      "gte": true,
      "isEqual": true,
      "lt": true,
      "lte": true,
      "matchesProperty": true,
      "merge": true,
      "multiply": true,
      "overArgs": true,
      "partial": true,
      "partialRight": true,
      "propertyOf": true,
      "random": true,
      "range": true,
      "rangeRight": true,
      "subtract": true,
      "zip": true,
      "zipObject": true,
      "zipObjectDeep": true
    };
  }
});

// node_modules/lodash/fp/placeholder.js
var require_placeholder = __commonJS({
  "node_modules/lodash/fp/placeholder.js"(exports, module) {
    module.exports = {};
  }
});

// node_modules/lodash/fp/_baseConvert.js
var require_baseConvert = __commonJS({
  "node_modules/lodash/fp/_baseConvert.js"(exports, module) {
    var mapping = require_mapping();
    var fallbackHolder = require_placeholder();
    var push = Array.prototype.push;
    function baseArity(func, n) {
      return n == 2 ? function(a, b) {
        return func.apply(void 0, arguments);
      } : function(a) {
        return func.apply(void 0, arguments);
      };
    }
    function baseAry(func, n) {
      return n == 2 ? function(a, b) {
        return func(a, b);
      } : function(a) {
        return func(a);
      };
    }
    function cloneArray(array) {
      var length2 = array ? array.length : 0, result = Array(length2);
      while (length2--) {
        result[length2] = array[length2];
      }
      return result;
    }
    function createCloner(func) {
      return function(object) {
        return func({}, object);
      };
    }
    function flatSpread(func, start) {
      return function() {
        var length2 = arguments.length, lastIndex = length2 - 1, args = Array(length2);
        while (length2--) {
          args[length2] = arguments[length2];
        }
        var array = args[start], otherArgs = args.slice(0, start);
        if (array) {
          push.apply(otherArgs, array);
        }
        if (start != lastIndex) {
          push.apply(otherArgs, args.slice(start + 1));
        }
        return func.apply(this, otherArgs);
      };
    }
    function wrapImmutable(func, cloner) {
      return function() {
        var length2 = arguments.length;
        if (!length2) {
          return;
        }
        var args = Array(length2);
        while (length2--) {
          args[length2] = arguments[length2];
        }
        var result = args[0] = cloner.apply(void 0, args);
        func.apply(void 0, args);
        return result;
      };
    }
    function baseConvert(util, name, func, options) {
      var isLib = typeof name == "function", isObj = name === Object(name);
      if (isObj) {
        options = func;
        func = name;
        name = void 0;
      }
      if (func == null) {
        throw new TypeError();
      }
      options || (options = {});
      var config = {
        "cap": "cap" in options ? options.cap : true,
        "curry": "curry" in options ? options.curry : true,
        "fixed": "fixed" in options ? options.fixed : true,
        "immutable": "immutable" in options ? options.immutable : true,
        "rearg": "rearg" in options ? options.rearg : true
      };
      var defaultHolder = isLib ? func : fallbackHolder, forceCurry = "curry" in options && options.curry, forceFixed = "fixed" in options && options.fixed, forceRearg = "rearg" in options && options.rearg, pristine = isLib ? func.runInContext() : void 0;
      var helpers = isLib ? func : {
        "ary": util.ary,
        "assign": util.assign,
        "clone": util.clone,
        "curry": util.curry,
        "forEach": util.forEach,
        "isArray": util.isArray,
        "isError": util.isError,
        "isFunction": util.isFunction,
        "isWeakMap": util.isWeakMap,
        "iteratee": util.iteratee,
        "keys": util.keys,
        "rearg": util.rearg,
        "toInteger": util.toInteger,
        "toPath": util.toPath
      };
      var ary = helpers.ary, assign = helpers.assign, clone = helpers.clone, curry = helpers.curry, each = helpers.forEach, isArray = helpers.isArray, isError = helpers.isError, isFunction = helpers.isFunction, isWeakMap = helpers.isWeakMap, keys = helpers.keys, rearg = helpers.rearg, toInteger = helpers.toInteger, toPath = helpers.toPath;
      var aryMethodKeys = keys(mapping.aryMethod);
      var wrappers = {
        "castArray": function(castArray) {
          return function() {
            var value = arguments[0];
            return isArray(value) ? castArray(cloneArray(value)) : castArray.apply(void 0, arguments);
          };
        },
        "iteratee": function(iteratee) {
          return function() {
            var func2 = arguments[0], arity = arguments[1], result = iteratee(func2, arity), length2 = result.length;
            if (config.cap && typeof arity == "number") {
              arity = arity > 2 ? arity - 2 : 1;
              return length2 && length2 <= arity ? result : baseAry(result, arity);
            }
            return result;
          };
        },
        "mixin": function(mixin) {
          return function(source) {
            var func2 = this;
            if (!isFunction(func2)) {
              return mixin(func2, Object(source));
            }
            var pairs2 = [];
            each(keys(source), function(key) {
              if (isFunction(source[key])) {
                pairs2.push([key, func2.prototype[key]]);
              }
            });
            mixin(func2, Object(source));
            each(pairs2, function(pair) {
              var value = pair[1];
              if (isFunction(value)) {
                func2.prototype[pair[0]] = value;
              } else {
                delete func2.prototype[pair[0]];
              }
            });
            return func2;
          };
        },
        "nthArg": function(nthArg) {
          return function(n) {
            var arity = n < 0 ? 1 : toInteger(n) + 1;
            return curry(nthArg(n), arity);
          };
        },
        "rearg": function(rearg2) {
          return function(func2, indexes) {
            var arity = indexes ? indexes.length : 0;
            return curry(rearg2(func2, indexes), arity);
          };
        },
        "runInContext": function(runInContext) {
          return function(context) {
            return baseConvert(util, runInContext(context), options);
          };
        }
      };
      function castCap(name2, func2) {
        if (config.cap) {
          var indexes = mapping.iterateeRearg[name2];
          if (indexes) {
            return iterateeRearg(func2, indexes);
          }
          var n = !isLib && mapping.iterateeAry[name2];
          if (n) {
            return iterateeAry(func2, n);
          }
        }
        return func2;
      }
      function castCurry(name2, func2, n) {
        return forceCurry || config.curry && n > 1 ? curry(func2, n) : func2;
      }
      function castFixed(name2, func2, n) {
        if (config.fixed && (forceFixed || !mapping.skipFixed[name2])) {
          var data = mapping.methodSpread[name2], start = data && data.start;
          return start === void 0 ? ary(func2, n) : flatSpread(func2, start);
        }
        return func2;
      }
      function castRearg(name2, func2, n) {
        return config.rearg && n > 1 && (forceRearg || !mapping.skipRearg[name2]) ? rearg(func2, mapping.methodRearg[name2] || mapping.aryRearg[n]) : func2;
      }
      function cloneByPath(object, path) {
        path = toPath(path);
        var index = -1, length2 = path.length, lastIndex = length2 - 1, result = clone(Object(object)), nested = result;
        while (nested != null && ++index < length2) {
          var key = path[index], value = nested[key];
          if (value != null && !(isFunction(value) || isError(value) || isWeakMap(value))) {
            nested[key] = clone(index == lastIndex ? value : Object(value));
          }
          nested = nested[key];
        }
        return result;
      }
      function convertLib(options2) {
        return _.runInContext.convert(options2)(void 0);
      }
      function createConverter(name2, func2) {
        var realName = mapping.aliasToReal[name2] || name2, methodName = mapping.remap[realName] || realName, oldOptions = options;
        return function(options2) {
          var newUtil = isLib ? pristine : helpers, newFunc = isLib ? pristine[methodName] : func2, newOptions = assign(assign({}, oldOptions), options2);
          return baseConvert(newUtil, realName, newFunc, newOptions);
        };
      }
      function iterateeAry(func2, n) {
        return overArg(func2, function(func3) {
          return typeof func3 == "function" ? baseAry(func3, n) : func3;
        });
      }
      function iterateeRearg(func2, indexes) {
        return overArg(func2, function(func3) {
          var n = indexes.length;
          return baseArity(rearg(baseAry(func3, n), indexes), n);
        });
      }
      function overArg(func2, transform) {
        return function() {
          var length2 = arguments.length;
          if (!length2) {
            return func2();
          }
          var args = Array(length2);
          while (length2--) {
            args[length2] = arguments[length2];
          }
          var index = config.rearg ? 0 : length2 - 1;
          args[index] = transform(args[index]);
          return func2.apply(void 0, args);
        };
      }
      function wrap(name2, func2, placeholder) {
        var result, realName = mapping.aliasToReal[name2] || name2, wrapped = func2, wrapper = wrappers[realName];
        if (wrapper) {
          wrapped = wrapper(func2);
        } else if (config.immutable) {
          if (mapping.mutate.array[realName]) {
            wrapped = wrapImmutable(func2, cloneArray);
          } else if (mapping.mutate.object[realName]) {
            wrapped = wrapImmutable(func2, createCloner(func2));
          } else if (mapping.mutate.set[realName]) {
            wrapped = wrapImmutable(func2, cloneByPath);
          }
        }
        each(aryMethodKeys, function(aryKey) {
          each(mapping.aryMethod[aryKey], function(otherName) {
            if (realName == otherName) {
              var data = mapping.methodSpread[realName], afterRearg = data && data.afterRearg;
              result = afterRearg ? castFixed(realName, castRearg(realName, wrapped, aryKey), aryKey) : castRearg(realName, castFixed(realName, wrapped, aryKey), aryKey);
              result = castCap(realName, result);
              result = castCurry(realName, result, aryKey);
              return false;
            }
          });
          return !result;
        });
        result || (result = wrapped);
        if (result == func2) {
          result = forceCurry ? curry(result, 1) : function() {
            return func2.apply(this, arguments);
          };
        }
        result.convert = createConverter(realName, func2);
        result.placeholder = func2.placeholder = placeholder;
        return result;
      }
      if (!isObj) {
        return wrap(name, func, defaultHolder);
      }
      var _ = func;
      var pairs = [];
      each(aryMethodKeys, function(aryKey) {
        each(mapping.aryMethod[aryKey], function(key) {
          var func2 = _[mapping.remap[key] || key];
          if (func2) {
            pairs.push([key, wrap(key, func2, _)]);
          }
        });
      });
      each(keys(_), function(key) {
        var func2 = _[key];
        if (typeof func2 == "function") {
          var length2 = pairs.length;
          while (length2--) {
            if (pairs[length2][0] == key) {
              return;
            }
          }
          func2.convert = createConverter(key, func2);
          pairs.push([key, func2]);
        }
      });
      each(pairs, function(pair) {
        _[pair[0]] = pair[1];
      });
      _.convert = convertLib;
      _.placeholder = _;
      each(keys(_), function(key) {
        each(mapping.realToAlias[key] || [], function(alias) {
          _[alias] = _[key];
        });
      });
      return _;
    }
    module.exports = baseConvert;
  }
});

// node_modules/lodash/_metaMap.js
var require_metaMap = __commonJS({
  "node_modules/lodash/_metaMap.js"(exports, module) {
    var WeakMap = require_WeakMap();
    var metaMap = WeakMap && new WeakMap();
    module.exports = metaMap;
  }
});

// node_modules/lodash/_baseSetData.js
var require_baseSetData = __commonJS({
  "node_modules/lodash/_baseSetData.js"(exports, module) {
    var identity = require_identity();
    var metaMap = require_metaMap();
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };
    module.exports = baseSetData;
  }
});

// node_modules/lodash/_createCtor.js
var require_createCtor = __commonJS({
  "node_modules/lodash/_createCtor.js"(exports, module) {
    var baseCreate = require_baseCreate();
    var isObject = require_isObject();
    function createCtor(Ctor) {
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0:
            return new Ctor();
          case 1:
            return new Ctor(args[0]);
          case 2:
            return new Ctor(args[0], args[1]);
          case 3:
            return new Ctor(args[0], args[1], args[2]);
          case 4:
            return new Ctor(args[0], args[1], args[2], args[3]);
          case 5:
            return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6:
            return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7:
            return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype), result = Ctor.apply(thisBinding, args);
        return isObject(result) ? result : thisBinding;
      };
    }
    module.exports = createCtor;
  }
});

// node_modules/lodash/_createBind.js
var require_createBind = __commonJS({
  "node_modules/lodash/_createBind.js"(exports, module) {
    var createCtor = require_createCtor();
    var root = require_root();
    var WRAP_BIND_FLAG = 1;
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
      function wrapper() {
        var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }
    module.exports = createBind;
  }
});

// node_modules/lodash/_composeArgs.js
var require_composeArgs = __commonJS({
  "node_modules/lodash/_composeArgs.js"(exports, module) {
    var nativeMax = Math.max;
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1, argsLength = args.length, holdersLength = holders.length, leftIndex = -1, leftLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result = Array(leftLength + rangeLength), isUncurried = !isCurried;
      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }
    module.exports = composeArgs;
  }
});

// node_modules/lodash/_composeArgsRight.js
var require_composeArgsRight = __commonJS({
  "node_modules/lodash/_composeArgsRight.js"(exports, module) {
    var nativeMax = Math.max;
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1, argsLength = args.length, holdersIndex = -1, holdersLength = holders.length, rightIndex = -1, rightLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result = Array(rangeLength + rightLength), isUncurried = !isCurried;
      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }
    module.exports = composeArgsRight;
  }
});

// node_modules/lodash/_countHolders.js
var require_countHolders = __commonJS({
  "node_modules/lodash/_countHolders.js"(exports, module) {
    function countHolders(array, placeholder) {
      var length2 = array.length, result = 0;
      while (length2--) {
        if (array[length2] === placeholder) {
          ++result;
        }
      }
      return result;
    }
    module.exports = countHolders;
  }
});

// node_modules/lodash/_baseLodash.js
var require_baseLodash = __commonJS({
  "node_modules/lodash/_baseLodash.js"(exports, module) {
    function baseLodash() {
    }
    module.exports = baseLodash;
  }
});

// node_modules/lodash/_LazyWrapper.js
var require_LazyWrapper = __commonJS({
  "node_modules/lodash/_LazyWrapper.js"(exports, module) {
    var baseCreate = require_baseCreate();
    var baseLodash = require_baseLodash();
    var MAX_ARRAY_LENGTH = 4294967295;
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;
    module.exports = LazyWrapper;
  }
});

// node_modules/lodash/_getData.js
var require_getData = __commonJS({
  "node_modules/lodash/_getData.js"(exports, module) {
    var metaMap = require_metaMap();
    var noop = require_noop();
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };
    module.exports = getData;
  }
});

// node_modules/lodash/_realNames.js
var require_realNames = __commonJS({
  "node_modules/lodash/_realNames.js"(exports, module) {
    var realNames = {};
    module.exports = realNames;
  }
});

// node_modules/lodash/_getFuncName.js
var require_getFuncName = __commonJS({
  "node_modules/lodash/_getFuncName.js"(exports, module) {
    var realNames = require_realNames();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function getFuncName(func) {
      var result = func.name + "", array = realNames[result], length2 = hasOwnProperty.call(realNames, result) ? array.length : 0;
      while (length2--) {
        var data = array[length2], otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }
    module.exports = getFuncName;
  }
});

// node_modules/lodash/_LodashWrapper.js
var require_LodashWrapper = __commonJS({
  "node_modules/lodash/_LodashWrapper.js"(exports, module) {
    var baseCreate = require_baseCreate();
    var baseLodash = require_baseLodash();
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = void 0;
    }
    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;
    module.exports = LodashWrapper;
  }
});

// node_modules/lodash/_wrapperClone.js
var require_wrapperClone = __commonJS({
  "node_modules/lodash/_wrapperClone.js"(exports, module) {
    var LazyWrapper = require_LazyWrapper();
    var LodashWrapper = require_LodashWrapper();
    var copyArray = require_copyArray();
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__ = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }
    module.exports = wrapperClone;
  }
});

// node_modules/lodash/wrapperLodash.js
var require_wrapperLodash = __commonJS({
  "node_modules/lodash/wrapperLodash.js"(exports, module) {
    var LazyWrapper = require_LazyWrapper();
    var LodashWrapper = require_LodashWrapper();
    var baseLodash = require_baseLodash();
    var isArray = require_isArray();
    var isObjectLike = require_isObjectLike();
    var wrapperClone = require_wrapperClone();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, "__wrapped__")) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;
    module.exports = lodash;
  }
});

// node_modules/lodash/_isLaziable.js
var require_isLaziable = __commonJS({
  "node_modules/lodash/_isLaziable.js"(exports, module) {
    var LazyWrapper = require_LazyWrapper();
    var getData = require_getData();
    var getFuncName = require_getFuncName();
    var lodash = require_wrapperLodash();
    function isLaziable(func) {
      var funcName = getFuncName(func), other = lodash[funcName];
      if (typeof other != "function" || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }
    module.exports = isLaziable;
  }
});

// node_modules/lodash/_setData.js
var require_setData = __commonJS({
  "node_modules/lodash/_setData.js"(exports, module) {
    var baseSetData = require_baseSetData();
    var shortOut = require_shortOut();
    var setData = shortOut(baseSetData);
    module.exports = setData;
  }
});

// node_modules/lodash/_getWrapDetails.js
var require_getWrapDetails = __commonJS({
  "node_modules/lodash/_getWrapDetails.js"(exports, module) {
    var reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/;
    var reSplitDetails = /,? & /;
    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }
    module.exports = getWrapDetails;
  }
});

// node_modules/lodash/_insertWrapDetails.js
var require_insertWrapDetails = __commonJS({
  "node_modules/lodash/_insertWrapDetails.js"(exports, module) {
    var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/;
    function insertWrapDetails(source, details) {
      var length2 = details.length;
      if (!length2) {
        return source;
      }
      var lastIndex = length2 - 1;
      details[lastIndex] = (length2 > 1 ? "& " : "") + details[lastIndex];
      details = details.join(length2 > 2 ? ", " : " ");
      return source.replace(reWrapComment, "{\n/* [wrapped with " + details + "] */\n");
    }
    module.exports = insertWrapDetails;
  }
});

// node_modules/lodash/_updateWrapDetails.js
var require_updateWrapDetails = __commonJS({
  "node_modules/lodash/_updateWrapDetails.js"(exports, module) {
    var arrayEach = require_arrayEach();
    var arrayIncludes = require_arrayIncludes();
    var WRAP_BIND_FLAG = 1;
    var WRAP_BIND_KEY_FLAG = 2;
    var WRAP_CURRY_FLAG = 8;
    var WRAP_CURRY_RIGHT_FLAG = 16;
    var WRAP_PARTIAL_FLAG = 32;
    var WRAP_PARTIAL_RIGHT_FLAG = 64;
    var WRAP_ARY_FLAG = 128;
    var WRAP_REARG_FLAG = 256;
    var WRAP_FLIP_FLAG = 512;
    var wrapFlags = [
      ["ary", WRAP_ARY_FLAG],
      ["bind", WRAP_BIND_FLAG],
      ["bindKey", WRAP_BIND_KEY_FLAG],
      ["curry", WRAP_CURRY_FLAG],
      ["curryRight", WRAP_CURRY_RIGHT_FLAG],
      ["flip", WRAP_FLIP_FLAG],
      ["partial", WRAP_PARTIAL_FLAG],
      ["partialRight", WRAP_PARTIAL_RIGHT_FLAG],
      ["rearg", WRAP_REARG_FLAG]
    ];
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function(pair) {
        var value = "_." + pair[0];
        if (bitmask & pair[1] && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }
    module.exports = updateWrapDetails;
  }
});

// node_modules/lodash/_setWrapToString.js
var require_setWrapToString = __commonJS({
  "node_modules/lodash/_setWrapToString.js"(exports, module) {
    var getWrapDetails = require_getWrapDetails();
    var insertWrapDetails = require_insertWrapDetails();
    var setToString = require_setToString();
    var updateWrapDetails = require_updateWrapDetails();
    function setWrapToString(wrapper, reference, bitmask) {
      var source = reference + "";
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }
    module.exports = setWrapToString;
  }
});

// node_modules/lodash/_createRecurry.js
var require_createRecurry = __commonJS({
  "node_modules/lodash/_createRecurry.js"(exports, module) {
    var isLaziable = require_isLaziable();
    var setData = require_setData();
    var setWrapToString = require_setWrapToString();
    var WRAP_BIND_FLAG = 1;
    var WRAP_BIND_KEY_FLAG = 2;
    var WRAP_CURRY_BOUND_FLAG = 4;
    var WRAP_CURRY_FLAG = 8;
    var WRAP_PARTIAL_FLAG = 32;
    var WRAP_PARTIAL_RIGHT_FLAG = 64;
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG, newHolders = isCurry ? holders : void 0, newHoldersRight = isCurry ? void 0 : holders, newPartials = isCurry ? partials : void 0, newPartialsRight = isCurry ? void 0 : partials;
      bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [
        func,
        bitmask,
        thisArg,
        newPartials,
        newHolders,
        newPartialsRight,
        newHoldersRight,
        argPos,
        ary,
        arity
      ];
      var result = wrapFunc.apply(void 0, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }
    module.exports = createRecurry;
  }
});

// node_modules/lodash/_getHolder.js
var require_getHolder = __commonJS({
  "node_modules/lodash/_getHolder.js"(exports, module) {
    function getHolder(func) {
      var object = func;
      return object.placeholder;
    }
    module.exports = getHolder;
  }
});

// node_modules/lodash/_reorder.js
var require_reorder = __commonJS({
  "node_modules/lodash/_reorder.js"(exports, module) {
    var copyArray = require_copyArray();
    var isIndex = require_isIndex();
    var nativeMin = Math.min;
    function reorder(array, indexes) {
      var arrLength = array.length, length2 = nativeMin(indexes.length, arrLength), oldArray = copyArray(array);
      while (length2--) {
        var index = indexes[length2];
        array[length2] = isIndex(index, arrLength) ? oldArray[index] : void 0;
      }
      return array;
    }
    module.exports = reorder;
  }
});

// node_modules/lodash/_replaceHolders.js
var require_replaceHolders = __commonJS({
  "node_modules/lodash/_replaceHolders.js"(exports, module) {
    var PLACEHOLDER = "__lodash_placeholder__";
    function replaceHolders(array, placeholder) {
      var index = -1, length2 = array.length, resIndex = 0, result = [];
      while (++index < length2) {
        var value = array[index];
        if (value === placeholder || value === PLACEHOLDER) {
          array[index] = PLACEHOLDER;
          result[resIndex++] = index;
        }
      }
      return result;
    }
    module.exports = replaceHolders;
  }
});

// node_modules/lodash/_createHybrid.js
var require_createHybrid = __commonJS({
  "node_modules/lodash/_createHybrid.js"(exports, module) {
    var composeArgs = require_composeArgs();
    var composeArgsRight = require_composeArgsRight();
    var countHolders = require_countHolders();
    var createCtor = require_createCtor();
    var createRecurry = require_createRecurry();
    var getHolder = require_getHolder();
    var reorder = require_reorder();
    var replaceHolders = require_replaceHolders();
    var root = require_root();
    var WRAP_BIND_FLAG = 1;
    var WRAP_BIND_KEY_FLAG = 2;
    var WRAP_CURRY_FLAG = 8;
    var WRAP_CURRY_RIGHT_FLAG = 16;
    var WRAP_ARY_FLAG = 128;
    var WRAP_FLIP_FLAG = 512;
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG, isBind = bitmask & WRAP_BIND_FLAG, isBindKey = bitmask & WRAP_BIND_KEY_FLAG, isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG), isFlip = bitmask & WRAP_FLIP_FLAG, Ctor = isBindKey ? void 0 : createCtor(func);
      function wrapper() {
        var length2 = arguments.length, args = Array(length2), index = length2;
        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper), holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length2 -= holdersCount;
        if (isCurried && length2 < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(
            func,
            bitmask,
            createHybrid,
            wrapper.placeholder,
            thisArg,
            args,
            newHolders,
            argPos,
            ary,
            arity - length2
          );
        }
        var thisBinding = isBind ? thisArg : this, fn = isBindKey ? thisBinding[func] : func;
        length2 = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length2 > 1) {
          args.reverse();
        }
        if (isAry && ary < length2) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }
    module.exports = createHybrid;
  }
});

// node_modules/lodash/_createCurry.js
var require_createCurry = __commonJS({
  "node_modules/lodash/_createCurry.js"(exports, module) {
    var apply = require_apply();
    var createCtor = require_createCtor();
    var createHybrid = require_createHybrid();
    var createRecurry = require_createRecurry();
    var getHolder = require_getHolder();
    var replaceHolders = require_replaceHolders();
    var root = require_root();
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);
      function wrapper() {
        var length2 = arguments.length, args = Array(length2), index = length2, placeholder = getHolder(wrapper);
        while (index--) {
          args[index] = arguments[index];
        }
        var holders = length2 < 3 && args[0] !== placeholder && args[length2 - 1] !== placeholder ? [] : replaceHolders(args, placeholder);
        length2 -= holders.length;
        if (length2 < arity) {
          return createRecurry(
            func,
            bitmask,
            createHybrid,
            wrapper.placeholder,
            void 0,
            args,
            holders,
            void 0,
            void 0,
            arity - length2
          );
        }
        var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }
    module.exports = createCurry;
  }
});

// node_modules/lodash/_createPartial.js
var require_createPartial = __commonJS({
  "node_modules/lodash/_createPartial.js"(exports, module) {
    var apply = require_apply();
    var createCtor = require_createCtor();
    var root = require_root();
    var WRAP_BIND_FLAG = 1;
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
      function wrapper() {
        var argsIndex = -1, argsLength = arguments.length, leftIndex = -1, leftLength = partials.length, args = Array(leftLength + argsLength), fn = this && this !== root && this instanceof wrapper ? Ctor : func;
        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }
    module.exports = createPartial;
  }
});

// node_modules/lodash/_mergeData.js
var require_mergeData = __commonJS({
  "node_modules/lodash/_mergeData.js"(exports, module) {
    var composeArgs = require_composeArgs();
    var composeArgsRight = require_composeArgsRight();
    var replaceHolders = require_replaceHolders();
    var PLACEHOLDER = "__lodash_placeholder__";
    var WRAP_BIND_FLAG = 1;
    var WRAP_BIND_KEY_FLAG = 2;
    var WRAP_CURRY_BOUND_FLAG = 4;
    var WRAP_CURRY_FLAG = 8;
    var WRAP_ARY_FLAG = 128;
    var WRAP_REARG_FLAG = 256;
    var nativeMin = Math.min;
    function mergeData(data, source) {
      var bitmask = data[1], srcBitmask = source[1], newBitmask = bitmask | srcBitmask, isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
      var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG;
      if (!(isCommon || isCombo)) {
        return data;
      }
      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];
        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }
      value = source[7];
      if (value) {
        data[7] = value;
      }
      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      if (data[9] == null) {
        data[9] = source[9];
      }
      data[0] = source[0];
      data[1] = newBitmask;
      return data;
    }
    module.exports = mergeData;
  }
});

// node_modules/lodash/_createWrap.js
var require_createWrap = __commonJS({
  "node_modules/lodash/_createWrap.js"(exports, module) {
    var baseSetData = require_baseSetData();
    var createBind = require_createBind();
    var createCurry = require_createCurry();
    var createHybrid = require_createHybrid();
    var createPartial = require_createPartial();
    var getData = require_getData();
    var mergeData = require_mergeData();
    var setData = require_setData();
    var setWrapToString = require_setWrapToString();
    var toInteger = require_toInteger();
    var FUNC_ERROR_TEXT = "Expected a function";
    var WRAP_BIND_FLAG = 1;
    var WRAP_BIND_KEY_FLAG = 2;
    var WRAP_CURRY_FLAG = 8;
    var WRAP_CURRY_RIGHT_FLAG = 16;
    var WRAP_PARTIAL_FLAG = 32;
    var WRAP_PARTIAL_RIGHT_FLAG = 64;
    var nativeMax = Math.max;
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length2 = partials ? partials.length : 0;
      if (!length2) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = void 0;
      }
      ary = ary === void 0 ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === void 0 ? arity : toInteger(arity);
      length2 -= holders ? holders.length : 0;
      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials, holdersRight = holders;
        partials = holders = void 0;
      }
      var data = isBindKey ? void 0 : getData(func);
      var newData = [
        func,
        bitmask,
        thisArg,
        partials,
        holders,
        partialsRight,
        holdersRight,
        argPos,
        ary,
        arity
      ];
      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === void 0 ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length2, 0);
      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(void 0, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }
    module.exports = createWrap;
  }
});

// node_modules/lodash/ary.js
var require_ary = __commonJS({
  "node_modules/lodash/ary.js"(exports, module) {
    var createWrap = require_createWrap();
    var WRAP_ARY_FLAG = 128;
    function ary(func, n, guard) {
      n = guard ? void 0 : n;
      n = func && n == null ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, void 0, void 0, void 0, void 0, n);
    }
    module.exports = ary;
  }
});

// node_modules/lodash/clone.js
var require_clone = __commonJS({
  "node_modules/lodash/clone.js"(exports, module) {
    var baseClone = require_baseClone();
    var CLONE_SYMBOLS_FLAG = 4;
    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }
    module.exports = clone;
  }
});

// node_modules/lodash/curry.js
var require_curry = __commonJS({
  "node_modules/lodash/curry.js"(exports, module) {
    var createWrap = require_createWrap();
    var WRAP_CURRY_FLAG = 8;
    function curry(func, arity, guard) {
      arity = guard ? void 0 : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, void 0, void 0, void 0, void 0, void 0, arity);
      result.placeholder = curry.placeholder;
      return result;
    }
    curry.placeholder = {};
    module.exports = curry;
  }
});

// node_modules/lodash/isError.js
var require_isError = __commonJS({
  "node_modules/lodash/isError.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var isPlainObject = require_isPlainObject();
    var domExcTag = "[object DOMException]";
    var errorTag = "[object Error]";
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag || typeof value.message == "string" && typeof value.name == "string" && !isPlainObject(value);
    }
    module.exports = isError;
  }
});

// node_modules/lodash/isWeakMap.js
var require_isWeakMap = __commonJS({
  "node_modules/lodash/isWeakMap.js"(exports, module) {
    var getTag = require_getTag();
    var isObjectLike = require_isObjectLike();
    var weakMapTag = "[object WeakMap]";
    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }
    module.exports = isWeakMap;
  }
});

// node_modules/lodash/iteratee.js
var require_iteratee = __commonJS({
  "node_modules/lodash/iteratee.js"(exports, module) {
    var baseClone = require_baseClone();
    var baseIteratee = require_baseIteratee();
    var CLONE_DEEP_FLAG = 1;
    function iteratee(func) {
      return baseIteratee(typeof func == "function" ? func : baseClone(func, CLONE_DEEP_FLAG));
    }
    module.exports = iteratee;
  }
});

// node_modules/lodash/rearg.js
var require_rearg = __commonJS({
  "node_modules/lodash/rearg.js"(exports, module) {
    var createWrap = require_createWrap();
    var flatRest = require_flatRest();
    var WRAP_REARG_FLAG = 256;
    var rearg = flatRest(function(func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, void 0, void 0, void 0, indexes);
    });
    module.exports = rearg;
  }
});

// node_modules/lodash/toPath.js
var require_toPath = __commonJS({
  "node_modules/lodash/toPath.js"(exports, module) {
    var arrayMap = require_arrayMap();
    var copyArray = require_copyArray();
    var isArray = require_isArray();
    var isSymbol = require_isSymbol();
    var stringToPath = require_stringToPath();
    var toKey = require_toKey();
    var toString = require_toString();
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }
    module.exports = toPath;
  }
});

// node_modules/lodash/fp/_util.js
var require_util = __commonJS({
  "node_modules/lodash/fp/_util.js"(exports, module) {
    module.exports = {
      "ary": require_ary(),
      "assign": require_baseAssign(),
      "clone": require_clone(),
      "curry": require_curry(),
      "forEach": require_arrayEach(),
      "isArray": require_isArray(),
      "isError": require_isError(),
      "isFunction": require_isFunction(),
      "isWeakMap": require_isWeakMap(),
      "iteratee": require_iteratee(),
      "keys": require_baseKeys(),
      "rearg": require_rearg(),
      "toInteger": require_toInteger(),
      "toPath": require_toPath()
    };
  }
});

// node_modules/lodash/fp/convert.js
var require_convert = __commonJS({
  "node_modules/lodash/fp/convert.js"(exports, module) {
    var baseConvert = require_baseConvert();
    var util = require_util();
    function convert(name, func, options) {
      return baseConvert(util, name, func, options);
    }
    module.exports = convert;
  }
});

// node_modules/lodash/_assignMergeValue.js
var require_assignMergeValue = __commonJS({
  "node_modules/lodash/_assignMergeValue.js"(exports, module) {
    var baseAssignValue = require_baseAssignValue();
    var eq = require_eq();
    function assignMergeValue(object, key, value) {
      if (value !== void 0 && !eq(object[key], value) || value === void 0 && !(key in object)) {
        baseAssignValue(object, key, value);
      }
    }
    module.exports = assignMergeValue;
  }
});

// node_modules/lodash/isArrayLikeObject.js
var require_isArrayLikeObject = __commonJS({
  "node_modules/lodash/isArrayLikeObject.js"(exports, module) {
    var isArrayLike = require_isArrayLike();
    var isObjectLike = require_isObjectLike();
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }
    module.exports = isArrayLikeObject;
  }
});

// node_modules/lodash/_safeGet.js
var require_safeGet = __commonJS({
  "node_modules/lodash/_safeGet.js"(exports, module) {
    function safeGet(object, key) {
      if (key === "constructor" && typeof object[key] === "function") {
        return;
      }
      if (key == "__proto__") {
        return;
      }
      return object[key];
    }
    module.exports = safeGet;
  }
});

// node_modules/lodash/toPlainObject.js
var require_toPlainObject = __commonJS({
  "node_modules/lodash/toPlainObject.js"(exports, module) {
    var copyObject = require_copyObject();
    var keysIn = require_keysIn();
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }
    module.exports = toPlainObject;
  }
});

// node_modules/lodash/_baseMergeDeep.js
var require_baseMergeDeep = __commonJS({
  "node_modules/lodash/_baseMergeDeep.js"(exports, module) {
    var assignMergeValue = require_assignMergeValue();
    var cloneBuffer = require_cloneBuffer();
    var cloneTypedArray = require_cloneTypedArray();
    var copyArray = require_copyArray();
    var initCloneObject = require_initCloneObject();
    var isArguments = require_isArguments();
    var isArray = require_isArray();
    var isArrayLikeObject = require_isArrayLikeObject();
    var isBuffer = require_isBuffer();
    var isFunction = require_isFunction();
    var isObject = require_isObject();
    var isPlainObject = require_isPlainObject();
    var isTypedArray = require_isTypedArray();
    var safeGet = require_safeGet();
    var toPlainObject = require_toPlainObject();
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = safeGet(object, key), srcValue = safeGet(source, key), stacked = stack.get(srcValue);
      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer ? customizer(objValue, srcValue, key + "", object, source, stack) : void 0;
      var isCommon = newValue === void 0;
      if (isCommon) {
        var isArr = isArray(srcValue), isBuff = !isArr && isBuffer(srcValue), isTyped = !isArr && !isBuff && isTypedArray(srcValue);
        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          } else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          } else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          } else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          } else {
            newValue = [];
          }
        } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          } else if (!isObject(objValue) || isFunction(objValue)) {
            newValue = initCloneObject(srcValue);
          }
        } else {
          isCommon = false;
        }
      }
      if (isCommon) {
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack["delete"](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }
    module.exports = baseMergeDeep;
  }
});

// node_modules/lodash/_baseMerge.js
var require_baseMerge = __commonJS({
  "node_modules/lodash/_baseMerge.js"(exports, module) {
    var Stack = require_Stack();
    var assignMergeValue = require_assignMergeValue();
    var baseFor = require_baseFor();
    var baseMergeDeep = require_baseMergeDeep();
    var isObject = require_isObject();
    var keysIn = require_keysIn();
    var safeGet = require_safeGet();
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        stack || (stack = new Stack());
        if (isObject(srcValue)) {
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        } else {
          var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + "", object, source, stack) : void 0;
          if (newValue === void 0) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }
    module.exports = baseMerge;
  }
});

// node_modules/lodash/_customDefaultsMerge.js
var require_customDefaultsMerge = __commonJS({
  "node_modules/lodash/_customDefaultsMerge.js"(exports, module) {
    var baseMerge = require_baseMerge();
    var isObject = require_isObject();
    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, void 0, customDefaultsMerge, stack);
        stack["delete"](srcValue);
      }
      return objValue;
    }
    module.exports = customDefaultsMerge;
  }
});

// node_modules/lodash/_createAssigner.js
var require_createAssigner = __commonJS({
  "node_modules/lodash/_createAssigner.js"(exports, module) {
    var baseRest = require_baseRest();
    var isIterateeCall = require_isIterateeCall();
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1, length2 = sources.length, customizer = length2 > 1 ? sources[length2 - 1] : void 0, guard = length2 > 2 ? sources[2] : void 0;
        customizer = assigner.length > 3 && typeof customizer == "function" ? (length2--, customizer) : void 0;
        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length2 < 3 ? void 0 : customizer;
          length2 = 1;
        }
        object = Object(object);
        while (++index < length2) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }
    module.exports = createAssigner;
  }
});

// node_modules/lodash/mergeWith.js
var require_mergeWith = __commonJS({
  "node_modules/lodash/mergeWith.js"(exports, module) {
    var baseMerge = require_baseMerge();
    var createAssigner = require_createAssigner();
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });
    module.exports = mergeWith;
  }
});

// node_modules/lodash/defaultsDeep.js
var require_defaultsDeep = __commonJS({
  "node_modules/lodash/defaultsDeep.js"(exports, module) {
    var apply = require_apply();
    var baseRest = require_baseRest();
    var customDefaultsMerge = require_customDefaultsMerge();
    var mergeWith = require_mergeWith();
    var defaultsDeep = baseRest(function(args) {
      args.push(void 0, customDefaultsMerge);
      return apply(mergeWith, void 0, args);
    });
    module.exports = defaultsDeep;
  }
});

// node_modules/lodash/fp/defaultsDeep.js
var require_defaultsDeep2 = __commonJS({
  "node_modules/lodash/fp/defaultsDeep.js"(exports, module) {
    var convert = require_convert();
    var func = convert("defaultsDeep", require_defaultsDeep());
    func.placeholder = require_placeholder();
    module.exports = func;
  }
});

// node_modules/lodash/_baseDifference.js
var require_baseDifference = __commonJS({
  "node_modules/lodash/_baseDifference.js"(exports, module) {
    var SetCache = require_SetCache();
    var arrayIncludes = require_arrayIncludes();
    var arrayIncludesWith = require_arrayIncludesWith();
    var arrayMap = require_arrayMap();
    var baseUnary = require_baseUnary();
    var cacheHas = require_cacheHas();
    var LARGE_ARRAY_SIZE = 200;
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1, includes = arrayIncludes, isCommon = true, length2 = array.length, result = [], valuesLength = values.length;
      if (!length2) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      } else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
        while (++index < length2) {
          var value = array[index], computed = iteratee == null ? value : iteratee(value);
          value = comparator || value !== 0 ? value : 0;
          if (isCommon && computed === computed) {
            var valuesIndex = valuesLength;
            while (valuesIndex--) {
              if (values[valuesIndex] === computed) {
                continue outer;
              }
            }
            result.push(value);
          } else if (!includes(values, computed, comparator)) {
            result.push(value);
          }
        }
      return result;
    }
    module.exports = baseDifference;
  }
});

// node_modules/lodash/differenceWith.js
var require_differenceWith = __commonJS({
  "node_modules/lodash/differenceWith.js"(exports, module) {
    var baseDifference = require_baseDifference();
    var baseFlatten = require_baseFlatten();
    var baseRest = require_baseRest();
    var isArrayLikeObject = require_isArrayLikeObject();
    var last = require_last();
    var differenceWith = baseRest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = void 0;
      }
      return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), void 0, comparator) : [];
    });
    module.exports = differenceWith;
  }
});

// node_modules/vis-data/peer/umd/vis-data.min.js
var require_vis_data_min = __commonJS({
  "node_modules/vis-data/peer/umd/vis-data.min.js"(exports, module) {
    !function(t, e) {
      "object" == typeof exports && "undefined" != typeof module ? e(exports) : "function" == typeof define && define.amd ? define(["exports"], e) : e((t = "undefined" != typeof globalThis ? globalThis : t || self).vis = t.vis || {});
    }(exports, function(t) {
      function e(t2, e2) {
        if (!(t2 instanceof e2)) throw new TypeError("Cannot call a class as a function");
      }
      var r = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};
      function n(t2) {
        return t2 && t2.__esModule && Object.prototype.hasOwnProperty.call(t2, "default") ? t2.default : t2;
      }
      var o = { exports: {} }, i = function(t2) {
        return t2 && t2.Math === Math && t2;
      }, a = i("object" == typeof globalThis && globalThis) || i("object" == typeof window && window) || i("object" == typeof self && self) || i("object" == typeof r && r) || /* @__PURE__ */ function() {
        return this;
      }() || r || Function("return this")(), u = function(t2) {
        try {
          return !!t2();
        } catch (t3) {
          return true;
        }
      }, s = !u(function() {
        var t2 = (function() {
        }).bind();
        return "function" != typeof t2 || t2.hasOwnProperty("prototype");
      }), c = s, f = Function.prototype, l = f.apply, h = f.call, p = "object" == typeof Reflect && Reflect.apply || (c ? h.bind(l) : function() {
        return h.apply(l, arguments);
      }), v = s, d = Function.prototype, y = d.call, g = v && d.bind.bind(y, y), m = v ? g : function(t2) {
        return function() {
          return y.apply(t2, arguments);
        };
      }, b = m, w = b({}.toString), _ = b("".slice), T = function(t2) {
        return _(w(t2), 8, -1);
      }, E = T, O = m, S = function(t2) {
        if ("Function" === E(t2)) return O(t2);
      }, x = "object" == typeof document && document.all, k = { all: x, IS_HTMLDDA: void 0 === x && void 0 !== x }, j = k.all, A = k.IS_HTMLDDA ? function(t2) {
        return "function" == typeof t2 || t2 === j;
      } : function(t2) {
        return "function" == typeof t2;
      }, P = {}, I = !u(function() {
        return 7 !== Object.defineProperty({}, 1, { get: function() {
          return 7;
        } })[1];
      }), D = s, L = Function.prototype.call, C = D ? L.bind(L) : function() {
        return L.apply(L, arguments);
      }, R = {}, M = {}.propertyIsEnumerable, N = Object.getOwnPropertyDescriptor, F = N && !M.call({ 1: 2 }, 1);
      R.f = F ? function(t2) {
        var e2 = N(this, t2);
        return !!e2 && e2.enumerable;
      } : M;
      var z, U, q = function(t2, e2) {
        return { enumerable: !(1 & t2), configurable: !(2 & t2), writable: !(4 & t2), value: e2 };
      }, W = u, Y = T, G = Object, X = m("".split), V = W(function() {
        return !G("z").propertyIsEnumerable(0);
      }) ? function(t2) {
        return "String" === Y(t2) ? X(t2, "") : G(t2);
      } : G, B = function(t2) {
        return null == t2;
      }, H = B, K = TypeError, J = function(t2) {
        if (H(t2)) throw new K("Can't call method on " + t2);
        return t2;
      }, $ = V, Q = J, Z = function(t2) {
        return $(Q(t2));
      }, tt = A, et = k.all, rt = k.IS_HTMLDDA ? function(t2) {
        return "object" == typeof t2 ? null !== t2 : tt(t2) || t2 === et;
      } : function(t2) {
        return "object" == typeof t2 ? null !== t2 : tt(t2);
      }, nt = {}, ot = nt, it = a, at = A, ut = function(t2) {
        return at(t2) ? t2 : void 0;
      }, st = function(t2, e2) {
        return arguments.length < 2 ? ut(ot[t2]) || ut(it[t2]) : ot[t2] && ot[t2][e2] || it[t2] && it[t2][e2];
      }, ct = m({}.isPrototypeOf), ft = "undefined" != typeof navigator && String(navigator.userAgent) || "", lt = a, ht = ft, pt = lt.process, vt = lt.Deno, dt = pt && pt.versions || vt && vt.version, yt = dt && dt.v8;
      yt && (U = (z = yt.split("."))[0] > 0 && z[0] < 4 ? 1 : +(z[0] + z[1])), !U && ht && (!(z = ht.match(/Edge\/(\d+)/)) || z[1] >= 74) && (z = ht.match(/Chrome\/(\d+)/)) && (U = +z[1]);
      var gt = U, mt = gt, bt = u, wt = a.String, _t = !!Object.getOwnPropertySymbols && !bt(function() {
        var t2 = Symbol("symbol detection");
        return !wt(t2) || !(Object(t2) instanceof Symbol) || !Symbol.sham && mt && mt < 41;
      }), Tt = _t && !Symbol.sham && "symbol" == typeof Symbol.iterator, Et = st, Ot = A, St = ct, xt = Object, kt = Tt ? function(t2) {
        return "symbol" == typeof t2;
      } : function(t2) {
        var e2 = Et("Symbol");
        return Ot(e2) && St(e2.prototype, xt(t2));
      }, jt = String, At = function(t2) {
        try {
          return jt(t2);
        } catch (t3) {
          return "Object";
        }
      }, Pt = A, It = At, Dt = TypeError, Lt = function(t2) {
        if (Pt(t2)) return t2;
        throw new Dt(It(t2) + " is not a function");
      }, Ct = Lt, Rt = B, Mt = function(t2, e2) {
        var r2 = t2[e2];
        return Rt(r2) ? void 0 : Ct(r2);
      }, Nt = C, Ft = A, zt = rt, Ut = TypeError, qt = { exports: {} }, Wt = a, Yt = Object.defineProperty, Gt = function(t2, e2) {
        try {
          Yt(Wt, t2, { value: e2, configurable: true, writable: true });
        } catch (r2) {
          Wt[t2] = e2;
        }
        return e2;
      }, Xt = "__core-js_shared__", Vt = a[Xt] || Gt(Xt, {}), Bt = Vt;
      (qt.exports = function(t2, e2) {
        return Bt[t2] || (Bt[t2] = void 0 !== e2 ? e2 : {});
      })("versions", []).push({ version: "3.33.2", mode: "pure", copyright: "© 2014-2023 Denis Pushkarev (zloirock.ru)", license: "https://github.com/zloirock/core-js/blob/v3.33.2/LICENSE", source: "https://github.com/zloirock/core-js" });
      var Ht = qt.exports, Kt = J, Jt = Object, $t = function(t2) {
        return Jt(Kt(t2));
      }, Qt = $t, Zt = m({}.hasOwnProperty), te = Object.hasOwn || function(t2, e2) {
        return Zt(Qt(t2), e2);
      }, ee = m, re = 0, ne = Math.random(), oe = ee(1 .toString), ie = function(t2) {
        return "Symbol(" + (void 0 === t2 ? "" : t2) + ")_" + oe(++re + ne, 36);
      }, ae = Ht, ue = te, se = ie, ce = _t, fe = Tt, le = a.Symbol, he = ae("wks"), pe = fe ? le.for || le : le && le.withoutSetter || se, ve = function(t2) {
        return ue(he, t2) || (he[t2] = ce && ue(le, t2) ? le[t2] : pe("Symbol." + t2)), he[t2];
      }, de = C, ye = rt, ge = kt, me = Mt, be = function(t2, e2) {
        var r2, n2;
        if ("string" === e2 && Ft(r2 = t2.toString) && !zt(n2 = Nt(r2, t2))) return n2;
        if (Ft(r2 = t2.valueOf) && !zt(n2 = Nt(r2, t2))) return n2;
        if ("string" !== e2 && Ft(r2 = t2.toString) && !zt(n2 = Nt(r2, t2))) return n2;
        throw new Ut("Can't convert object to primitive value");
      }, we = TypeError, _e = ve("toPrimitive"), Te = function(t2, e2) {
        if (!ye(t2) || ge(t2)) return t2;
        var r2, n2 = me(t2, _e);
        if (n2) {
          if (void 0 === e2 && (e2 = "default"), r2 = de(n2, t2, e2), !ye(r2) || ge(r2)) return r2;
          throw new we("Can't convert object to primitive value");
        }
        return void 0 === e2 && (e2 = "number"), be(t2, e2);
      }, Ee = kt, Oe = function(t2) {
        var e2 = Te(t2, "string");
        return Ee(e2) ? e2 : e2 + "";
      }, Se = rt, xe = a.document, ke = Se(xe) && Se(xe.createElement), je = function(t2) {
        return ke ? xe.createElement(t2) : {};
      }, Ae = je, Pe = !I && !u(function() {
        return 7 !== Object.defineProperty(Ae("div"), "a", { get: function() {
          return 7;
        } }).a;
      }), Ie = I, De = C, Le = R, Ce = q, Re = Z, Me = Oe, Ne = te, Fe = Pe, ze = Object.getOwnPropertyDescriptor;
      P.f = Ie ? ze : function(t2, e2) {
        if (t2 = Re(t2), e2 = Me(e2), Fe) try {
          return ze(t2, e2);
        } catch (t3) {
        }
        if (Ne(t2, e2)) return Ce(!De(Le.f, t2, e2), t2[e2]);
      };
      var Ue = u, qe = A, We = /#|\.prototype\./, Ye = function(t2, e2) {
        var r2 = Xe[Ge(t2)];
        return r2 === Be || r2 !== Ve && (qe(e2) ? Ue(e2) : !!e2);
      }, Ge = Ye.normalize = function(t2) {
        return String(t2).replace(We, ".").toLowerCase();
      }, Xe = Ye.data = {}, Ve = Ye.NATIVE = "N", Be = Ye.POLYFILL = "P", He = Ye, Ke = Lt, Je = s, $e = S(S.bind), Qe = function(t2, e2) {
        return Ke(t2), void 0 === e2 ? t2 : Je ? $e(t2, e2) : function() {
          return t2.apply(e2, arguments);
        };
      }, Ze = {}, tr = I && u(function() {
        return 42 !== Object.defineProperty(function() {
        }, "prototype", { value: 42, writable: false }).prototype;
      }), er = rt, rr = String, nr = TypeError, or = function(t2) {
        if (er(t2)) return t2;
        throw new nr(rr(t2) + " is not an object");
      }, ir = I, ar = Pe, ur = tr, sr = or, cr = Oe, fr = TypeError, lr = Object.defineProperty, hr = Object.getOwnPropertyDescriptor, pr = "enumerable", vr = "configurable", dr = "writable";
      Ze.f = ir ? ur ? function(t2, e2, r2) {
        if (sr(t2), e2 = cr(e2), sr(r2), "function" == typeof t2 && "prototype" === e2 && "value" in r2 && dr in r2 && !r2[dr]) {
          var n2 = hr(t2, e2);
          n2 && n2[dr] && (t2[e2] = r2.value, r2 = { configurable: vr in r2 ? r2[vr] : n2[vr], enumerable: pr in r2 ? r2[pr] : n2[pr], writable: false });
        }
        return lr(t2, e2, r2);
      } : lr : function(t2, e2, r2) {
        if (sr(t2), e2 = cr(e2), sr(r2), ar) try {
          return lr(t2, e2, r2);
        } catch (t3) {
        }
        if ("get" in r2 || "set" in r2) throw new fr("Accessors not supported");
        return "value" in r2 && (t2[e2] = r2.value), t2;
      };
      var yr = Ze, gr = q, mr = I ? function(t2, e2, r2) {
        return yr.f(t2, e2, gr(1, r2));
      } : function(t2, e2, r2) {
        return t2[e2] = r2, t2;
      }, br = a, wr = p, _r = S, Tr = A, Er = P.f, Or = He, Sr = nt, xr = Qe, kr = mr, jr = te, Ar = function(t2) {
        var e2 = function(r2, n2, o2) {
          if (this instanceof e2) {
            switch (arguments.length) {
              case 0:
                return new t2();
              case 1:
                return new t2(r2);
              case 2:
                return new t2(r2, n2);
            }
            return new t2(r2, n2, o2);
          }
          return wr(t2, this, arguments);
        };
        return e2.prototype = t2.prototype, e2;
      }, Pr = function(t2, e2) {
        var r2, n2, o2, i2, a2, u2, s2, c2, f2, l2 = t2.target, h2 = t2.global, p2 = t2.stat, v2 = t2.proto, d2 = h2 ? br : p2 ? br[l2] : (br[l2] || {}).prototype, y2 = h2 ? Sr : Sr[l2] || kr(Sr, l2, {})[l2], g2 = y2.prototype;
        for (i2 in e2) n2 = !(r2 = Or(h2 ? i2 : l2 + (p2 ? "." : "#") + i2, t2.forced)) && d2 && jr(d2, i2), u2 = y2[i2], n2 && (s2 = t2.dontCallGetSet ? (f2 = Er(d2, i2)) && f2.value : d2[i2]), a2 = n2 && s2 ? s2 : e2[i2], n2 && typeof u2 == typeof a2 || (c2 = t2.bind && n2 ? xr(a2, br) : t2.wrap && n2 ? Ar(a2) : v2 && Tr(a2) ? _r(a2) : a2, (t2.sham || a2 && a2.sham || u2 && u2.sham) && kr(c2, "sham", true), kr(y2, i2, c2), v2 && (jr(Sr, o2 = l2 + "Prototype") || kr(Sr, o2, {}), kr(Sr[o2], i2, a2), t2.real && g2 && (r2 || !g2[i2]) && kr(g2, i2, a2)));
      }, Ir = Pr, Dr = I, Lr = Ze.f;
      Ir({ target: "Object", stat: true, forced: Object.defineProperty !== Lr, sham: !Dr }, { defineProperty: Lr });
      var Cr = nt.Object, Rr = o.exports = function(t2, e2, r2) {
        return Cr.defineProperty(t2, e2, r2);
      };
      Cr.defineProperty.sham && (Rr.sham = true);
      var Mr = o.exports, Nr = Mr, Fr = n(Nr), zr = T, Ur = Array.isArray || function(t2) {
        return "Array" === zr(t2);
      }, qr = Math.ceil, Wr = Math.floor, Yr = Math.trunc || function(t2) {
        var e2 = +t2;
        return (e2 > 0 ? Wr : qr)(e2);
      }, Gr = function(t2) {
        var e2 = +t2;
        return e2 != e2 || 0 === e2 ? 0 : Yr(e2);
      }, Xr = Gr, Vr = Math.min, Br = function(t2) {
        return t2 > 0 ? Vr(Xr(t2), 9007199254740991) : 0;
      }, Hr = function(t2) {
        return Br(t2.length);
      }, Kr = TypeError, Jr = function(t2) {
        if (t2 > 9007199254740991) throw Kr("Maximum allowed index exceeded");
        return t2;
      }, $r = Oe, Qr = Ze, Zr = q, tn = function(t2, e2, r2) {
        var n2 = $r(e2);
        n2 in t2 ? Qr.f(t2, n2, Zr(0, r2)) : t2[n2] = r2;
      }, en = {};
      en[ve("toStringTag")] = "z";
      var rn = "[object z]" === String(en), nn = rn, on = A, an = T, un = ve("toStringTag"), sn = Object, cn = "Arguments" === an(/* @__PURE__ */ function() {
        return arguments;
      }()), fn = nn ? an : function(t2) {
        var e2, r2, n2;
        return void 0 === t2 ? "Undefined" : null === t2 ? "Null" : "string" == typeof (r2 = function(t3, e3) {
          try {
            return t3[e3];
          } catch (t4) {
          }
        }(e2 = sn(t2), un)) ? r2 : cn ? an(e2) : "Object" === (n2 = an(e2)) && on(e2.callee) ? "Arguments" : n2;
      }, ln = A, hn = Vt, pn = m(Function.toString);
      ln(hn.inspectSource) || (hn.inspectSource = function(t2) {
        return pn(t2);
      });
      var vn = hn.inspectSource, dn = m, yn = u, gn = A, mn = fn, bn = vn, wn = function() {
      }, _n = [], Tn = st("Reflect", "construct"), En = /^\s*(?:class|function)\b/, On = dn(En.exec), Sn = !En.test(wn), xn = function(t2) {
        if (!gn(t2)) return false;
        try {
          return Tn(wn, _n, t2), true;
        } catch (t3) {
          return false;
        }
      }, kn = function(t2) {
        if (!gn(t2)) return false;
        switch (mn(t2)) {
          case "AsyncFunction":
          case "GeneratorFunction":
          case "AsyncGeneratorFunction":
            return false;
        }
        try {
          return Sn || !!On(En, bn(t2));
        } catch (t3) {
          return true;
        }
      };
      kn.sham = true;
      var jn = !Tn || yn(function() {
        var t2;
        return xn(xn.call) || !xn(Object) || !xn(function() {
          t2 = true;
        }) || t2;
      }) ? kn : xn, An = Ur, Pn = jn, In = rt, Dn = ve("species"), Ln = Array, Cn = function(t2) {
        var e2;
        return An(t2) && (e2 = t2.constructor, (Pn(e2) && (e2 === Ln || An(e2.prototype)) || In(e2) && null === (e2 = e2[Dn])) && (e2 = void 0)), void 0 === e2 ? Ln : e2;
      }, Rn = function(t2, e2) {
        return new (Cn(t2))(0 === e2 ? 0 : e2);
      }, Mn = u, Nn = gt, Fn = ve("species"), zn = function(t2) {
        return Nn >= 51 || !Mn(function() {
          var e2 = [];
          return (e2.constructor = {})[Fn] = function() {
            return { foo: 1 };
          }, 1 !== e2[t2](Boolean).foo;
        });
      }, Un = Pr, qn = u, Wn = Ur, Yn = rt, Gn = $t, Xn = Hr, Vn = Jr, Bn = tn, Hn = Rn, Kn = zn, Jn = gt, $n = ve("isConcatSpreadable"), Qn = Jn >= 51 || !qn(function() {
        var t2 = [];
        return t2[$n] = false, t2.concat()[0] !== t2;
      }), Zn = function(t2) {
        if (!Yn(t2)) return false;
        var e2 = t2[$n];
        return void 0 !== e2 ? !!e2 : Wn(t2);
      };
      Un({ target: "Array", proto: true, arity: 1, forced: !Qn || !Kn("concat") }, { concat: function(t2) {
        var e2, r2, n2, o2, i2, a2 = Gn(this), u2 = Hn(a2, 0), s2 = 0;
        for (e2 = -1, n2 = arguments.length; e2 < n2; e2++) if (Zn(i2 = -1 === e2 ? a2 : arguments[e2])) for (o2 = Xn(i2), Vn(s2 + o2), r2 = 0; r2 < o2; r2++, s2++) r2 in i2 && Bn(u2, s2, i2[r2]);
        else Vn(s2 + 1), Bn(u2, s2++, i2);
        return u2.length = s2, u2;
      } });
      var to = fn, eo = String, ro = function(t2) {
        if ("Symbol" === to(t2)) throw new TypeError("Cannot convert a Symbol value to a string");
        return eo(t2);
      }, no = {}, oo = Gr, io = Math.max, ao = Math.min, uo = function(t2, e2) {
        var r2 = oo(t2);
        return r2 < 0 ? io(r2 + e2, 0) : ao(r2, e2);
      }, so = Z, co = uo, fo = Hr, lo = function(t2) {
        return function(e2, r2, n2) {
          var o2, i2 = so(e2), a2 = fo(i2), u2 = co(n2, a2);
          if (t2 && r2 != r2) {
            for (; a2 > u2; ) if ((o2 = i2[u2++]) != o2) return true;
          } else for (; a2 > u2; u2++) if ((t2 || u2 in i2) && i2[u2] === r2) return t2 || u2 || 0;
          return !t2 && -1;
        };
      }, ho = { includes: lo(true), indexOf: lo(false) }, po = {}, vo = te, yo = Z, go = ho.indexOf, mo = po, bo = m([].push), wo = function(t2, e2) {
        var r2, n2 = yo(t2), o2 = 0, i2 = [];
        for (r2 in n2) !vo(mo, r2) && vo(n2, r2) && bo(i2, r2);
        for (; e2.length > o2; ) vo(n2, r2 = e2[o2++]) && (~go(i2, r2) || bo(i2, r2));
        return i2;
      }, _o = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"], To = wo, Eo = _o, Oo = Object.keys || function(t2) {
        return To(t2, Eo);
      }, So = I, xo = tr, ko = Ze, jo = or, Ao = Z, Po = Oo;
      no.f = So && !xo ? Object.defineProperties : function(t2, e2) {
        jo(t2);
        for (var r2, n2 = Ao(e2), o2 = Po(e2), i2 = o2.length, a2 = 0; i2 > a2; ) ko.f(t2, r2 = o2[a2++], n2[r2]);
        return t2;
      };
      var Io, Do = st("document", "documentElement"), Lo = ie, Co = Ht("keys"), Ro = function(t2) {
        return Co[t2] || (Co[t2] = Lo(t2));
      }, Mo = or, No = no, Fo = _o, zo = po, Uo = Do, qo = je, Wo = "prototype", Yo = "script", Go = Ro("IE_PROTO"), Xo = function() {
      }, Vo = function(t2) {
        return "<" + Yo + ">" + t2 + "</" + Yo + ">";
      }, Bo = function(t2) {
        t2.write(Vo("")), t2.close();
        var e2 = t2.parentWindow.Object;
        return t2 = null, e2;
      }, Ho = function() {
        try {
          Io = new ActiveXObject("htmlfile");
        } catch (t3) {
        }
        var t2, e2, r2;
        Ho = "undefined" != typeof document ? document.domain && Io ? Bo(Io) : (e2 = qo("iframe"), r2 = "java" + Yo + ":", e2.style.display = "none", Uo.appendChild(e2), e2.src = String(r2), (t2 = e2.contentWindow.document).open(), t2.write(Vo("document.F=Object")), t2.close(), t2.F) : Bo(Io);
        for (var n2 = Fo.length; n2--; ) delete Ho[Wo][Fo[n2]];
        return Ho();
      };
      zo[Go] = true;
      var Ko = Object.create || function(t2, e2) {
        var r2;
        return null !== t2 ? (Xo[Wo] = Mo(t2), r2 = new Xo(), Xo[Wo] = null, r2[Go] = t2) : r2 = Ho(), void 0 === e2 ? r2 : No.f(r2, e2);
      }, Jo = {}, $o = wo, Qo = _o.concat("length", "prototype");
      Jo.f = Object.getOwnPropertyNames || function(t2) {
        return $o(t2, Qo);
      };
      var Zo = {}, ti = uo, ei = Hr, ri = tn, ni = Array, oi = Math.max, ii = function(t2, e2, r2) {
        for (var n2 = ei(t2), o2 = ti(e2, n2), i2 = ti(void 0 === r2 ? n2 : r2, n2), a2 = ni(oi(i2 - o2, 0)), u2 = 0; o2 < i2; o2++, u2++) ri(a2, u2, t2[o2]);
        return a2.length = u2, a2;
      }, ai = T, ui = Z, si = Jo.f, ci = ii, fi = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
      Zo.f = function(t2) {
        return fi && "Window" === ai(t2) ? function(t3) {
          try {
            return si(t3);
          } catch (t4) {
            return ci(fi);
          }
        }(t2) : si(ui(t2));
      };
      var li = {};
      li.f = Object.getOwnPropertySymbols;
      var hi = mr, pi = function(t2, e2, r2, n2) {
        return n2 && n2.enumerable ? t2[e2] = r2 : hi(t2, e2, r2), t2;
      }, vi = Ze, di = function(t2, e2, r2) {
        return vi.f(t2, e2, r2);
      }, yi = {}, gi = ve;
      yi.f = gi;
      var mi, bi, wi, _i = nt, Ti = te, Ei = yi, Oi = Ze.f, Si = function(t2) {
        var e2 = _i.Symbol || (_i.Symbol = {});
        Ti(e2, t2) || Oi(e2, t2, { value: Ei.f(t2) });
      }, xi = C, ki = st, ji = ve, Ai = pi, Pi = function() {
        var t2 = ki("Symbol"), e2 = t2 && t2.prototype, r2 = e2 && e2.valueOf, n2 = ji("toPrimitive");
        e2 && !e2[n2] && Ai(e2, n2, function(t3) {
          return xi(r2, this);
        }, { arity: 1 });
      }, Ii = fn, Di = rn ? {}.toString : function() {
        return "[object " + Ii(this) + "]";
      }, Li = rn, Ci = Ze.f, Ri = mr, Mi = te, Ni = Di, Fi = ve("toStringTag"), zi = function(t2, e2, r2, n2) {
        if (t2) {
          var o2 = r2 ? t2 : t2.prototype;
          Mi(o2, Fi) || Ci(o2, Fi, { configurable: true, value: e2 }), n2 && !Li && Ri(o2, "toString", Ni);
        }
      }, Ui = A, qi = a.WeakMap, Wi = Ui(qi) && /native code/.test(String(qi)), Yi = a, Gi = rt, Xi = mr, Vi = te, Bi = Vt, Hi = Ro, Ki = po, Ji = "Object already initialized", $i = Yi.TypeError, Qi = Yi.WeakMap;
      if (Wi || Bi.state) {
        var Zi = Bi.state || (Bi.state = new Qi());
        Zi.get = Zi.get, Zi.has = Zi.has, Zi.set = Zi.set, mi = function(t2, e2) {
          if (Zi.has(t2)) throw new $i(Ji);
          return e2.facade = t2, Zi.set(t2, e2), e2;
        }, bi = function(t2) {
          return Zi.get(t2) || {};
        }, wi = function(t2) {
          return Zi.has(t2);
        };
      } else {
        var ta = Hi("state");
        Ki[ta] = true, mi = function(t2, e2) {
          if (Vi(t2, ta)) throw new $i(Ji);
          return e2.facade = t2, Xi(t2, ta, e2), e2;
        }, bi = function(t2) {
          return Vi(t2, ta) ? t2[ta] : {};
        }, wi = function(t2) {
          return Vi(t2, ta);
        };
      }
      var ea = { set: mi, get: bi, has: wi, enforce: function(t2) {
        return wi(t2) ? bi(t2) : mi(t2, {});
      }, getterFor: function(t2) {
        return function(e2) {
          var r2;
          if (!Gi(e2) || (r2 = bi(e2)).type !== t2) throw new $i("Incompatible receiver, " + t2 + " required");
          return r2;
        };
      } }, ra = Qe, na = V, oa = $t, ia = Hr, aa = Rn, ua = m([].push), sa = function(t2) {
        var e2 = 1 === t2, r2 = 2 === t2, n2 = 3 === t2, o2 = 4 === t2, i2 = 6 === t2, a2 = 7 === t2, u2 = 5 === t2 || i2;
        return function(s2, c2, f2, l2) {
          for (var h2, p2, v2 = oa(s2), d2 = na(v2), y2 = ra(c2, f2), g2 = ia(d2), m2 = 0, b2 = l2 || aa, w2 = e2 ? b2(s2, g2) : r2 || a2 ? b2(s2, 0) : void 0; g2 > m2; m2++) if ((u2 || m2 in d2) && (p2 = y2(h2 = d2[m2], m2, v2), t2)) if (e2) w2[m2] = p2;
          else if (p2) switch (t2) {
            case 3:
              return true;
            case 5:
              return h2;
            case 6:
              return m2;
            case 2:
              ua(w2, h2);
          }
          else switch (t2) {
            case 4:
              return false;
            case 7:
              ua(w2, h2);
          }
          return i2 ? -1 : n2 || o2 ? o2 : w2;
        };
      }, ca = { forEach: sa(0), map: sa(1), filter: sa(2), some: sa(3), every: sa(4), find: sa(5), findIndex: sa(6), filterReject: sa(7) }, fa = Pr, la = a, ha = C, pa = m, va = I, da = _t, ya = u, ga = te, ma = ct, ba = or, wa = Z, _a = Oe, Ta = ro, Ea = q, Oa = Ko, Sa = Oo, xa = Jo, ka = Zo, ja = li, Aa = P, Pa = Ze, Ia = no, Da = R, La = pi, Ca = di, Ra = Ht, Ma = po, Na = ie, Fa = ve, za = yi, Ua = Si, qa = Pi, Wa = zi, Ya = ea, Ga = ca.forEach, Xa = Ro("hidden"), Va = "Symbol", Ba = "prototype", Ha = Ya.set, Ka = Ya.getterFor(Va), Ja = Object[Ba], $a = la.Symbol, Qa = $a && $a[Ba], Za = la.RangeError, tu = la.TypeError, eu = la.QObject, ru = Aa.f, nu = Pa.f, ou = ka.f, iu = Da.f, au = pa([].push), uu = Ra("symbols"), su = Ra("op-symbols"), cu = Ra("wks"), fu = !eu || !eu[Ba] || !eu[Ba].findChild, lu = function(t2, e2, r2) {
        var n2 = ru(Ja, e2);
        n2 && delete Ja[e2], nu(t2, e2, r2), n2 && t2 !== Ja && nu(Ja, e2, n2);
      }, hu = va && ya(function() {
        return 7 !== Oa(nu({}, "a", { get: function() {
          return nu(this, "a", { value: 7 }).a;
        } })).a;
      }) ? lu : nu, pu = function(t2, e2) {
        var r2 = uu[t2] = Oa(Qa);
        return Ha(r2, { type: Va, tag: t2, description: e2 }), va || (r2.description = e2), r2;
      }, vu = function(t2, e2, r2) {
        t2 === Ja && vu(su, e2, r2), ba(t2);
        var n2 = _a(e2);
        return ba(r2), ga(uu, n2) ? (r2.enumerable ? (ga(t2, Xa) && t2[Xa][n2] && (t2[Xa][n2] = false), r2 = Oa(r2, { enumerable: Ea(0, false) })) : (ga(t2, Xa) || nu(t2, Xa, Ea(1, {})), t2[Xa][n2] = true), hu(t2, n2, r2)) : nu(t2, n2, r2);
      }, du = function(t2, e2) {
        ba(t2);
        var r2 = wa(e2), n2 = Sa(r2).concat(bu(r2));
        return Ga(n2, function(e3) {
          va && !ha(yu, r2, e3) || vu(t2, e3, r2[e3]);
        }), t2;
      }, yu = function(t2) {
        var e2 = _a(t2), r2 = ha(iu, this, e2);
        return !(this === Ja && ga(uu, e2) && !ga(su, e2)) && (!(r2 || !ga(this, e2) || !ga(uu, e2) || ga(this, Xa) && this[Xa][e2]) || r2);
      }, gu = function(t2, e2) {
        var r2 = wa(t2), n2 = _a(e2);
        if (r2 !== Ja || !ga(uu, n2) || ga(su, n2)) {
          var o2 = ru(r2, n2);
          return !o2 || !ga(uu, n2) || ga(r2, Xa) && r2[Xa][n2] || (o2.enumerable = true), o2;
        }
      }, mu = function(t2) {
        var e2 = ou(wa(t2)), r2 = [];
        return Ga(e2, function(t3) {
          ga(uu, t3) || ga(Ma, t3) || au(r2, t3);
        }), r2;
      }, bu = function(t2) {
        var e2 = t2 === Ja, r2 = ou(e2 ? su : wa(t2)), n2 = [];
        return Ga(r2, function(t3) {
          !ga(uu, t3) || e2 && !ga(Ja, t3) || au(n2, uu[t3]);
        }), n2;
      };
      da || ($a = function() {
        if (ma(Qa, this)) throw new tu("Symbol is not a constructor");
        var t2 = arguments.length && void 0 !== arguments[0] ? Ta(arguments[0]) : void 0, e2 = Na(t2), r2 = function(t3) {
          var n2 = void 0 === this ? la : this;
          n2 === Ja && ha(r2, su, t3), ga(n2, Xa) && ga(n2[Xa], e2) && (n2[Xa][e2] = false);
          var o2 = Ea(1, t3);
          try {
            hu(n2, e2, o2);
          } catch (t4) {
            if (!(t4 instanceof Za)) throw t4;
            lu(n2, e2, o2);
          }
        };
        return va && fu && hu(Ja, e2, { configurable: true, set: r2 }), pu(e2, t2);
      }, La(Qa = $a[Ba], "toString", function() {
        return Ka(this).tag;
      }), La($a, "withoutSetter", function(t2) {
        return pu(Na(t2), t2);
      }), Da.f = yu, Pa.f = vu, Ia.f = du, Aa.f = gu, xa.f = ka.f = mu, ja.f = bu, za.f = function(t2) {
        return pu(Fa(t2), t2);
      }, va && Ca(Qa, "description", { configurable: true, get: function() {
        return Ka(this).description;
      } })), fa({ global: true, constructor: true, wrap: true, forced: !da, sham: !da }, { Symbol: $a }), Ga(Sa(cu), function(t2) {
        Ua(t2);
      }), fa({ target: Va, stat: true, forced: !da }, { useSetter: function() {
        fu = true;
      }, useSimple: function() {
        fu = false;
      } }), fa({ target: "Object", stat: true, forced: !da, sham: !va }, { create: function(t2, e2) {
        return void 0 === e2 ? Oa(t2) : du(Oa(t2), e2);
      }, defineProperty: vu, defineProperties: du, getOwnPropertyDescriptor: gu }), fa({ target: "Object", stat: true, forced: !da }, { getOwnPropertyNames: mu }), qa(), Wa($a, Va), Ma[Xa] = true;
      var wu = _t && !!Symbol.for && !!Symbol.keyFor, _u = Pr, Tu = st, Eu = te, Ou = ro, Su = Ht, xu = wu, ku = Su("string-to-symbol-registry"), ju = Su("symbol-to-string-registry");
      _u({ target: "Symbol", stat: true, forced: !xu }, { for: function(t2) {
        var e2 = Ou(t2);
        if (Eu(ku, e2)) return ku[e2];
        var r2 = Tu("Symbol")(e2);
        return ku[e2] = r2, ju[r2] = e2, r2;
      } });
      var Au = Pr, Pu = te, Iu = kt, Du = At, Lu = wu, Cu = Ht("symbol-to-string-registry");
      Au({ target: "Symbol", stat: true, forced: !Lu }, { keyFor: function(t2) {
        if (!Iu(t2)) throw new TypeError(Du(t2) + " is not a symbol");
        if (Pu(Cu, t2)) return Cu[t2];
      } });
      var Ru = m([].slice), Mu = Ur, Nu = A, Fu = T, zu = ro, Uu = m([].push), qu = Pr, Wu = st, Yu = p, Gu = C, Xu = m, Vu = u, Bu = A, Hu = kt, Ku = Ru, Ju = function(t2) {
        if (Nu(t2)) return t2;
        if (Mu(t2)) {
          for (var e2 = t2.length, r2 = [], n2 = 0; n2 < e2; n2++) {
            var o2 = t2[n2];
            "string" == typeof o2 ? Uu(r2, o2) : "number" != typeof o2 && "Number" !== Fu(o2) && "String" !== Fu(o2) || Uu(r2, zu(o2));
          }
          var i2 = r2.length, a2 = true;
          return function(t3, e3) {
            if (a2) return a2 = false, e3;
            if (Mu(this)) return e3;
            for (var n3 = 0; n3 < i2; n3++) if (r2[n3] === t3) return e3;
          };
        }
      }, $u = _t, Qu = String, Zu = Wu("JSON", "stringify"), ts = Xu(/./.exec), es = Xu("".charAt), rs = Xu("".charCodeAt), ns = Xu("".replace), os = Xu(1 .toString), is = /[\uD800-\uDFFF]/g, as = /^[\uD800-\uDBFF]$/, us = /^[\uDC00-\uDFFF]$/, ss = !$u || Vu(function() {
        var t2 = Wu("Symbol")("stringify detection");
        return "[null]" !== Zu([t2]) || "{}" !== Zu({ a: t2 }) || "{}" !== Zu(Object(t2));
      }), cs = Vu(function() {
        return '"\\udf06\\ud834"' !== Zu("\uDF06\uD834") || '"\\udead"' !== Zu("\uDEAD");
      }), fs = function(t2, e2) {
        var r2 = Ku(arguments), n2 = Ju(e2);
        if (Bu(n2) || void 0 !== t2 && !Hu(t2)) return r2[1] = function(t3, e3) {
          if (Bu(n2) && (e3 = Gu(n2, this, Qu(t3), e3)), !Hu(e3)) return e3;
        }, Yu(Zu, null, r2);
      }, ls = function(t2, e2, r2) {
        var n2 = es(r2, e2 - 1), o2 = es(r2, e2 + 1);
        return ts(as, t2) && !ts(us, o2) || ts(us, t2) && !ts(as, n2) ? "\\u" + os(rs(t2, 0), 16) : t2;
      };
      Zu && qu({ target: "JSON", stat: true, arity: 3, forced: ss || cs }, { stringify: function(t2, e2, r2) {
        var n2 = Ku(arguments), o2 = Yu(ss ? fs : Zu, null, n2);
        return cs && "string" == typeof o2 ? ns(o2, is, ls) : o2;
      } });
      var hs = li, ps = $t;
      Pr({ target: "Object", stat: true, forced: !_t || u(function() {
        hs.f(1);
      }) }, { getOwnPropertySymbols: function(t2) {
        var e2 = hs.f;
        return e2 ? e2(ps(t2)) : [];
      } }), Si("asyncIterator"), Si("hasInstance"), Si("isConcatSpreadable"), Si("iterator"), Si("match"), Si("matchAll"), Si("replace"), Si("search"), Si("species"), Si("split");
      var vs = Pi;
      Si("toPrimitive"), vs();
      var ds = st, ys = zi;
      Si("toStringTag"), ys(ds("Symbol"), "Symbol"), Si("unscopables"), zi(a.JSON, "JSON", true);
      var gs, ms, bs, ws = nt.Symbol, _s = {}, Ts = I, Es = te, Os = Function.prototype, Ss = Ts && Object.getOwnPropertyDescriptor, xs = Es(Os, "name"), ks = { EXISTS: xs, PROPER: xs && "something" === (function() {
      }).name, CONFIGURABLE: xs && (!Ts || Ts && Ss(Os, "name").configurable) }, js = !u(function() {
        function t2() {
        }
        return t2.prototype.constructor = null, Object.getPrototypeOf(new t2()) !== t2.prototype;
      }), As = te, Ps = A, Is = $t, Ds = js, Ls = Ro("IE_PROTO"), Cs = Object, Rs = Cs.prototype, Ms = Ds ? Cs.getPrototypeOf : function(t2) {
        var e2 = Is(t2);
        if (As(e2, Ls)) return e2[Ls];
        var r2 = e2.constructor;
        return Ps(r2) && e2 instanceof r2 ? r2.prototype : e2 instanceof Cs ? Rs : null;
      }, Ns = u, Fs = A, zs = rt, Us = Ko, qs = Ms, Ws = pi, Ys = ve("iterator"), Gs = false;
      [].keys && ("next" in (bs = [].keys()) ? (ms = qs(qs(bs))) !== Object.prototype && (gs = ms) : Gs = true);
      var Xs = !zs(gs) || Ns(function() {
        var t2 = {};
        return gs[Ys].call(t2) !== t2;
      });
      Fs((gs = Xs ? {} : Us(gs))[Ys]) || Ws(gs, Ys, function() {
        return this;
      });
      var Vs = { IteratorPrototype: gs, BUGGY_SAFARI_ITERATORS: Gs }, Bs = Vs.IteratorPrototype, Hs = Ko, Ks = q, Js = zi, $s = _s, Qs = function() {
        return this;
      }, Zs = m, tc = Lt, ec = A, rc = String, nc = TypeError, oc = function(t2, e2, r2) {
        try {
          return Zs(tc(Object.getOwnPropertyDescriptor(t2, e2)[r2]));
        } catch (t3) {
        }
      }, ic = or, ac = function(t2) {
        if ("object" == typeof t2 || ec(t2)) return t2;
        throw new nc("Can't set " + rc(t2) + " as a prototype");
      }, uc = Object.setPrototypeOf || ("__proto__" in {} ? function() {
        var t2, e2 = false, r2 = {};
        try {
          (t2 = oc(Object.prototype, "__proto__", "set"))(r2, []), e2 = r2 instanceof Array;
        } catch (t3) {
        }
        return function(r3, n2) {
          return ic(r3), ac(n2), e2 ? t2(r3, n2) : r3.__proto__ = n2, r3;
        };
      }() : void 0), sc = Pr, cc = C, fc = ks, lc = function(t2, e2, r2, n2) {
        var o2 = e2 + " Iterator";
        return t2.prototype = Hs(Bs, { next: Ks(+!n2, r2) }), Js(t2, o2, false, true), $s[o2] = Qs, t2;
      }, hc = Ms, pc = zi, vc = pi, dc = _s, yc = Vs, gc = fc.PROPER, mc = yc.BUGGY_SAFARI_ITERATORS, bc = ve("iterator"), wc = "keys", _c = "values", Tc = "entries", Ec = function() {
        return this;
      }, Oc = function(t2, e2, r2, n2, o2, i2, a2) {
        lc(r2, e2, n2);
        var u2, s2, c2, f2 = function(t3) {
          if (t3 === o2 && d2) return d2;
          if (!mc && t3 && t3 in p2) return p2[t3];
          switch (t3) {
            case wc:
            case _c:
            case Tc:
              return function() {
                return new r2(this, t3);
              };
          }
          return function() {
            return new r2(this);
          };
        }, l2 = e2 + " Iterator", h2 = false, p2 = t2.prototype, v2 = p2[bc] || p2["@@iterator"] || o2 && p2[o2], d2 = !mc && v2 || f2(o2), y2 = "Array" === e2 && p2.entries || v2;
        if (y2 && (u2 = hc(y2.call(new t2()))) !== Object.prototype && u2.next && (pc(u2, l2, true, true), dc[l2] = Ec), gc && o2 === _c && v2 && v2.name !== _c && (h2 = true, d2 = function() {
          return cc(v2, this);
        }), o2) if (s2 = { values: f2(_c), keys: i2 ? d2 : f2(wc), entries: f2(Tc) }, a2) for (c2 in s2) (mc || h2 || !(c2 in p2)) && vc(p2, c2, s2[c2]);
        else sc({ target: e2, proto: true, forced: mc || h2 }, s2);
        return a2 && p2[bc] !== d2 && vc(p2, bc, d2, { name: o2 }), dc[e2] = d2, s2;
      }, Sc = function(t2, e2) {
        return { value: t2, done: e2 };
      }, xc = Z, kc = _s, jc = ea;
      Ze.f;
      var Ac = Oc, Pc = Sc, Ic = "Array Iterator", Dc = jc.set, Lc = jc.getterFor(Ic);
      Ac(Array, "Array", function(t2, e2) {
        Dc(this, { type: Ic, target: xc(t2), index: 0, kind: e2 });
      }, function() {
        var t2 = Lc(this), e2 = t2.target, r2 = t2.index++;
        if (!e2 || r2 >= e2.length) return t2.target = void 0, Pc(void 0, true);
        switch (t2.kind) {
          case "keys":
            return Pc(r2, false);
          case "values":
            return Pc(e2[r2], false);
        }
        return Pc([r2, e2[r2]], false);
      }, "values"), kc.Arguments = kc.Array;
      var Cc = { CSSRuleList: 0, CSSStyleDeclaration: 0, CSSValueList: 0, ClientRectList: 0, DOMRectList: 0, DOMStringList: 0, DOMTokenList: 1, DataTransferItemList: 0, FileList: 0, HTMLAllCollection: 0, HTMLCollection: 0, HTMLFormElement: 0, HTMLSelectElement: 0, MediaList: 0, MimeTypeArray: 0, NamedNodeMap: 0, NodeList: 1, PaintRequestList: 0, Plugin: 0, PluginArray: 0, SVGLengthList: 0, SVGNumberList: 0, SVGPathSegList: 0, SVGPointList: 0, SVGStringList: 0, SVGTransformList: 0, SourceBufferList: 0, StyleSheetList: 0, TextTrackCueList: 0, TextTrackList: 0, TouchList: 0 }, Rc = a, Mc = fn, Nc = mr, Fc = _s, zc = ve("toStringTag");
      for (var Uc in Cc) {
        var qc = Rc[Uc], Wc = qc && qc.prototype;
        Wc && Mc(Wc) !== zc && Nc(Wc, zc, Uc), Fc[Uc] = Fc.Array;
      }
      var Yc = ws, Gc = ve, Xc = Ze.f, Vc = Gc("metadata"), Bc = Function.prototype;
      void 0 === Bc[Vc] && Xc(Bc, Vc, { value: null }), Si("asyncDispose"), Si("dispose"), Si("metadata");
      var Hc = Yc, Kc = m, Jc = st("Symbol"), $c = Jc.keyFor, Qc = Kc(Jc.prototype.valueOf), Zc = Jc.isRegisteredSymbol || function(t2) {
        try {
          return void 0 !== $c(Qc(t2));
        } catch (t3) {
          return false;
        }
      };
      Pr({ target: "Symbol", stat: true }, { isRegisteredSymbol: Zc });
      for (var tf = Ht, ef = st, rf = m, nf = kt, of = ve, af = ef("Symbol"), uf = af.isWellKnownSymbol, sf = ef("Object", "getOwnPropertyNames"), cf = rf(af.prototype.valueOf), ff = tf("wks"), lf = 0, hf = sf(af), pf = hf.length; lf < pf; lf++) try {
        var vf = hf[lf];
        nf(af[vf]) && of(vf);
      } catch (t2) {
      }
      var df = function(t2) {
        if (uf && uf(t2)) return true;
        try {
          for (var e2 = cf(t2), r2 = 0, n2 = sf(ff), o2 = n2.length; r2 < o2; r2++) if (ff[n2[r2]] == e2) return true;
        } catch (t3) {
        }
        return false;
      };
      Pr({ target: "Symbol", stat: true, forced: true }, { isWellKnownSymbol: df }), Si("matcher"), Si("observable"), Pr({ target: "Symbol", stat: true, name: "isRegisteredSymbol" }, { isRegistered: Zc }), Pr({ target: "Symbol", stat: true, name: "isWellKnownSymbol", forced: true }, { isWellKnown: df }), Si("metadataKey"), Si("patternMatch"), Si("replaceAll");
      var yf = Hc, gf = n(yf), mf = m, bf = Gr, wf = ro, _f = J, Tf = mf("".charAt), Ef = mf("".charCodeAt), Of = mf("".slice), Sf = function(t2) {
        return function(e2, r2) {
          var n2, o2, i2 = wf(_f(e2)), a2 = bf(r2), u2 = i2.length;
          return a2 < 0 || a2 >= u2 ? t2 ? "" : void 0 : (n2 = Ef(i2, a2)) < 55296 || n2 > 56319 || a2 + 1 === u2 || (o2 = Ef(i2, a2 + 1)) < 56320 || o2 > 57343 ? t2 ? Tf(i2, a2) : n2 : t2 ? Of(i2, a2, a2 + 2) : o2 - 56320 + (n2 - 55296 << 10) + 65536;
        };
      }, xf = { codeAt: Sf(false), charAt: Sf(true) }.charAt, kf = ro, jf = ea, Af = Oc, Pf = Sc, If = "String Iterator", Df = jf.set, Lf = jf.getterFor(If);
      Af(String, "String", function(t2) {
        Df(this, { type: If, string: kf(t2), index: 0 });
      }, function() {
        var t2, e2 = Lf(this), r2 = e2.string, n2 = e2.index;
        return n2 >= r2.length ? Pf(void 0, true) : (t2 = xf(r2, n2), e2.index += t2.length, Pf(t2, false));
      });
      var Cf = yi.f("iterator"), Rf = Cf, Mf = n(Rf);
      function Nf(t2) {
        return Nf = "function" == typeof gf && "symbol" == typeof Mf ? function(t3) {
          return typeof t3;
        } : function(t3) {
          return t3 && "function" == typeof gf && t3.constructor === gf && t3 !== gf.prototype ? "symbol" : typeof t3;
        }, Nf(t2);
      }
      var Ff = n(yi.f("toPrimitive"));
      function zf(t2) {
        var e2 = function(t3, e3) {
          if ("object" !== Nf(t3) || null === t3) return t3;
          var r2 = t3[Ff];
          if (void 0 !== r2) {
            var n2 = r2.call(t3, e3 || "default");
            if ("object" !== Nf(n2)) return n2;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === e3 ? String : Number)(t3);
        }(t2, "string");
        return "symbol" === Nf(e2) ? e2 : String(e2);
      }
      function Uf(t2, e2) {
        for (var r2 = 0; r2 < e2.length; r2++) {
          var n2 = e2[r2];
          n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Fr(t2, zf(n2.key), n2);
        }
      }
      function qf(t2, e2, r2) {
        return e2 && Uf(t2.prototype, e2), r2 && Uf(t2, r2), Fr(t2, "prototype", { writable: false }), t2;
      }
      function Wf(t2, e2, r2) {
        return (e2 = zf(e2)) in t2 ? Fr(t2, e2, { value: r2, enumerable: true, configurable: true, writable: true }) : t2[e2] = r2, t2;
      }
      var Yf = m, Gf = Lt, Xf = rt, Vf = te, Bf = Ru, Hf = s, Kf = Function, Jf = Yf([].concat), $f = Yf([].join), Qf = {}, Zf = Hf ? Kf.bind : function(t2) {
        var e2 = Gf(this), r2 = e2.prototype, n2 = Bf(arguments, 1), o2 = function() {
          var r3 = Jf(n2, Bf(arguments));
          return this instanceof o2 ? function(t3, e3, r4) {
            if (!Vf(Qf, e3)) {
              for (var n3 = [], o3 = 0; o3 < e3; o3++) n3[o3] = "a[" + o3 + "]";
              Qf[e3] = Kf("C,a", "return new C(" + $f(n3, ",") + ")");
            }
            return Qf[e3](t3, r4);
          }(e2, r3.length, r3) : e2.apply(t2, r3);
        };
        return Xf(r2) && (o2.prototype = r2), o2;
      }, tl = Zf;
      Pr({ target: "Function", proto: true, forced: Function.bind !== tl }, { bind: tl });
      var el = a, rl = nt, nl = function(t2, e2) {
        var r2 = rl[t2 + "Prototype"], n2 = r2 && r2[e2];
        if (n2) return n2;
        var o2 = el[t2], i2 = o2 && o2.prototype;
        return i2 && i2[e2];
      }, ol = nl("Function", "bind"), il = ct, al = ol, ul = Function.prototype, sl = function(t2) {
        var e2 = t2.bind;
        return t2 === ul || il(ul, t2) && e2 === ul.bind ? al : e2;
      }, cl = n(sl), fl = Lt, ll = $t, hl = V, pl = Hr, vl = TypeError, dl = function(t2) {
        return function(e2, r2, n2, o2) {
          fl(r2);
          var i2 = ll(e2), a2 = hl(i2), u2 = pl(i2), s2 = t2 ? u2 - 1 : 0, c2 = t2 ? -1 : 1;
          if (n2 < 2) for (; ; ) {
            if (s2 in a2) {
              o2 = a2[s2], s2 += c2;
              break;
            }
            if (s2 += c2, t2 ? s2 < 0 : u2 <= s2) throw new vl("Reduce of empty array with no initial value");
          }
          for (; t2 ? s2 >= 0 : u2 > s2; s2 += c2) s2 in a2 && (o2 = r2(o2, a2[s2], s2, i2));
          return o2;
        };
      }, yl = { left: dl(false), right: dl(true) }, gl = u, ml = function(t2, e2) {
        var r2 = [][t2];
        return !!r2 && gl(function() {
          r2.call(null, e2 || function() {
            return 1;
          }, 1);
        });
      }, bl = "process" === T(a.process), wl = yl.left;
      Pr({ target: "Array", proto: true, forced: !bl && gt > 79 && gt < 83 || !ml("reduce") }, { reduce: function(t2) {
        var e2 = arguments.length;
        return wl(this, t2, e2, e2 > 1 ? arguments[1] : void 0);
      } });
      var _l = nl("Array", "reduce"), Tl = ct, El = _l, Ol = Array.prototype, Sl = n(function(t2) {
        var e2 = t2.reduce;
        return t2 === Ol || Tl(Ol, t2) && e2 === Ol.reduce ? El : e2;
      }), xl = ca.filter;
      Pr({ target: "Array", proto: true, forced: !zn("filter") }, { filter: function(t2) {
        return xl(this, t2, arguments.length > 1 ? arguments[1] : void 0);
      } });
      var kl = nl("Array", "filter"), jl = ct, Al = kl, Pl = Array.prototype, Il = n(function(t2) {
        var e2 = t2.filter;
        return t2 === Pl || jl(Pl, t2) && e2 === Pl.filter ? Al : e2;
      }), Dl = ca.map;
      Pr({ target: "Array", proto: true, forced: !zn("map") }, { map: function(t2) {
        return Dl(this, t2, arguments.length > 1 ? arguments[1] : void 0);
      } });
      var Ll = nl("Array", "map"), Cl = ct, Rl = Ll, Ml = Array.prototype, Nl = n(function(t2) {
        var e2 = t2.map;
        return t2 === Ml || Cl(Ml, t2) && e2 === Ml.map ? Rl : e2;
      }), Fl = Ur, zl = Hr, Ul = Jr, ql = Qe, Wl = function(t2, e2, r2, n2, o2, i2, a2, u2) {
        for (var s2, c2, f2 = o2, l2 = 0, h2 = !!a2 && ql(a2, u2); l2 < n2; ) l2 in r2 && (s2 = h2 ? h2(r2[l2], l2, e2) : r2[l2], i2 > 0 && Fl(s2) ? (c2 = zl(s2), f2 = Wl(t2, e2, s2, c2, f2, i2 - 1) - 1) : (Ul(f2 + 1), t2[f2] = s2), f2++), l2++;
        return f2;
      }, Yl = Wl, Gl = Lt, Xl = $t, Vl = Hr, Bl = Rn;
      Pr({ target: "Array", proto: true }, { flatMap: function(t2) {
        var e2, r2 = Xl(this), n2 = Vl(r2);
        return Gl(t2), (e2 = Bl(r2, 0)).length = Yl(e2, r2, r2, n2, 0, 1, t2, arguments.length > 1 ? arguments[1] : void 0), e2;
      } });
      var Hl = nl("Array", "flatMap"), Kl = ct, Jl = Hl, $l = Array.prototype, Ql = n(function(t2) {
        var e2 = t2.flatMap;
        return t2 === $l || Kl($l, t2) && e2 === $l.flatMap ? Jl : e2;
      });
      var Zl = function() {
        function t2(r2, n2, o2) {
          var i2, a2, u2;
          e(this, t2), Wf(this, "_listeners", { add: cl(i2 = this._add).call(i2, this), remove: cl(a2 = this._remove).call(a2, this), update: cl(u2 = this._update).call(u2, this) }), this._source = r2, this._transformers = n2, this._target = o2;
        }
        return qf(t2, [{ key: "all", value: function() {
          return this._target.update(this._transformItems(this._source.get())), this;
        } }, { key: "start", value: function() {
          return this._source.on("add", this._listeners.add), this._source.on("remove", this._listeners.remove), this._source.on("update", this._listeners.update), this;
        } }, { key: "stop", value: function() {
          return this._source.off("add", this._listeners.add), this._source.off("remove", this._listeners.remove), this._source.off("update", this._listeners.update), this;
        } }, { key: "_transformItems", value: function(t3) {
          var e2;
          return Sl(e2 = this._transformers).call(e2, function(t4, e3) {
            return e3(t4);
          }, t3);
        } }, { key: "_add", value: function(t3, e2) {
          null != e2 && this._target.add(this._transformItems(this._source.get(e2.items)));
        } }, { key: "_update", value: function(t3, e2) {
          null != e2 && this._target.update(this._transformItems(this._source.get(e2.items)));
        } }, { key: "_remove", value: function(t3, e2) {
          null != e2 && this._target.remove(this._transformItems(e2.oldData));
        } }]), t2;
      }(), th = function() {
        function t2(r2) {
          e(this, t2), Wf(this, "_transformers", []), this._source = r2;
        }
        return qf(t2, [{ key: "filter", value: function(t3) {
          return this._transformers.push(function(e2) {
            return Il(e2).call(e2, t3);
          }), this;
        } }, { key: "map", value: function(t3) {
          return this._transformers.push(function(e2) {
            return Nl(e2).call(e2, t3);
          }), this;
        } }, { key: "flatMap", value: function(t3) {
          return this._transformers.push(function(e2) {
            return Ql(e2).call(e2, t3);
          }), this;
        } }, { key: "to", value: function(t3) {
          return new Zl(this._source, this._transformers, t3);
        } }]), t2;
      }(), eh = C, rh = or, nh = Mt, oh = function(t2, e2, r2) {
        var n2, o2;
        rh(t2);
        try {
          if (!(n2 = nh(t2, "return"))) {
            if ("throw" === e2) throw r2;
            return r2;
          }
          n2 = eh(n2, t2);
        } catch (t3) {
          o2 = true, n2 = t3;
        }
        if ("throw" === e2) throw r2;
        if (o2) throw n2;
        return rh(n2), r2;
      }, ih = or, ah = oh, uh = _s, sh = ve("iterator"), ch = Array.prototype, fh = function(t2) {
        return void 0 !== t2 && (uh.Array === t2 || ch[sh] === t2);
      }, lh = fn, hh = Mt, ph = B, vh = _s, dh = ve("iterator"), yh = function(t2) {
        if (!ph(t2)) return hh(t2, dh) || hh(t2, "@@iterator") || vh[lh(t2)];
      }, gh = C, mh = Lt, bh = or, wh = At, _h = yh, Th = TypeError, Eh = function(t2, e2) {
        var r2 = arguments.length < 2 ? _h(t2) : e2;
        if (mh(r2)) return bh(gh(r2, t2));
        throw new Th(wh(t2) + " is not iterable");
      }, Oh = Qe, Sh = C, xh = $t, kh = function(t2, e2, r2, n2) {
        try {
          return n2 ? e2(ih(r2)[0], r2[1]) : e2(r2);
        } catch (e3) {
          ah(t2, "throw", e3);
        }
      }, jh = fh, Ah = jn, Ph = Hr, Ih = tn, Dh = Eh, Lh = yh, Ch = Array, Rh = ve("iterator"), Mh = false;
      try {
        var Nh = 0, Fh = { next: function() {
          return { done: !!Nh++ };
        }, return: function() {
          Mh = true;
        } };
        Fh[Rh] = function() {
          return this;
        }, Array.from(Fh, function() {
          throw 2;
        });
      } catch (t2) {
      }
      var zh = function(t2, e2) {
        try {
          if (!e2 && !Mh) return false;
        } catch (t3) {
          return false;
        }
        var r2 = false;
        try {
          var n2 = {};
          n2[Rh] = function() {
            return { next: function() {
              return { done: r2 = true };
            } };
          }, t2(n2);
        } catch (t3) {
        }
        return r2;
      }, Uh = function(t2) {
        var e2 = xh(t2), r2 = Ah(this), n2 = arguments.length, o2 = n2 > 1 ? arguments[1] : void 0, i2 = void 0 !== o2;
        i2 && (o2 = Oh(o2, n2 > 2 ? arguments[2] : void 0));
        var a2, u2, s2, c2, f2, l2, h2 = Lh(e2), p2 = 0;
        if (!h2 || this === Ch && jh(h2)) for (a2 = Ph(e2), u2 = r2 ? new this(a2) : Ch(a2); a2 > p2; p2++) l2 = i2 ? o2(e2[p2], p2) : e2[p2], Ih(u2, p2, l2);
        else for (f2 = (c2 = Dh(e2, h2)).next, u2 = r2 ? new this() : []; !(s2 = Sh(f2, c2)).done; p2++) l2 = i2 ? kh(c2, o2, [s2.value, p2], true) : s2.value, Ih(u2, p2, l2);
        return u2.length = p2, u2;
      };
      Pr({ target: "Array", stat: true, forced: !zh(function(t2) {
        Array.from(t2);
      }) }, { from: Uh });
      var qh = nt.Array.from, Wh = n(qh), Yh = yh, Gh = n(Yh), Xh = n(Yh);
      Pr({ target: "Array", stat: true }, { isArray: Ur });
      var Vh = nt.Array.isArray, Bh = n(Vh);
      var Hh = I, Kh = Ur, Jh = TypeError, $h = Object.getOwnPropertyDescriptor, Qh = Hh && !function() {
        if (void 0 !== this) return true;
        try {
          Object.defineProperty([], "length", { writable: false }).length = 1;
        } catch (t2) {
          return t2 instanceof TypeError;
        }
      }() ? function(t2, e2) {
        if (Kh(t2) && !$h(t2, "length").writable) throw new Jh("Cannot set read only .length");
        return t2.length = e2;
      } : function(t2, e2) {
        return t2.length = e2;
      }, Zh = $t, tp = Hr, ep = Qh, rp = Jr;
      Pr({ target: "Array", proto: true, arity: 1, forced: u(function() {
        return 4294967297 !== [].push.call({ length: 4294967296 }, 1);
      }) || !function() {
        try {
          Object.defineProperty([], "length", { writable: false }).push();
        } catch (t2) {
          return t2 instanceof TypeError;
        }
      }() }, { push: function(t2) {
        var e2 = Zh(this), r2 = tp(e2), n2 = arguments.length;
        rp(r2 + n2);
        for (var o2 = 0; o2 < n2; o2++) e2[r2] = arguments[o2], r2++;
        return ep(e2, r2), r2;
      } });
      var np = nl("Array", "push"), op = ct, ip = np, ap = Array.prototype, up = function(t2) {
        var e2 = t2.push;
        return t2 === ap || op(ap, t2) && e2 === ap.push ? ip : e2;
      }, sp = n(up);
      var cp = Pr, fp = Ur, lp = jn, hp = rt, pp = uo, vp = Hr, dp = Z, yp = tn, gp = ve, mp = Ru, bp = zn("slice"), wp = gp("species"), _p = Array, Tp = Math.max;
      cp({ target: "Array", proto: true, forced: !bp }, { slice: function(t2, e2) {
        var r2, n2, o2, i2 = dp(this), a2 = vp(i2), u2 = pp(t2, a2), s2 = pp(void 0 === e2 ? a2 : e2, a2);
        if (fp(i2) && (r2 = i2.constructor, (lp(r2) && (r2 === _p || fp(r2.prototype)) || hp(r2) && null === (r2 = r2[wp])) && (r2 = void 0), r2 === _p || void 0 === r2)) return mp(i2, u2, s2);
        for (n2 = new (void 0 === r2 ? _p : r2)(Tp(s2 - u2, 0)), o2 = 0; u2 < s2; u2++, o2++) u2 in i2 && yp(n2, o2, i2[u2]);
        return n2.length = o2, n2;
      } });
      var Ep = nl("Array", "slice"), Op = ct, Sp = Ep, xp = Array.prototype, kp = function(t2) {
        var e2 = t2.slice;
        return t2 === xp || Op(xp, t2) && e2 === xp.slice ? Sp : e2;
      }, jp = kp, Ap = n(jp), Pp = n(qh);
      function Ip(t2, e2) {
        (null == e2 || e2 > t2.length) && (e2 = t2.length);
        for (var r2 = 0, n2 = new Array(e2); r2 < e2; r2++) n2[r2] = t2[r2];
        return n2;
      }
      function Dp(t2, e2) {
        var r2;
        if (t2) {
          if ("string" == typeof t2) return Ip(t2, e2);
          var n2 = Ap(r2 = Object.prototype.toString.call(t2)).call(r2, 8, -1);
          return "Object" === n2 && t2.constructor && (n2 = t2.constructor.name), "Map" === n2 || "Set" === n2 ? Pp(t2) : "Arguments" === n2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2) ? Ip(t2, e2) : void 0;
        }
      }
      function Lp(t2, e2) {
        return function(t3) {
          if (Bh(t3)) return t3;
        }(t2) || function(t3, e3) {
          var r2 = null == t3 ? null : void 0 !== gf && Gh(t3) || t3["@@iterator"];
          if (null != r2) {
            var n2, o2, i2, a2, u2 = [], s2 = true, c2 = false;
            try {
              if (i2 = (r2 = r2.call(t3)).next, 0 === e3) {
                if (Object(r2) !== r2) return;
                s2 = false;
              } else for (; !(s2 = (n2 = i2.call(r2)).done) && (sp(u2).call(u2, n2.value), u2.length !== e3); s2 = true) ;
            } catch (t4) {
              c2 = true, o2 = t4;
            } finally {
              try {
                if (!s2 && null != r2.return && (a2 = r2.return(), Object(a2) !== a2)) return;
              } finally {
                if (c2) throw o2;
              }
            }
            return u2;
          }
        }(t2, e2) || Dp(t2, e2) || function() {
          throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }
      function Cp(t2) {
        return function(t3) {
          if (Bh(t3)) return Ip(t3);
        }(t2) || function(t3) {
          if (void 0 !== gf && null != Gh(t3) || null != t3["@@iterator"]) return Pp(t3);
        }(t2) || Dp(t2) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }
      var Rp = n(Yc), Mp = nl("Array", "concat"), Np = ct, Fp = Mp, zp = Array.prototype, Up = n(function(t2) {
        var e2 = t2.concat;
        return t2 === zp || Np(zp, t2) && e2 === zp.concat ? Fp : e2;
      }), qp = n(kp), Wp = st, Yp = Jo, Gp = li, Xp = or, Vp = m([].concat), Bp = Wp("Reflect", "ownKeys") || function(t2) {
        var e2 = Yp.f(Xp(t2)), r2 = Gp.f;
        return r2 ? Vp(e2, r2(t2)) : e2;
      };
      Pr({ target: "Reflect", stat: true }, { ownKeys: Bp });
      var Hp = n(nt.Reflect.ownKeys), Kp = n(Vh), Jp = $t, $p = Oo;
      Pr({ target: "Object", stat: true, forced: u(function() {
        $p(1);
      }) }, { keys: function(t2) {
        return $p(Jp(t2));
      } });
      var Qp = n(nt.Object.keys), Zp = ca.forEach, tv = ml("forEach") ? [].forEach : function(t2) {
        return Zp(this, t2, arguments.length > 1 ? arguments[1] : void 0);
      };
      Pr({ target: "Array", proto: true, forced: [].forEach !== tv }, { forEach: tv });
      var ev = nl("Array", "forEach"), rv = fn, nv = te, ov = ct, iv = ev, av = Array.prototype, uv = { DOMTokenList: true, NodeList: true }, sv = function(t2) {
        var e2 = t2.forEach;
        return t2 === av || ov(av, t2) && e2 === av.forEach || nv(uv, rv(t2)) ? iv : e2;
      }, cv = n(sv), fv = Pr, lv = Ur, hv = m([].reverse), pv = [1, 2];
      fv({ target: "Array", proto: true, forced: String(pv) === String(pv.reverse()) }, { reverse: function() {
        return lv(this) && (this.length = this.length), hv(this);
      } });
      var vv = nl("Array", "reverse"), dv = ct, yv = vv, gv = Array.prototype, mv = function(t2) {
        var e2 = t2.reverse;
        return t2 === gv || dv(gv, t2) && e2 === gv.reverse ? yv : e2;
      }, bv = n(mv), wv = At, _v = TypeError, Tv = function(t2, e2) {
        if (!delete t2[e2]) throw new _v("Cannot delete property " + wv(e2) + " of " + wv(t2));
      }, Ev = Pr, Ov = $t, Sv = uo, xv = Gr, kv = Hr, jv = Qh, Av = Jr, Pv = Rn, Iv = tn, Dv = Tv, Lv = zn("splice"), Cv = Math.max, Rv = Math.min;
      Ev({ target: "Array", proto: true, forced: !Lv }, { splice: function(t2, e2) {
        var r2, n2, o2, i2, a2, u2, s2 = Ov(this), c2 = kv(s2), f2 = Sv(t2, c2), l2 = arguments.length;
        for (0 === l2 ? r2 = n2 = 0 : 1 === l2 ? (r2 = 0, n2 = c2 - f2) : (r2 = l2 - 2, n2 = Rv(Cv(xv(e2), 0), c2 - f2)), Av(c2 + r2 - n2), o2 = Pv(s2, n2), i2 = 0; i2 < n2; i2++) (a2 = f2 + i2) in s2 && Iv(o2, i2, s2[a2]);
        if (o2.length = n2, r2 < n2) {
          for (i2 = f2; i2 < c2 - n2; i2++) u2 = i2 + r2, (a2 = i2 + n2) in s2 ? s2[u2] = s2[a2] : Dv(s2, u2);
          for (i2 = c2; i2 > c2 - n2 + r2; i2--) Dv(s2, i2 - 1);
        } else if (r2 > n2) for (i2 = c2 - n2; i2 > f2; i2--) u2 = i2 + r2 - 1, (a2 = i2 + n2 - 1) in s2 ? s2[u2] = s2[a2] : Dv(s2, u2);
        for (i2 = 0; i2 < r2; i2++) s2[i2 + f2] = arguments[i2 + 2];
        return jv(s2, c2 - n2 + r2), o2;
      } });
      var Mv = nl("Array", "splice"), Nv = ct, Fv = Mv, zv = Array.prototype, Uv = n(function(t2) {
        var e2 = t2.splice;
        return t2 === zv || Nv(zv, t2) && e2 === zv.splice ? Fv : e2;
      }), qv = I, Wv = m, Yv = C, Gv = u, Xv = Oo, Vv = li, Bv = R, Hv = $t, Kv = V, Jv = Object.assign, $v = Object.defineProperty, Qv = Wv([].concat), Zv = !Jv || Gv(function() {
        if (qv && 1 !== Jv({ b: 1 }, Jv($v({}, "a", { enumerable: true, get: function() {
          $v(this, "b", { value: 3, enumerable: false });
        } }), { b: 2 })).b) return true;
        var t2 = {}, e2 = {}, r2 = Symbol("assign detection"), n2 = "abcdefghijklmnopqrst";
        return t2[r2] = 7, n2.split("").forEach(function(t3) {
          e2[t3] = t3;
        }), 7 !== Jv({}, t2)[r2] || Xv(Jv({}, e2)).join("") !== n2;
      }) ? function(t2, e2) {
        for (var r2 = Hv(t2), n2 = arguments.length, o2 = 1, i2 = Vv.f, a2 = Bv.f; n2 > o2; ) for (var u2, s2 = Kv(arguments[o2++]), c2 = i2 ? Qv(Xv(s2), i2(s2)) : Xv(s2), f2 = c2.length, l2 = 0; f2 > l2; ) u2 = c2[l2++], qv && !Yv(a2, s2, u2) || (r2[u2] = s2[u2]);
        return r2;
      } : Jv, td = Zv;
      Pr({ target: "Object", stat: true, arity: 2, forced: Object.assign !== td }, { assign: td });
      var ed = n(nt.Object.assign), rd = $t, nd = Ms, od = js;
      Pr({ target: "Object", stat: true, forced: u(function() {
        nd(1);
      }), sham: !od }, { getPrototypeOf: function(t2) {
        return nd(rd(t2));
      } });
      var id = nt.Object.getPrototypeOf;
      Pr({ target: "Object", stat: true, sham: !I }, { create: Ko });
      var ad = nt.Object, ud = function(t2, e2) {
        return ad.create(t2, e2);
      }, sd = n(ud), cd = nt, fd = p;
      cd.JSON || (cd.JSON = { stringify: JSON.stringify });
      var ld = function(t2, e2, r2) {
        return fd(cd.JSON.stringify, null, arguments);
      }, hd = n(ld), pd = "function" == typeof Bun && Bun && "string" == typeof Bun.version, vd = TypeError, dd = function(t2, e2) {
        if (t2 < e2) throw new vd("Not enough arguments");
        return t2;
      }, yd = a, gd = p, md = A, bd = pd, wd = ft, _d = Ru, Td = dd, Ed = yd.Function, Od = /MSIE .\./.test(wd) || bd && function() {
        var t2 = yd.Bun.version.split(".");
        return t2.length < 3 || "0" === t2[0] && (t2[1] < 3 || "3" === t2[1] && "0" === t2[2]);
      }(), Sd = function(t2, e2) {
        var r2 = e2 ? 2 : 1;
        return Od ? function(n2, o2) {
          var i2 = Td(arguments.length, 1) > r2, a2 = md(n2) ? n2 : Ed(n2), u2 = i2 ? _d(arguments, r2) : [], s2 = i2 ? function() {
            gd(a2, this, u2);
          } : a2;
          return e2 ? t2(s2, o2) : t2(s2);
        } : t2;
      }, xd = Pr, kd = a, jd = Sd(kd.setInterval, true);
      xd({ global: true, bind: true, forced: kd.setInterval !== jd }, { setInterval: jd });
      var Ad = Pr, Pd = a, Id = Sd(Pd.setTimeout, true);
      Ad({ global: true, bind: true, forced: Pd.setTimeout !== Id }, { setTimeout: Id });
      var Dd = n(nt.setTimeout), Ld = { exports: {} };
      !function(t2) {
        function e2(t3) {
          if (t3) return function(t4) {
            return Object.assign(t4, e2.prototype), t4._callbacks = /* @__PURE__ */ new Map(), t4;
          }(t3);
          this._callbacks = /* @__PURE__ */ new Map();
        }
        e2.prototype.on = function(t3, e3) {
          const r2 = this._callbacks.get(t3) ?? [];
          return r2.push(e3), this._callbacks.set(t3, r2), this;
        }, e2.prototype.once = function(t3, e3) {
          const r2 = (...n2) => {
            this.off(t3, r2), e3.apply(this, n2);
          };
          return r2.fn = e3, this.on(t3, r2), this;
        }, e2.prototype.off = function(t3, e3) {
          if (void 0 === t3 && void 0 === e3) return this._callbacks.clear(), this;
          if (void 0 === e3) return this._callbacks.delete(t3), this;
          const r2 = this._callbacks.get(t3);
          if (r2) {
            for (const [t4, n2] of r2.entries()) if (n2 === e3 || n2.fn === e3) {
              r2.splice(t4, 1);
              break;
            }
            0 === r2.length ? this._callbacks.delete(t3) : this._callbacks.set(t3, r2);
          }
          return this;
        }, e2.prototype.emit = function(t3, ...e3) {
          const r2 = this._callbacks.get(t3);
          if (r2) {
            const t4 = [...r2];
            for (const r3 of t4) r3.apply(this, e3);
          }
          return this;
        }, e2.prototype.listeners = function(t3) {
          return this._callbacks.get(t3) ?? [];
        }, e2.prototype.listenerCount = function(t3) {
          if (t3) return this.listeners(t3).length;
          let e3 = 0;
          for (const t4 of this._callbacks.values()) e3 += t4.length;
          return e3;
        }, e2.prototype.hasListeners = function(t3) {
          return this.listenerCount(t3) > 0;
        }, e2.prototype.addEventListener = e2.prototype.on, e2.prototype.removeListener = e2.prototype.off, e2.prototype.removeEventListener = e2.prototype.off, e2.prototype.removeAllListeners = e2.prototype.off, t2.exports = e2;
      }(Ld);
      var Cd, Rd = n(Ld.exports);
      function Md() {
        return Md = Object.assign || function(t2) {
          for (var e2 = 1; e2 < arguments.length; e2++) {
            var r2 = arguments[e2];
            for (var n2 in r2) Object.prototype.hasOwnProperty.call(r2, n2) && (t2[n2] = r2[n2]);
          }
          return t2;
        }, Md.apply(this, arguments);
      }
      function Nd(t2, e2) {
        t2.prototype = Object.create(e2.prototype), t2.prototype.constructor = t2, t2.__proto__ = e2;
      }
      function Fd(t2) {
        if (void 0 === t2) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t2;
      }
      Cd = "function" != typeof Object.assign ? function(t2) {
        if (null == t2) throw new TypeError("Cannot convert undefined or null to object");
        for (var e2 = Object(t2), r2 = 1; r2 < arguments.length; r2++) {
          var n2 = arguments[r2];
          if (null != n2) for (var o2 in n2) n2.hasOwnProperty(o2) && (e2[o2] = n2[o2]);
        }
        return e2;
      } : Object.assign;
      var zd, Ud = Cd, qd = ["", "webkit", "Moz", "MS", "ms", "o"], Wd = "undefined" == typeof document ? { style: {} } : document.createElement("div"), Yd = Math.round, Gd = Math.abs, Xd = Date.now;
      function Vd(t2, e2) {
        for (var r2, n2, o2 = e2[0].toUpperCase() + e2.slice(1), i2 = 0; i2 < qd.length; ) {
          if ((n2 = (r2 = qd[i2]) ? r2 + o2 : e2) in t2) return n2;
          i2++;
        }
      }
      zd = "undefined" == typeof window ? {} : window;
      var Bd = Vd(Wd.style, "touchAction"), Hd = void 0 !== Bd;
      var Kd = "compute", Jd = "auto", $d = "manipulation", Qd = "none", Zd = "pan-x", ty = "pan-y", ey = function() {
        if (!Hd) return false;
        var t2 = {}, e2 = zd.CSS && zd.CSS.supports;
        return ["auto", "manipulation", "pan-y", "pan-x", "pan-x pan-y", "none"].forEach(function(r2) {
          return t2[r2] = !e2 || zd.CSS.supports("touch-action", r2);
        }), t2;
      }(), ry = "ontouchstart" in zd, ny = void 0 !== Vd(zd, "PointerEvent"), oy = ry && /mobile|tablet|ip(ad|hone|od)|android/i.test(navigator.userAgent), iy = "touch", ay = "mouse", uy = 25, sy = 1, cy = 4, fy = 8, ly = 1, hy = 2, py = 4, vy = 8, dy = 16, yy = hy | py, gy = vy | dy, my = yy | gy, by = ["x", "y"], wy = ["clientX", "clientY"];
      function _y(t2, e2, r2) {
        var n2;
        if (t2) if (t2.forEach) t2.forEach(e2, r2);
        else if (void 0 !== t2.length) for (n2 = 0; n2 < t2.length; ) e2.call(r2, t2[n2], n2, t2), n2++;
        else for (n2 in t2) t2.hasOwnProperty(n2) && e2.call(r2, t2[n2], n2, t2);
      }
      function Ty(t2, e2) {
        return "function" == typeof t2 ? t2.apply(e2 && e2[0] || void 0, e2) : t2;
      }
      function Ey(t2, e2) {
        return t2.indexOf(e2) > -1;
      }
      var Oy = function() {
        function t2(t3, e3) {
          this.manager = t3, this.set(e3);
        }
        var e2 = t2.prototype;
        return e2.set = function(t3) {
          t3 === Kd && (t3 = this.compute()), Hd && this.manager.element.style && ey[t3] && (this.manager.element.style[Bd] = t3), this.actions = t3.toLowerCase().trim();
        }, e2.update = function() {
          this.set(this.manager.options.touchAction);
        }, e2.compute = function() {
          var t3 = [];
          return _y(this.manager.recognizers, function(e3) {
            Ty(e3.options.enable, [e3]) && (t3 = t3.concat(e3.getTouchAction()));
          }), function(t4) {
            if (Ey(t4, Qd)) return Qd;
            var e3 = Ey(t4, Zd), r2 = Ey(t4, ty);
            return e3 && r2 ? Qd : e3 || r2 ? e3 ? Zd : ty : Ey(t4, $d) ? $d : Jd;
          }(t3.join(" "));
        }, e2.preventDefaults = function(t3) {
          var e3 = t3.srcEvent, r2 = t3.offsetDirection;
          if (this.manager.session.prevented) e3.preventDefault();
          else {
            var n2 = this.actions, o2 = Ey(n2, Qd) && !ey[Qd], i2 = Ey(n2, ty) && !ey[ty], a2 = Ey(n2, Zd) && !ey[Zd];
            if (o2) {
              var u2 = 1 === t3.pointers.length, s2 = t3.distance < 2, c2 = t3.deltaTime < 250;
              if (u2 && s2 && c2) return;
            }
            if (!a2 || !i2) return o2 || i2 && r2 & yy || a2 && r2 & gy ? this.preventSrc(e3) : void 0;
          }
        }, e2.preventSrc = function(t3) {
          this.manager.session.prevented = true, t3.preventDefault();
        }, t2;
      }();
      function Sy(t2, e2) {
        for (; t2; ) {
          if (t2 === e2) return true;
          t2 = t2.parentNode;
        }
        return false;
      }
      function xy(t2) {
        var e2 = t2.length;
        if (1 === e2) return { x: Yd(t2[0].clientX), y: Yd(t2[0].clientY) };
        for (var r2 = 0, n2 = 0, o2 = 0; o2 < e2; ) r2 += t2[o2].clientX, n2 += t2[o2].clientY, o2++;
        return { x: Yd(r2 / e2), y: Yd(n2 / e2) };
      }
      function ky(t2) {
        for (var e2 = [], r2 = 0; r2 < t2.pointers.length; ) e2[r2] = { clientX: Yd(t2.pointers[r2].clientX), clientY: Yd(t2.pointers[r2].clientY) }, r2++;
        return { timeStamp: Xd(), pointers: e2, center: xy(e2), deltaX: t2.deltaX, deltaY: t2.deltaY };
      }
      function jy(t2, e2, r2) {
        r2 || (r2 = by);
        var n2 = e2[r2[0]] - t2[r2[0]], o2 = e2[r2[1]] - t2[r2[1]];
        return Math.sqrt(n2 * n2 + o2 * o2);
      }
      function Ay(t2, e2, r2) {
        r2 || (r2 = by);
        var n2 = e2[r2[0]] - t2[r2[0]], o2 = e2[r2[1]] - t2[r2[1]];
        return 180 * Math.atan2(o2, n2) / Math.PI;
      }
      function Py(t2, e2) {
        return t2 === e2 ? ly : Gd(t2) >= Gd(e2) ? t2 < 0 ? hy : py : e2 < 0 ? vy : dy;
      }
      function Iy(t2, e2, r2) {
        return { x: e2 / t2 || 0, y: r2 / t2 || 0 };
      }
      function Dy(t2, e2) {
        var r2 = t2.session, n2 = e2.pointers, o2 = n2.length;
        r2.firstInput || (r2.firstInput = ky(e2)), o2 > 1 && !r2.firstMultiple ? r2.firstMultiple = ky(e2) : 1 === o2 && (r2.firstMultiple = false);
        var i2 = r2.firstInput, a2 = r2.firstMultiple, u2 = a2 ? a2.center : i2.center, s2 = e2.center = xy(n2);
        e2.timeStamp = Xd(), e2.deltaTime = e2.timeStamp - i2.timeStamp, e2.angle = Ay(u2, s2), e2.distance = jy(u2, s2), function(t3, e3) {
          var r3 = e3.center, n3 = t3.offsetDelta || {}, o3 = t3.prevDelta || {}, i3 = t3.prevInput || {};
          e3.eventType !== sy && i3.eventType !== cy || (o3 = t3.prevDelta = { x: i3.deltaX || 0, y: i3.deltaY || 0 }, n3 = t3.offsetDelta = { x: r3.x, y: r3.y }), e3.deltaX = o3.x + (r3.x - n3.x), e3.deltaY = o3.y + (r3.y - n3.y);
        }(r2, e2), e2.offsetDirection = Py(e2.deltaX, e2.deltaY);
        var c2, f2, l2 = Iy(e2.deltaTime, e2.deltaX, e2.deltaY);
        e2.overallVelocityX = l2.x, e2.overallVelocityY = l2.y, e2.overallVelocity = Gd(l2.x) > Gd(l2.y) ? l2.x : l2.y, e2.scale = a2 ? (c2 = a2.pointers, jy((f2 = n2)[0], f2[1], wy) / jy(c2[0], c2[1], wy)) : 1, e2.rotation = a2 ? function(t3, e3) {
          return Ay(e3[1], e3[0], wy) + Ay(t3[1], t3[0], wy);
        }(a2.pointers, n2) : 0, e2.maxPointers = r2.prevInput ? e2.pointers.length > r2.prevInput.maxPointers ? e2.pointers.length : r2.prevInput.maxPointers : e2.pointers.length, function(t3, e3) {
          var r3, n3, o3, i3, a3 = t3.lastInterval || e3, u3 = e3.timeStamp - a3.timeStamp;
          if (e3.eventType !== fy && (u3 > uy || void 0 === a3.velocity)) {
            var s3 = e3.deltaX - a3.deltaX, c3 = e3.deltaY - a3.deltaY, f3 = Iy(u3, s3, c3);
            n3 = f3.x, o3 = f3.y, r3 = Gd(f3.x) > Gd(f3.y) ? f3.x : f3.y, i3 = Py(s3, c3), t3.lastInterval = e3;
          } else r3 = a3.velocity, n3 = a3.velocityX, o3 = a3.velocityY, i3 = a3.direction;
          e3.velocity = r3, e3.velocityX = n3, e3.velocityY = o3, e3.direction = i3;
        }(r2, e2);
        var h2, p2 = t2.element, v2 = e2.srcEvent;
        Sy(h2 = v2.composedPath ? v2.composedPath()[0] : v2.path ? v2.path[0] : v2.target, p2) && (p2 = h2), e2.target = p2;
      }
      function Ly(t2, e2, r2) {
        var n2 = r2.pointers.length, o2 = r2.changedPointers.length, i2 = e2 & sy && n2 - o2 == 0, a2 = e2 & (cy | fy) && n2 - o2 == 0;
        r2.isFirst = !!i2, r2.isFinal = !!a2, i2 && (t2.session = {}), r2.eventType = e2, Dy(t2, r2), t2.emit("hammer.input", r2), t2.recognize(r2), t2.session.prevInput = r2;
      }
      function Cy(t2) {
        return t2.trim().split(/\s+/g);
      }
      function Ry(t2, e2, r2) {
        _y(Cy(e2), function(e3) {
          t2.addEventListener(e3, r2, false);
        });
      }
      function My(t2, e2, r2) {
        _y(Cy(e2), function(e3) {
          t2.removeEventListener(e3, r2, false);
        });
      }
      function Ny(t2) {
        var e2 = t2.ownerDocument || t2;
        return e2.defaultView || e2.parentWindow || window;
      }
      var Fy = function() {
        function t2(t3, e3) {
          var r2 = this;
          this.manager = t3, this.callback = e3, this.element = t3.element, this.target = t3.options.inputTarget, this.domHandler = function(e4) {
            Ty(t3.options.enable, [t3]) && r2.handler(e4);
          }, this.init();
        }
        var e2 = t2.prototype;
        return e2.handler = function() {
        }, e2.init = function() {
          this.evEl && Ry(this.element, this.evEl, this.domHandler), this.evTarget && Ry(this.target, this.evTarget, this.domHandler), this.evWin && Ry(Ny(this.element), this.evWin, this.domHandler);
        }, e2.destroy = function() {
          this.evEl && My(this.element, this.evEl, this.domHandler), this.evTarget && My(this.target, this.evTarget, this.domHandler), this.evWin && My(Ny(this.element), this.evWin, this.domHandler);
        }, t2;
      }();
      function zy(t2, e2, r2) {
        if (t2.indexOf && !r2) return t2.indexOf(e2);
        for (var n2 = 0; n2 < t2.length; ) {
          if (r2 && t2[n2][r2] == e2 || !r2 && t2[n2] === e2) return n2;
          n2++;
        }
        return -1;
      }
      var Uy = { pointerdown: sy, pointermove: 2, pointerup: cy, pointercancel: fy, pointerout: fy }, qy = { 2: iy, 3: "pen", 4: ay, 5: "kinect" }, Wy = "pointerdown", Yy = "pointermove pointerup pointercancel";
      zd.MSPointerEvent && !zd.PointerEvent && (Wy = "MSPointerDown", Yy = "MSPointerMove MSPointerUp MSPointerCancel");
      var Gy = function(t2) {
        function e2() {
          var r2, n2 = e2.prototype;
          return n2.evEl = Wy, n2.evWin = Yy, (r2 = t2.apply(this, arguments) || this).store = r2.manager.session.pointerEvents = [], r2;
        }
        return Nd(e2, t2), e2.prototype.handler = function(t3) {
          var e3 = this.store, r2 = false, n2 = t3.type.toLowerCase().replace("ms", ""), o2 = Uy[n2], i2 = qy[t3.pointerType] || t3.pointerType, a2 = i2 === iy, u2 = zy(e3, t3.pointerId, "pointerId");
          o2 & sy && (0 === t3.button || a2) ? u2 < 0 && (e3.push(t3), u2 = e3.length - 1) : o2 & (cy | fy) && (r2 = true), u2 < 0 || (e3[u2] = t3, this.callback(this.manager, o2, { pointers: e3, changedPointers: [t3], pointerType: i2, srcEvent: t3 }), r2 && e3.splice(u2, 1));
        }, e2;
      }(Fy);
      function Xy(t2) {
        return Array.prototype.slice.call(t2, 0);
      }
      function Vy(t2, e2, r2) {
        for (var n2 = [], o2 = [], i2 = 0; i2 < t2.length; ) {
          var a2 = e2 ? t2[i2][e2] : t2[i2];
          zy(o2, a2) < 0 && n2.push(t2[i2]), o2[i2] = a2, i2++;
        }
        return r2 && (n2 = e2 ? n2.sort(function(t3, r3) {
          return t3[e2] > r3[e2];
        }) : n2.sort()), n2;
      }
      var By = { touchstart: sy, touchmove: 2, touchend: cy, touchcancel: fy }, Hy = function(t2) {
        function e2() {
          var r2;
          return e2.prototype.evTarget = "touchstart touchmove touchend touchcancel", (r2 = t2.apply(this, arguments) || this).targetIds = {}, r2;
        }
        return Nd(e2, t2), e2.prototype.handler = function(t3) {
          var e3 = By[t3.type], r2 = Ky.call(this, t3, e3);
          r2 && this.callback(this.manager, e3, { pointers: r2[0], changedPointers: r2[1], pointerType: iy, srcEvent: t3 });
        }, e2;
      }(Fy);
      function Ky(t2, e2) {
        var r2, n2, o2 = Xy(t2.touches), i2 = this.targetIds;
        if (e2 & (2 | sy) && 1 === o2.length) return i2[o2[0].identifier] = true, [o2, o2];
        var a2 = Xy(t2.changedTouches), u2 = [], s2 = this.target;
        if (n2 = o2.filter(function(t3) {
          return Sy(t3.target, s2);
        }), e2 === sy) for (r2 = 0; r2 < n2.length; ) i2[n2[r2].identifier] = true, r2++;
        for (r2 = 0; r2 < a2.length; ) i2[a2[r2].identifier] && u2.push(a2[r2]), e2 & (cy | fy) && delete i2[a2[r2].identifier], r2++;
        return u2.length ? [Vy(n2.concat(u2), "identifier", true), u2] : void 0;
      }
      var Jy = { mousedown: sy, mousemove: 2, mouseup: cy }, $y = function(t2) {
        function e2() {
          var r2, n2 = e2.prototype;
          return n2.evEl = "mousedown", n2.evWin = "mousemove mouseup", (r2 = t2.apply(this, arguments) || this).pressed = false, r2;
        }
        return Nd(e2, t2), e2.prototype.handler = function(t3) {
          var e3 = Jy[t3.type];
          e3 & sy && 0 === t3.button && (this.pressed = true), 2 & e3 && 1 !== t3.which && (e3 = cy), this.pressed && (e3 & cy && (this.pressed = false), this.callback(this.manager, e3, { pointers: [t3], changedPointers: [t3], pointerType: ay, srcEvent: t3 }));
        }, e2;
      }(Fy), Qy = 2500;
      function Zy(t2) {
        var e2 = t2.changedPointers[0];
        if (e2.identifier === this.primaryTouch) {
          var r2 = { x: e2.clientX, y: e2.clientY }, n2 = this.lastTouches;
          this.lastTouches.push(r2);
          setTimeout(function() {
            var t3 = n2.indexOf(r2);
            t3 > -1 && n2.splice(t3, 1);
          }, Qy);
        }
      }
      function tg(t2, e2) {
        t2 & sy ? (this.primaryTouch = e2.changedPointers[0].identifier, Zy.call(this, e2)) : t2 & (cy | fy) && Zy.call(this, e2);
      }
      function eg(t2) {
        for (var e2 = t2.srcEvent.clientX, r2 = t2.srcEvent.clientY, n2 = 0; n2 < this.lastTouches.length; n2++) {
          var o2 = this.lastTouches[n2], i2 = Math.abs(e2 - o2.x), a2 = Math.abs(r2 - o2.y);
          if (i2 <= 25 && a2 <= 25) return true;
        }
        return false;
      }
      var rg = function() {
        return function(t2) {
          function e2(e3, r2) {
            var n2;
            return (n2 = t2.call(this, e3, r2) || this).handler = function(t3, e4, r3) {
              var o2 = r3.pointerType === iy, i2 = r3.pointerType === ay;
              if (!(i2 && r3.sourceCapabilities && r3.sourceCapabilities.firesTouchEvents)) {
                if (o2) tg.call(Fd(Fd(n2)), e4, r3);
                else if (i2 && eg.call(Fd(Fd(n2)), r3)) return;
                n2.callback(t3, e4, r3);
              }
            }, n2.touch = new Hy(n2.manager, n2.handler), n2.mouse = new $y(n2.manager, n2.handler), n2.primaryTouch = null, n2.lastTouches = [], n2;
          }
          return Nd(e2, t2), e2.prototype.destroy = function() {
            this.touch.destroy(), this.mouse.destroy();
          }, e2;
        }(Fy);
      }();
      function ng(t2, e2, r2) {
        return !!Array.isArray(t2) && (_y(t2, r2[e2], r2), true);
      }
      var og = 32, ig = 1;
      function ag(t2, e2) {
        var r2 = e2.manager;
        return r2 ? r2.get(t2) : t2;
      }
      function ug(t2) {
        return 16 & t2 ? "cancel" : 8 & t2 ? "end" : 4 & t2 ? "move" : 2 & t2 ? "start" : "";
      }
      var sg = function() {
        function t2(t3) {
          void 0 === t3 && (t3 = {}), this.options = Md({ enable: true }, t3), this.id = ig++, this.manager = null, this.state = 1, this.simultaneous = {}, this.requireFail = [];
        }
        var e2 = t2.prototype;
        return e2.set = function(t3) {
          return Ud(this.options, t3), this.manager && this.manager.touchAction.update(), this;
        }, e2.recognizeWith = function(t3) {
          if (ng(t3, "recognizeWith", this)) return this;
          var e3 = this.simultaneous;
          return e3[(t3 = ag(t3, this)).id] || (e3[t3.id] = t3, t3.recognizeWith(this)), this;
        }, e2.dropRecognizeWith = function(t3) {
          return ng(t3, "dropRecognizeWith", this) || (t3 = ag(t3, this), delete this.simultaneous[t3.id]), this;
        }, e2.requireFailure = function(t3) {
          if (ng(t3, "requireFailure", this)) return this;
          var e3 = this.requireFail;
          return -1 === zy(e3, t3 = ag(t3, this)) && (e3.push(t3), t3.requireFailure(this)), this;
        }, e2.dropRequireFailure = function(t3) {
          if (ng(t3, "dropRequireFailure", this)) return this;
          t3 = ag(t3, this);
          var e3 = zy(this.requireFail, t3);
          return e3 > -1 && this.requireFail.splice(e3, 1), this;
        }, e2.hasRequireFailures = function() {
          return this.requireFail.length > 0;
        }, e2.canRecognizeWith = function(t3) {
          return !!this.simultaneous[t3.id];
        }, e2.emit = function(t3) {
          var e3 = this, r2 = this.state;
          function n2(r3) {
            e3.manager.emit(r3, t3);
          }
          r2 < 8 && n2(e3.options.event + ug(r2)), n2(e3.options.event), t3.additionalEvent && n2(t3.additionalEvent), r2 >= 8 && n2(e3.options.event + ug(r2));
        }, e2.tryEmit = function(t3) {
          if (this.canEmit()) return this.emit(t3);
          this.state = og;
        }, e2.canEmit = function() {
          for (var t3 = 0; t3 < this.requireFail.length; ) {
            if (!(33 & this.requireFail[t3].state)) return false;
            t3++;
          }
          return true;
        }, e2.recognize = function(t3) {
          var e3 = Ud({}, t3);
          if (!Ty(this.options.enable, [this, e3])) return this.reset(), void (this.state = og);
          56 & this.state && (this.state = 1), this.state = this.process(e3), 30 & this.state && this.tryEmit(e3);
        }, e2.process = function(t3) {
        }, e2.getTouchAction = function() {
        }, e2.reset = function() {
        }, t2;
      }(), cg = function(t2) {
        function e2(e3) {
          var r3;
          return void 0 === e3 && (e3 = {}), (r3 = t2.call(this, Md({ event: "tap", pointers: 1, taps: 1, interval: 300, time: 250, threshold: 9, posThreshold: 10 }, e3)) || this).pTime = false, r3.pCenter = false, r3._timer = null, r3._input = null, r3.count = 0, r3;
        }
        Nd(e2, t2);
        var r2 = e2.prototype;
        return r2.getTouchAction = function() {
          return [$d];
        }, r2.process = function(t3) {
          var e3 = this, r3 = this.options, n2 = t3.pointers.length === r3.pointers, o2 = t3.distance < r3.threshold, i2 = t3.deltaTime < r3.time;
          if (this.reset(), t3.eventType & sy && 0 === this.count) return this.failTimeout();
          if (o2 && i2 && n2) {
            if (t3.eventType !== cy) return this.failTimeout();
            var a2 = !this.pTime || t3.timeStamp - this.pTime < r3.interval, u2 = !this.pCenter || jy(this.pCenter, t3.center) < r3.posThreshold;
            if (this.pTime = t3.timeStamp, this.pCenter = t3.center, u2 && a2 ? this.count += 1 : this.count = 1, this._input = t3, 0 === this.count % r3.taps) return this.hasRequireFailures() ? (this._timer = setTimeout(function() {
              e3.state = 8, e3.tryEmit();
            }, r3.interval), 2) : 8;
          }
          return og;
        }, r2.failTimeout = function() {
          var t3 = this;
          return this._timer = setTimeout(function() {
            t3.state = og;
          }, this.options.interval), og;
        }, r2.reset = function() {
          clearTimeout(this._timer);
        }, r2.emit = function() {
          8 === this.state && (this._input.tapCount = this.count, this.manager.emit(this.options.event, this._input));
        }, e2;
      }(sg), fg = function(t2) {
        function e2(e3) {
          return void 0 === e3 && (e3 = {}), t2.call(this, Md({ pointers: 1 }, e3)) || this;
        }
        Nd(e2, t2);
        var r2 = e2.prototype;
        return r2.attrTest = function(t3) {
          var e3 = this.options.pointers;
          return 0 === e3 || t3.pointers.length === e3;
        }, r2.process = function(t3) {
          var e3 = this.state, r3 = t3.eventType, n2 = 6 & e3, o2 = this.attrTest(t3);
          return n2 && (r3 & fy || !o2) ? 16 | e3 : n2 || o2 ? r3 & cy ? 8 | e3 : 2 & e3 ? 4 | e3 : 2 : og;
        }, e2;
      }(sg);
      function lg(t2) {
        return t2 === dy ? "down" : t2 === vy ? "up" : t2 === hy ? "left" : t2 === py ? "right" : "";
      }
      var hg = function(t2) {
        function e2(e3) {
          var r3;
          return void 0 === e3 && (e3 = {}), (r3 = t2.call(this, Md({ event: "pan", threshold: 10, pointers: 1, direction: my }, e3)) || this).pX = null, r3.pY = null, r3;
        }
        Nd(e2, t2);
        var r2 = e2.prototype;
        return r2.getTouchAction = function() {
          var t3 = this.options.direction, e3 = [];
          return t3 & yy && e3.push(ty), t3 & gy && e3.push(Zd), e3;
        }, r2.directionTest = function(t3) {
          var e3 = this.options, r3 = true, n2 = t3.distance, o2 = t3.direction, i2 = t3.deltaX, a2 = t3.deltaY;
          return o2 & e3.direction || (e3.direction & yy ? (o2 = 0 === i2 ? ly : i2 < 0 ? hy : py, r3 = i2 !== this.pX, n2 = Math.abs(t3.deltaX)) : (o2 = 0 === a2 ? ly : a2 < 0 ? vy : dy, r3 = a2 !== this.pY, n2 = Math.abs(t3.deltaY))), t3.direction = o2, r3 && n2 > e3.threshold && o2 & e3.direction;
        }, r2.attrTest = function(t3) {
          return fg.prototype.attrTest.call(this, t3) && (2 & this.state || !(2 & this.state) && this.directionTest(t3));
        }, r2.emit = function(e3) {
          this.pX = e3.deltaX, this.pY = e3.deltaY;
          var r3 = lg(e3.direction);
          r3 && (e3.additionalEvent = this.options.event + r3), t2.prototype.emit.call(this, e3);
        }, e2;
      }(fg), pg = function(t2) {
        function e2(e3) {
          return void 0 === e3 && (e3 = {}), t2.call(this, Md({ event: "swipe", threshold: 10, velocity: 0.3, direction: yy | gy, pointers: 1 }, e3)) || this;
        }
        Nd(e2, t2);
        var r2 = e2.prototype;
        return r2.getTouchAction = function() {
          return hg.prototype.getTouchAction.call(this);
        }, r2.attrTest = function(e3) {
          var r3, n2 = this.options.direction;
          return n2 & (yy | gy) ? r3 = e3.overallVelocity : n2 & yy ? r3 = e3.overallVelocityX : n2 & gy && (r3 = e3.overallVelocityY), t2.prototype.attrTest.call(this, e3) && n2 & e3.offsetDirection && e3.distance > this.options.threshold && e3.maxPointers === this.options.pointers && Gd(r3) > this.options.velocity && e3.eventType & cy;
        }, r2.emit = function(t3) {
          var e3 = lg(t3.offsetDirection);
          e3 && this.manager.emit(this.options.event + e3, t3), this.manager.emit(this.options.event, t3);
        }, e2;
      }(fg), vg = function(t2) {
        function e2(e3) {
          return void 0 === e3 && (e3 = {}), t2.call(this, Md({ event: "pinch", threshold: 0, pointers: 2 }, e3)) || this;
        }
        Nd(e2, t2);
        var r2 = e2.prototype;
        return r2.getTouchAction = function() {
          return [Qd];
        }, r2.attrTest = function(e3) {
          return t2.prototype.attrTest.call(this, e3) && (Math.abs(e3.scale - 1) > this.options.threshold || 2 & this.state);
        }, r2.emit = function(e3) {
          if (1 !== e3.scale) {
            var r3 = e3.scale < 1 ? "in" : "out";
            e3.additionalEvent = this.options.event + r3;
          }
          t2.prototype.emit.call(this, e3);
        }, e2;
      }(fg), dg = function(t2) {
        function e2(e3) {
          return void 0 === e3 && (e3 = {}), t2.call(this, Md({ event: "rotate", threshold: 0, pointers: 2 }, e3)) || this;
        }
        Nd(e2, t2);
        var r2 = e2.prototype;
        return r2.getTouchAction = function() {
          return [Qd];
        }, r2.attrTest = function(e3) {
          return t2.prototype.attrTest.call(this, e3) && (Math.abs(e3.rotation) > this.options.threshold || 2 & this.state);
        }, e2;
      }(fg), yg = function(t2) {
        function e2(e3) {
          var r3;
          return void 0 === e3 && (e3 = {}), (r3 = t2.call(this, Md({ event: "press", pointers: 1, time: 251, threshold: 9 }, e3)) || this)._timer = null, r3._input = null, r3;
        }
        Nd(e2, t2);
        var r2 = e2.prototype;
        return r2.getTouchAction = function() {
          return [Jd];
        }, r2.process = function(t3) {
          var e3 = this, r3 = this.options, n2 = t3.pointers.length === r3.pointers, o2 = t3.distance < r3.threshold, i2 = t3.deltaTime > r3.time;
          if (this._input = t3, !o2 || !n2 || t3.eventType & (cy | fy) && !i2) this.reset();
          else if (t3.eventType & sy) this.reset(), this._timer = setTimeout(function() {
            e3.state = 8, e3.tryEmit();
          }, r3.time);
          else if (t3.eventType & cy) return 8;
          return og;
        }, r2.reset = function() {
          clearTimeout(this._timer);
        }, r2.emit = function(t3) {
          8 === this.state && (t3 && t3.eventType & cy ? this.manager.emit(this.options.event + "up", t3) : (this._input.timeStamp = Xd(), this.manager.emit(this.options.event, this._input)));
        }, e2;
      }(sg), gg = { domEvents: false, touchAction: Kd, enable: true, inputTarget: null, inputClass: null, cssProps: { userSelect: "none", touchSelect: "none", touchCallout: "none", contentZooming: "none", userDrag: "none", tapHighlightColor: "rgba(0,0,0,0)" } }, mg = [[dg, { enable: false }], [vg, { enable: false }, ["rotate"]], [pg, { direction: yy }], [hg, { direction: yy }, ["swipe"]], [cg], [cg, { event: "doubletap", taps: 2 }, ["tap"]], [yg]];
      function bg(t2, e2) {
        var r2, n2 = t2.element;
        n2.style && (_y(t2.options.cssProps, function(o2, i2) {
          r2 = Vd(n2.style, i2), e2 ? (t2.oldCssProps[r2] = n2.style[r2], n2.style[r2] = o2) : n2.style[r2] = t2.oldCssProps[r2] || "";
        }), e2 || (t2.oldCssProps = {}));
      }
      var wg = function() {
        function t2(t3, e3) {
          var r2, n2 = this;
          this.options = Ud({}, gg, e3 || {}), this.options.inputTarget = this.options.inputTarget || t3, this.handlers = {}, this.session = {}, this.recognizers = [], this.oldCssProps = {}, this.element = t3, this.input = new ((r2 = this).options.inputClass || (ny ? Gy : oy ? Hy : ry ? rg : $y))(r2, Ly), this.touchAction = new Oy(this, this.options.touchAction), bg(this, true), _y(this.options.recognizers, function(t4) {
            var e4 = n2.add(new t4[0](t4[1]));
            t4[2] && e4.recognizeWith(t4[2]), t4[3] && e4.requireFailure(t4[3]);
          }, this);
        }
        var e2 = t2.prototype;
        return e2.set = function(t3) {
          return Ud(this.options, t3), t3.touchAction && this.touchAction.update(), t3.inputTarget && (this.input.destroy(), this.input.target = t3.inputTarget, this.input.init()), this;
        }, e2.stop = function(t3) {
          this.session.stopped = t3 ? 2 : 1;
        }, e2.recognize = function(t3) {
          var e3 = this.session;
          if (!e3.stopped) {
            var r2;
            this.touchAction.preventDefaults(t3);
            var n2 = this.recognizers, o2 = e3.curRecognizer;
            (!o2 || o2 && 8 & o2.state) && (e3.curRecognizer = null, o2 = null);
            for (var i2 = 0; i2 < n2.length; ) r2 = n2[i2], 2 === e3.stopped || o2 && r2 !== o2 && !r2.canRecognizeWith(o2) ? r2.reset() : r2.recognize(t3), !o2 && 14 & r2.state && (e3.curRecognizer = r2, o2 = r2), i2++;
          }
        }, e2.get = function(t3) {
          if (t3 instanceof sg) return t3;
          for (var e3 = this.recognizers, r2 = 0; r2 < e3.length; r2++) if (e3[r2].options.event === t3) return e3[r2];
          return null;
        }, e2.add = function(t3) {
          if (ng(t3, "add", this)) return this;
          var e3 = this.get(t3.options.event);
          return e3 && this.remove(e3), this.recognizers.push(t3), t3.manager = this, this.touchAction.update(), t3;
        }, e2.remove = function(t3) {
          if (ng(t3, "remove", this)) return this;
          var e3 = this.get(t3);
          if (t3) {
            var r2 = this.recognizers, n2 = zy(r2, e3);
            -1 !== n2 && (r2.splice(n2, 1), this.touchAction.update());
          }
          return this;
        }, e2.on = function(t3, e3) {
          if (void 0 === t3 || void 0 === e3) return this;
          var r2 = this.handlers;
          return _y(Cy(t3), function(t4) {
            r2[t4] = r2[t4] || [], r2[t4].push(e3);
          }), this;
        }, e2.off = function(t3, e3) {
          if (void 0 === t3) return this;
          var r2 = this.handlers;
          return _y(Cy(t3), function(t4) {
            e3 ? r2[t4] && r2[t4].splice(zy(r2[t4], e3), 1) : delete r2[t4];
          }), this;
        }, e2.emit = function(t3, e3) {
          this.options.domEvents && function(t4, e4) {
            var r3 = document.createEvent("Event");
            r3.initEvent(t4, true, true), r3.gesture = e4, e4.target.dispatchEvent(r3);
          }(t3, e3);
          var r2 = this.handlers[t3] && this.handlers[t3].slice();
          if (r2 && r2.length) {
            e3.type = t3, e3.preventDefault = function() {
              e3.srcEvent.preventDefault();
            };
            for (var n2 = 0; n2 < r2.length; ) r2[n2](e3), n2++;
          }
        }, e2.destroy = function() {
          this.element && bg(this, false), this.handlers = {}, this.session = {}, this.input.destroy(), this.element = null;
        }, t2;
      }(), _g = { touchstart: sy, touchmove: 2, touchend: cy, touchcancel: fy }, Tg = function(t2) {
        function e2() {
          var r2, n2 = e2.prototype;
          return n2.evTarget = "touchstart", n2.evWin = "touchstart touchmove touchend touchcancel", (r2 = t2.apply(this, arguments) || this).started = false, r2;
        }
        return Nd(e2, t2), e2.prototype.handler = function(t3) {
          var e3 = _g[t3.type];
          if (e3 === sy && (this.started = true), this.started) {
            var r2 = Eg.call(this, t3, e3);
            e3 & (cy | fy) && r2[0].length - r2[1].length == 0 && (this.started = false), this.callback(this.manager, e3, { pointers: r2[0], changedPointers: r2[1], pointerType: iy, srcEvent: t3 });
          }
        }, e2;
      }(Fy);
      function Eg(t2, e2) {
        var r2 = Xy(t2.touches), n2 = Xy(t2.changedTouches);
        return e2 & (cy | fy) && (r2 = Vy(r2.concat(n2), "identifier", true)), [r2, n2];
      }
      function Og(t2, e2, r2) {
        var n2 = "DEPRECATED METHOD: " + e2 + "\n" + r2 + " AT \n";
        return function() {
          var e3 = new Error("get-stack-trace"), r3 = e3 && e3.stack ? e3.stack.replace(/^[^\(]+?[\n$]/gm, "").replace(/^\s+at\s+/gm, "").replace(/^Object.<anonymous>\s*\(/gm, "{anonymous}()@") : "Unknown Stack Trace", o2 = window.console && (window.console.warn || window.console.log);
          return o2 && o2.call(window.console, n2, r3), t2.apply(this, arguments);
        };
      }
      var Sg = Og(function(t2, e2, r2) {
        for (var n2 = Object.keys(e2), o2 = 0; o2 < n2.length; ) (!r2 || r2 && void 0 === t2[n2[o2]]) && (t2[n2[o2]] = e2[n2[o2]]), o2++;
        return t2;
      }, "extend", "Use `assign`."), xg = Og(function(t2, e2) {
        return Sg(t2, e2, true);
      }, "merge", "Use `assign`.");
      function kg(t2, e2, r2) {
        var n2, o2 = e2.prototype;
        (n2 = t2.prototype = Object.create(o2)).constructor = t2, n2._super = o2, r2 && Ud(n2, r2);
      }
      function jg(t2, e2) {
        return function() {
          return t2.apply(e2, arguments);
        };
      }
      var Ag = function() {
        var t2 = function(t3, e2) {
          return void 0 === e2 && (e2 = {}), new wg(t3, Md({ recognizers: mg.concat() }, e2));
        };
        return t2.VERSION = "2.0.17-rc", t2.DIRECTION_ALL = my, t2.DIRECTION_DOWN = dy, t2.DIRECTION_LEFT = hy, t2.DIRECTION_RIGHT = py, t2.DIRECTION_UP = vy, t2.DIRECTION_HORIZONTAL = yy, t2.DIRECTION_VERTICAL = gy, t2.DIRECTION_NONE = ly, t2.DIRECTION_DOWN = dy, t2.INPUT_START = sy, t2.INPUT_MOVE = 2, t2.INPUT_END = cy, t2.INPUT_CANCEL = fy, t2.STATE_POSSIBLE = 1, t2.STATE_BEGAN = 2, t2.STATE_CHANGED = 4, t2.STATE_ENDED = 8, t2.STATE_RECOGNIZED = 8, t2.STATE_CANCELLED = 16, t2.STATE_FAILED = og, t2.Manager = wg, t2.Input = Fy, t2.TouchAction = Oy, t2.TouchInput = Hy, t2.MouseInput = $y, t2.PointerEventInput = Gy, t2.TouchMouseInput = rg, t2.SingleTouchInput = Tg, t2.Recognizer = sg, t2.AttrRecognizer = fg, t2.Tap = cg, t2.Pan = hg, t2.Swipe = pg, t2.Pinch = vg, t2.Rotate = dg, t2.Press = yg, t2.on = Ry, t2.off = My, t2.each = _y, t2.merge = xg, t2.extend = Sg, t2.bindFn = jg, t2.assign = Ud, t2.inherit = kg, t2.bindFn = jg, t2.prefixed = Vd, t2.toArray = Xy, t2.inArray = zy, t2.uniqueArray = Vy, t2.splitStr = Cy, t2.boolOrFn = Ty, t2.hasParent = Sy, t2.addEventListeners = Ry, t2.removeEventListeners = My, t2.defaults = Ud({}, gg, { preset: mg }), t2;
      }();
      function Pg(t2, e2) {
        var r2 = void 0 !== Rp && Xh(t2) || t2["@@iterator"];
        if (!r2) {
          if (Kp(t2) || (r2 = function(t3, e3) {
            var r3;
            if (!t3) return;
            if ("string" == typeof t3) return Ig(t3, e3);
            var n3 = qp(r3 = Object.prototype.toString.call(t3)).call(r3, 8, -1);
            "Object" === n3 && t3.constructor && (n3 = t3.constructor.name);
            if ("Map" === n3 || "Set" === n3) return Wh(t3);
            if ("Arguments" === n3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3)) return Ig(t3, e3);
          }(t2)) || e2 && t2 && "number" == typeof t2.length) {
            r2 && (t2 = r2);
            var n2 = 0, o2 = function() {
            };
            return { s: o2, n: function() {
              return n2 >= t2.length ? { done: true } : { done: false, value: t2[n2++] };
            }, e: function(t3) {
              throw t3;
            }, f: o2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var i2, a2 = true, u2 = false;
        return { s: function() {
          r2 = r2.call(t2);
        }, n: function() {
          var t3 = r2.next();
          return a2 = t3.done, t3;
        }, e: function(t3) {
          u2 = true, i2 = t3;
        }, f: function() {
          try {
            a2 || null == r2.return || r2.return();
          } finally {
            if (u2) throw i2;
          }
        } };
      }
      function Ig(t2, e2) {
        (null == e2 || e2 > t2.length) && (e2 = t2.length);
        for (var r2 = 0, n2 = new Array(e2); r2 < e2; r2++) n2[r2] = t2[r2];
        return n2;
      }
      var Dg = Rp("DELETE");
      function Lg() {
        var t2 = Cg.apply(void 0, arguments);
        return Mg(t2), t2;
      }
      function Cg() {
        for (var t2 = arguments.length, e2 = new Array(t2), r2 = 0; r2 < t2; r2++) e2[r2] = arguments[r2];
        if (e2.length < 2) return e2[0];
        var n2;
        if (e2.length > 2) return Cg.apply(void 0, Up(n2 = [Lg(e2[0], e2[1])]).call(n2, Cp(qp(e2).call(e2, 2))));
        var o2 = e2[0], i2 = e2[1];
        if (o2 instanceof Date && i2 instanceof Date) return o2.setTime(i2.getTime()), o2;
        var a2, u2 = Pg(Hp(i2));
        try {
          for (u2.s(); !(a2 = u2.n()).done; ) {
            var s2 = a2.value;
            Object.prototype.propertyIsEnumerable.call(i2, s2) && (i2[s2] === Dg ? delete o2[s2] : null === o2[s2] || null === i2[s2] || "object" != typeof o2[s2] || "object" != typeof i2[s2] || Kp(o2[s2]) || Kp(i2[s2]) ? o2[s2] = Rg(i2[s2]) : o2[s2] = Cg(o2[s2], i2[s2]));
          }
        } catch (t3) {
          u2.e(t3);
        } finally {
          u2.f();
        }
        return o2;
      }
      function Rg(t2) {
        return Kp(t2) ? Nl(t2).call(t2, function(t3) {
          return Rg(t3);
        }) : "object" == typeof t2 && null !== t2 ? t2 instanceof Date ? new Date(t2.getTime()) : Cg({}, t2) : t2;
      }
      function Mg(t2) {
        for (var e2 = 0, r2 = Qp(t2); e2 < r2.length; e2++) {
          var n2 = r2[e2];
          t2[n2] === Dg ? delete t2[n2] : "object" == typeof t2[n2] && null !== t2[n2] && Mg(t2[n2]);
        }
      }
      var Ng = "undefined" != typeof window ? window.Hammer || Ag : function() {
        return /* @__PURE__ */ function() {
          var t2 = function() {
          };
          return { on: t2, off: t2, destroy: t2, emit: t2, get: () => ({ set: t2 }) };
        }();
      };
      function Fg(t2) {
        var e2, r2 = this;
        this._cleanupQueue = [], this.active = false, this._dom = { container: t2, overlay: document.createElement("div") }, this._dom.overlay.classList.add("vis-overlay"), this._dom.container.appendChild(this._dom.overlay), this._cleanupQueue.push(function() {
          r2._dom.overlay.parentNode.removeChild(r2._dom.overlay);
        });
        var n2 = Ng(this._dom.overlay);
        n2.on("tap", cl(e2 = this._onTapOverlay).call(e2, this)), this._cleanupQueue.push(function() {
          n2.destroy();
        });
        var o2 = ["tap", "doubletap", "press", "pinch", "pan", "panstart", "panmove", "panend"];
        cv(o2).call(o2, function(t3) {
          n2.on(t3, function(t4) {
            t4.srcEvent.stopPropagation();
          });
        }), document && document.body && (this._onClick = function(e3) {
          (function(t3, e4) {
            for (; t3; ) {
              if (t3 === e4) return true;
              t3 = t3.parentNode;
            }
            return false;
          })(e3.target, t2) || r2.deactivate();
        }, document.body.addEventListener("click", this._onClick), this._cleanupQueue.push(function() {
          document.body.removeEventListener("click", r2._onClick);
        })), this._escListener = function(t3) {
          ("key" in t3 ? "Escape" === t3.key : 27 === t3.keyCode) && r2.deactivate();
        };
      }
      Rd(Fg.prototype), Fg.current = null, Fg.prototype.destroy = function() {
        var t2, e2;
        this.deactivate();
        var r2, n2 = Pg(bv(t2 = Uv(e2 = this._cleanupQueue).call(e2, 0)).call(t2));
        try {
          for (n2.s(); !(r2 = n2.n()).done; ) {
            (0, r2.value)();
          }
        } catch (t3) {
          n2.e(t3);
        } finally {
          n2.f();
        }
      }, Fg.prototype.activate = function() {
        Fg.current && Fg.current.deactivate(), Fg.current = this, this.active = true, this._dom.overlay.style.display = "none", this._dom.container.classList.add("vis-active"), this.emit("change"), this.emit("activate"), document.body.addEventListener("keydown", this._escListener);
      }, Fg.prototype.deactivate = function() {
        this.active = false, this._dom.overlay.style.display = "block", this._dom.container.classList.remove("vis-active"), document.body.removeEventListener("keydown", this._escListener), this.emit("change"), this.emit("deactivate");
      }, Fg.prototype._onTapOverlay = function(t2) {
        this.activate(), t2.srcEvent.stopPropagation();
      };
      var zg = jn, Ug = At, qg = TypeError, Wg = function(t2) {
        if (zg(t2)) return t2;
        throw new qg(Ug(t2) + " is not a constructor");
      }, Yg = Pr, Gg = p, Xg = Zf, Vg = Wg, Bg = or, Hg = rt, Kg = Ko, Jg = u, $g = st("Reflect", "construct"), Qg = Object.prototype, Zg = [].push, tm = Jg(function() {
        function t2() {
        }
        return !($g(function() {
        }, [], t2) instanceof t2);
      }), em = !Jg(function() {
        $g(function() {
        });
      }), rm = tm || em;
      Yg({ target: "Reflect", stat: true, forced: rm, sham: rm }, { construct: function(t2, e2) {
        Vg(t2), Bg(e2);
        var r2 = arguments.length < 3 ? t2 : Vg(arguments[2]);
        if (em && !tm) return $g(t2, e2, r2);
        if (t2 === r2) {
          switch (e2.length) {
            case 0:
              return new t2();
            case 1:
              return new t2(e2[0]);
            case 2:
              return new t2(e2[0], e2[1]);
            case 3:
              return new t2(e2[0], e2[1], e2[2]);
            case 4:
              return new t2(e2[0], e2[1], e2[2], e2[3]);
          }
          var n2 = [null];
          return Gg(Zg, n2, e2), new (Gg(Xg, t2, n2))();
        }
        var o2 = r2.prototype, i2 = Kg(Hg(o2) ? o2 : Qg), a2 = Gg(t2, i2, e2);
        return Hg(a2) ? a2 : i2;
      } });
      var nm = n(nt.Reflect.construct), om = n(nt.Object.getOwnPropertySymbols), im = { exports: {} }, am = Pr, um = u, sm = Z, cm = P.f, fm = I;
      am({ target: "Object", stat: true, forced: !fm || um(function() {
        cm(1);
      }), sham: !fm }, { getOwnPropertyDescriptor: function(t2, e2) {
        return cm(sm(t2), e2);
      } });
      var lm = nt.Object, hm = im.exports = function(t2, e2) {
        return lm.getOwnPropertyDescriptor(t2, e2);
      };
      lm.getOwnPropertyDescriptor.sham && (hm.sham = true);
      var pm = n(im.exports), vm = Bp, dm = Z, ym = P, gm = tn;
      Pr({ target: "Object", stat: true, sham: !I }, { getOwnPropertyDescriptors: function(t2) {
        for (var e2, r2, n2 = dm(t2), o2 = ym.f, i2 = vm(n2), a2 = {}, u2 = 0; i2.length > u2; ) void 0 !== (r2 = o2(n2, e2 = i2[u2++])) && gm(a2, e2, r2);
        return a2;
      } });
      var mm = n(nt.Object.getOwnPropertyDescriptors), bm = { exports: {} }, wm = Pr, _m = I, Tm = no.f;
      wm({ target: "Object", stat: true, forced: Object.defineProperties !== Tm, sham: !_m }, { defineProperties: Tm });
      var Em = nt.Object, Om = bm.exports = function(t2, e2) {
        return Em.defineProperties(t2, e2);
      };
      Em.defineProperties.sham && (Om.sham = true);
      var Sm = n(bm.exports), xm = n(Mr);
      function km(t2) {
        if (void 0 === t2) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t2;
      }
      var jm = ud, Am = n(jm);
      Pr({ target: "Object", stat: true }, { setPrototypeOf: uc });
      var Pm = nt.Object.setPrototypeOf, Im = n(Pm), Dm = n(sl);
      function Lm(t2, e2) {
        var r2;
        return Lm = Im ? Dm(r2 = Im).call(r2) : function(t3, e3) {
          return t3.__proto__ = e3, t3;
        }, Lm(t2, e2);
      }
      function Cm(t2, e2) {
        if ("function" != typeof e2 && null !== e2) throw new TypeError("Super expression must either be null or a function");
        t2.prototype = Am(e2 && e2.prototype, { constructor: { value: t2, writable: true, configurable: true } }), Fr(t2, "prototype", { writable: false }), e2 && Lm(t2, e2);
      }
      function Rm(t2, e2) {
        if (e2 && ("object" === Nf(e2) || "function" == typeof e2)) return e2;
        if (void 0 !== e2) throw new TypeError("Derived constructors may only return object or undefined");
        return km(t2);
      }
      var Mm = id, Nm = n(Mm);
      function Fm(t2) {
        var e2;
        return Fm = Im ? Dm(e2 = Nm).call(e2) : function(t3) {
          return t3.__proto__ || Nm(t3);
        }, Fm(t2);
      }
      var zm = { exports: {} }, Um = { exports: {} };
      !function(t2) {
        var e2 = yf, r2 = Rf;
        function n2(o2) {
          return t2.exports = n2 = "function" == typeof e2 && "symbol" == typeof r2 ? function(t3) {
            return typeof t3;
          } : function(t3) {
            return t3 && "function" == typeof e2 && t3.constructor === e2 && t3 !== e2.prototype ? "symbol" : typeof t3;
          }, t2.exports.__esModule = true, t2.exports.default = t2.exports, n2(o2);
        }
        t2.exports = n2, t2.exports.__esModule = true, t2.exports.default = t2.exports;
      }(Um);
      var qm = Um.exports, Wm = sv, Ym = te, Gm = Bp, Xm = P, Vm = Ze, Bm = rt, Hm = mr, Km = Error, Jm = m("".replace), $m = String(new Km("zxcasd").stack), Qm = /\n\s*at [^:]*:[^\n]*/, Zm = Qm.test($m), tb = q, eb = !u(function() {
        var t2 = new Error("a");
        return !("stack" in t2) || (Object.defineProperty(t2, "stack", tb(1, 7)), 7 !== t2.stack);
      }), rb = mr, nb = function(t2, e2) {
        if (Zm && "string" == typeof t2 && !Km.prepareStackTrace) for (; e2--; ) t2 = Jm(t2, Qm, "");
        return t2;
      }, ob = eb, ib = Error.captureStackTrace, ab = Qe, ub = C, sb = or, cb = At, fb = fh, lb = Hr, hb = ct, pb = Eh, vb = yh, db = oh, yb = TypeError, gb = function(t2, e2) {
        this.stopped = t2, this.result = e2;
      }, mb = gb.prototype, bb = function(t2, e2, r2) {
        var n2, o2, i2, a2, u2, s2, c2, f2 = r2 && r2.that, l2 = !(!r2 || !r2.AS_ENTRIES), h2 = !(!r2 || !r2.IS_RECORD), p2 = !(!r2 || !r2.IS_ITERATOR), v2 = !(!r2 || !r2.INTERRUPTED), d2 = ab(e2, f2), y2 = function(t3) {
          return n2 && db(n2, "normal", t3), new gb(true, t3);
        }, g2 = function(t3) {
          return l2 ? (sb(t3), v2 ? d2(t3[0], t3[1], y2) : d2(t3[0], t3[1])) : v2 ? d2(t3, y2) : d2(t3);
        };
        if (h2) n2 = t2.iterator;
        else if (p2) n2 = t2;
        else {
          if (!(o2 = vb(t2))) throw new yb(cb(t2) + " is not iterable");
          if (fb(o2)) {
            for (i2 = 0, a2 = lb(t2); a2 > i2; i2++) if ((u2 = g2(t2[i2])) && hb(mb, u2)) return u2;
            return new gb(false);
          }
          n2 = pb(t2, o2);
        }
        for (s2 = h2 ? t2.next : n2.next; !(c2 = ub(s2, n2)).done; ) {
          try {
            u2 = g2(c2.value);
          } catch (t3) {
            db(n2, "throw", t3);
          }
          if ("object" == typeof u2 && u2 && hb(mb, u2)) return u2;
        }
        return new gb(false);
      }, wb = ro, _b = Pr, Tb = ct, Eb = Ms, Ob = uc, Sb = function(t2, e2, r2) {
        for (var n2 = Gm(e2), o2 = Vm.f, i2 = Xm.f, a2 = 0; a2 < n2.length; a2++) {
          var u2 = n2[a2];
          Ym(t2, u2) || r2 && Ym(r2, u2) || o2(t2, u2, i2(e2, u2));
        }
      }, xb = Ko, kb = mr, jb = q, Ab = function(t2, e2) {
        Bm(e2) && "cause" in e2 && Hm(t2, "cause", e2.cause);
      }, Pb = function(t2, e2, r2, n2) {
        ob && (ib ? ib(t2, e2) : rb(t2, "stack", nb(r2, n2)));
      }, Ib = bb, Db = function(t2, e2) {
        return void 0 === t2 ? arguments.length < 2 ? "" : e2 : wb(t2);
      }, Lb = ve("toStringTag"), Cb = Error, Rb = [].push, Mb = function(t2, e2) {
        var r2, n2 = Tb(Nb, this);
        Ob ? r2 = Ob(new Cb(), n2 ? Eb(this) : Nb) : (r2 = n2 ? this : xb(Nb), kb(r2, Lb, "Error")), void 0 !== e2 && kb(r2, "message", Db(e2)), Pb(r2, Mb, r2.stack, 1), arguments.length > 2 && Ab(r2, arguments[2]);
        var o2 = [];
        return Ib(t2, Rb, { that: o2 }), kb(r2, "errors", o2), r2;
      };
      Ob ? Ob(Mb, Cb) : Sb(Mb, Cb, { name: true });
      var Nb = Mb.prototype = xb(Cb.prototype, { constructor: jb(1, Mb), message: jb(1, ""), name: jb(1, "AggregateError") });
      _b({ global: true, constructor: true, arity: 2 }, { AggregateError: Mb });
      var Fb, zb, Ub, qb, Wb = st, Yb = di, Gb = I, Xb = ve("species"), Vb = function(t2) {
        var e2 = Wb(t2);
        Gb && e2 && !e2[Xb] && Yb(e2, Xb, { configurable: true, get: function() {
          return this;
        } });
      }, Bb = ct, Hb = TypeError, Kb = function(t2, e2) {
        if (Bb(e2, t2)) return t2;
        throw new Hb("Incorrect invocation");
      }, Jb = or, $b = Wg, Qb = B, Zb = ve("species"), tw = function(t2, e2) {
        var r2, n2 = Jb(t2).constructor;
        return void 0 === n2 || Qb(r2 = Jb(n2)[Zb]) ? e2 : $b(r2);
      }, ew = /(?:ipad|iphone|ipod).*applewebkit/i.test(ft), rw = a, nw = p, ow = Qe, iw = A, aw = te, uw = u, sw = Do, cw = Ru, fw = je, lw = dd, hw = ew, pw = bl, vw = rw.setImmediate, dw = rw.clearImmediate, yw = rw.process, gw = rw.Dispatch, mw = rw.Function, bw = rw.MessageChannel, ww = rw.String, _w = 0, Tw = {}, Ew = "onreadystatechange";
      uw(function() {
        Fb = rw.location;
      });
      var Ow = function(t2) {
        if (aw(Tw, t2)) {
          var e2 = Tw[t2];
          delete Tw[t2], e2();
        }
      }, Sw = function(t2) {
        return function() {
          Ow(t2);
        };
      }, xw = function(t2) {
        Ow(t2.data);
      }, kw = function(t2) {
        rw.postMessage(ww(t2), Fb.protocol + "//" + Fb.host);
      };
      vw && dw || (vw = function(t2) {
        lw(arguments.length, 1);
        var e2 = iw(t2) ? t2 : mw(t2), r2 = cw(arguments, 1);
        return Tw[++_w] = function() {
          nw(e2, void 0, r2);
        }, zb(_w), _w;
      }, dw = function(t2) {
        delete Tw[t2];
      }, pw ? zb = function(t2) {
        yw.nextTick(Sw(t2));
      } : gw && gw.now ? zb = function(t2) {
        gw.now(Sw(t2));
      } : bw && !hw ? (qb = (Ub = new bw()).port2, Ub.port1.onmessage = xw, zb = ow(qb.postMessage, qb)) : rw.addEventListener && iw(rw.postMessage) && !rw.importScripts && Fb && "file:" !== Fb.protocol && !uw(kw) ? (zb = kw, rw.addEventListener("message", xw, false)) : zb = Ew in fw("script") ? function(t2) {
        sw.appendChild(fw("script"))[Ew] = function() {
          sw.removeChild(this), Ow(t2);
        };
      } : function(t2) {
        setTimeout(Sw(t2), 0);
      });
      var jw = { set: vw, clear: dw }, Aw = function() {
        this.head = null, this.tail = null;
      };
      Aw.prototype = { add: function(t2) {
        var e2 = { item: t2, next: null }, r2 = this.tail;
        r2 ? r2.next = e2 : this.head = e2, this.tail = e2;
      }, get: function() {
        var t2 = this.head;
        if (t2) return null === (this.head = t2.next) && (this.tail = null), t2.item;
      } };
      var Pw, Iw, Dw, Lw, Cw, Rw = Aw, Mw = /ipad|iphone|ipod/i.test(ft) && "undefined" != typeof Pebble, Nw = /web0s(?!.*chrome)/i.test(ft), Fw = a, zw = Qe, Uw = P.f, qw = jw.set, Ww = Rw, Yw = ew, Gw = Mw, Xw = Nw, Vw = bl, Bw = Fw.MutationObserver || Fw.WebKitMutationObserver, Hw = Fw.document, Kw = Fw.process, Jw = Fw.Promise, $w = Uw(Fw, "queueMicrotask"), Qw = $w && $w.value;
      if (!Qw) {
        var Zw = new Ww(), t_ = function() {
          var t2, e2;
          for (Vw && (t2 = Kw.domain) && t2.exit(); e2 = Zw.get(); ) try {
            e2();
          } catch (t3) {
            throw Zw.head && Pw(), t3;
          }
          t2 && t2.enter();
        };
        Yw || Vw || Xw || !Bw || !Hw ? !Gw && Jw && Jw.resolve ? ((Lw = Jw.resolve(void 0)).constructor = Jw, Cw = zw(Lw.then, Lw), Pw = function() {
          Cw(t_);
        }) : Vw ? Pw = function() {
          Kw.nextTick(t_);
        } : (qw = zw(qw, Fw), Pw = function() {
          qw(t_);
        }) : (Iw = true, Dw = Hw.createTextNode(""), new Bw(t_).observe(Dw, { characterData: true }), Pw = function() {
          Dw.data = Iw = !Iw;
        }), Qw = function(t2) {
          Zw.head || Pw(), Zw.add(t2);
        };
      }
      var e_ = Qw, r_ = function(t2) {
        try {
          return { error: false, value: t2() };
        } catch (t3) {
          return { error: true, value: t3 };
        }
      }, n_ = a.Promise, o_ = "object" == typeof Deno && Deno && "object" == typeof Deno.version, i_ = !o_ && !bl && "object" == typeof window && "object" == typeof document, a_ = a, u_ = n_, s_ = A, c_ = He, f_ = vn, l_ = ve, h_ = i_, p_ = o_, v_ = gt, d_ = u_ && u_.prototype, y_ = l_("species"), g_ = false, m_ = s_(a_.PromiseRejectionEvent), b_ = c_("Promise", function() {
        var t2 = f_(u_), e2 = t2 !== String(u_);
        if (!e2 && 66 === v_) return true;
        if (!d_.catch || !d_.finally) return true;
        if (!v_ || v_ < 51 || !/native code/.test(t2)) {
          var r2 = new u_(function(t3) {
            t3(1);
          }), n2 = function(t3) {
            t3(function() {
            }, function() {
            });
          };
          if ((r2.constructor = {})[y_] = n2, !(g_ = r2.then(function() {
          }) instanceof n2)) return true;
        }
        return !e2 && (h_ || p_) && !m_;
      }), w_ = { CONSTRUCTOR: b_, REJECTION_EVENT: m_, SUBCLASSING: g_ }, __ = {}, T_ = Lt, E_ = TypeError, O_ = function(t2) {
        var e2, r2;
        this.promise = new t2(function(t3, n2) {
          if (void 0 !== e2 || void 0 !== r2) throw new E_("Bad Promise constructor");
          e2 = t3, r2 = n2;
        }), this.resolve = T_(e2), this.reject = T_(r2);
      };
      __.f = function(t2) {
        return new O_(t2);
      };
      var S_, x_, k_ = Pr, j_ = bl, A_ = a, P_ = C, I_ = pi, D_ = zi, L_ = Vb, C_ = Lt, R_ = A, M_ = rt, N_ = Kb, F_ = tw, z_ = jw.set, U_ = e_, q_ = function(t2, e2) {
        try {
          1 === arguments.length ? console.error(t2) : console.error(t2, e2);
        } catch (t3) {
        }
      }, W_ = r_, Y_ = Rw, G_ = ea, X_ = n_, V_ = w_, B_ = __, H_ = "Promise", K_ = V_.CONSTRUCTOR, J_ = V_.REJECTION_EVENT, $_ = G_.getterFor(H_), Q_ = G_.set, Z_ = X_ && X_.prototype, tT = X_, eT = Z_, rT = A_.TypeError, nT = A_.document, oT = A_.process, iT = B_.f, aT = iT, uT = !!(nT && nT.createEvent && A_.dispatchEvent), sT = "unhandledrejection", cT = function(t2) {
        var e2;
        return !(!M_(t2) || !R_(e2 = t2.then)) && e2;
      }, fT = function(t2, e2) {
        var r2, n2, o2, i2 = e2.value, a2 = 1 === e2.state, u2 = a2 ? t2.ok : t2.fail, s2 = t2.resolve, c2 = t2.reject, f2 = t2.domain;
        try {
          u2 ? (a2 || (2 === e2.rejection && dT(e2), e2.rejection = 1), true === u2 ? r2 = i2 : (f2 && f2.enter(), r2 = u2(i2), f2 && (f2.exit(), o2 = true)), r2 === t2.promise ? c2(new rT("Promise-chain cycle")) : (n2 = cT(r2)) ? P_(n2, r2, s2, c2) : s2(r2)) : c2(i2);
        } catch (t3) {
          f2 && !o2 && f2.exit(), c2(t3);
        }
      }, lT = function(t2, e2) {
        t2.notified || (t2.notified = true, U_(function() {
          for (var r2, n2 = t2.reactions; r2 = n2.get(); ) fT(r2, t2);
          t2.notified = false, e2 && !t2.rejection && pT(t2);
        }));
      }, hT = function(t2, e2, r2) {
        var n2, o2;
        uT ? ((n2 = nT.createEvent("Event")).promise = e2, n2.reason = r2, n2.initEvent(t2, false, true), A_.dispatchEvent(n2)) : n2 = { promise: e2, reason: r2 }, !J_ && (o2 = A_["on" + t2]) ? o2(n2) : t2 === sT && q_("Unhandled promise rejection", r2);
      }, pT = function(t2) {
        P_(z_, A_, function() {
          var e2, r2 = t2.facade, n2 = t2.value;
          if (vT(t2) && (e2 = W_(function() {
            j_ ? oT.emit("unhandledRejection", n2, r2) : hT(sT, r2, n2);
          }), t2.rejection = j_ || vT(t2) ? 2 : 1, e2.error)) throw e2.value;
        });
      }, vT = function(t2) {
        return 1 !== t2.rejection && !t2.parent;
      }, dT = function(t2) {
        P_(z_, A_, function() {
          var e2 = t2.facade;
          j_ ? oT.emit("rejectionHandled", e2) : hT("rejectionhandled", e2, t2.value);
        });
      }, yT = function(t2, e2, r2) {
        return function(n2) {
          t2(e2, n2, r2);
        };
      }, gT = function(t2, e2, r2) {
        t2.done || (t2.done = true, r2 && (t2 = r2), t2.value = e2, t2.state = 2, lT(t2, true));
      }, mT = function(t2, e2, r2) {
        if (!t2.done) {
          t2.done = true, r2 && (t2 = r2);
          try {
            if (t2.facade === e2) throw new rT("Promise can't be resolved itself");
            var n2 = cT(e2);
            n2 ? U_(function() {
              var r3 = { done: false };
              try {
                P_(n2, e2, yT(mT, r3, t2), yT(gT, r3, t2));
              } catch (e3) {
                gT(r3, e3, t2);
              }
            }) : (t2.value = e2, t2.state = 1, lT(t2, false));
          } catch (e3) {
            gT({ done: false }, e3, t2);
          }
        }
      };
      K_ && (eT = (tT = function(t2) {
        N_(this, eT), C_(t2), P_(S_, this);
        var e2 = $_(this);
        try {
          t2(yT(mT, e2), yT(gT, e2));
        } catch (t3) {
          gT(e2, t3);
        }
      }).prototype, (S_ = function(t2) {
        Q_(this, { type: H_, done: false, notified: false, parent: false, reactions: new Y_(), rejection: false, state: 0, value: void 0 });
      }).prototype = I_(eT, "then", function(t2, e2) {
        var r2 = $_(this), n2 = iT(F_(this, tT));
        return r2.parent = true, n2.ok = !R_(t2) || t2, n2.fail = R_(e2) && e2, n2.domain = j_ ? oT.domain : void 0, 0 === r2.state ? r2.reactions.add(n2) : U_(function() {
          fT(n2, r2);
        }), n2.promise;
      }), x_ = function() {
        var t2 = new S_(), e2 = $_(t2);
        this.promise = t2, this.resolve = yT(mT, e2), this.reject = yT(gT, e2);
      }, B_.f = iT = function(t2) {
        return t2 === tT || void 0 === t2 ? new x_(t2) : aT(t2);
      }), k_({ global: true, constructor: true, wrap: true, forced: K_ }, { Promise: tT }), D_(tT, H_, false, true), L_(H_);
      var bT = n_, wT = w_.CONSTRUCTOR || !zh(function(t2) {
        bT.all(t2).then(void 0, function() {
        });
      }), _T = C, TT = Lt, ET = __, OT = r_, ST = bb;
      Pr({ target: "Promise", stat: true, forced: wT }, { all: function(t2) {
        var e2 = this, r2 = ET.f(e2), n2 = r2.resolve, o2 = r2.reject, i2 = OT(function() {
          var r3 = TT(e2.resolve), i3 = [], a2 = 0, u2 = 1;
          ST(t2, function(t3) {
            var s2 = a2++, c2 = false;
            u2++, _T(r3, e2, t3).then(function(t4) {
              c2 || (c2 = true, i3[s2] = t4, --u2 || n2(i3));
            }, o2);
          }), --u2 || n2(i3);
        });
        return i2.error && o2(i2.value), r2.promise;
      } });
      var xT = Pr, kT = w_.CONSTRUCTOR;
      n_ && n_.prototype, xT({ target: "Promise", proto: true, forced: kT, real: true }, { catch: function(t2) {
        return this.then(void 0, t2);
      } });
      var jT = C, AT = Lt, PT = __, IT = r_, DT = bb;
      Pr({ target: "Promise", stat: true, forced: wT }, { race: function(t2) {
        var e2 = this, r2 = PT.f(e2), n2 = r2.reject, o2 = IT(function() {
          var o3 = AT(e2.resolve);
          DT(t2, function(t3) {
            jT(o3, e2, t3).then(r2.resolve, n2);
          });
        });
        return o2.error && n2(o2.value), r2.promise;
      } });
      var LT = C, CT = __;
      Pr({ target: "Promise", stat: true, forced: w_.CONSTRUCTOR }, { reject: function(t2) {
        var e2 = CT.f(this);
        return LT(e2.reject, void 0, t2), e2.promise;
      } });
      var RT = or, MT = rt, NT = __, FT = function(t2, e2) {
        if (RT(t2), MT(e2) && e2.constructor === t2) return e2;
        var r2 = NT.f(t2);
        return (0, r2.resolve)(e2), r2.promise;
      }, zT = Pr, UT = n_, qT = w_.CONSTRUCTOR, WT = FT, YT = st("Promise"), GT = !qT;
      zT({ target: "Promise", stat: true, forced: true }, { resolve: function(t2) {
        return WT(GT && this === YT ? UT : this, t2);
      } });
      var XT = C, VT = Lt, BT = __, HT = r_, KT = bb;
      Pr({ target: "Promise", stat: true, forced: wT }, { allSettled: function(t2) {
        var e2 = this, r2 = BT.f(e2), n2 = r2.resolve, o2 = r2.reject, i2 = HT(function() {
          var r3 = VT(e2.resolve), o3 = [], i3 = 0, a2 = 1;
          KT(t2, function(t3) {
            var u2 = i3++, s2 = false;
            a2++, XT(r3, e2, t3).then(function(t4) {
              s2 || (s2 = true, o3[u2] = { status: "fulfilled", value: t4 }, --a2 || n2(o3));
            }, function(t4) {
              s2 || (s2 = true, o3[u2] = { status: "rejected", reason: t4 }, --a2 || n2(o3));
            });
          }), --a2 || n2(o3);
        });
        return i2.error && o2(i2.value), r2.promise;
      } });
      var JT = C, $T = Lt, QT = st, ZT = __, tE = r_, eE = bb, rE = "No one promise resolved";
      Pr({ target: "Promise", stat: true, forced: wT }, { any: function(t2) {
        var e2 = this, r2 = QT("AggregateError"), n2 = ZT.f(e2), o2 = n2.resolve, i2 = n2.reject, a2 = tE(function() {
          var n3 = $T(e2.resolve), a3 = [], u2 = 0, s2 = 1, c2 = false;
          eE(t2, function(t3) {
            var f2 = u2++, l2 = false;
            s2++, JT(n3, e2, t3).then(function(t4) {
              l2 || c2 || (c2 = true, o2(t4));
            }, function(t4) {
              l2 || c2 || (l2 = true, a3[f2] = t4, --s2 || i2(new r2(a3, rE)));
            });
          }), --s2 || i2(new r2(a3, rE));
        });
        return a2.error && i2(a2.value), n2.promise;
      } });
      var nE = Pr, oE = n_, iE = u, aE = st, uE = A, sE = tw, cE = FT, fE = oE && oE.prototype;
      nE({ target: "Promise", proto: true, real: true, forced: !!oE && iE(function() {
        fE.finally.call({ then: function() {
        } }, function() {
        });
      }) }, { finally: function(t2) {
        var e2 = sE(this, aE("Promise")), r2 = uE(t2);
        return this.then(r2 ? function(r3) {
          return cE(e2, t2()).then(function() {
            return r3;
          });
        } : t2, r2 ? function(r3) {
          return cE(e2, t2()).then(function() {
            throw r3;
          });
        } : t2);
      } });
      var lE = nt.Promise, hE = __;
      Pr({ target: "Promise", stat: true }, { withResolvers: function() {
        var t2 = hE.f(this);
        return { promise: t2.promise, resolve: t2.resolve, reject: t2.reject };
      } });
      var pE = lE, vE = __, dE = r_;
      Pr({ target: "Promise", stat: true, forced: true }, { try: function(t2) {
        var e2 = vE.f(this), r2 = dE(t2);
        return (r2.error ? e2.reject : e2.resolve)(r2.value), e2.promise;
      } });
      var yE = pE, gE = mv;
      !function(t2) {
        var e2 = qm.default, r2 = Nr, n2 = yf, o2 = jm, i2 = Mm, a2 = Wm, u2 = up, s2 = Pm, c2 = yE, f2 = gE, l2 = jp;
        function h2() {
          t2.exports = h2 = function() {
            return v2;
          }, t2.exports.__esModule = true, t2.exports.default = t2.exports;
          var p2, v2 = {}, d2 = Object.prototype, y2 = d2.hasOwnProperty, g2 = r2 || function(t3, e3, r3) {
            t3[e3] = r3.value;
          }, m2 = "function" == typeof n2 ? n2 : {}, b2 = m2.iterator || "@@iterator", w2 = m2.asyncIterator || "@@asyncIterator", _2 = m2.toStringTag || "@@toStringTag";
          function T2(t3, e3, n3) {
            return r2(t3, e3, { value: n3, enumerable: true, configurable: true, writable: true }), t3[e3];
          }
          try {
            T2({}, "");
          } catch (p3) {
            T2 = function(t3, e3, r3) {
              return t3[e3] = r3;
            };
          }
          function E2(t3, e3, r3, n3) {
            var i3 = e3 && e3.prototype instanceof P2 ? e3 : P2, a3 = o2(i3.prototype), u3 = new W2(n3 || []);
            return g2(a3, "_invoke", { value: F2(t3, r3, u3) }), a3;
          }
          function O2(t3, e3, r3) {
            try {
              return { type: "normal", arg: t3.call(e3, r3) };
            } catch (t4) {
              return { type: "throw", arg: t4 };
            }
          }
          v2.wrap = E2;
          var S2 = "suspendedStart", x2 = "suspendedYield", k2 = "executing", j2 = "completed", A2 = {};
          function P2() {
          }
          function I2() {
          }
          function D2() {
          }
          var L2 = {};
          T2(L2, b2, function() {
            return this;
          });
          var C2 = i2 && i2(i2(Y2([])));
          C2 && C2 !== d2 && y2.call(C2, b2) && (L2 = C2);
          var R2 = D2.prototype = P2.prototype = o2(L2);
          function M2(t3) {
            var e3;
            a2(e3 = ["next", "throw", "return"]).call(e3, function(e4) {
              T2(t3, e4, function(t4) {
                return this._invoke(e4, t4);
              });
            });
          }
          function N2(t3, r3) {
            function n3(o4, i3, a3, u3) {
              var s3 = O2(t3[o4], t3, i3);
              if ("throw" !== s3.type) {
                var c3 = s3.arg, f3 = c3.value;
                return f3 && "object" == e2(f3) && y2.call(f3, "__await") ? r3.resolve(f3.__await).then(function(t4) {
                  n3("next", t4, a3, u3);
                }, function(t4) {
                  n3("throw", t4, a3, u3);
                }) : r3.resolve(f3).then(function(t4) {
                  c3.value = t4, a3(c3);
                }, function(t4) {
                  return n3("throw", t4, a3, u3);
                });
              }
              u3(s3.arg);
            }
            var o3;
            g2(this, "_invoke", { value: function(t4, e3) {
              function i3() {
                return new r3(function(r4, o4) {
                  n3(t4, e3, r4, o4);
                });
              }
              return o3 = o3 ? o3.then(i3, i3) : i3();
            } });
          }
          function F2(t3, e3, r3) {
            var n3 = S2;
            return function(o3, i3) {
              if (n3 === k2) throw new Error("Generator is already running");
              if (n3 === j2) {
                if ("throw" === o3) throw i3;
                return { value: p2, done: true };
              }
              for (r3.method = o3, r3.arg = i3; ; ) {
                var a3 = r3.delegate;
                if (a3) {
                  var u3 = z2(a3, r3);
                  if (u3) {
                    if (u3 === A2) continue;
                    return u3;
                  }
                }
                if ("next" === r3.method) r3.sent = r3._sent = r3.arg;
                else if ("throw" === r3.method) {
                  if (n3 === S2) throw n3 = j2, r3.arg;
                  r3.dispatchException(r3.arg);
                } else "return" === r3.method && r3.abrupt("return", r3.arg);
                n3 = k2;
                var s3 = O2(t3, e3, r3);
                if ("normal" === s3.type) {
                  if (n3 = r3.done ? j2 : x2, s3.arg === A2) continue;
                  return { value: s3.arg, done: r3.done };
                }
                "throw" === s3.type && (n3 = j2, r3.method = "throw", r3.arg = s3.arg);
              }
            };
          }
          function z2(t3, e3) {
            var r3 = e3.method, n3 = t3.iterator[r3];
            if (n3 === p2) return e3.delegate = null, "throw" === r3 && t3.iterator.return && (e3.method = "return", e3.arg = p2, z2(t3, e3), "throw" === e3.method) || "return" !== r3 && (e3.method = "throw", e3.arg = new TypeError("The iterator does not provide a '" + r3 + "' method")), A2;
            var o3 = O2(n3, t3.iterator, e3.arg);
            if ("throw" === o3.type) return e3.method = "throw", e3.arg = o3.arg, e3.delegate = null, A2;
            var i3 = o3.arg;
            return i3 ? i3.done ? (e3[t3.resultName] = i3.value, e3.next = t3.nextLoc, "return" !== e3.method && (e3.method = "next", e3.arg = p2), e3.delegate = null, A2) : i3 : (e3.method = "throw", e3.arg = new TypeError("iterator result is not an object"), e3.delegate = null, A2);
          }
          function U2(t3) {
            var e3, r3 = { tryLoc: t3[0] };
            1 in t3 && (r3.catchLoc = t3[1]), 2 in t3 && (r3.finallyLoc = t3[2], r3.afterLoc = t3[3]), u2(e3 = this.tryEntries).call(e3, r3);
          }
          function q2(t3) {
            var e3 = t3.completion || {};
            e3.type = "normal", delete e3.arg, t3.completion = e3;
          }
          function W2(t3) {
            this.tryEntries = [{ tryLoc: "root" }], a2(t3).call(t3, U2, this), this.reset(true);
          }
          function Y2(t3) {
            if (t3 || "" === t3) {
              var r3 = t3[b2];
              if (r3) return r3.call(t3);
              if ("function" == typeof t3.next) return t3;
              if (!isNaN(t3.length)) {
                var n3 = -1, o3 = function e3() {
                  for (; ++n3 < t3.length; ) if (y2.call(t3, n3)) return e3.value = t3[n3], e3.done = false, e3;
                  return e3.value = p2, e3.done = true, e3;
                };
                return o3.next = o3;
              }
            }
            throw new TypeError(e2(t3) + " is not iterable");
          }
          return I2.prototype = D2, g2(R2, "constructor", { value: D2, configurable: true }), g2(D2, "constructor", { value: I2, configurable: true }), I2.displayName = T2(D2, _2, "GeneratorFunction"), v2.isGeneratorFunction = function(t3) {
            var e3 = "function" == typeof t3 && t3.constructor;
            return !!e3 && (e3 === I2 || "GeneratorFunction" === (e3.displayName || e3.name));
          }, v2.mark = function(t3) {
            return s2 ? s2(t3, D2) : (t3.__proto__ = D2, T2(t3, _2, "GeneratorFunction")), t3.prototype = o2(R2), t3;
          }, v2.awrap = function(t3) {
            return { __await: t3 };
          }, M2(N2.prototype), T2(N2.prototype, w2, function() {
            return this;
          }), v2.AsyncIterator = N2, v2.async = function(t3, e3, r3, n3, o3) {
            void 0 === o3 && (o3 = c2);
            var i3 = new N2(E2(t3, e3, r3, n3), o3);
            return v2.isGeneratorFunction(e3) ? i3 : i3.next().then(function(t4) {
              return t4.done ? t4.value : i3.next();
            });
          }, M2(R2), T2(R2, _2, "Generator"), T2(R2, b2, function() {
            return this;
          }), T2(R2, "toString", function() {
            return "[object Generator]";
          }), v2.keys = function(t3) {
            var e3 = Object(t3), r3 = [];
            for (var n3 in e3) u2(r3).call(r3, n3);
            return f2(r3).call(r3), function t4() {
              for (; r3.length; ) {
                var n4 = r3.pop();
                if (n4 in e3) return t4.value = n4, t4.done = false, t4;
              }
              return t4.done = true, t4;
            };
          }, v2.values = Y2, W2.prototype = { constructor: W2, reset: function(t3) {
            var e3;
            if (this.prev = 0, this.next = 0, this.sent = this._sent = p2, this.done = false, this.delegate = null, this.method = "next", this.arg = p2, a2(e3 = this.tryEntries).call(e3, q2), !t3) for (var r3 in this) "t" === r3.charAt(0) && y2.call(this, r3) && !isNaN(+l2(r3).call(r3, 1)) && (this[r3] = p2);
          }, stop: function() {
            this.done = true;
            var t3 = this.tryEntries[0].completion;
            if ("throw" === t3.type) throw t3.arg;
            return this.rval;
          }, dispatchException: function(t3) {
            if (this.done) throw t3;
            var e3 = this;
            function r3(r4, n4) {
              return i3.type = "throw", i3.arg = t3, e3.next = r4, n4 && (e3.method = "next", e3.arg = p2), !!n4;
            }
            for (var n3 = this.tryEntries.length - 1; n3 >= 0; --n3) {
              var o3 = this.tryEntries[n3], i3 = o3.completion;
              if ("root" === o3.tryLoc) return r3("end");
              if (o3.tryLoc <= this.prev) {
                var a3 = y2.call(o3, "catchLoc"), u3 = y2.call(o3, "finallyLoc");
                if (a3 && u3) {
                  if (this.prev < o3.catchLoc) return r3(o3.catchLoc, true);
                  if (this.prev < o3.finallyLoc) return r3(o3.finallyLoc);
                } else if (a3) {
                  if (this.prev < o3.catchLoc) return r3(o3.catchLoc, true);
                } else {
                  if (!u3) throw new Error("try statement without catch or finally");
                  if (this.prev < o3.finallyLoc) return r3(o3.finallyLoc);
                }
              }
            }
          }, abrupt: function(t3, e3) {
            for (var r3 = this.tryEntries.length - 1; r3 >= 0; --r3) {
              var n3 = this.tryEntries[r3];
              if (n3.tryLoc <= this.prev && y2.call(n3, "finallyLoc") && this.prev < n3.finallyLoc) {
                var o3 = n3;
                break;
              }
            }
            o3 && ("break" === t3 || "continue" === t3) && o3.tryLoc <= e3 && e3 <= o3.finallyLoc && (o3 = null);
            var i3 = o3 ? o3.completion : {};
            return i3.type = t3, i3.arg = e3, o3 ? (this.method = "next", this.next = o3.finallyLoc, A2) : this.complete(i3);
          }, complete: function(t3, e3) {
            if ("throw" === t3.type) throw t3.arg;
            return "break" === t3.type || "continue" === t3.type ? this.next = t3.arg : "return" === t3.type ? (this.rval = this.arg = t3.arg, this.method = "return", this.next = "end") : "normal" === t3.type && e3 && (this.next = e3), A2;
          }, finish: function(t3) {
            for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
              var r3 = this.tryEntries[e3];
              if (r3.finallyLoc === t3) return this.complete(r3.completion, r3.afterLoc), q2(r3), A2;
            }
          }, catch: function(t3) {
            for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
              var r3 = this.tryEntries[e3];
              if (r3.tryLoc === t3) {
                var n3 = r3.completion;
                if ("throw" === n3.type) {
                  var o3 = n3.arg;
                  q2(r3);
                }
                return o3;
              }
            }
            throw new Error("illegal catch attempt");
          }, delegateYield: function(t3, e3, r3) {
            return this.delegate = { iterator: Y2(t3), resultName: e3, nextLoc: r3 }, "next" === this.method && (this.arg = p2), A2;
          } }, v2;
        }
        t2.exports = h2, t2.exports.__esModule = true, t2.exports.default = t2.exports;
      }(zm);
      var mE = (0, zm.exports)(), bE = mE;
      try {
        regeneratorRuntime = mE;
      } catch (t2) {
        "object" == typeof globalThis ? globalThis.regeneratorRuntime = mE : Function("r", "regeneratorRuntime = r")(mE);
      }
      var wE = n(bE), _E = { exports: {} }, TE = u(function() {
        if ("function" == typeof ArrayBuffer) {
          var t2 = new ArrayBuffer(8);
          Object.isExtensible(t2) && Object.defineProperty(t2, "a", { value: 8 });
        }
      }), EE = u, OE = rt, SE = T, xE = TE, kE = Object.isExtensible, jE = EE(function() {
        kE(1);
      }) || xE ? function(t2) {
        return !!OE(t2) && ((!xE || "ArrayBuffer" !== SE(t2)) && (!kE || kE(t2)));
      } : kE, AE = !u(function() {
        return Object.isExtensible(Object.preventExtensions({}));
      }), PE = Pr, IE = m, DE = po, LE = rt, CE = te, RE = Ze.f, ME = Jo, NE = Zo, FE = jE, zE = AE, UE = false, qE = ie("meta"), WE = 0, YE = function(t2) {
        RE(t2, qE, { value: { objectID: "O" + WE++, weakData: {} } });
      }, GE = _E.exports = { enable: function() {
        GE.enable = function() {
        }, UE = true;
        var t2 = ME.f, e2 = IE([].splice), r2 = {};
        r2[qE] = 1, t2(r2).length && (ME.f = function(r3) {
          for (var n2 = t2(r3), o2 = 0, i2 = n2.length; o2 < i2; o2++) if (n2[o2] === qE) {
            e2(n2, o2, 1);
            break;
          }
          return n2;
        }, PE({ target: "Object", stat: true, forced: true }, { getOwnPropertyNames: NE.f }));
      }, fastKey: function(t2, e2) {
        if (!LE(t2)) return "symbol" == typeof t2 ? t2 : ("string" == typeof t2 ? "S" : "P") + t2;
        if (!CE(t2, qE)) {
          if (!FE(t2)) return "F";
          if (!e2) return "E";
          YE(t2);
        }
        return t2[qE].objectID;
      }, getWeakData: function(t2, e2) {
        if (!CE(t2, qE)) {
          if (!FE(t2)) return true;
          if (!e2) return false;
          YE(t2);
        }
        return t2[qE].weakData;
      }, onFreeze: function(t2) {
        return zE && UE && FE(t2) && !CE(t2, qE) && YE(t2), t2;
      } };
      DE[qE] = true;
      var XE = _E.exports, VE = Pr, BE = a, HE = XE, KE = u, JE = mr, $E = bb, QE = Kb, ZE = A, tO = rt, eO = B, rO = zi, nO = Ze.f, oO = ca.forEach, iO = I, aO = ea.set, uO = ea.getterFor, sO = function(t2, e2, r2) {
        var n2, o2 = -1 !== t2.indexOf("Map"), i2 = -1 !== t2.indexOf("Weak"), a2 = o2 ? "set" : "add", u2 = BE[t2], s2 = u2 && u2.prototype, c2 = {};
        if (iO && ZE(u2) && (i2 || s2.forEach && !KE(function() {
          new u2().entries().next();
        }))) {
          var f2 = (n2 = e2(function(e3, r3) {
            aO(QE(e3, f2), { type: t2, collection: new u2() }), eO(r3) || $E(r3, e3[a2], { that: e3, AS_ENTRIES: o2 });
          })).prototype, l2 = uO(t2);
          oO(["add", "clear", "delete", "forEach", "get", "has", "set", "keys", "values", "entries"], function(t3) {
            var e3 = "add" === t3 || "set" === t3;
            !(t3 in s2) || i2 && "clear" === t3 || JE(f2, t3, function(r3, n3) {
              var o3 = l2(this).collection;
              if (!e3 && i2 && !tO(r3)) return "get" === t3 && void 0;
              var a3 = o3[t3](0 === r3 ? 0 : r3, n3);
              return e3 ? this : a3;
            });
          }), i2 || nO(f2, "size", { configurable: true, get: function() {
            return l2(this).collection.size;
          } });
        } else n2 = r2.getConstructor(e2, t2, o2, a2), HE.enable();
        return rO(n2, t2, false, true), c2[t2] = n2, VE({ global: true, forced: true }, c2), i2 || r2.setStrong(n2, t2, o2), n2;
      }, cO = pi, fO = Ko, lO = di, hO = function(t2, e2, r2) {
        for (var n2 in e2) r2 && r2.unsafe && t2[n2] ? t2[n2] = e2[n2] : cO(t2, n2, e2[n2], r2);
        return t2;
      }, pO = Qe, vO = Kb, dO = B, yO = bb, gO = Oc, mO = Sc, bO = Vb, wO = I, _O = XE.fastKey, TO = ea.set, EO = ea.getterFor, OO = { getConstructor: function(t2, e2, r2, n2) {
        var o2 = t2(function(t3, o3) {
          vO(t3, i2), TO(t3, { type: e2, index: fO(null), first: void 0, last: void 0, size: 0 }), wO || (t3.size = 0), dO(o3) || yO(o3, t3[n2], { that: t3, AS_ENTRIES: r2 });
        }), i2 = o2.prototype, a2 = EO(e2), u2 = function(t3, e3, r3) {
          var n3, o3, i3 = a2(t3), u3 = s2(t3, e3);
          return u3 ? u3.value = r3 : (i3.last = u3 = { index: o3 = _O(e3, true), key: e3, value: r3, previous: n3 = i3.last, next: void 0, removed: false }, i3.first || (i3.first = u3), n3 && (n3.next = u3), wO ? i3.size++ : t3.size++, "F" !== o3 && (i3.index[o3] = u3)), t3;
        }, s2 = function(t3, e3) {
          var r3, n3 = a2(t3), o3 = _O(e3);
          if ("F" !== o3) return n3.index[o3];
          for (r3 = n3.first; r3; r3 = r3.next) if (r3.key === e3) return r3;
        };
        return hO(i2, { clear: function() {
          for (var t3 = a2(this), e3 = t3.index, r3 = t3.first; r3; ) r3.removed = true, r3.previous && (r3.previous = r3.previous.next = void 0), delete e3[r3.index], r3 = r3.next;
          t3.first = t3.last = void 0, wO ? t3.size = 0 : this.size = 0;
        }, delete: function(t3) {
          var e3 = this, r3 = a2(e3), n3 = s2(e3, t3);
          if (n3) {
            var o3 = n3.next, i3 = n3.previous;
            delete r3.index[n3.index], n3.removed = true, i3 && (i3.next = o3), o3 && (o3.previous = i3), r3.first === n3 && (r3.first = o3), r3.last === n3 && (r3.last = i3), wO ? r3.size-- : e3.size--;
          }
          return !!n3;
        }, forEach: function(t3) {
          for (var e3, r3 = a2(this), n3 = pO(t3, arguments.length > 1 ? arguments[1] : void 0); e3 = e3 ? e3.next : r3.first; ) for (n3(e3.value, e3.key, this); e3 && e3.removed; ) e3 = e3.previous;
        }, has: function(t3) {
          return !!s2(this, t3);
        } }), hO(i2, r2 ? { get: function(t3) {
          var e3 = s2(this, t3);
          return e3 && e3.value;
        }, set: function(t3, e3) {
          return u2(this, 0 === t3 ? 0 : t3, e3);
        } } : { add: function(t3) {
          return u2(this, t3 = 0 === t3 ? 0 : t3, t3);
        } }), wO && lO(i2, "size", { configurable: true, get: function() {
          return a2(this).size;
        } }), o2;
      }, setStrong: function(t2, e2, r2) {
        var n2 = e2 + " Iterator", o2 = EO(e2), i2 = EO(n2);
        gO(t2, e2, function(t3, e3) {
          TO(this, { type: n2, target: t3, state: o2(t3), kind: e3, last: void 0 });
        }, function() {
          for (var t3 = i2(this), e3 = t3.kind, r3 = t3.last; r3 && r3.removed; ) r3 = r3.previous;
          return t3.target && (t3.last = r3 = r3 ? r3.next : t3.state.first) ? mO("keys" === e3 ? r3.key : "values" === e3 ? r3.value : [r3.key, r3.value], false) : (t3.target = void 0, mO(void 0, true));
        }, r2 ? "entries" : "values", !r2, true), bO(e2);
      } };
      sO("Map", function(t2) {
        return function() {
          return t2(this, arguments.length ? arguments[0] : void 0);
        };
      }, OO);
      var SO = n(nt.Map), xO = ca.some;
      Pr({ target: "Array", proto: true, forced: !ml("some") }, { some: function(t2) {
        return xO(this, t2, arguments.length > 1 ? arguments[1] : void 0);
      } });
      var kO = nl("Array", "some"), jO = ct, AO = kO, PO = Array.prototype, IO = n(function(t2) {
        var e2 = t2.some;
        return t2 === PO || jO(PO, t2) && e2 === PO.some ? AO : e2;
      }), DO = nl("Array", "keys"), LO = fn, CO = te, RO = ct, MO = DO, NO = Array.prototype, FO = { DOMTokenList: true, NodeList: true }, zO = n(function(t2) {
        var e2 = t2.keys;
        return t2 === NO || RO(NO, t2) && e2 === NO.keys || CO(FO, LO(t2)) ? MO : e2;
      }), UO = ii, qO = Math.floor, WO = function(t2, e2) {
        var r2 = t2.length, n2 = qO(r2 / 2);
        return r2 < 8 ? YO(t2, e2) : GO(t2, WO(UO(t2, 0, n2), e2), WO(UO(t2, n2), e2), e2);
      }, YO = function(t2, e2) {
        for (var r2, n2, o2 = t2.length, i2 = 1; i2 < o2; ) {
          for (n2 = i2, r2 = t2[i2]; n2 && e2(t2[n2 - 1], r2) > 0; ) t2[n2] = t2[--n2];
          n2 !== i2++ && (t2[n2] = r2);
        }
        return t2;
      }, GO = function(t2, e2, r2, n2) {
        for (var o2 = e2.length, i2 = r2.length, a2 = 0, u2 = 0; a2 < o2 || u2 < i2; ) t2[a2 + u2] = a2 < o2 && u2 < i2 ? n2(e2[a2], r2[u2]) <= 0 ? e2[a2++] : r2[u2++] : a2 < o2 ? e2[a2++] : r2[u2++];
        return t2;
      }, XO = WO, VO = ft.match(/firefox\/(\d+)/i), BO = !!VO && +VO[1], HO = /MSIE|Trident/.test(ft), KO = ft.match(/AppleWebKit\/(\d+)\./), JO = !!KO && +KO[1], $O = Pr, QO = m, ZO = Lt, tS = $t, eS = Hr, rS = Tv, nS = ro, oS = u, iS = XO, aS = ml, uS = BO, sS = HO, cS = gt, fS = JO, lS = [], hS = QO(lS.sort), pS = QO(lS.push), vS = oS(function() {
        lS.sort(void 0);
      }), dS = oS(function() {
        lS.sort(null);
      }), yS = aS("sort"), gS = !oS(function() {
        if (cS) return cS < 70;
        if (!(uS && uS > 3)) {
          if (sS) return true;
          if (fS) return fS < 603;
          var t2, e2, r2, n2, o2 = "";
          for (t2 = 65; t2 < 76; t2++) {
            switch (e2 = String.fromCharCode(t2), t2) {
              case 66:
              case 69:
              case 70:
              case 72:
                r2 = 3;
                break;
              case 68:
              case 71:
                r2 = 4;
                break;
              default:
                r2 = 2;
            }
            for (n2 = 0; n2 < 47; n2++) lS.push({ k: e2 + n2, v: r2 });
          }
          for (lS.sort(function(t3, e3) {
            return e3.v - t3.v;
          }), n2 = 0; n2 < lS.length; n2++) e2 = lS[n2].k.charAt(0), o2.charAt(o2.length - 1) !== e2 && (o2 += e2);
          return "DGBEFHACIJK" !== o2;
        }
      });
      $O({ target: "Array", proto: true, forced: vS || !dS || !yS || !gS }, { sort: function(t2) {
        void 0 !== t2 && ZO(t2);
        var e2 = tS(this);
        if (gS) return void 0 === t2 ? hS(e2) : hS(e2, t2);
        var r2, n2, o2 = [], i2 = eS(e2);
        for (n2 = 0; n2 < i2; n2++) n2 in e2 && pS(o2, e2[n2]);
        for (iS(o2, /* @__PURE__ */ function(t3) {
          return function(e3, r3) {
            return void 0 === r3 ? -1 : void 0 === e3 ? 1 : void 0 !== t3 ? +t3(e3, r3) || 0 : nS(e3) > nS(r3) ? 1 : -1;
          };
        }(t2)), r2 = eS(o2), n2 = 0; n2 < r2; ) e2[n2] = o2[n2++];
        for (; n2 < i2; ) rS(e2, n2++);
        return e2;
      } });
      var mS = nl("Array", "sort"), bS = ct, wS = mS, _S = Array.prototype, TS = n(function(t2) {
        var e2 = t2.sort;
        return t2 === _S || bS(_S, t2) && e2 === _S.sort ? wS : e2;
      }), ES = nl("Array", "values"), OS = fn, SS = te, xS = ct, kS = ES, jS = Array.prototype, AS = { DOMTokenList: true, NodeList: true }, PS = n(function(t2) {
        var e2 = t2.values;
        return t2 === jS || xS(jS, t2) && e2 === jS.values || SS(AS, OS(t2)) ? kS : e2;
      }), IS = n(Cf), DS = nl("Array", "entries"), LS = fn, CS = te, RS = ct, MS = DS, NS = Array.prototype, FS = { DOMTokenList: true, NodeList: true }, zS = n(function(t2) {
        var e2 = t2.entries;
        return t2 === NS || RS(NS, t2) && e2 === NS.entries || CS(FS, LS(t2)) ? MS : e2;
      });
      let US;
      const qS = new Uint8Array(16);
      function WS() {
        if (!US && (US = "undefined" != typeof crypto && crypto.getRandomValues && crypto.getRandomValues.bind(crypto), !US)) throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
        return US(qS);
      }
      const YS = [];
      for (let t2 = 0; t2 < 256; ++t2) YS.push((t2 + 256).toString(16).slice(1));
      var GS = { randomUUID: "undefined" != typeof crypto && crypto.randomUUID && crypto.randomUUID.bind(crypto) };
      function XS(t2, e2, r2) {
        if (GS.randomUUID && !e2 && !t2) return GS.randomUUID();
        const n2 = (t2 = t2 || {}).random || (t2.rng || WS)();
        if (n2[6] = 15 & n2[6] | 64, n2[8] = 63 & n2[8] | 128, e2) {
          r2 = r2 || 0;
          for (let t3 = 0; t3 < 16; ++t3) e2[r2 + t3] = n2[t3];
          return e2;
        }
        return function(t3, e3 = 0) {
          return YS[t3[e3 + 0]] + YS[t3[e3 + 1]] + YS[t3[e3 + 2]] + YS[t3[e3 + 3]] + "-" + YS[t3[e3 + 4]] + YS[t3[e3 + 5]] + "-" + YS[t3[e3 + 6]] + YS[t3[e3 + 7]] + "-" + YS[t3[e3 + 8]] + YS[t3[e3 + 9]] + "-" + YS[t3[e3 + 10]] + YS[t3[e3 + 11]] + YS[t3[e3 + 12]] + YS[t3[e3 + 13]] + YS[t3[e3 + 14]] + YS[t3[e3 + 15]];
        }(n2);
      }
      function VS(t2) {
        return "string" == typeof t2 || "number" == typeof t2;
      }
      var BS = function() {
        function t2(r2) {
          e(this, t2), Wf(this, "_queue", []), Wf(this, "_timeout", null), Wf(this, "_extended", null), this.delay = null, this.max = 1 / 0, this.setOptions(r2);
        }
        return qf(t2, [{ key: "setOptions", value: function(t3) {
          t3 && void 0 !== t3.delay && (this.delay = t3.delay), t3 && void 0 !== t3.max && (this.max = t3.max), this._flushIfNeeded();
        } }, { key: "destroy", value: function() {
          if (this.flush(), this._extended) {
            for (var t3 = this._extended.object, e2 = this._extended.methods, r2 = 0; r2 < e2.length; r2++) {
              var n2 = e2[r2];
              n2.original ? t3[n2.name] = n2.original : delete t3[n2.name];
            }
            this._extended = null;
          }
        } }, { key: "replace", value: function(t3, e2) {
          var r2 = this, n2 = t3[e2];
          if (!n2) throw new Error("Method " + e2 + " undefined");
          t3[e2] = function() {
            for (var t4 = arguments.length, e3 = new Array(t4), o2 = 0; o2 < t4; o2++) e3[o2] = arguments[o2];
            r2.queue({ args: e3, fn: n2, context: this });
          };
        } }, { key: "queue", value: function(t3) {
          "function" == typeof t3 ? this._queue.push({ fn: t3 }) : this._queue.push(t3), this._flushIfNeeded();
        } }, { key: "_flushIfNeeded", value: function() {
          var t3 = this;
          this._queue.length > this.max && this.flush(), null != this._timeout && (clearTimeout(this._timeout), this._timeout = null), this.queue.length > 0 && "number" == typeof this.delay && (this._timeout = Dd(function() {
            t3.flush();
          }, this.delay));
        } }, { key: "flush", value: function() {
          var t3, e2;
          cv(t3 = Uv(e2 = this._queue).call(e2, 0)).call(t3, function(t4) {
            t4.fn.apply(t4.context || t4.fn, t4.args || []);
          });
        } }], [{ key: "extend", value: function(e2, r2) {
          var n2 = new t2(r2);
          if (void 0 !== e2.flush) throw new Error("Target object already has a property flush");
          e2.flush = function() {
            n2.flush();
          };
          var o2 = [{ name: "flush", original: void 0 }];
          if (r2 && r2.replace) for (var i2 = 0; i2 < r2.replace.length; i2++) {
            var a2 = r2.replace[i2];
            o2.push({ name: a2, original: e2[a2] }), n2.replace(e2, a2);
          }
          return n2._extended = { object: e2, methods: o2 }, n2;
        } }]), t2;
      }(), HS = function() {
        function t2() {
          e(this, t2), Wf(this, "_subscribers", { "*": [], add: [], remove: [], update: [] }), Wf(this, "subscribe", t2.prototype.on), Wf(this, "unsubscribe", t2.prototype.off);
        }
        return qf(t2, [{ key: "_trigger", value: function(t3, e2, r2) {
          var n2, o2;
          if ("*" === t3) throw new Error("Cannot trigger event *");
          cv(n2 = Up(o2 = []).call(o2, Cp(this._subscribers[t3]), Cp(this._subscribers["*"]))).call(n2, function(n3) {
            n3(t3, e2, null != r2 ? r2 : null);
          });
        } }, { key: "on", value: function(t3, e2) {
          "function" == typeof e2 && this._subscribers[t3].push(e2);
        } }, { key: "off", value: function(t3, e2) {
          var r2;
          this._subscribers[t3] = Il(r2 = this._subscribers[t3]).call(r2, function(t4) {
            return t4 !== e2;
          });
        } }]), t2;
      }();
      sO("Set", function(t2) {
        return function() {
          return t2(this, arguments.length ? arguments[0] : void 0);
        };
      }, OO);
      var KS = n(nt.Set), JS = n(Eh);
      function $S(t2, e2) {
        var r2 = void 0 !== Rp && Xh(t2) || t2["@@iterator"];
        if (!r2) {
          if (Kp(t2) || (r2 = function(t3, e3) {
            var r3;
            if (!t3) return;
            if ("string" == typeof t3) return QS(t3, e3);
            var n3 = qp(r3 = Object.prototype.toString.call(t3)).call(r3, 8, -1);
            "Object" === n3 && t3.constructor && (n3 = t3.constructor.name);
            if ("Map" === n3 || "Set" === n3) return Wh(t3);
            if ("Arguments" === n3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3)) return QS(t3, e3);
          }(t2)) || e2 && t2 && "number" == typeof t2.length) {
            r2 && (t2 = r2);
            var n2 = 0, o2 = function() {
            };
            return { s: o2, n: function() {
              return n2 >= t2.length ? { done: true } : { done: false, value: t2[n2++] };
            }, e: function(t3) {
              throw t3;
            }, f: o2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var i2, a2 = true, u2 = false;
        return { s: function() {
          r2 = r2.call(t2);
        }, n: function() {
          var t3 = r2.next();
          return a2 = t3.done, t3;
        }, e: function(t3) {
          u2 = true, i2 = t3;
        }, f: function() {
          try {
            a2 || null == r2.return || r2.return();
          } finally {
            if (u2) throw i2;
          }
        } };
      }
      function QS(t2, e2) {
        (null == e2 || e2 > t2.length) && (e2 = t2.length);
        for (var r2 = 0, n2 = new Array(e2); r2 < e2; r2++) n2[r2] = t2[r2];
        return n2;
      }
      var ZS = function(t2) {
        function r2(t3) {
          e(this, r2), this._pairs = t3;
        }
        return qf(r2, [{ key: t2, value: wE.mark(function t3() {
          var e2, r3, n2, o2, i2;
          return wE.wrap(function(t4) {
            for (; ; ) switch (t4.prev = t4.next) {
              case 0:
                e2 = $S(this._pairs), t4.prev = 1, e2.s();
              case 3:
                if ((r3 = e2.n()).done) {
                  t4.next = 9;
                  break;
                }
                return n2 = Lp(r3.value, 2), o2 = n2[0], i2 = n2[1], t4.next = 7, [o2, i2];
              case 7:
                t4.next = 3;
                break;
              case 9:
                t4.next = 14;
                break;
              case 11:
                t4.prev = 11, t4.t0 = t4.catch(1), e2.e(t4.t0);
              case 14:
                return t4.prev = 14, e2.f(), t4.finish(14);
              case 17:
              case "end":
                return t4.stop();
            }
          }, t3, this, [[1, 11, 14, 17]]);
        }) }, { key: "entries", value: wE.mark(function t3() {
          var e2, r3, n2, o2, i2;
          return wE.wrap(function(t4) {
            for (; ; ) switch (t4.prev = t4.next) {
              case 0:
                e2 = $S(this._pairs), t4.prev = 1, e2.s();
              case 3:
                if ((r3 = e2.n()).done) {
                  t4.next = 9;
                  break;
                }
                return n2 = Lp(r3.value, 2), o2 = n2[0], i2 = n2[1], t4.next = 7, [o2, i2];
              case 7:
                t4.next = 3;
                break;
              case 9:
                t4.next = 14;
                break;
              case 11:
                t4.prev = 11, t4.t0 = t4.catch(1), e2.e(t4.t0);
              case 14:
                return t4.prev = 14, e2.f(), t4.finish(14);
              case 17:
              case "end":
                return t4.stop();
            }
          }, t3, this, [[1, 11, 14, 17]]);
        }) }, { key: "keys", value: wE.mark(function t3() {
          var e2, r3, n2, o2;
          return wE.wrap(function(t4) {
            for (; ; ) switch (t4.prev = t4.next) {
              case 0:
                e2 = $S(this._pairs), t4.prev = 1, e2.s();
              case 3:
                if ((r3 = e2.n()).done) {
                  t4.next = 9;
                  break;
                }
                return n2 = Lp(r3.value, 1), o2 = n2[0], t4.next = 7, o2;
              case 7:
                t4.next = 3;
                break;
              case 9:
                t4.next = 14;
                break;
              case 11:
                t4.prev = 11, t4.t0 = t4.catch(1), e2.e(t4.t0);
              case 14:
                return t4.prev = 14, e2.f(), t4.finish(14);
              case 17:
              case "end":
                return t4.stop();
            }
          }, t3, this, [[1, 11, 14, 17]]);
        }) }, { key: "values", value: wE.mark(function t3() {
          var e2, r3, n2, o2;
          return wE.wrap(function(t4) {
            for (; ; ) switch (t4.prev = t4.next) {
              case 0:
                e2 = $S(this._pairs), t4.prev = 1, e2.s();
              case 3:
                if ((r3 = e2.n()).done) {
                  t4.next = 9;
                  break;
                }
                return n2 = Lp(r3.value, 2), o2 = n2[1], t4.next = 7, o2;
              case 7:
                t4.next = 3;
                break;
              case 9:
                t4.next = 14;
                break;
              case 11:
                t4.prev = 11, t4.t0 = t4.catch(1), e2.e(t4.t0);
              case 14:
                return t4.prev = 14, e2.f(), t4.finish(14);
              case 17:
              case "end":
                return t4.stop();
            }
          }, t3, this, [[1, 11, 14, 17]]);
        }) }, { key: "toIdArray", value: function() {
          var t3;
          return Nl(t3 = Cp(this._pairs)).call(t3, function(t4) {
            return t4[0];
          });
        } }, { key: "toItemArray", value: function() {
          var t3;
          return Nl(t3 = Cp(this._pairs)).call(t3, function(t4) {
            return t4[1];
          });
        } }, { key: "toEntryArray", value: function() {
          return Cp(this._pairs);
        } }, { key: "toObjectMap", value: function() {
          var t3, e2 = sd(null), r3 = $S(this._pairs);
          try {
            for (r3.s(); !(t3 = r3.n()).done; ) {
              var n2 = Lp(t3.value, 2), o2 = n2[0], i2 = n2[1];
              e2[o2] = i2;
            }
          } catch (t4) {
            r3.e(t4);
          } finally {
            r3.f();
          }
          return e2;
        } }, { key: "toMap", value: function() {
          return new SO(this._pairs);
        } }, { key: "toIdSet", value: function() {
          return new KS(this.toIdArray());
        } }, { key: "toItemSet", value: function() {
          return new KS(this.toItemArray());
        } }, { key: "cache", value: function() {
          return new r2(Cp(this._pairs));
        } }, { key: "distinct", value: function(t3) {
          var e2, r3 = new KS(), n2 = $S(this._pairs);
          try {
            for (n2.s(); !(e2 = n2.n()).done; ) {
              var o2 = Lp(e2.value, 2), i2 = o2[0], a2 = o2[1];
              r3.add(t3(a2, i2));
            }
          } catch (t4) {
            n2.e(t4);
          } finally {
            n2.f();
          }
          return r3;
        } }, { key: "filter", value: function(t3) {
          var e2 = this._pairs;
          return new r2({ [IS]: () => wE.mark(function r3() {
            var n2, o2, i2, a2, u2;
            return wE.wrap(function(r4) {
              for (; ; ) switch (r4.prev = r4.next) {
                case 0:
                  n2 = $S(e2), r4.prev = 1, n2.s();
                case 3:
                  if ((o2 = n2.n()).done) {
                    r4.next = 10;
                    break;
                  }
                  if (i2 = Lp(o2.value, 2), a2 = i2[0], u2 = i2[1], !t3(u2, a2)) {
                    r4.next = 8;
                    break;
                  }
                  return r4.next = 8, [a2, u2];
                case 8:
                  r4.next = 3;
                  break;
                case 10:
                  r4.next = 15;
                  break;
                case 12:
                  r4.prev = 12, r4.t0 = r4.catch(1), n2.e(r4.t0);
                case 15:
                  return r4.prev = 15, n2.f(), r4.finish(15);
                case 18:
                case "end":
                  return r4.stop();
              }
            }, r3, null, [[1, 12, 15, 18]]);
          })() });
        } }, { key: "forEach", value: function(t3) {
          var e2, r3 = $S(this._pairs);
          try {
            for (r3.s(); !(e2 = r3.n()).done; ) {
              var n2 = Lp(e2.value, 2), o2 = n2[0];
              t3(n2[1], o2);
            }
          } catch (t4) {
            r3.e(t4);
          } finally {
            r3.f();
          }
        } }, { key: "map", value: function(t3) {
          var e2 = this._pairs;
          return new r2({ [IS]: () => wE.mark(function r3() {
            var n2, o2, i2, a2, u2;
            return wE.wrap(function(r4) {
              for (; ; ) switch (r4.prev = r4.next) {
                case 0:
                  n2 = $S(e2), r4.prev = 1, n2.s();
                case 3:
                  if ((o2 = n2.n()).done) {
                    r4.next = 9;
                    break;
                  }
                  return i2 = Lp(o2.value, 2), a2 = i2[0], u2 = i2[1], r4.next = 7, [a2, t3(u2, a2)];
                case 7:
                  r4.next = 3;
                  break;
                case 9:
                  r4.next = 14;
                  break;
                case 11:
                  r4.prev = 11, r4.t0 = r4.catch(1), n2.e(r4.t0);
                case 14:
                  return r4.prev = 14, n2.f(), r4.finish(14);
                case 17:
                case "end":
                  return r4.stop();
              }
            }, r3, null, [[1, 11, 14, 17]]);
          })() });
        } }, { key: "max", value: function(t3) {
          var e2 = JS(this._pairs), r3 = e2.next();
          if (r3.done) return null;
          for (var n2 = r3.value[1], o2 = t3(r3.value[1], r3.value[0]); !(r3 = e2.next()).done; ) {
            var i2 = Lp(r3.value, 2), a2 = i2[0], u2 = i2[1], s2 = t3(u2, a2);
            s2 > o2 && (o2 = s2, n2 = u2);
          }
          return n2;
        } }, { key: "min", value: function(t3) {
          var e2 = JS(this._pairs), r3 = e2.next();
          if (r3.done) return null;
          for (var n2 = r3.value[1], o2 = t3(r3.value[1], r3.value[0]); !(r3 = e2.next()).done; ) {
            var i2 = Lp(r3.value, 2), a2 = i2[0], u2 = i2[1], s2 = t3(u2, a2);
            s2 < o2 && (o2 = s2, n2 = u2);
          }
          return n2;
        } }, { key: "reduce", value: function(t3, e2) {
          var r3, n2 = $S(this._pairs);
          try {
            for (n2.s(); !(r3 = n2.n()).done; ) {
              var o2 = Lp(r3.value, 2), i2 = o2[0];
              e2 = t3(e2, o2[1], i2);
            }
          } catch (t4) {
            n2.e(t4);
          } finally {
            n2.f();
          }
          return e2;
        } }, { key: "sort", value: function(t3) {
          var e2 = this;
          return new r2({ [IS]: function() {
            var r3;
            return JS(TS(r3 = Cp(e2._pairs)).call(r3, function(e3, r4) {
              var n2 = Lp(e3, 2), o2 = n2[0], i2 = n2[1], a2 = Lp(r4, 2), u2 = a2[0], s2 = a2[1];
              return t3(i2, s2, o2, u2);
            }));
          } });
        } }]), r2;
      }(IS);
      function tx(t2, e2) {
        var r2 = Qp(t2);
        if (om) {
          var n2 = om(t2);
          e2 && (n2 = Il(n2).call(n2, function(e3) {
            return pm(t2, e3).enumerable;
          })), r2.push.apply(r2, n2);
        }
        return r2;
      }
      function ex(t2) {
        for (var e2 = 1; e2 < arguments.length; e2++) {
          var r2, n2, o2 = null != arguments[e2] ? arguments[e2] : {};
          e2 % 2 ? cv(r2 = tx(Object(o2), true)).call(r2, function(e3) {
            Wf(t2, e3, o2[e3]);
          }) : mm ? Sm(t2, mm(o2)) : cv(n2 = tx(Object(o2))).call(n2, function(e3) {
            xm(t2, e3, pm(o2, e3));
          });
        }
        return t2;
      }
      function rx(t2, e2) {
        var r2 = void 0 !== Rp && Xh(t2) || t2["@@iterator"];
        if (!r2) {
          if (Kp(t2) || (r2 = function(t3, e3) {
            var r3;
            if (!t3) return;
            if ("string" == typeof t3) return nx(t3, e3);
            var n3 = qp(r3 = Object.prototype.toString.call(t3)).call(r3, 8, -1);
            "Object" === n3 && t3.constructor && (n3 = t3.constructor.name);
            if ("Map" === n3 || "Set" === n3) return Wh(t3);
            if ("Arguments" === n3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3)) return nx(t3, e3);
          }(t2)) || e2 && t2 && "number" == typeof t2.length) {
            r2 && (t2 = r2);
            var n2 = 0, o2 = function() {
            };
            return { s: o2, n: function() {
              return n2 >= t2.length ? { done: true } : { done: false, value: t2[n2++] };
            }, e: function(t3) {
              throw t3;
            }, f: o2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var i2, a2 = true, u2 = false;
        return { s: function() {
          r2 = r2.call(t2);
        }, n: function() {
          var t3 = r2.next();
          return a2 = t3.done, t3;
        }, e: function(t3) {
          u2 = true, i2 = t3;
        }, f: function() {
          try {
            a2 || null == r2.return || r2.return();
          } finally {
            if (u2) throw i2;
          }
        } };
      }
      function nx(t2, e2) {
        (null == e2 || e2 > t2.length) && (e2 = t2.length);
        for (var r2 = 0, n2 = new Array(e2); r2 < e2; r2++) n2[r2] = t2[r2];
        return n2;
      }
      function ox(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !nm) return false;
          if (nm.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(nm(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var r2, n2 = Fm(t2);
          if (e2) {
            var o2 = Fm(this).constructor;
            r2 = nm(n2, arguments, o2);
          } else r2 = n2.apply(this, arguments);
          return Rm(this, r2);
        };
      }
      var ix = function(t2) {
        Cm(n2, t2);
        var r2 = ox(n2);
        function n2(t3, o2) {
          var i2;
          return e(this, n2), Wf(km(i2 = r2.call(this)), "_queue", null), t3 && !Kp(t3) && (o2 = t3, t3 = []), i2._options = o2 || {}, i2._data = new SO(), i2.length = 0, i2._idProp = i2._options.fieldId || "id", t3 && t3.length && i2.add(t3), i2.setOptions(o2), i2;
        }
        return qf(n2, [{ key: "idProp", get: function() {
          return this._idProp;
        } }, { key: "setOptions", value: function(t3) {
          t3 && void 0 !== t3.queue && (false === t3.queue ? this._queue && (this._queue.destroy(), this._queue = null) : (this._queue || (this._queue = BS.extend(this, { replace: ["add", "update", "remove"] })), t3.queue && "object" == typeof t3.queue && this._queue.setOptions(t3.queue)));
        } }, { key: "add", value: function(t3, e2) {
          var r3, n3 = this, o2 = [];
          if (Kp(t3)) {
            var i2 = Nl(t3).call(t3, function(t4) {
              return t4[n3._idProp];
            });
            if (IO(i2).call(i2, function(t4) {
              return n3._data.has(t4);
            })) throw new Error("A duplicate id was found in the parameter array.");
            for (var a2 = 0, u2 = t3.length; a2 < u2; a2++) r3 = this._addItem(t3[a2]), o2.push(r3);
          } else {
            if (!t3 || "object" != typeof t3) throw new Error("Unknown dataType");
            r3 = this._addItem(t3), o2.push(r3);
          }
          return o2.length && this._trigger("add", { items: o2 }, e2), o2;
        } }, { key: "update", value: function(t3, e2) {
          var r3 = this, n3 = [], o2 = [], i2 = [], a2 = [], u2 = this._idProp, s2 = function(t4) {
            var e3 = t4[u2];
            if (null != e3 && r3._data.has(e3)) {
              var s3 = t4, c3 = ed({}, r3._data.get(e3)), f3 = r3._updateItem(s3);
              o2.push(f3), a2.push(s3), i2.push(c3);
            } else {
              var l3 = r3._addItem(t4);
              n3.push(l3);
            }
          };
          if (Kp(t3)) for (var c2 = 0, f2 = t3.length; c2 < f2; c2++) t3[c2] && "object" == typeof t3[c2] ? s2(t3[c2]) : console.warn("Ignoring input item, which is not an object at index " + c2);
          else {
            if (!t3 || "object" != typeof t3) throw new Error("Unknown dataType");
            s2(t3);
          }
          if (n3.length && this._trigger("add", { items: n3 }, e2), o2.length) {
            var l2 = { items: o2, oldData: i2, data: a2 };
            this._trigger("update", l2, e2);
          }
          return Up(n3).call(n3, o2);
        } }, { key: "updateOnly", value: function(t3, e2) {
          var r3, n3 = this;
          Kp(t3) || (t3 = [t3]);
          var o2 = Nl(r3 = Nl(t3).call(t3, function(t4) {
            var e3 = n3._data.get(t4[n3._idProp]);
            if (null == e3) throw new Error("Updating non-existent items is not allowed.");
            return { oldData: e3, update: t4 };
          })).call(r3, function(t4) {
            var e3 = t4.oldData, r4 = t4.update, o3 = e3[n3._idProp], i3 = function(t5) {
              for (var e4, r5 = arguments.length, n4 = new Array(r5 > 1 ? r5 - 1 : 0), o4 = 1; o4 < r5; o4++) n4[o4 - 1] = arguments[o4];
              return Lg.apply(void 0, Up(e4 = [{}, t5]).call(e4, n4));
            }(e3, r4);
            return n3._data.set(o3, i3), { id: o3, oldData: e3, updatedData: i3 };
          });
          if (o2.length) {
            var i2 = { items: Nl(o2).call(o2, function(t4) {
              return t4.id;
            }), oldData: Nl(o2).call(o2, function(t4) {
              return t4.oldData;
            }), data: Nl(o2).call(o2, function(t4) {
              return t4.updatedData;
            }) };
            return this._trigger("update", i2, e2), i2.items;
          }
          return [];
        } }, { key: "get", value: function(t3, e2) {
          var r3 = void 0, n3 = void 0, o2 = void 0;
          VS(t3) ? (r3 = t3, o2 = e2) : Kp(t3) ? (n3 = t3, o2 = e2) : o2 = t3;
          var i2, a2 = o2 && "Object" === o2.returnType ? "Object" : "Array", u2 = o2 && Il(o2), s2 = [], c2 = void 0, f2 = void 0, l2 = void 0;
          if (null != r3) (c2 = this._data.get(r3)) && u2 && !u2(c2) && (c2 = void 0);
          else if (null != n3) for (var h2 = 0, p2 = n3.length; h2 < p2; h2++) null == (c2 = this._data.get(n3[h2])) || u2 && !u2(c2) || s2.push(c2);
          else for (var v2, d2 = 0, y2 = (f2 = Cp(zO(v2 = this._data).call(v2))).length; d2 < y2; d2++) l2 = f2[d2], null == (c2 = this._data.get(l2)) || u2 && !u2(c2) || s2.push(c2);
          if (o2 && o2.order && null == r3 && this._sort(s2, o2.order), o2 && o2.fields) {
            var g2 = o2.fields;
            if (null != r3 && null != c2) c2 = this._filterFields(c2, g2);
            else for (var m2 = 0, b2 = s2.length; m2 < b2; m2++) s2[m2] = this._filterFields(s2[m2], g2);
          }
          if ("Object" == a2) {
            for (var w2 = {}, _2 = 0, T2 = s2.length; _2 < T2; _2++) {
              var E2 = s2[_2];
              w2[E2[this._idProp]] = E2;
            }
            return w2;
          }
          return null != r3 ? null !== (i2 = c2) && void 0 !== i2 ? i2 : null : s2;
        } }, { key: "getIds", value: function(t3) {
          var e2 = this._data, r3 = t3 && Il(t3), n3 = t3 && t3.order, o2 = Cp(zO(e2).call(e2)), i2 = [];
          if (r3) if (n3) {
            for (var a2 = [], u2 = 0, s2 = o2.length; u2 < s2; u2++) {
              var c2 = o2[u2], f2 = this._data.get(c2);
              null != f2 && r3(f2) && a2.push(f2);
            }
            this._sort(a2, n3);
            for (var l2 = 0, h2 = a2.length; l2 < h2; l2++) i2.push(a2[l2][this._idProp]);
          } else for (var p2 = 0, v2 = o2.length; p2 < v2; p2++) {
            var d2 = o2[p2], y2 = this._data.get(d2);
            null != y2 && r3(y2) && i2.push(y2[this._idProp]);
          }
          else if (n3) {
            for (var g2 = [], m2 = 0, b2 = o2.length; m2 < b2; m2++) {
              var w2 = o2[m2];
              g2.push(e2.get(w2));
            }
            this._sort(g2, n3);
            for (var _2 = 0, T2 = g2.length; _2 < T2; _2++) i2.push(g2[_2][this._idProp]);
          } else for (var E2 = 0, O2 = o2.length; E2 < O2; E2++) {
            var S2 = o2[E2], x2 = e2.get(S2);
            null != x2 && i2.push(x2[this._idProp]);
          }
          return i2;
        } }, { key: "getDataSet", value: function() {
          return this;
        } }, { key: "forEach", value: function(t3, e2) {
          var r3 = e2 && Il(e2), n3 = this._data, o2 = Cp(zO(n3).call(n3));
          if (e2 && e2.order) for (var i2 = this.get(e2), a2 = 0, u2 = i2.length; a2 < u2; a2++) {
            var s2 = i2[a2];
            t3(s2, s2[this._idProp]);
          }
          else for (var c2 = 0, f2 = o2.length; c2 < f2; c2++) {
            var l2 = o2[c2], h2 = this._data.get(l2);
            null == h2 || r3 && !r3(h2) || t3(h2, l2);
          }
        } }, { key: "map", value: function(t3, e2) {
          for (var r3 = e2 && Il(e2), n3 = [], o2 = this._data, i2 = Cp(zO(o2).call(o2)), a2 = 0, u2 = i2.length; a2 < u2; a2++) {
            var s2 = i2[a2], c2 = this._data.get(s2);
            null == c2 || r3 && !r3(c2) || n3.push(t3(c2, s2));
          }
          return e2 && e2.order && this._sort(n3, e2.order), n3;
        } }, { key: "_filterFields", value: function(t3, e2) {
          var r3;
          return t3 ? Sl(r3 = Kp(e2) ? e2 : Qp(e2)).call(r3, function(e3, r4) {
            return e3[r4] = t3[r4], e3;
          }, {}) : t3;
        } }, { key: "_sort", value: function(t3, e2) {
          if ("string" == typeof e2) {
            var r3 = e2;
            TS(t3).call(t3, function(t4, e3) {
              var n3 = t4[r3], o2 = e3[r3];
              return n3 > o2 ? 1 : n3 < o2 ? -1 : 0;
            });
          } else {
            if ("function" != typeof e2) throw new TypeError("Order must be a function or a string");
            TS(t3).call(t3, e2);
          }
        } }, { key: "remove", value: function(t3, e2) {
          for (var r3 = [], n3 = [], o2 = Kp(t3) ? t3 : [t3], i2 = 0, a2 = o2.length; i2 < a2; i2++) {
            var u2 = this._remove(o2[i2]);
            if (u2) {
              var s2 = u2[this._idProp];
              null != s2 && (r3.push(s2), n3.push(u2));
            }
          }
          return r3.length && this._trigger("remove", { items: r3, oldData: n3 }, e2), r3;
        } }, { key: "_remove", value: function(t3) {
          var e2;
          if (VS(t3) ? e2 = t3 : t3 && "object" == typeof t3 && (e2 = t3[this._idProp]), null != e2 && this._data.has(e2)) {
            var r3 = this._data.get(e2) || null;
            return this._data.delete(e2), --this.length, r3;
          }
          return null;
        } }, { key: "clear", value: function(t3) {
          for (var e2, r3 = Cp(zO(e2 = this._data).call(e2)), n3 = [], o2 = 0, i2 = r3.length; o2 < i2; o2++) n3.push(this._data.get(r3[o2]));
          return this._data.clear(), this.length = 0, this._trigger("remove", { items: r3, oldData: n3 }, t3), r3;
        } }, { key: "max", value: function(t3) {
          var e2, r3, n3 = null, o2 = null, i2 = rx(PS(e2 = this._data).call(e2));
          try {
            for (i2.s(); !(r3 = i2.n()).done; ) {
              var a2 = r3.value, u2 = a2[t3];
              "number" == typeof u2 && (null == o2 || u2 > o2) && (n3 = a2, o2 = u2);
            }
          } catch (t4) {
            i2.e(t4);
          } finally {
            i2.f();
          }
          return n3 || null;
        } }, { key: "min", value: function(t3) {
          var e2, r3, n3 = null, o2 = null, i2 = rx(PS(e2 = this._data).call(e2));
          try {
            for (i2.s(); !(r3 = i2.n()).done; ) {
              var a2 = r3.value, u2 = a2[t3];
              "number" == typeof u2 && (null == o2 || u2 < o2) && (n3 = a2, o2 = u2);
            }
          } catch (t4) {
            i2.e(t4);
          } finally {
            i2.f();
          }
          return n3 || null;
        } }, { key: "distinct", value: function(t3) {
          for (var e2 = this._data, r3 = Cp(zO(e2).call(e2)), n3 = [], o2 = 0, i2 = 0, a2 = r3.length; i2 < a2; i2++) {
            for (var u2 = r3[i2], s2 = e2.get(u2)[t3], c2 = false, f2 = 0; f2 < o2; f2++) if (n3[f2] == s2) {
              c2 = true;
              break;
            }
            c2 || void 0 === s2 || (n3[o2] = s2, o2++);
          }
          return n3;
        } }, { key: "_addItem", value: function(t3) {
          var e2 = function(t4, e3) {
            return null == t4[e3] && (t4[e3] = XS()), t4;
          }(t3, this._idProp), r3 = e2[this._idProp];
          if (this._data.has(r3)) throw new Error("Cannot add item: item with id " + r3 + " already exists");
          return this._data.set(r3, e2), ++this.length, r3;
        } }, { key: "_updateItem", value: function(t3) {
          var e2 = t3[this._idProp];
          if (null == e2) throw new Error("Cannot update item: item has no id (item: " + hd(t3) + ")");
          var r3 = this._data.get(e2);
          if (!r3) throw new Error("Cannot update item: no item with id " + e2 + " found");
          return this._data.set(e2, ex(ex({}, r3), t3)), e2;
        } }, { key: "stream", value: function(t3) {
          if (t3) {
            var e2 = this._data;
            return new ZS({ [IS]: () => wE.mark(function r4() {
              var n3, o2, i2, a2;
              return wE.wrap(function(r5) {
                for (; ; ) switch (r5.prev = r5.next) {
                  case 0:
                    n3 = rx(t3), r5.prev = 1, n3.s();
                  case 3:
                    if ((o2 = n3.n()).done) {
                      r5.next = 11;
                      break;
                    }
                    if (i2 = o2.value, null == (a2 = e2.get(i2))) {
                      r5.next = 9;
                      break;
                    }
                    return r5.next = 9, [i2, a2];
                  case 9:
                    r5.next = 3;
                    break;
                  case 11:
                    r5.next = 16;
                    break;
                  case 13:
                    r5.prev = 13, r5.t0 = r5.catch(1), n3.e(r5.t0);
                  case 16:
                    return r5.prev = 16, n3.f(), r5.finish(16);
                  case 19:
                  case "end":
                    return r5.stop();
                }
              }, r4, null, [[1, 13, 16, 19]]);
            })() });
          }
          var r3;
          return new ZS({ [IS]: cl(r3 = zS(this._data)).call(r3, this._data) });
        } }]), n2;
      }(HS);
      function ax(t2, e2) {
        var r2 = void 0 !== Rp && Xh(t2) || t2["@@iterator"];
        if (!r2) {
          if (Kp(t2) || (r2 = function(t3, e3) {
            var r3;
            if (!t3) return;
            if ("string" == typeof t3) return ux(t3, e3);
            var n3 = qp(r3 = Object.prototype.toString.call(t3)).call(r3, 8, -1);
            "Object" === n3 && t3.constructor && (n3 = t3.constructor.name);
            if ("Map" === n3 || "Set" === n3) return Wh(t3);
            if ("Arguments" === n3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3)) return ux(t3, e3);
          }(t2)) || e2 && t2 && "number" == typeof t2.length) {
            r2 && (t2 = r2);
            var n2 = 0, o2 = function() {
            };
            return { s: o2, n: function() {
              return n2 >= t2.length ? { done: true } : { done: false, value: t2[n2++] };
            }, e: function(t3) {
              throw t3;
            }, f: o2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var i2, a2 = true, u2 = false;
        return { s: function() {
          r2 = r2.call(t2);
        }, n: function() {
          var t3 = r2.next();
          return a2 = t3.done, t3;
        }, e: function(t3) {
          u2 = true, i2 = t3;
        }, f: function() {
          try {
            a2 || null == r2.return || r2.return();
          } finally {
            if (u2) throw i2;
          }
        } };
      }
      function ux(t2, e2) {
        (null == e2 || e2 > t2.length) && (e2 = t2.length);
        for (var r2 = 0, n2 = new Array(e2); r2 < e2; r2++) n2[r2] = t2[r2];
        return n2;
      }
      function sx(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !nm) return false;
          if (nm.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(nm(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var r2, n2 = Fm(t2);
          if (e2) {
            var o2 = Fm(this).constructor;
            r2 = nm(n2, arguments, o2);
          } else r2 = n2.apply(this, arguments);
          return Rm(this, r2);
        };
      }
      var cx = function(t2) {
        Cm(n2, t2);
        var r2 = sx(n2);
        function n2(t3, o2) {
          var i2, a2;
          return e(this, n2), Wf(km(a2 = r2.call(this)), "length", 0), Wf(km(a2), "_ids", new KS()), a2._options = o2 || {}, a2._listener = cl(i2 = a2._onEvent).call(i2, km(a2)), a2.setData(t3), a2;
        }
        return qf(n2, [{ key: "idProp", get: function() {
          return this.getDataSet().idProp;
        } }, { key: "setData", value: function(t3) {
          if (this._data) {
            this._data.off && this._data.off("*", this._listener);
            var e2 = this._data.getIds({ filter: Il(this._options) }), r3 = this._data.get(e2);
            this._ids.clear(), this.length = 0, this._trigger("remove", { items: e2, oldData: r3 });
          }
          if (null != t3) {
            this._data = t3;
            for (var n3 = this._data.getIds({ filter: Il(this._options) }), o2 = 0, i2 = n3.length; o2 < i2; o2++) {
              var a2 = n3[o2];
              this._ids.add(a2);
            }
            this.length = n3.length, this._trigger("add", { items: n3 });
          } else this._data = new ix();
          this._data.on && this._data.on("*", this._listener);
        } }, { key: "refresh", value: function() {
          for (var t3 = this._data.getIds({ filter: Il(this._options) }), e2 = Cp(this._ids), r3 = {}, n3 = [], o2 = [], i2 = [], a2 = 0, u2 = t3.length; a2 < u2; a2++) {
            var s2 = t3[a2];
            r3[s2] = true, this._ids.has(s2) || (n3.push(s2), this._ids.add(s2));
          }
          for (var c2 = 0, f2 = e2.length; c2 < f2; c2++) {
            var l2 = e2[c2], h2 = this._data.get(l2);
            null == h2 ? console.error("If you see this, report it please.") : r3[l2] || (o2.push(l2), i2.push(h2), this._ids.delete(l2));
          }
          this.length += n3.length - o2.length, n3.length && this._trigger("add", { items: n3 }), o2.length && this._trigger("remove", { items: o2, oldData: i2 });
        } }, { key: "get", value: function(t3, e2) {
          if (null == this._data) return null;
          var r3, n3 = null;
          VS(t3) || Kp(t3) ? (n3 = t3, r3 = e2) : r3 = t3;
          var o2 = ed({}, this._options, r3), i2 = Il(this._options), a2 = r3 && Il(r3);
          return i2 && a2 && (o2.filter = function(t4) {
            return i2(t4) && a2(t4);
          }), null == n3 ? this._data.get(o2) : this._data.get(n3, o2);
        } }, { key: "getIds", value: function(t3) {
          if (this._data.length) {
            var e2, r3 = Il(this._options), n3 = null != t3 ? Il(t3) : null;
            return e2 = n3 ? r3 ? function(t4) {
              return r3(t4) && n3(t4);
            } : n3 : r3, this._data.getIds({ filter: e2, order: t3 && t3.order });
          }
          return [];
        } }, { key: "forEach", value: function(t3, e2) {
          if (this._data) {
            var r3, n3, o2 = Il(this._options), i2 = e2 && Il(e2);
            n3 = i2 ? o2 ? function(t4) {
              return o2(t4) && i2(t4);
            } : i2 : o2, cv(r3 = this._data).call(r3, t3, { filter: n3, order: e2 && e2.order });
          }
        } }, { key: "map", value: function(t3, e2) {
          if (this._data) {
            var r3, n3, o2 = Il(this._options), i2 = e2 && Il(e2);
            return n3 = i2 ? o2 ? function(t4) {
              return o2(t4) && i2(t4);
            } : i2 : o2, Nl(r3 = this._data).call(r3, t3, { filter: n3, order: e2 && e2.order });
          }
          return [];
        } }, { key: "getDataSet", value: function() {
          return this._data.getDataSet();
        } }, { key: "stream", value: function(t3) {
          var e2;
          return this._data.stream(t3 || { [IS]: cl(e2 = zO(this._ids)).call(e2, this._ids) });
        } }, { key: "dispose", value: function() {
          var t3;
          null !== (t3 = this._data) && void 0 !== t3 && t3.off && this._data.off("*", this._listener);
          var e2, r3 = "This data view has already been disposed of.", o2 = { get: function() {
            throw new Error(r3);
          }, set: function() {
            throw new Error(r3);
          }, configurable: false }, i2 = ax(Hp(n2.prototype));
          try {
            for (i2.s(); !(e2 = i2.n()).done; ) {
              var a2 = e2.value;
              xm(this, a2, o2);
            }
          } catch (t4) {
            i2.e(t4);
          } finally {
            i2.f();
          }
        } }, { key: "_onEvent", value: function(t3, e2, r3) {
          if (e2 && e2.items && this._data) {
            var n3 = e2.items, o2 = [], i2 = [], a2 = [], u2 = [], s2 = [], c2 = [];
            switch (t3) {
              case "add":
                for (var f2 = 0, l2 = n3.length; f2 < l2; f2++) {
                  var h2 = n3[f2];
                  this.get(h2) && (this._ids.add(h2), o2.push(h2));
                }
                break;
              case "update":
                for (var p2 = 0, v2 = n3.length; p2 < v2; p2++) {
                  var d2 = n3[p2];
                  this.get(d2) ? this._ids.has(d2) ? (i2.push(d2), s2.push(e2.data[p2]), u2.push(e2.oldData[p2])) : (this._ids.add(d2), o2.push(d2)) : this._ids.has(d2) && (this._ids.delete(d2), a2.push(d2), c2.push(e2.oldData[p2]));
                }
                break;
              case "remove":
                for (var y2 = 0, g2 = n3.length; y2 < g2; y2++) {
                  var m2 = n3[y2];
                  this._ids.has(m2) && (this._ids.delete(m2), a2.push(m2), c2.push(e2.oldData[y2]));
                }
            }
            this.length += o2.length - a2.length, o2.length && this._trigger("add", { items: o2 }, r3), i2.length && this._trigger("update", { items: i2, oldData: u2, data: s2 }, r3), a2.length && this._trigger("remove", { items: a2, oldData: c2 }, r3);
          }
        } }]), n2;
      }(HS);
      function fx(t2, e2) {
        return "object" == typeof e2 && null !== e2 && t2 === e2.idProp && "function" == typeof e2.add && "function" == typeof e2.clear && "function" == typeof e2.distinct && "function" == typeof cv(e2) && "function" == typeof e2.get && "function" == typeof e2.getDataSet && "function" == typeof e2.getIds && "number" == typeof e2.length && "function" == typeof Nl(e2) && "function" == typeof e2.max && "function" == typeof e2.min && "function" == typeof e2.off && "function" == typeof e2.on && "function" == typeof e2.remove && "function" == typeof e2.setOptions && "function" == typeof e2.stream && "function" == typeof e2.update && "function" == typeof e2.updateOnly;
      }
      t.DELETE = Dg, t.DataSet = ix, t.DataStream = ZS, t.DataView = cx, t.Queue = BS, t.createNewDataPipeFrom = function(t2) {
        return new th(t2);
      }, t.isDataSetLike = fx, t.isDataViewLike = function(t2, e2) {
        return "object" == typeof e2 && null !== e2 && t2 === e2.idProp && "function" == typeof cv(e2) && "function" == typeof e2.get && "function" == typeof e2.getDataSet && "function" == typeof e2.getIds && "number" == typeof e2.length && "function" == typeof Nl(e2) && "function" == typeof e2.off && "function" == typeof e2.on && "function" == typeof e2.stream && fx(t2, e2.getDataSet());
      };
    });
  }
});

// node_modules/vis-data/peer/umd/vis-data.js
var require_vis_data = __commonJS({
  "node_modules/vis-data/peer/umd/vis-data.js"(exports, module) {
    (function(global2, factory) {
      typeof exports === "object" && typeof module !== "undefined" ? factory(exports) : typeof define === "function" && define.amd ? define(["exports"], factory) : (global2 = typeof globalThis !== "undefined" ? globalThis : global2 || self, factory(global2.vis = global2.vis || {}));
    })(exports, function(exports2) {
      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
      function getDefaultExportFromCjs(x) {
        return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, "default") ? x["default"] : x;
      }
      var defineProperty$f = { exports: {} };
      var check = function(it) {
        return it && it.Math === Math && it;
      };
      var global$p = (
        // eslint-disable-next-line es/no-global-this -- safe
        check(typeof globalThis == "object" && globalThis) || check(typeof window == "object" && window) || // eslint-disable-next-line no-restricted-globals -- safe
        check(typeof self == "object" && self) || check(typeof commonjsGlobal == "object" && commonjsGlobal) || // eslint-disable-next-line no-new-func -- fallback
        /* @__PURE__ */ function() {
          return this;
        }() || commonjsGlobal || Function("return this")()
      );
      var fails$u = function(exec2) {
        try {
          return !!exec2();
        } catch (error) {
          return true;
        }
      };
      var fails$t = fails$u;
      var functionBindNative = !fails$t(function() {
        var test2 = (function() {
        }).bind();
        return typeof test2 != "function" || test2.hasOwnProperty("prototype");
      });
      var NATIVE_BIND$4 = functionBindNative;
      var FunctionPrototype$4 = Function.prototype;
      var apply$6 = FunctionPrototype$4.apply;
      var call$k = FunctionPrototype$4.call;
      var functionApply = typeof Reflect == "object" && Reflect.apply || (NATIVE_BIND$4 ? call$k.bind(apply$6) : function() {
        return call$k.apply(apply$6, arguments);
      });
      var NATIVE_BIND$3 = functionBindNative;
      var FunctionPrototype$3 = Function.prototype;
      var call$j = FunctionPrototype$3.call;
      var uncurryThisWithBind = NATIVE_BIND$3 && FunctionPrototype$3.bind.bind(call$j, call$j);
      var functionUncurryThis = NATIVE_BIND$3 ? uncurryThisWithBind : function(fn) {
        return function() {
          return call$j.apply(fn, arguments);
        };
      };
      var uncurryThis$q = functionUncurryThis;
      var toString$9 = uncurryThis$q({}.toString);
      var stringSlice$1 = uncurryThis$q("".slice);
      var classofRaw$2 = function(it) {
        return stringSlice$1(toString$9(it), 8, -1);
      };
      var classofRaw$1 = classofRaw$2;
      var uncurryThis$p = functionUncurryThis;
      var functionUncurryThisClause = function(fn) {
        if (classofRaw$1(fn) === "Function") return uncurryThis$p(fn);
      };
      var documentAll$2 = typeof document == "object" && document.all;
      var IS_HTMLDDA = typeof documentAll$2 == "undefined" && documentAll$2 !== void 0;
      var documentAll_1 = {
        all: documentAll$2,
        IS_HTMLDDA
      };
      var $documentAll$1 = documentAll_1;
      var documentAll$1 = $documentAll$1.all;
      var isCallable$m = $documentAll$1.IS_HTMLDDA ? function(argument) {
        return typeof argument == "function" || argument === documentAll$1;
      } : function(argument) {
        return typeof argument == "function";
      };
      var objectGetOwnPropertyDescriptor = {};
      var fails$s = fails$u;
      var descriptors = !fails$s(function() {
        return Object.defineProperty({}, 1, { get: function() {
          return 7;
        } })[1] !== 7;
      });
      var NATIVE_BIND$2 = functionBindNative;
      var call$i = Function.prototype.call;
      var functionCall = NATIVE_BIND$2 ? call$i.bind(call$i) : function() {
        return call$i.apply(call$i, arguments);
      };
      var objectPropertyIsEnumerable = {};
      var $propertyIsEnumerable$1 = {}.propertyIsEnumerable;
      var getOwnPropertyDescriptor$7 = Object.getOwnPropertyDescriptor;
      var NASHORN_BUG = getOwnPropertyDescriptor$7 && !$propertyIsEnumerable$1.call({ 1: 2 }, 1);
      objectPropertyIsEnumerable.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
        var descriptor = getOwnPropertyDescriptor$7(this, V);
        return !!descriptor && descriptor.enumerable;
      } : $propertyIsEnumerable$1;
      var createPropertyDescriptor$7 = function(bitmap, value) {
        return {
          enumerable: !(bitmap & 1),
          configurable: !(bitmap & 2),
          writable: !(bitmap & 4),
          value
        };
      };
      var uncurryThis$o = functionUncurryThis;
      var fails$r = fails$u;
      var classof$f = classofRaw$2;
      var $Object$4 = Object;
      var split = uncurryThis$o("".split);
      var indexedObject = fails$r(function() {
        return !$Object$4("z").propertyIsEnumerable(0);
      }) ? function(it) {
        return classof$f(it) === "String" ? split(it, "") : $Object$4(it);
      } : $Object$4;
      var isNullOrUndefined$6 = function(it) {
        return it === null || it === void 0;
      };
      var isNullOrUndefined$5 = isNullOrUndefined$6;
      var $TypeError$g = TypeError;
      var requireObjectCoercible$3 = function(it) {
        if (isNullOrUndefined$5(it)) throw new $TypeError$g("Can't call method on " + it);
        return it;
      };
      var IndexedObject$3 = indexedObject;
      var requireObjectCoercible$2 = requireObjectCoercible$3;
      var toIndexedObject$a = function(it) {
        return IndexedObject$3(requireObjectCoercible$2(it));
      };
      var isCallable$l = isCallable$m;
      var $documentAll = documentAll_1;
      var documentAll = $documentAll.all;
      var isObject$h = $documentAll.IS_HTMLDDA ? function(it) {
        return typeof it == "object" ? it !== null : isCallable$l(it) || it === documentAll;
      } : function(it) {
        return typeof it == "object" ? it !== null : isCallable$l(it);
      };
      var path$o = {};
      var path$n = path$o;
      var global$o = global$p;
      var isCallable$k = isCallable$m;
      var aFunction = function(variable) {
        return isCallable$k(variable) ? variable : void 0;
      };
      var getBuiltIn$f = function(namespace, method2) {
        return arguments.length < 2 ? aFunction(path$n[namespace]) || aFunction(global$o[namespace]) : path$n[namespace] && path$n[namespace][method2] || global$o[namespace] && global$o[namespace][method2];
      };
      var uncurryThis$n = functionUncurryThis;
      var objectIsPrototypeOf = uncurryThis$n({}.isPrototypeOf);
      var engineUserAgent = typeof navigator != "undefined" && String(navigator.userAgent) || "";
      var global$n = global$p;
      var userAgent$5 = engineUserAgent;
      var process$3 = global$n.process;
      var Deno$1 = global$n.Deno;
      var versions = process$3 && process$3.versions || Deno$1 && Deno$1.version;
      var v8 = versions && versions.v8;
      var match, version;
      if (v8) {
        match = v8.split(".");
        version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
      }
      if (!version && userAgent$5) {
        match = userAgent$5.match(/Edge\/(\d+)/);
        if (!match || match[1] >= 74) {
          match = userAgent$5.match(/Chrome\/(\d+)/);
          if (match) version = +match[1];
        }
      }
      var engineV8Version = version;
      var V8_VERSION$3 = engineV8Version;
      var fails$q = fails$u;
      var global$m = global$p;
      var $String$5 = global$m.String;
      var symbolConstructorDetection = !!Object.getOwnPropertySymbols && !fails$q(function() {
        var symbol2 = Symbol("symbol detection");
        return !$String$5(symbol2) || !(Object(symbol2) instanceof Symbol) || // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
        !Symbol.sham && V8_VERSION$3 && V8_VERSION$3 < 41;
      });
      var NATIVE_SYMBOL$5 = symbolConstructorDetection;
      var useSymbolAsUid = NATIVE_SYMBOL$5 && !Symbol.sham && typeof Symbol.iterator == "symbol";
      var getBuiltIn$e = getBuiltIn$f;
      var isCallable$j = isCallable$m;
      var isPrototypeOf$k = objectIsPrototypeOf;
      var USE_SYMBOL_AS_UID$1 = useSymbolAsUid;
      var $Object$3 = Object;
      var isSymbol$5 = USE_SYMBOL_AS_UID$1 ? function(it) {
        return typeof it == "symbol";
      } : function(it) {
        var $Symbol2 = getBuiltIn$e("Symbol");
        return isCallable$j($Symbol2) && isPrototypeOf$k($Symbol2.prototype, $Object$3(it));
      };
      var $String$4 = String;
      var tryToString$6 = function(argument) {
        try {
          return $String$4(argument);
        } catch (error) {
          return "Object";
        }
      };
      var isCallable$i = isCallable$m;
      var tryToString$5 = tryToString$6;
      var $TypeError$f = TypeError;
      var aCallable$e = function(argument) {
        if (isCallable$i(argument)) return argument;
        throw new $TypeError$f(tryToString$5(argument) + " is not a function");
      };
      var aCallable$d = aCallable$e;
      var isNullOrUndefined$4 = isNullOrUndefined$6;
      var getMethod$3 = function(V, P) {
        var func = V[P];
        return isNullOrUndefined$4(func) ? void 0 : aCallable$d(func);
      };
      var call$h = functionCall;
      var isCallable$h = isCallable$m;
      var isObject$g = isObject$h;
      var $TypeError$e = TypeError;
      var ordinaryToPrimitive$1 = function(input, pref) {
        var fn, val;
        if (pref === "string" && isCallable$h(fn = input.toString) && !isObject$g(val = call$h(fn, input))) return val;
        if (isCallable$h(fn = input.valueOf) && !isObject$g(val = call$h(fn, input))) return val;
        if (pref !== "string" && isCallable$h(fn = input.toString) && !isObject$g(val = call$h(fn, input))) return val;
        throw new $TypeError$e("Can't convert object to primitive value");
      };
      var shared$7 = { exports: {} };
      var isPure = true;
      var global$l = global$p;
      var defineProperty$e = Object.defineProperty;
      var defineGlobalProperty$1 = function(key, value) {
        try {
          defineProperty$e(global$l, key, { value, configurable: true, writable: true });
        } catch (error) {
          global$l[key] = value;
        }
        return value;
      };
      var global$k = global$p;
      var defineGlobalProperty = defineGlobalProperty$1;
      var SHARED = "__core-js_shared__";
      var store$3 = global$k[SHARED] || defineGlobalProperty(SHARED, {});
      var sharedStore = store$3;
      var store$2 = sharedStore;
      (shared$7.exports = function(key, value) {
        return store$2[key] || (store$2[key] = value !== void 0 ? value : {});
      })("versions", []).push({
        version: "3.33.2",
        mode: "pure",
        copyright: "© 2014-2023 Denis Pushkarev (zloirock.ru)",
        license: "https://github.com/zloirock/core-js/blob/v3.33.2/LICENSE",
        source: "https://github.com/zloirock/core-js"
      });
      var sharedExports = shared$7.exports;
      var requireObjectCoercible$1 = requireObjectCoercible$3;
      var $Object$2 = Object;
      var toObject$e = function(argument) {
        return $Object$2(requireObjectCoercible$1(argument));
      };
      var uncurryThis$m = functionUncurryThis;
      var toObject$d = toObject$e;
      var hasOwnProperty = uncurryThis$m({}.hasOwnProperty);
      var hasOwnProperty_1 = Object.hasOwn || function hasOwn2(it, key) {
        return hasOwnProperty(toObject$d(it), key);
      };
      var uncurryThis$l = functionUncurryThis;
      var id$1 = 0;
      var postfix = Math.random();
      var toString$8 = uncurryThis$l(1 .toString);
      var uid$4 = function(key) {
        return "Symbol(" + (key === void 0 ? "" : key) + ")_" + toString$8(++id$1 + postfix, 36);
      };
      var global$j = global$p;
      var shared$6 = sharedExports;
      var hasOwn$j = hasOwnProperty_1;
      var uid$3 = uid$4;
      var NATIVE_SYMBOL$4 = symbolConstructorDetection;
      var USE_SYMBOL_AS_UID = useSymbolAsUid;
      var Symbol$3 = global$j.Symbol;
      var WellKnownSymbolsStore$2 = shared$6("wks");
      var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol$3["for"] || Symbol$3 : Symbol$3 && Symbol$3.withoutSetter || uid$3;
      var wellKnownSymbol$n = function(name) {
        if (!hasOwn$j(WellKnownSymbolsStore$2, name)) {
          WellKnownSymbolsStore$2[name] = NATIVE_SYMBOL$4 && hasOwn$j(Symbol$3, name) ? Symbol$3[name] : createWellKnownSymbol("Symbol." + name);
        }
        return WellKnownSymbolsStore$2[name];
      };
      var call$g = functionCall;
      var isObject$f = isObject$h;
      var isSymbol$4 = isSymbol$5;
      var getMethod$2 = getMethod$3;
      var ordinaryToPrimitive = ordinaryToPrimitive$1;
      var wellKnownSymbol$m = wellKnownSymbol$n;
      var $TypeError$d = TypeError;
      var TO_PRIMITIVE = wellKnownSymbol$m("toPrimitive");
      var toPrimitive$6 = function(input, pref) {
        if (!isObject$f(input) || isSymbol$4(input)) return input;
        var exoticToPrim = getMethod$2(input, TO_PRIMITIVE);
        var result;
        if (exoticToPrim) {
          if (pref === void 0) pref = "default";
          result = call$g(exoticToPrim, input, pref);
          if (!isObject$f(result) || isSymbol$4(result)) return result;
          throw new $TypeError$d("Can't convert object to primitive value");
        }
        if (pref === void 0) pref = "number";
        return ordinaryToPrimitive(input, pref);
      };
      var toPrimitive$5 = toPrimitive$6;
      var isSymbol$3 = isSymbol$5;
      var toPropertyKey$4 = function(argument) {
        var key = toPrimitive$5(argument, "string");
        return isSymbol$3(key) ? key : key + "";
      };
      var global$i = global$p;
      var isObject$e = isObject$h;
      var document$3 = global$i.document;
      var EXISTS$1 = isObject$e(document$3) && isObject$e(document$3.createElement);
      var documentCreateElement$1 = function(it) {
        return EXISTS$1 ? document$3.createElement(it) : {};
      };
      var DESCRIPTORS$h = descriptors;
      var fails$p = fails$u;
      var createElement$1 = documentCreateElement$1;
      var ie8DomDefine = !DESCRIPTORS$h && !fails$p(function() {
        return Object.defineProperty(createElement$1("div"), "a", {
          get: function() {
            return 7;
          }
        }).a !== 7;
      });
      var DESCRIPTORS$g = descriptors;
      var call$f = functionCall;
      var propertyIsEnumerableModule$2 = objectPropertyIsEnumerable;
      var createPropertyDescriptor$6 = createPropertyDescriptor$7;
      var toIndexedObject$9 = toIndexedObject$a;
      var toPropertyKey$3 = toPropertyKey$4;
      var hasOwn$i = hasOwnProperty_1;
      var IE8_DOM_DEFINE$1 = ie8DomDefine;
      var $getOwnPropertyDescriptor$2 = Object.getOwnPropertyDescriptor;
      objectGetOwnPropertyDescriptor.f = DESCRIPTORS$g ? $getOwnPropertyDescriptor$2 : function getOwnPropertyDescriptor2(O, P) {
        O = toIndexedObject$9(O);
        P = toPropertyKey$3(P);
        if (IE8_DOM_DEFINE$1) try {
          return $getOwnPropertyDescriptor$2(O, P);
        } catch (error) {
        }
        if (hasOwn$i(O, P)) return createPropertyDescriptor$6(!call$f(propertyIsEnumerableModule$2.f, O, P), O[P]);
      };
      var fails$o = fails$u;
      var isCallable$g = isCallable$m;
      var replacement = /#|\.prototype\./;
      var isForced$2 = function(feature, detection) {
        var value = data[normalize(feature)];
        return value === POLYFILL ? true : value === NATIVE ? false : isCallable$g(detection) ? fails$o(detection) : !!detection;
      };
      var normalize = isForced$2.normalize = function(string) {
        return String(string).replace(replacement, ".").toLowerCase();
      };
      var data = isForced$2.data = {};
      var NATIVE = isForced$2.NATIVE = "N";
      var POLYFILL = isForced$2.POLYFILL = "P";
      var isForced_1 = isForced$2;
      var uncurryThis$k = functionUncurryThisClause;
      var aCallable$c = aCallable$e;
      var NATIVE_BIND$1 = functionBindNative;
      var bind$i = uncurryThis$k(uncurryThis$k.bind);
      var functionBindContext = function(fn, that) {
        aCallable$c(fn);
        return that === void 0 ? fn : NATIVE_BIND$1 ? bind$i(fn, that) : function() {
          return fn.apply(that, arguments);
        };
      };
      var objectDefineProperty = {};
      var DESCRIPTORS$f = descriptors;
      var fails$n = fails$u;
      var v8PrototypeDefineBug = DESCRIPTORS$f && fails$n(function() {
        return Object.defineProperty(function() {
        }, "prototype", {
          value: 42,
          writable: false
        }).prototype !== 42;
      });
      var isObject$d = isObject$h;
      var $String$3 = String;
      var $TypeError$c = TypeError;
      var anObject$d = function(argument) {
        if (isObject$d(argument)) return argument;
        throw new $TypeError$c($String$3(argument) + " is not an object");
      };
      var DESCRIPTORS$e = descriptors;
      var IE8_DOM_DEFINE = ie8DomDefine;
      var V8_PROTOTYPE_DEFINE_BUG$1 = v8PrototypeDefineBug;
      var anObject$c = anObject$d;
      var toPropertyKey$2 = toPropertyKey$4;
      var $TypeError$b = TypeError;
      var $defineProperty$1 = Object.defineProperty;
      var $getOwnPropertyDescriptor$1 = Object.getOwnPropertyDescriptor;
      var ENUMERABLE = "enumerable";
      var CONFIGURABLE$1 = "configurable";
      var WRITABLE = "writable";
      objectDefineProperty.f = DESCRIPTORS$e ? V8_PROTOTYPE_DEFINE_BUG$1 ? function defineProperty2(O, P, Attributes) {
        anObject$c(O);
        P = toPropertyKey$2(P);
        anObject$c(Attributes);
        if (typeof O === "function" && P === "prototype" && "value" in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
          var current = $getOwnPropertyDescriptor$1(O, P);
          if (current && current[WRITABLE]) {
            O[P] = Attributes.value;
            Attributes = {
              configurable: CONFIGURABLE$1 in Attributes ? Attributes[CONFIGURABLE$1] : current[CONFIGURABLE$1],
              enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
              writable: false
            };
          }
        }
        return $defineProperty$1(O, P, Attributes);
      } : $defineProperty$1 : function defineProperty2(O, P, Attributes) {
        anObject$c(O);
        P = toPropertyKey$2(P);
        anObject$c(Attributes);
        if (IE8_DOM_DEFINE) try {
          return $defineProperty$1(O, P, Attributes);
        } catch (error) {
        }
        if ("get" in Attributes || "set" in Attributes) throw new $TypeError$b("Accessors not supported");
        if ("value" in Attributes) O[P] = Attributes.value;
        return O;
      };
      var DESCRIPTORS$d = descriptors;
      var definePropertyModule$4 = objectDefineProperty;
      var createPropertyDescriptor$5 = createPropertyDescriptor$7;
      var createNonEnumerableProperty$9 = DESCRIPTORS$d ? function(object, key, value) {
        return definePropertyModule$4.f(object, key, createPropertyDescriptor$5(1, value));
      } : function(object, key, value) {
        object[key] = value;
        return object;
      };
      var global$h = global$p;
      var apply$5 = functionApply;
      var uncurryThis$j = functionUncurryThisClause;
      var isCallable$f = isCallable$m;
      var getOwnPropertyDescriptor$6 = objectGetOwnPropertyDescriptor.f;
      var isForced$1 = isForced_1;
      var path$m = path$o;
      var bind$h = functionBindContext;
      var createNonEnumerableProperty$8 = createNonEnumerableProperty$9;
      var hasOwn$h = hasOwnProperty_1;
      var wrapConstructor = function(NativeConstructor) {
        var Wrapper = function(a, b, c) {
          if (this instanceof Wrapper) {
            switch (arguments.length) {
              case 0:
                return new NativeConstructor();
              case 1:
                return new NativeConstructor(a);
              case 2:
                return new NativeConstructor(a, b);
            }
            return new NativeConstructor(a, b, c);
          }
          return apply$5(NativeConstructor, this, arguments);
        };
        Wrapper.prototype = NativeConstructor.prototype;
        return Wrapper;
      };
      var _export = function(options, source) {
        var TARGET = options.target;
        var GLOBAL = options.global;
        var STATIC = options.stat;
        var PROTO = options.proto;
        var nativeSource = GLOBAL ? global$h : STATIC ? global$h[TARGET] : (global$h[TARGET] || {}).prototype;
        var target = GLOBAL ? path$m : path$m[TARGET] || createNonEnumerableProperty$8(path$m, TARGET, {})[TARGET];
        var targetPrototype = target.prototype;
        var FORCED2, USE_NATIVE, VIRTUAL_PROTOTYPE;
        var key, sourceProperty, targetProperty, nativeProperty, resultProperty, descriptor;
        for (key in source) {
          FORCED2 = isForced$1(GLOBAL ? key : TARGET + (STATIC ? "." : "#") + key, options.forced);
          USE_NATIVE = !FORCED2 && nativeSource && hasOwn$h(nativeSource, key);
          targetProperty = target[key];
          if (USE_NATIVE) if (options.dontCallGetSet) {
            descriptor = getOwnPropertyDescriptor$6(nativeSource, key);
            nativeProperty = descriptor && descriptor.value;
          } else nativeProperty = nativeSource[key];
          sourceProperty = USE_NATIVE && nativeProperty ? nativeProperty : source[key];
          if (USE_NATIVE && typeof targetProperty == typeof sourceProperty) continue;
          if (options.bind && USE_NATIVE) resultProperty = bind$h(sourceProperty, global$h);
          else if (options.wrap && USE_NATIVE) resultProperty = wrapConstructor(sourceProperty);
          else if (PROTO && isCallable$f(sourceProperty)) resultProperty = uncurryThis$j(sourceProperty);
          else resultProperty = sourceProperty;
          if (options.sham || sourceProperty && sourceProperty.sham || targetProperty && targetProperty.sham) {
            createNonEnumerableProperty$8(resultProperty, "sham", true);
          }
          createNonEnumerableProperty$8(target, key, resultProperty);
          if (PROTO) {
            VIRTUAL_PROTOTYPE = TARGET + "Prototype";
            if (!hasOwn$h(path$m, VIRTUAL_PROTOTYPE)) {
              createNonEnumerableProperty$8(path$m, VIRTUAL_PROTOTYPE, {});
            }
            createNonEnumerableProperty$8(path$m[VIRTUAL_PROTOTYPE], key, sourceProperty);
            if (options.real && targetPrototype && (FORCED2 || !targetPrototype[key])) {
              createNonEnumerableProperty$8(targetPrototype, key, sourceProperty);
            }
          }
        }
      };
      var $$P = _export;
      var DESCRIPTORS$c = descriptors;
      var defineProperty$d = objectDefineProperty.f;
      $$P({ target: "Object", stat: true, forced: Object.defineProperty !== defineProperty$d, sham: !DESCRIPTORS$c }, {
        defineProperty: defineProperty$d
      });
      var path$l = path$o;
      var Object$4 = path$l.Object;
      var defineProperty$c = defineProperty$f.exports = function defineProperty2(it, key, desc) {
        return Object$4.defineProperty(it, key, desc);
      };
      if (Object$4.defineProperty.sham) defineProperty$c.sham = true;
      var definePropertyExports = defineProperty$f.exports;
      var parent$18 = definePropertyExports;
      var defineProperty$b = parent$18;
      var parent$17 = defineProperty$b;
      var defineProperty$a = parent$17;
      var parent$16 = defineProperty$a;
      var defineProperty$9 = parent$16;
      var defineProperty$8 = defineProperty$9;
      var _Object$defineProperty$1 = getDefaultExportFromCjs(defineProperty$8);
      var classof$e = classofRaw$2;
      var isArray$e = Array.isArray || function isArray2(argument) {
        return classof$e(argument) === "Array";
      };
      var ceil = Math.ceil;
      var floor$1 = Math.floor;
      var mathTrunc = Math.trunc || function trunc2(x) {
        var n = +x;
        return (n > 0 ? floor$1 : ceil)(n);
      };
      var trunc = mathTrunc;
      var toIntegerOrInfinity$4 = function(argument) {
        var number = +argument;
        return number !== number || number === 0 ? 0 : trunc(number);
      };
      var toIntegerOrInfinity$3 = toIntegerOrInfinity$4;
      var min$2 = Math.min;
      var toLength$1 = function(argument) {
        return argument > 0 ? min$2(toIntegerOrInfinity$3(argument), 9007199254740991) : 0;
      };
      var toLength = toLength$1;
      var lengthOfArrayLike$d = function(obj) {
        return toLength(obj.length);
      };
      var $TypeError$a = TypeError;
      var MAX_SAFE_INTEGER = 9007199254740991;
      var doesNotExceedSafeInteger$4 = function(it) {
        if (it > MAX_SAFE_INTEGER) throw $TypeError$a("Maximum allowed index exceeded");
        return it;
      };
      var toPropertyKey$1 = toPropertyKey$4;
      var definePropertyModule$3 = objectDefineProperty;
      var createPropertyDescriptor$4 = createPropertyDescriptor$7;
      var createProperty$6 = function(object, key, value) {
        var propertyKey = toPropertyKey$1(key);
        if (propertyKey in object) definePropertyModule$3.f(object, propertyKey, createPropertyDescriptor$4(0, value));
        else object[propertyKey] = value;
      };
      var wellKnownSymbol$l = wellKnownSymbol$n;
      var TO_STRING_TAG$4 = wellKnownSymbol$l("toStringTag");
      var test$2 = {};
      test$2[TO_STRING_TAG$4] = "z";
      var toStringTagSupport = String(test$2) === "[object z]";
      var TO_STRING_TAG_SUPPORT$2 = toStringTagSupport;
      var isCallable$e = isCallable$m;
      var classofRaw = classofRaw$2;
      var wellKnownSymbol$k = wellKnownSymbol$n;
      var TO_STRING_TAG$3 = wellKnownSymbol$k("toStringTag");
      var $Object$1 = Object;
      var CORRECT_ARGUMENTS = classofRaw(/* @__PURE__ */ function() {
        return arguments;
      }()) === "Arguments";
      var tryGet = function(it, key) {
        try {
          return it[key];
        } catch (error) {
        }
      };
      var classof$d = TO_STRING_TAG_SUPPORT$2 ? classofRaw : function(it) {
        var O, tag, result;
        return it === void 0 ? "Undefined" : it === null ? "Null" : typeof (tag = tryGet(O = $Object$1(it), TO_STRING_TAG$3)) == "string" ? tag : CORRECT_ARGUMENTS ? classofRaw(O) : (result = classofRaw(O)) === "Object" && isCallable$e(O.callee) ? "Arguments" : result;
      };
      var uncurryThis$i = functionUncurryThis;
      var isCallable$d = isCallable$m;
      var store$1 = sharedStore;
      var functionToString = uncurryThis$i(Function.toString);
      if (!isCallable$d(store$1.inspectSource)) {
        store$1.inspectSource = function(it) {
          return functionToString(it);
        };
      }
      var inspectSource$2 = store$1.inspectSource;
      var uncurryThis$h = functionUncurryThis;
      var fails$m = fails$u;
      var isCallable$c = isCallable$m;
      var classof$c = classof$d;
      var getBuiltIn$d = getBuiltIn$f;
      var inspectSource$1 = inspectSource$2;
      var noop = function() {
      };
      var empty = [];
      var construct$4 = getBuiltIn$d("Reflect", "construct");
      var constructorRegExp = /^\s*(?:class|function)\b/;
      var exec$1 = uncurryThis$h(constructorRegExp.exec);
      var INCORRECT_TO_STRING = !constructorRegExp.test(noop);
      var isConstructorModern = function isConstructor2(argument) {
        if (!isCallable$c(argument)) return false;
        try {
          construct$4(noop, empty, argument);
          return true;
        } catch (error) {
          return false;
        }
      };
      var isConstructorLegacy = function isConstructor2(argument) {
        if (!isCallable$c(argument)) return false;
        switch (classof$c(argument)) {
          case "AsyncFunction":
          case "GeneratorFunction":
          case "AsyncGeneratorFunction":
            return false;
        }
        try {
          return INCORRECT_TO_STRING || !!exec$1(constructorRegExp, inspectSource$1(argument));
        } catch (error) {
          return true;
        }
      };
      isConstructorLegacy.sham = true;
      var isConstructor$4 = !construct$4 || fails$m(function() {
        var called2;
        return isConstructorModern(isConstructorModern.call) || !isConstructorModern(Object) || !isConstructorModern(function() {
          called2 = true;
        }) || called2;
      }) ? isConstructorLegacy : isConstructorModern;
      var isArray$d = isArray$e;
      var isConstructor$3 = isConstructor$4;
      var isObject$c = isObject$h;
      var wellKnownSymbol$j = wellKnownSymbol$n;
      var SPECIES$5 = wellKnownSymbol$j("species");
      var $Array$3 = Array;
      var arraySpeciesConstructor$1 = function(originalArray) {
        var C;
        if (isArray$d(originalArray)) {
          C = originalArray.constructor;
          if (isConstructor$3(C) && (C === $Array$3 || isArray$d(C.prototype))) C = void 0;
          else if (isObject$c(C)) {
            C = C[SPECIES$5];
            if (C === null) C = void 0;
          }
        }
        return C === void 0 ? $Array$3 : C;
      };
      var arraySpeciesConstructor = arraySpeciesConstructor$1;
      var arraySpeciesCreate$4 = function(originalArray, length2) {
        return new (arraySpeciesConstructor(originalArray))(length2 === 0 ? 0 : length2);
      };
      var fails$l = fails$u;
      var wellKnownSymbol$i = wellKnownSymbol$n;
      var V8_VERSION$2 = engineV8Version;
      var SPECIES$4 = wellKnownSymbol$i("species");
      var arrayMethodHasSpeciesSupport$5 = function(METHOD_NAME) {
        return V8_VERSION$2 >= 51 || !fails$l(function() {
          var array = [];
          var constructor = array.constructor = {};
          constructor[SPECIES$4] = function() {
            return { foo: 1 };
          };
          return array[METHOD_NAME](Boolean).foo !== 1;
        });
      };
      var $$O = _export;
      var fails$k = fails$u;
      var isArray$c = isArray$e;
      var isObject$b = isObject$h;
      var toObject$c = toObject$e;
      var lengthOfArrayLike$c = lengthOfArrayLike$d;
      var doesNotExceedSafeInteger$3 = doesNotExceedSafeInteger$4;
      var createProperty$5 = createProperty$6;
      var arraySpeciesCreate$3 = arraySpeciesCreate$4;
      var arrayMethodHasSpeciesSupport$4 = arrayMethodHasSpeciesSupport$5;
      var wellKnownSymbol$h = wellKnownSymbol$n;
      var V8_VERSION$1 = engineV8Version;
      var IS_CONCAT_SPREADABLE = wellKnownSymbol$h("isConcatSpreadable");
      var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION$1 >= 51 || !fails$k(function() {
        var array = [];
        array[IS_CONCAT_SPREADABLE] = false;
        return array.concat()[0] !== array;
      });
      var isConcatSpreadable = function(O) {
        if (!isObject$b(O)) return false;
        var spreadable = O[IS_CONCAT_SPREADABLE];
        return spreadable !== void 0 ? !!spreadable : isArray$c(O);
      };
      var FORCED$6 = !IS_CONCAT_SPREADABLE_SUPPORT || !arrayMethodHasSpeciesSupport$4("concat");
      $$O({ target: "Array", proto: true, arity: 1, forced: FORCED$6 }, {
        // eslint-disable-next-line no-unused-vars -- required for `.length`
        concat: function concat2(arg) {
          var O = toObject$c(this);
          var A = arraySpeciesCreate$3(O, 0);
          var n = 0;
          var i2, k, length2, len, E;
          for (i2 = -1, length2 = arguments.length; i2 < length2; i2++) {
            E = i2 === -1 ? O : arguments[i2];
            if (isConcatSpreadable(E)) {
              len = lengthOfArrayLike$c(E);
              doesNotExceedSafeInteger$3(n + len);
              for (k = 0; k < len; k++, n++) if (k in E) createProperty$5(A, n, E[k]);
            } else {
              doesNotExceedSafeInteger$3(n + 1);
              createProperty$5(A, n++, E);
            }
          }
          A.length = n;
          return A;
        }
      });
      var classof$b = classof$d;
      var $String$2 = String;
      var toString$7 = function(argument) {
        if (classof$b(argument) === "Symbol") throw new TypeError("Cannot convert a Symbol value to a string");
        return $String$2(argument);
      };
      var objectDefineProperties = {};
      var toIntegerOrInfinity$2 = toIntegerOrInfinity$4;
      var max$3 = Math.max;
      var min$1 = Math.min;
      var toAbsoluteIndex$4 = function(index, length2) {
        var integer = toIntegerOrInfinity$2(index);
        return integer < 0 ? max$3(integer + length2, 0) : min$1(integer, length2);
      };
      var toIndexedObject$8 = toIndexedObject$a;
      var toAbsoluteIndex$3 = toAbsoluteIndex$4;
      var lengthOfArrayLike$b = lengthOfArrayLike$d;
      var createMethod$3 = function(IS_INCLUDES) {
        return function($this, el, fromIndex) {
          var O = toIndexedObject$8($this);
          var length2 = lengthOfArrayLike$b(O);
          var index = toAbsoluteIndex$3(fromIndex, length2);
          var value;
          if (IS_INCLUDES && el !== el) while (length2 > index) {
            value = O[index++];
            if (value !== value) return true;
          }
          else for (; length2 > index; index++) {
            if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
          }
          return !IS_INCLUDES && -1;
        };
      };
      var arrayIncludes = {
        // `Array.prototype.includes` method
        // https://tc39.es/ecma262/#sec-array.prototype.includes
        includes: createMethod$3(true),
        // `Array.prototype.indexOf` method
        // https://tc39.es/ecma262/#sec-array.prototype.indexof
        indexOf: createMethod$3(false)
      };
      var hiddenKeys$6 = {};
      var uncurryThis$g = functionUncurryThis;
      var hasOwn$g = hasOwnProperty_1;
      var toIndexedObject$7 = toIndexedObject$a;
      var indexOf = arrayIncludes.indexOf;
      var hiddenKeys$5 = hiddenKeys$6;
      var push$c = uncurryThis$g([].push);
      var objectKeysInternal = function(object, names) {
        var O = toIndexedObject$7(object);
        var i2 = 0;
        var result = [];
        var key;
        for (key in O) !hasOwn$g(hiddenKeys$5, key) && hasOwn$g(O, key) && push$c(result, key);
        while (names.length > i2) if (hasOwn$g(O, key = names[i2++])) {
          ~indexOf(result, key) || push$c(result, key);
        }
        return result;
      };
      var enumBugKeys$3 = [
        "constructor",
        "hasOwnProperty",
        "isPrototypeOf",
        "propertyIsEnumerable",
        "toLocaleString",
        "toString",
        "valueOf"
      ];
      var internalObjectKeys$1 = objectKeysInternal;
      var enumBugKeys$2 = enumBugKeys$3;
      var objectKeys$3 = Object.keys || function keys2(O) {
        return internalObjectKeys$1(O, enumBugKeys$2);
      };
      var DESCRIPTORS$b = descriptors;
      var V8_PROTOTYPE_DEFINE_BUG = v8PrototypeDefineBug;
      var definePropertyModule$2 = objectDefineProperty;
      var anObject$b = anObject$d;
      var toIndexedObject$6 = toIndexedObject$a;
      var objectKeys$2 = objectKeys$3;
      objectDefineProperties.f = DESCRIPTORS$b && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties2(O, Properties) {
        anObject$b(O);
        var props = toIndexedObject$6(Properties);
        var keys2 = objectKeys$2(Properties);
        var length2 = keys2.length;
        var index = 0;
        var key;
        while (length2 > index) definePropertyModule$2.f(O, key = keys2[index++], props[key]);
        return O;
      };
      var getBuiltIn$c = getBuiltIn$f;
      var html$2 = getBuiltIn$c("document", "documentElement");
      var shared$5 = sharedExports;
      var uid$2 = uid$4;
      var keys$7 = shared$5("keys");
      var sharedKey$4 = function(key) {
        return keys$7[key] || (keys$7[key] = uid$2(key));
      };
      var anObject$a = anObject$d;
      var definePropertiesModule$1 = objectDefineProperties;
      var enumBugKeys$1 = enumBugKeys$3;
      var hiddenKeys$4 = hiddenKeys$6;
      var html$1 = html$2;
      var documentCreateElement = documentCreateElement$1;
      var sharedKey$3 = sharedKey$4;
      var GT = ">";
      var LT = "<";
      var PROTOTYPE$1 = "prototype";
      var SCRIPT = "script";
      var IE_PROTO$1 = sharedKey$3("IE_PROTO");
      var EmptyConstructor = function() {
      };
      var scriptTag = function(content) {
        return LT + SCRIPT + GT + content + LT + "/" + SCRIPT + GT;
      };
      var NullProtoObjectViaActiveX = function(activeXDocument2) {
        activeXDocument2.write(scriptTag(""));
        activeXDocument2.close();
        var temp = activeXDocument2.parentWindow.Object;
        activeXDocument2 = null;
        return temp;
      };
      var NullProtoObjectViaIFrame = function() {
        var iframe = documentCreateElement("iframe");
        var JS = "java" + SCRIPT + ":";
        var iframeDocument;
        iframe.style.display = "none";
        html$1.appendChild(iframe);
        iframe.src = String(JS);
        iframeDocument = iframe.contentWindow.document;
        iframeDocument.open();
        iframeDocument.write(scriptTag("document.F=Object"));
        iframeDocument.close();
        return iframeDocument.F;
      };
      var activeXDocument;
      var NullProtoObject = function() {
        try {
          activeXDocument = new ActiveXObject("htmlfile");
        } catch (error) {
        }
        NullProtoObject = typeof document != "undefined" ? document.domain && activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame() : NullProtoObjectViaActiveX(activeXDocument);
        var length2 = enumBugKeys$1.length;
        while (length2--) delete NullProtoObject[PROTOTYPE$1][enumBugKeys$1[length2]];
        return NullProtoObject();
      };
      hiddenKeys$4[IE_PROTO$1] = true;
      var objectCreate = Object.create || function create2(O, Properties) {
        var result;
        if (O !== null) {
          EmptyConstructor[PROTOTYPE$1] = anObject$a(O);
          result = new EmptyConstructor();
          EmptyConstructor[PROTOTYPE$1] = null;
          result[IE_PROTO$1] = O;
        } else result = NullProtoObject();
        return Properties === void 0 ? result : definePropertiesModule$1.f(result, Properties);
      };
      var objectGetOwnPropertyNames = {};
      var internalObjectKeys = objectKeysInternal;
      var enumBugKeys = enumBugKeys$3;
      var hiddenKeys$3 = enumBugKeys.concat("length", "prototype");
      objectGetOwnPropertyNames.f = Object.getOwnPropertyNames || function getOwnPropertyNames2(O) {
        return internalObjectKeys(O, hiddenKeys$3);
      };
      var objectGetOwnPropertyNamesExternal = {};
      var toAbsoluteIndex$2 = toAbsoluteIndex$4;
      var lengthOfArrayLike$a = lengthOfArrayLike$d;
      var createProperty$4 = createProperty$6;
      var $Array$2 = Array;
      var max$2 = Math.max;
      var arraySliceSimple = function(O, start, end) {
        var length2 = lengthOfArrayLike$a(O);
        var k = toAbsoluteIndex$2(start, length2);
        var fin = toAbsoluteIndex$2(end === void 0 ? length2 : end, length2);
        var result = $Array$2(max$2(fin - k, 0));
        var n = 0;
        for (; k < fin; k++, n++) createProperty$4(result, n, O[k]);
        result.length = n;
        return result;
      };
      var classof$a = classofRaw$2;
      var toIndexedObject$5 = toIndexedObject$a;
      var $getOwnPropertyNames$1 = objectGetOwnPropertyNames.f;
      var arraySlice$6 = arraySliceSimple;
      var windowNames = typeof window == "object" && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
      var getWindowNames = function(it) {
        try {
          return $getOwnPropertyNames$1(it);
        } catch (error) {
          return arraySlice$6(windowNames);
        }
      };
      objectGetOwnPropertyNamesExternal.f = function getOwnPropertyNames2(it) {
        return windowNames && classof$a(it) === "Window" ? getWindowNames(it) : $getOwnPropertyNames$1(toIndexedObject$5(it));
      };
      var objectGetOwnPropertySymbols = {};
      objectGetOwnPropertySymbols.f = Object.getOwnPropertySymbols;
      var createNonEnumerableProperty$7 = createNonEnumerableProperty$9;
      var defineBuiltIn$6 = function(target, key, value, options) {
        if (options && options.enumerable) target[key] = value;
        else createNonEnumerableProperty$7(target, key, value);
        return target;
      };
      var defineProperty$7 = objectDefineProperty;
      var defineBuiltInAccessor$3 = function(target, name, descriptor) {
        return defineProperty$7.f(target, name, descriptor);
      };
      var wellKnownSymbolWrapped = {};
      var wellKnownSymbol$g = wellKnownSymbol$n;
      wellKnownSymbolWrapped.f = wellKnownSymbol$g;
      var path$k = path$o;
      var hasOwn$f = hasOwnProperty_1;
      var wrappedWellKnownSymbolModule$1 = wellKnownSymbolWrapped;
      var defineProperty$6 = objectDefineProperty.f;
      var wellKnownSymbolDefine = function(NAME) {
        var Symbol2 = path$k.Symbol || (path$k.Symbol = {});
        if (!hasOwn$f(Symbol2, NAME)) defineProperty$6(Symbol2, NAME, {
          value: wrappedWellKnownSymbolModule$1.f(NAME)
        });
      };
      var call$e = functionCall;
      var getBuiltIn$b = getBuiltIn$f;
      var wellKnownSymbol$f = wellKnownSymbol$n;
      var defineBuiltIn$5 = defineBuiltIn$6;
      var symbolDefineToPrimitive = function() {
        var Symbol2 = getBuiltIn$b("Symbol");
        var SymbolPrototype2 = Symbol2 && Symbol2.prototype;
        var valueOf = SymbolPrototype2 && SymbolPrototype2.valueOf;
        var TO_PRIMITIVE2 = wellKnownSymbol$f("toPrimitive");
        if (SymbolPrototype2 && !SymbolPrototype2[TO_PRIMITIVE2]) {
          defineBuiltIn$5(SymbolPrototype2, TO_PRIMITIVE2, function(hint) {
            return call$e(valueOf, this);
          }, { arity: 1 });
        }
      };
      var TO_STRING_TAG_SUPPORT$1 = toStringTagSupport;
      var classof$9 = classof$d;
      var objectToString = TO_STRING_TAG_SUPPORT$1 ? {}.toString : function toString2() {
        return "[object " + classof$9(this) + "]";
      };
      var TO_STRING_TAG_SUPPORT = toStringTagSupport;
      var defineProperty$5 = objectDefineProperty.f;
      var createNonEnumerableProperty$6 = createNonEnumerableProperty$9;
      var hasOwn$e = hasOwnProperty_1;
      var toString$6 = objectToString;
      var wellKnownSymbol$e = wellKnownSymbol$n;
      var TO_STRING_TAG$2 = wellKnownSymbol$e("toStringTag");
      var setToStringTag$7 = function(it, TAG, STATIC, SET_METHOD) {
        if (it) {
          var target = STATIC ? it : it.prototype;
          if (!hasOwn$e(target, TO_STRING_TAG$2)) {
            defineProperty$5(target, TO_STRING_TAG$2, { configurable: true, value: TAG });
          }
          if (SET_METHOD && !TO_STRING_TAG_SUPPORT) {
            createNonEnumerableProperty$6(target, "toString", toString$6);
          }
        }
      };
      var global$g = global$p;
      var isCallable$b = isCallable$m;
      var WeakMap$1 = global$g.WeakMap;
      var weakMapBasicDetection = isCallable$b(WeakMap$1) && /native code/.test(String(WeakMap$1));
      var NATIVE_WEAK_MAP = weakMapBasicDetection;
      var global$f = global$p;
      var isObject$a = isObject$h;
      var createNonEnumerableProperty$5 = createNonEnumerableProperty$9;
      var hasOwn$d = hasOwnProperty_1;
      var shared$4 = sharedStore;
      var sharedKey$2 = sharedKey$4;
      var hiddenKeys$2 = hiddenKeys$6;
      var OBJECT_ALREADY_INITIALIZED = "Object already initialized";
      var TypeError$3 = global$f.TypeError;
      var WeakMap = global$f.WeakMap;
      var set$4, get, has;
      var enforce = function(it) {
        return has(it) ? get(it) : set$4(it, {});
      };
      var getterFor = function(TYPE) {
        return function(it) {
          var state;
          if (!isObject$a(it) || (state = get(it)).type !== TYPE) {
            throw new TypeError$3("Incompatible receiver, " + TYPE + " required");
          }
          return state;
        };
      };
      if (NATIVE_WEAK_MAP || shared$4.state) {
        var store = shared$4.state || (shared$4.state = new WeakMap());
        store.get = store.get;
        store.has = store.has;
        store.set = store.set;
        set$4 = function(it, metadata) {
          if (store.has(it)) throw new TypeError$3(OBJECT_ALREADY_INITIALIZED);
          metadata.facade = it;
          store.set(it, metadata);
          return metadata;
        };
        get = function(it) {
          return store.get(it) || {};
        };
        has = function(it) {
          return store.has(it);
        };
      } else {
        var STATE = sharedKey$2("state");
        hiddenKeys$2[STATE] = true;
        set$4 = function(it, metadata) {
          if (hasOwn$d(it, STATE)) throw new TypeError$3(OBJECT_ALREADY_INITIALIZED);
          metadata.facade = it;
          createNonEnumerableProperty$5(it, STATE, metadata);
          return metadata;
        };
        get = function(it) {
          return hasOwn$d(it, STATE) ? it[STATE] : {};
        };
        has = function(it) {
          return hasOwn$d(it, STATE);
        };
      }
      var internalState = {
        set: set$4,
        get,
        has,
        enforce,
        getterFor
      };
      var bind$g = functionBindContext;
      var uncurryThis$f = functionUncurryThis;
      var IndexedObject$2 = indexedObject;
      var toObject$b = toObject$e;
      var lengthOfArrayLike$9 = lengthOfArrayLike$d;
      var arraySpeciesCreate$2 = arraySpeciesCreate$4;
      var push$b = uncurryThis$f([].push);
      var createMethod$2 = function(TYPE) {
        var IS_MAP = TYPE === 1;
        var IS_FILTER = TYPE === 2;
        var IS_SOME = TYPE === 3;
        var IS_EVERY = TYPE === 4;
        var IS_FIND_INDEX = TYPE === 6;
        var IS_FILTER_REJECT = TYPE === 7;
        var NO_HOLES = TYPE === 5 || IS_FIND_INDEX;
        return function($this, callbackfn, that, specificCreate) {
          var O = toObject$b($this);
          var self2 = IndexedObject$2(O);
          var boundFunction = bind$g(callbackfn, that);
          var length2 = lengthOfArrayLike$9(self2);
          var index = 0;
          var create2 = specificCreate || arraySpeciesCreate$2;
          var target = IS_MAP ? create2($this, length2) : IS_FILTER || IS_FILTER_REJECT ? create2($this, 0) : void 0;
          var value, result;
          for (; length2 > index; index++) if (NO_HOLES || index in self2) {
            value = self2[index];
            result = boundFunction(value, index, O);
            if (TYPE) {
              if (IS_MAP) target[index] = result;
              else if (result) switch (TYPE) {
                case 3:
                  return true;
                case 5:
                  return value;
                case 6:
                  return index;
                case 2:
                  push$b(target, value);
              }
              else switch (TYPE) {
                case 4:
                  return false;
                case 7:
                  push$b(target, value);
              }
            }
          }
          return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
        };
      };
      var arrayIteration = {
        // `Array.prototype.forEach` method
        // https://tc39.es/ecma262/#sec-array.prototype.foreach
        forEach: createMethod$2(0),
        // `Array.prototype.map` method
        // https://tc39.es/ecma262/#sec-array.prototype.map
        map: createMethod$2(1),
        // `Array.prototype.filter` method
        // https://tc39.es/ecma262/#sec-array.prototype.filter
        filter: createMethod$2(2),
        // `Array.prototype.some` method
        // https://tc39.es/ecma262/#sec-array.prototype.some
        some: createMethod$2(3),
        // `Array.prototype.every` method
        // https://tc39.es/ecma262/#sec-array.prototype.every
        every: createMethod$2(4),
        // `Array.prototype.find` method
        // https://tc39.es/ecma262/#sec-array.prototype.find
        find: createMethod$2(5),
        // `Array.prototype.findIndex` method
        // https://tc39.es/ecma262/#sec-array.prototype.findIndex
        findIndex: createMethod$2(6),
        // `Array.prototype.filterReject` method
        // https://github.com/tc39/proposal-array-filtering
        filterReject: createMethod$2(7)
      };
      var $$N = _export;
      var global$e = global$p;
      var call$d = functionCall;
      var uncurryThis$e = functionUncurryThis;
      var DESCRIPTORS$a = descriptors;
      var NATIVE_SYMBOL$3 = symbolConstructorDetection;
      var fails$j = fails$u;
      var hasOwn$c = hasOwnProperty_1;
      var isPrototypeOf$j = objectIsPrototypeOf;
      var anObject$9 = anObject$d;
      var toIndexedObject$4 = toIndexedObject$a;
      var toPropertyKey = toPropertyKey$4;
      var $toString = toString$7;
      var createPropertyDescriptor$3 = createPropertyDescriptor$7;
      var nativeObjectCreate = objectCreate;
      var objectKeys$1 = objectKeys$3;
      var getOwnPropertyNamesModule$2 = objectGetOwnPropertyNames;
      var getOwnPropertyNamesExternal = objectGetOwnPropertyNamesExternal;
      var getOwnPropertySymbolsModule$3 = objectGetOwnPropertySymbols;
      var getOwnPropertyDescriptorModule$2 = objectGetOwnPropertyDescriptor;
      var definePropertyModule$1 = objectDefineProperty;
      var definePropertiesModule = objectDefineProperties;
      var propertyIsEnumerableModule$1 = objectPropertyIsEnumerable;
      var defineBuiltIn$4 = defineBuiltIn$6;
      var defineBuiltInAccessor$2 = defineBuiltInAccessor$3;
      var shared$3 = sharedExports;
      var sharedKey$1 = sharedKey$4;
      var hiddenKeys$1 = hiddenKeys$6;
      var uid$1 = uid$4;
      var wellKnownSymbol$d = wellKnownSymbol$n;
      var wrappedWellKnownSymbolModule = wellKnownSymbolWrapped;
      var defineWellKnownSymbol$l = wellKnownSymbolDefine;
      var defineSymbolToPrimitive$1 = symbolDefineToPrimitive;
      var setToStringTag$6 = setToStringTag$7;
      var InternalStateModule$5 = internalState;
      var $forEach$1 = arrayIteration.forEach;
      var HIDDEN = sharedKey$1("hidden");
      var SYMBOL = "Symbol";
      var PROTOTYPE = "prototype";
      var setInternalState$5 = InternalStateModule$5.set;
      var getInternalState$2 = InternalStateModule$5.getterFor(SYMBOL);
      var ObjectPrototype$2 = Object[PROTOTYPE];
      var $Symbol = global$e.Symbol;
      var SymbolPrototype = $Symbol && $Symbol[PROTOTYPE];
      var RangeError2 = global$e.RangeError;
      var TypeError$2 = global$e.TypeError;
      var QObject = global$e.QObject;
      var nativeGetOwnPropertyDescriptor$1 = getOwnPropertyDescriptorModule$2.f;
      var nativeDefineProperty = definePropertyModule$1.f;
      var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
      var nativePropertyIsEnumerable = propertyIsEnumerableModule$1.f;
      var push$a = uncurryThis$e([].push);
      var AllSymbols = shared$3("symbols");
      var ObjectPrototypeSymbols = shared$3("op-symbols");
      var WellKnownSymbolsStore$1 = shared$3("wks");
      var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;
      var fallbackDefineProperty = function(O, P, Attributes) {
        var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor$1(ObjectPrototype$2, P);
        if (ObjectPrototypeDescriptor) delete ObjectPrototype$2[P];
        nativeDefineProperty(O, P, Attributes);
        if (ObjectPrototypeDescriptor && O !== ObjectPrototype$2) {
          nativeDefineProperty(ObjectPrototype$2, P, ObjectPrototypeDescriptor);
        }
      };
      var setSymbolDescriptor = DESCRIPTORS$a && fails$j(function() {
        return nativeObjectCreate(nativeDefineProperty({}, "a", {
          get: function() {
            return nativeDefineProperty(this, "a", { value: 7 }).a;
          }
        })).a !== 7;
      }) ? fallbackDefineProperty : nativeDefineProperty;
      var wrap = function(tag, description) {
        var symbol2 = AllSymbols[tag] = nativeObjectCreate(SymbolPrototype);
        setInternalState$5(symbol2, {
          type: SYMBOL,
          tag,
          description
        });
        if (!DESCRIPTORS$a) symbol2.description = description;
        return symbol2;
      };
      var $defineProperty = function defineProperty2(O, P, Attributes) {
        if (O === ObjectPrototype$2) $defineProperty(ObjectPrototypeSymbols, P, Attributes);
        anObject$9(O);
        var key = toPropertyKey(P);
        anObject$9(Attributes);
        if (hasOwn$c(AllSymbols, key)) {
          if (!Attributes.enumerable) {
            if (!hasOwn$c(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor$3(1, {}));
            O[HIDDEN][key] = true;
          } else {
            if (hasOwn$c(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;
            Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor$3(0, false) });
          }
          return setSymbolDescriptor(O, key, Attributes);
        }
        return nativeDefineProperty(O, key, Attributes);
      };
      var $defineProperties = function defineProperties2(O, Properties) {
        anObject$9(O);
        var properties = toIndexedObject$4(Properties);
        var keys2 = objectKeys$1(properties).concat($getOwnPropertySymbols(properties));
        $forEach$1(keys2, function(key) {
          if (!DESCRIPTORS$a || call$d($propertyIsEnumerable, properties, key)) $defineProperty(O, key, properties[key]);
        });
        return O;
      };
      var $create = function create2(O, Properties) {
        return Properties === void 0 ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);
      };
      var $propertyIsEnumerable = function propertyIsEnumerable(V) {
        var P = toPropertyKey(V);
        var enumerable = call$d(nativePropertyIsEnumerable, this, P);
        if (this === ObjectPrototype$2 && hasOwn$c(AllSymbols, P) && !hasOwn$c(ObjectPrototypeSymbols, P)) return false;
        return enumerable || !hasOwn$c(this, P) || !hasOwn$c(AllSymbols, P) || hasOwn$c(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;
      };
      var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor2(O, P) {
        var it = toIndexedObject$4(O);
        var key = toPropertyKey(P);
        if (it === ObjectPrototype$2 && hasOwn$c(AllSymbols, key) && !hasOwn$c(ObjectPrototypeSymbols, key)) return;
        var descriptor = nativeGetOwnPropertyDescriptor$1(it, key);
        if (descriptor && hasOwn$c(AllSymbols, key) && !(hasOwn$c(it, HIDDEN) && it[HIDDEN][key])) {
          descriptor.enumerable = true;
        }
        return descriptor;
      };
      var $getOwnPropertyNames = function getOwnPropertyNames2(O) {
        var names = nativeGetOwnPropertyNames(toIndexedObject$4(O));
        var result = [];
        $forEach$1(names, function(key) {
          if (!hasOwn$c(AllSymbols, key) && !hasOwn$c(hiddenKeys$1, key)) push$a(result, key);
        });
        return result;
      };
      var $getOwnPropertySymbols = function(O) {
        var IS_OBJECT_PROTOTYPE = O === ObjectPrototype$2;
        var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject$4(O));
        var result = [];
        $forEach$1(names, function(key) {
          if (hasOwn$c(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || hasOwn$c(ObjectPrototype$2, key))) {
            push$a(result, AllSymbols[key]);
          }
        });
        return result;
      };
      if (!NATIVE_SYMBOL$3) {
        $Symbol = function Symbol2() {
          if (isPrototypeOf$j(SymbolPrototype, this)) throw new TypeError$2("Symbol is not a constructor");
          var description = !arguments.length || arguments[0] === void 0 ? void 0 : $toString(arguments[0]);
          var tag = uid$1(description);
          var setter = function(value) {
            var $this = this === void 0 ? global$e : this;
            if ($this === ObjectPrototype$2) call$d(setter, ObjectPrototypeSymbols, value);
            if (hasOwn$c($this, HIDDEN) && hasOwn$c($this[HIDDEN], tag)) $this[HIDDEN][tag] = false;
            var descriptor = createPropertyDescriptor$3(1, value);
            try {
              setSymbolDescriptor($this, tag, descriptor);
            } catch (error) {
              if (!(error instanceof RangeError2)) throw error;
              fallbackDefineProperty($this, tag, descriptor);
            }
          };
          if (DESCRIPTORS$a && USE_SETTER) setSymbolDescriptor(ObjectPrototype$2, tag, { configurable: true, set: setter });
          return wrap(tag, description);
        };
        SymbolPrototype = $Symbol[PROTOTYPE];
        defineBuiltIn$4(SymbolPrototype, "toString", function toString2() {
          return getInternalState$2(this).tag;
        });
        defineBuiltIn$4($Symbol, "withoutSetter", function(description) {
          return wrap(uid$1(description), description);
        });
        propertyIsEnumerableModule$1.f = $propertyIsEnumerable;
        definePropertyModule$1.f = $defineProperty;
        definePropertiesModule.f = $defineProperties;
        getOwnPropertyDescriptorModule$2.f = $getOwnPropertyDescriptor;
        getOwnPropertyNamesModule$2.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
        getOwnPropertySymbolsModule$3.f = $getOwnPropertySymbols;
        wrappedWellKnownSymbolModule.f = function(name) {
          return wrap(wellKnownSymbol$d(name), name);
        };
        if (DESCRIPTORS$a) {
          defineBuiltInAccessor$2(SymbolPrototype, "description", {
            configurable: true,
            get: function description() {
              return getInternalState$2(this).description;
            }
          });
        }
      }
      $$N({ global: true, constructor: true, wrap: true, forced: !NATIVE_SYMBOL$3, sham: !NATIVE_SYMBOL$3 }, {
        Symbol: $Symbol
      });
      $forEach$1(objectKeys$1(WellKnownSymbolsStore$1), function(name) {
        defineWellKnownSymbol$l(name);
      });
      $$N({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL$3 }, {
        useSetter: function() {
          USE_SETTER = true;
        },
        useSimple: function() {
          USE_SETTER = false;
        }
      });
      $$N({ target: "Object", stat: true, forced: !NATIVE_SYMBOL$3, sham: !DESCRIPTORS$a }, {
        // `Object.create` method
        // https://tc39.es/ecma262/#sec-object.create
        create: $create,
        // `Object.defineProperty` method
        // https://tc39.es/ecma262/#sec-object.defineproperty
        defineProperty: $defineProperty,
        // `Object.defineProperties` method
        // https://tc39.es/ecma262/#sec-object.defineproperties
        defineProperties: $defineProperties,
        // `Object.getOwnPropertyDescriptor` method
        // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
        getOwnPropertyDescriptor: $getOwnPropertyDescriptor
      });
      $$N({ target: "Object", stat: true, forced: !NATIVE_SYMBOL$3 }, {
        // `Object.getOwnPropertyNames` method
        // https://tc39.es/ecma262/#sec-object.getownpropertynames
        getOwnPropertyNames: $getOwnPropertyNames
      });
      defineSymbolToPrimitive$1();
      setToStringTag$6($Symbol, SYMBOL);
      hiddenKeys$1[HIDDEN] = true;
      var NATIVE_SYMBOL$2 = symbolConstructorDetection;
      var symbolRegistryDetection = NATIVE_SYMBOL$2 && !!Symbol["for"] && !!Symbol.keyFor;
      var $$M = _export;
      var getBuiltIn$a = getBuiltIn$f;
      var hasOwn$b = hasOwnProperty_1;
      var toString$5 = toString$7;
      var shared$2 = sharedExports;
      var NATIVE_SYMBOL_REGISTRY$1 = symbolRegistryDetection;
      var StringToSymbolRegistry = shared$2("string-to-symbol-registry");
      var SymbolToStringRegistry$1 = shared$2("symbol-to-string-registry");
      $$M({ target: "Symbol", stat: true, forced: !NATIVE_SYMBOL_REGISTRY$1 }, {
        "for": function(key) {
          var string = toString$5(key);
          if (hasOwn$b(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];
          var symbol2 = getBuiltIn$a("Symbol")(string);
          StringToSymbolRegistry[string] = symbol2;
          SymbolToStringRegistry$1[symbol2] = string;
          return symbol2;
        }
      });
      var $$L = _export;
      var hasOwn$a = hasOwnProperty_1;
      var isSymbol$2 = isSymbol$5;
      var tryToString$4 = tryToString$6;
      var shared$1 = sharedExports;
      var NATIVE_SYMBOL_REGISTRY = symbolRegistryDetection;
      var SymbolToStringRegistry = shared$1("symbol-to-string-registry");
      $$L({ target: "Symbol", stat: true, forced: !NATIVE_SYMBOL_REGISTRY }, {
        keyFor: function keyFor2(sym) {
          if (!isSymbol$2(sym)) throw new TypeError(tryToString$4(sym) + " is not a symbol");
          if (hasOwn$a(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];
        }
      });
      var uncurryThis$d = functionUncurryThis;
      var arraySlice$5 = uncurryThis$d([].slice);
      var uncurryThis$c = functionUncurryThis;
      var isArray$b = isArray$e;
      var isCallable$a = isCallable$m;
      var classof$8 = classofRaw$2;
      var toString$4 = toString$7;
      var push$9 = uncurryThis$c([].push);
      var getJsonReplacerFunction = function(replacer) {
        if (isCallable$a(replacer)) return replacer;
        if (!isArray$b(replacer)) return;
        var rawLength = replacer.length;
        var keys2 = [];
        for (var i2 = 0; i2 < rawLength; i2++) {
          var element = replacer[i2];
          if (typeof element == "string") push$9(keys2, element);
          else if (typeof element == "number" || classof$8(element) === "Number" || classof$8(element) === "String") push$9(keys2, toString$4(element));
        }
        var keysLength = keys2.length;
        var root = true;
        return function(key, value) {
          if (root) {
            root = false;
            return value;
          }
          if (isArray$b(this)) return value;
          for (var j = 0; j < keysLength; j++) if (keys2[j] === key) return value;
        };
      };
      var $$K = _export;
      var getBuiltIn$9 = getBuiltIn$f;
      var apply$4 = functionApply;
      var call$c = functionCall;
      var uncurryThis$b = functionUncurryThis;
      var fails$i = fails$u;
      var isCallable$9 = isCallable$m;
      var isSymbol$1 = isSymbol$5;
      var arraySlice$4 = arraySlice$5;
      var getReplacerFunction = getJsonReplacerFunction;
      var NATIVE_SYMBOL$1 = symbolConstructorDetection;
      var $String$1 = String;
      var $stringify = getBuiltIn$9("JSON", "stringify");
      var exec = uncurryThis$b(/./.exec);
      var charAt$2 = uncurryThis$b("".charAt);
      var charCodeAt$1 = uncurryThis$b("".charCodeAt);
      var replace$1 = uncurryThis$b("".replace);
      var numberToString = uncurryThis$b(1 .toString);
      var tester = /[\uD800-\uDFFF]/g;
      var low = /^[\uD800-\uDBFF]$/;
      var hi = /^[\uDC00-\uDFFF]$/;
      var WRONG_SYMBOLS_CONVERSION = !NATIVE_SYMBOL$1 || fails$i(function() {
        var symbol2 = getBuiltIn$9("Symbol")("stringify detection");
        return $stringify([symbol2]) !== "[null]" || $stringify({ a: symbol2 }) !== "{}" || $stringify(Object(symbol2)) !== "{}";
      });
      var ILL_FORMED_UNICODE = fails$i(function() {
        return $stringify("\uDF06\uD834") !== '"\\udf06\\ud834"' || $stringify("\uDEAD") !== '"\\udead"';
      });
      var stringifyWithSymbolsFix = function(it, replacer) {
        var args = arraySlice$4(arguments);
        var $replacer = getReplacerFunction(replacer);
        if (!isCallable$9($replacer) && (it === void 0 || isSymbol$1(it))) return;
        args[1] = function(key, value) {
          if (isCallable$9($replacer)) value = call$c($replacer, this, $String$1(key), value);
          if (!isSymbol$1(value)) return value;
        };
        return apply$4($stringify, null, args);
      };
      var fixIllFormed = function(match2, offset, string) {
        var prev = charAt$2(string, offset - 1);
        var next = charAt$2(string, offset + 1);
        if (exec(low, match2) && !exec(hi, next) || exec(hi, match2) && !exec(low, prev)) {
          return "\\u" + numberToString(charCodeAt$1(match2, 0), 16);
        }
        return match2;
      };
      if ($stringify) {
        $$K({ target: "JSON", stat: true, arity: 3, forced: WRONG_SYMBOLS_CONVERSION || ILL_FORMED_UNICODE }, {
          // eslint-disable-next-line no-unused-vars -- required for `.length`
          stringify: function stringify2(it, replacer, space) {
            var args = arraySlice$4(arguments);
            var result = apply$4(WRONG_SYMBOLS_CONVERSION ? stringifyWithSymbolsFix : $stringify, null, args);
            return ILL_FORMED_UNICODE && typeof result == "string" ? replace$1(result, tester, fixIllFormed) : result;
          }
        });
      }
      var $$J = _export;
      var NATIVE_SYMBOL = symbolConstructorDetection;
      var fails$h = fails$u;
      var getOwnPropertySymbolsModule$2 = objectGetOwnPropertySymbols;
      var toObject$a = toObject$e;
      var FORCED$5 = !NATIVE_SYMBOL || fails$h(function() {
        getOwnPropertySymbolsModule$2.f(1);
      });
      $$J({ target: "Object", stat: true, forced: FORCED$5 }, {
        getOwnPropertySymbols: function getOwnPropertySymbols2(it) {
          var $getOwnPropertySymbols2 = getOwnPropertySymbolsModule$2.f;
          return $getOwnPropertySymbols2 ? $getOwnPropertySymbols2(toObject$a(it)) : [];
        }
      });
      var defineWellKnownSymbol$k = wellKnownSymbolDefine;
      defineWellKnownSymbol$k("asyncIterator");
      var defineWellKnownSymbol$j = wellKnownSymbolDefine;
      defineWellKnownSymbol$j("hasInstance");
      var defineWellKnownSymbol$i = wellKnownSymbolDefine;
      defineWellKnownSymbol$i("isConcatSpreadable");
      var defineWellKnownSymbol$h = wellKnownSymbolDefine;
      defineWellKnownSymbol$h("iterator");
      var defineWellKnownSymbol$g = wellKnownSymbolDefine;
      defineWellKnownSymbol$g("match");
      var defineWellKnownSymbol$f = wellKnownSymbolDefine;
      defineWellKnownSymbol$f("matchAll");
      var defineWellKnownSymbol$e = wellKnownSymbolDefine;
      defineWellKnownSymbol$e("replace");
      var defineWellKnownSymbol$d = wellKnownSymbolDefine;
      defineWellKnownSymbol$d("search");
      var defineWellKnownSymbol$c = wellKnownSymbolDefine;
      defineWellKnownSymbol$c("species");
      var defineWellKnownSymbol$b = wellKnownSymbolDefine;
      defineWellKnownSymbol$b("split");
      var defineWellKnownSymbol$a = wellKnownSymbolDefine;
      var defineSymbolToPrimitive = symbolDefineToPrimitive;
      defineWellKnownSymbol$a("toPrimitive");
      defineSymbolToPrimitive();
      var getBuiltIn$8 = getBuiltIn$f;
      var defineWellKnownSymbol$9 = wellKnownSymbolDefine;
      var setToStringTag$5 = setToStringTag$7;
      defineWellKnownSymbol$9("toStringTag");
      setToStringTag$5(getBuiltIn$8("Symbol"), "Symbol");
      var defineWellKnownSymbol$8 = wellKnownSymbolDefine;
      defineWellKnownSymbol$8("unscopables");
      var global$d = global$p;
      var setToStringTag$4 = setToStringTag$7;
      setToStringTag$4(global$d.JSON, "JSON", true);
      var path$j = path$o;
      var symbol$5 = path$j.Symbol;
      var iterators = {};
      var DESCRIPTORS$9 = descriptors;
      var hasOwn$9 = hasOwnProperty_1;
      var FunctionPrototype$2 = Function.prototype;
      var getDescriptor = DESCRIPTORS$9 && Object.getOwnPropertyDescriptor;
      var EXISTS = hasOwn$9(FunctionPrototype$2, "name");
      var PROPER = EXISTS && (function something() {
      }).name === "something";
      var CONFIGURABLE = EXISTS && (!DESCRIPTORS$9 || DESCRIPTORS$9 && getDescriptor(FunctionPrototype$2, "name").configurable);
      var functionName = {
        EXISTS,
        PROPER,
        CONFIGURABLE
      };
      var fails$g = fails$u;
      var correctPrototypeGetter = !fails$g(function() {
        function F() {
        }
        F.prototype.constructor = null;
        return Object.getPrototypeOf(new F()) !== F.prototype;
      });
      var hasOwn$8 = hasOwnProperty_1;
      var isCallable$8 = isCallable$m;
      var toObject$9 = toObject$e;
      var sharedKey = sharedKey$4;
      var CORRECT_PROTOTYPE_GETTER$1 = correctPrototypeGetter;
      var IE_PROTO = sharedKey("IE_PROTO");
      var $Object = Object;
      var ObjectPrototype$1 = $Object.prototype;
      var objectGetPrototypeOf = CORRECT_PROTOTYPE_GETTER$1 ? $Object.getPrototypeOf : function(O) {
        var object = toObject$9(O);
        if (hasOwn$8(object, IE_PROTO)) return object[IE_PROTO];
        var constructor = object.constructor;
        if (isCallable$8(constructor) && object instanceof constructor) {
          return constructor.prototype;
        }
        return object instanceof $Object ? ObjectPrototype$1 : null;
      };
      var fails$f = fails$u;
      var isCallable$7 = isCallable$m;
      var isObject$9 = isObject$h;
      var create$b = objectCreate;
      var getPrototypeOf$7 = objectGetPrototypeOf;
      var defineBuiltIn$3 = defineBuiltIn$6;
      var wellKnownSymbol$c = wellKnownSymbol$n;
      var ITERATOR$4 = wellKnownSymbol$c("iterator");
      var BUGGY_SAFARI_ITERATORS$1 = false;
      var IteratorPrototype$1, PrototypeOfArrayIteratorPrototype, arrayIterator;
      if ([].keys) {
        arrayIterator = [].keys();
        if (!("next" in arrayIterator)) BUGGY_SAFARI_ITERATORS$1 = true;
        else {
          PrototypeOfArrayIteratorPrototype = getPrototypeOf$7(getPrototypeOf$7(arrayIterator));
          if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype$1 = PrototypeOfArrayIteratorPrototype;
        }
      }
      var NEW_ITERATOR_PROTOTYPE = !isObject$9(IteratorPrototype$1) || fails$f(function() {
        var test2 = {};
        return IteratorPrototype$1[ITERATOR$4].call(test2) !== test2;
      });
      if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype$1 = {};
      else IteratorPrototype$1 = create$b(IteratorPrototype$1);
      if (!isCallable$7(IteratorPrototype$1[ITERATOR$4])) {
        defineBuiltIn$3(IteratorPrototype$1, ITERATOR$4, function() {
          return this;
        });
      }
      var iteratorsCore = {
        IteratorPrototype: IteratorPrototype$1,
        BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS$1
      };
      var IteratorPrototype = iteratorsCore.IteratorPrototype;
      var create$a = objectCreate;
      var createPropertyDescriptor$2 = createPropertyDescriptor$7;
      var setToStringTag$3 = setToStringTag$7;
      var Iterators$5 = iterators;
      var returnThis$1 = function() {
        return this;
      };
      var iteratorCreateConstructor = function(IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {
        var TO_STRING_TAG2 = NAME + " Iterator";
        IteratorConstructor.prototype = create$a(IteratorPrototype, { next: createPropertyDescriptor$2(+!ENUMERABLE_NEXT, next) });
        setToStringTag$3(IteratorConstructor, TO_STRING_TAG2, false, true);
        Iterators$5[TO_STRING_TAG2] = returnThis$1;
        return IteratorConstructor;
      };
      var uncurryThis$a = functionUncurryThis;
      var aCallable$b = aCallable$e;
      var functionUncurryThisAccessor = function(object, key, method2) {
        try {
          return uncurryThis$a(aCallable$b(Object.getOwnPropertyDescriptor(object, key)[method2]));
        } catch (error) {
        }
      };
      var isCallable$6 = isCallable$m;
      var $String = String;
      var $TypeError$9 = TypeError;
      var aPossiblePrototype$1 = function(argument) {
        if (typeof argument == "object" || isCallable$6(argument)) return argument;
        throw new $TypeError$9("Can't set " + $String(argument) + " as a prototype");
      };
      var uncurryThisAccessor = functionUncurryThisAccessor;
      var anObject$8 = anObject$d;
      var aPossiblePrototype = aPossiblePrototype$1;
      var objectSetPrototypeOf = Object.setPrototypeOf || ("__proto__" in {} ? function() {
        var CORRECT_SETTER = false;
        var test2 = {};
        var setter;
        try {
          setter = uncurryThisAccessor(Object.prototype, "__proto__", "set");
          setter(test2, []);
          CORRECT_SETTER = test2 instanceof Array;
        } catch (error) {
        }
        return function setPrototypeOf2(O, proto) {
          anObject$8(O);
          aPossiblePrototype(proto);
          if (CORRECT_SETTER) setter(O, proto);
          else O.__proto__ = proto;
          return O;
        };
      }() : void 0);
      var $$I = _export;
      var call$b = functionCall;
      var FunctionName = functionName;
      var createIteratorConstructor = iteratorCreateConstructor;
      var getPrototypeOf$6 = objectGetPrototypeOf;
      var setToStringTag$2 = setToStringTag$7;
      var defineBuiltIn$2 = defineBuiltIn$6;
      var wellKnownSymbol$b = wellKnownSymbol$n;
      var Iterators$4 = iterators;
      var IteratorsCore = iteratorsCore;
      var PROPER_FUNCTION_NAME = FunctionName.PROPER;
      FunctionName.CONFIGURABLE;
      IteratorsCore.IteratorPrototype;
      var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
      var ITERATOR$3 = wellKnownSymbol$b("iterator");
      var KEYS = "keys";
      var VALUES = "values";
      var ENTRIES = "entries";
      var returnThis = function() {
        return this;
      };
      var iteratorDefine = function(Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED2) {
        createIteratorConstructor(IteratorConstructor, NAME, next);
        var getIterationMethod = function(KIND) {
          if (KIND === DEFAULT && defaultIterator) return defaultIterator;
          if (!BUGGY_SAFARI_ITERATORS && KIND && KIND in IterablePrototype) return IterablePrototype[KIND];
          switch (KIND) {
            case KEYS:
              return function keys2() {
                return new IteratorConstructor(this, KIND);
              };
            case VALUES:
              return function values2() {
                return new IteratorConstructor(this, KIND);
              };
            case ENTRIES:
              return function entries2() {
                return new IteratorConstructor(this, KIND);
              };
          }
          return function() {
            return new IteratorConstructor(this);
          };
        };
        var TO_STRING_TAG2 = NAME + " Iterator";
        var INCORRECT_VALUES_NAME = false;
        var IterablePrototype = Iterable.prototype;
        var nativeIterator = IterablePrototype[ITERATOR$3] || IterablePrototype["@@iterator"] || DEFAULT && IterablePrototype[DEFAULT];
        var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
        var anyNativeIterator = NAME === "Array" ? IterablePrototype.entries || nativeIterator : nativeIterator;
        var CurrentIteratorPrototype, methods, KEY;
        if (anyNativeIterator) {
          CurrentIteratorPrototype = getPrototypeOf$6(anyNativeIterator.call(new Iterable()));
          if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
            setToStringTag$2(CurrentIteratorPrototype, TO_STRING_TAG2, true, true);
            Iterators$4[TO_STRING_TAG2] = returnThis;
          }
        }
        if (PROPER_FUNCTION_NAME && DEFAULT === VALUES && nativeIterator && nativeIterator.name !== VALUES) {
          {
            INCORRECT_VALUES_NAME = true;
            defaultIterator = function values2() {
              return call$b(nativeIterator, this);
            };
          }
        }
        if (DEFAULT) {
          methods = {
            values: getIterationMethod(VALUES),
            keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
            entries: getIterationMethod(ENTRIES)
          };
          if (FORCED2) for (KEY in methods) {
            if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
              defineBuiltIn$2(IterablePrototype, KEY, methods[KEY]);
            }
          }
          else $$I({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
        }
        if (FORCED2 && IterablePrototype[ITERATOR$3] !== defaultIterator) {
          defineBuiltIn$2(IterablePrototype, ITERATOR$3, defaultIterator, { name: DEFAULT });
        }
        Iterators$4[NAME] = defaultIterator;
        return methods;
      };
      var createIterResultObject$3 = function(value, done) {
        return { value, done };
      };
      var toIndexedObject$3 = toIndexedObject$a;
      var Iterators$3 = iterators;
      var InternalStateModule$4 = internalState;
      objectDefineProperty.f;
      var defineIterator$2 = iteratorDefine;
      var createIterResultObject$2 = createIterResultObject$3;
      var ARRAY_ITERATOR = "Array Iterator";
      var setInternalState$4 = InternalStateModule$4.set;
      var getInternalState$1 = InternalStateModule$4.getterFor(ARRAY_ITERATOR);
      defineIterator$2(Array, "Array", function(iterated, kind) {
        setInternalState$4(this, {
          type: ARRAY_ITERATOR,
          target: toIndexedObject$3(iterated),
          // target
          index: 0,
          // next index
          kind
          // kind
        });
      }, function() {
        var state = getInternalState$1(this);
        var target = state.target;
        var index = state.index++;
        if (!target || index >= target.length) {
          state.target = void 0;
          return createIterResultObject$2(void 0, true);
        }
        switch (state.kind) {
          case "keys":
            return createIterResultObject$2(index, false);
          case "values":
            return createIterResultObject$2(target[index], false);
        }
        return createIterResultObject$2([index, target[index]], false);
      }, "values");
      Iterators$3.Arguments = Iterators$3.Array;
      var domIterables = {
        CSSRuleList: 0,
        CSSStyleDeclaration: 0,
        CSSValueList: 0,
        ClientRectList: 0,
        DOMRectList: 0,
        DOMStringList: 0,
        DOMTokenList: 1,
        DataTransferItemList: 0,
        FileList: 0,
        HTMLAllCollection: 0,
        HTMLCollection: 0,
        HTMLFormElement: 0,
        HTMLSelectElement: 0,
        MediaList: 0,
        MimeTypeArray: 0,
        NamedNodeMap: 0,
        NodeList: 1,
        PaintRequestList: 0,
        Plugin: 0,
        PluginArray: 0,
        SVGLengthList: 0,
        SVGNumberList: 0,
        SVGPathSegList: 0,
        SVGPointList: 0,
        SVGStringList: 0,
        SVGTransformList: 0,
        SourceBufferList: 0,
        StyleSheetList: 0,
        TextTrackCueList: 0,
        TextTrackList: 0,
        TouchList: 0
      };
      var DOMIterables$4 = domIterables;
      var global$c = global$p;
      var classof$7 = classof$d;
      var createNonEnumerableProperty$4 = createNonEnumerableProperty$9;
      var Iterators$2 = iterators;
      var wellKnownSymbol$a = wellKnownSymbol$n;
      var TO_STRING_TAG$1 = wellKnownSymbol$a("toStringTag");
      for (var COLLECTION_NAME in DOMIterables$4) {
        var Collection = global$c[COLLECTION_NAME];
        var CollectionPrototype = Collection && Collection.prototype;
        if (CollectionPrototype && classof$7(CollectionPrototype) !== TO_STRING_TAG$1) {
          createNonEnumerableProperty$4(CollectionPrototype, TO_STRING_TAG$1, COLLECTION_NAME);
        }
        Iterators$2[COLLECTION_NAME] = Iterators$2.Array;
      }
      var parent$15 = symbol$5;
      var symbol$4 = parent$15;
      var wellKnownSymbol$9 = wellKnownSymbol$n;
      var defineProperty$4 = objectDefineProperty.f;
      var METADATA$1 = wellKnownSymbol$9("metadata");
      var FunctionPrototype$1 = Function.prototype;
      if (FunctionPrototype$1[METADATA$1] === void 0) {
        defineProperty$4(FunctionPrototype$1, METADATA$1, {
          value: null
        });
      }
      var defineWellKnownSymbol$7 = wellKnownSymbolDefine;
      defineWellKnownSymbol$7("asyncDispose");
      var defineWellKnownSymbol$6 = wellKnownSymbolDefine;
      defineWellKnownSymbol$6("dispose");
      var defineWellKnownSymbol$5 = wellKnownSymbolDefine;
      defineWellKnownSymbol$5("metadata");
      var parent$14 = symbol$4;
      var symbol$3 = parent$14;
      var getBuiltIn$7 = getBuiltIn$f;
      var uncurryThis$9 = functionUncurryThis;
      var Symbol$2 = getBuiltIn$7("Symbol");
      var keyFor = Symbol$2.keyFor;
      var thisSymbolValue$1 = uncurryThis$9(Symbol$2.prototype.valueOf);
      var symbolIsRegistered = Symbol$2.isRegisteredSymbol || function isRegisteredSymbol2(value) {
        try {
          return keyFor(thisSymbolValue$1(value)) !== void 0;
        } catch (error) {
          return false;
        }
      };
      var $$H = _export;
      var isRegisteredSymbol$1 = symbolIsRegistered;
      $$H({ target: "Symbol", stat: true }, {
        isRegisteredSymbol: isRegisteredSymbol$1
      });
      var shared = sharedExports;
      var getBuiltIn$6 = getBuiltIn$f;
      var uncurryThis$8 = functionUncurryThis;
      var isSymbol = isSymbol$5;
      var wellKnownSymbol$8 = wellKnownSymbol$n;
      var Symbol$1 = getBuiltIn$6("Symbol");
      var $isWellKnownSymbol = Symbol$1.isWellKnownSymbol;
      var getOwnPropertyNames = getBuiltIn$6("Object", "getOwnPropertyNames");
      var thisSymbolValue = uncurryThis$8(Symbol$1.prototype.valueOf);
      var WellKnownSymbolsStore = shared("wks");
      for (var i = 0, symbolKeys = getOwnPropertyNames(Symbol$1), symbolKeysLength = symbolKeys.length; i < symbolKeysLength; i++) {
        try {
          var symbolKey = symbolKeys[i];
          if (isSymbol(Symbol$1[symbolKey])) wellKnownSymbol$8(symbolKey);
        } catch (error) {
        }
      }
      var symbolIsWellKnown = function isWellKnownSymbol2(value) {
        if ($isWellKnownSymbol && $isWellKnownSymbol(value)) return true;
        try {
          var symbol2 = thisSymbolValue(value);
          for (var j = 0, keys2 = getOwnPropertyNames(WellKnownSymbolsStore), keysLength = keys2.length; j < keysLength; j++) {
            if (WellKnownSymbolsStore[keys2[j]] == symbol2) return true;
          }
        } catch (error) {
        }
        return false;
      };
      var $$G = _export;
      var isWellKnownSymbol$1 = symbolIsWellKnown;
      $$G({ target: "Symbol", stat: true, forced: true }, {
        isWellKnownSymbol: isWellKnownSymbol$1
      });
      var defineWellKnownSymbol$4 = wellKnownSymbolDefine;
      defineWellKnownSymbol$4("matcher");
      var defineWellKnownSymbol$3 = wellKnownSymbolDefine;
      defineWellKnownSymbol$3("observable");
      var $$F = _export;
      var isRegisteredSymbol = symbolIsRegistered;
      $$F({ target: "Symbol", stat: true, name: "isRegisteredSymbol" }, {
        isRegistered: isRegisteredSymbol
      });
      var $$E = _export;
      var isWellKnownSymbol = symbolIsWellKnown;
      $$E({ target: "Symbol", stat: true, name: "isWellKnownSymbol", forced: true }, {
        isWellKnown: isWellKnownSymbol
      });
      var defineWellKnownSymbol$2 = wellKnownSymbolDefine;
      defineWellKnownSymbol$2("metadataKey");
      var defineWellKnownSymbol$1 = wellKnownSymbolDefine;
      defineWellKnownSymbol$1("patternMatch");
      var defineWellKnownSymbol = wellKnownSymbolDefine;
      defineWellKnownSymbol("replaceAll");
      var parent$13 = symbol$3;
      var symbol$2 = parent$13;
      var symbol$1 = symbol$2;
      var _Symbol$1 = getDefaultExportFromCjs(symbol$1);
      var uncurryThis$7 = functionUncurryThis;
      var toIntegerOrInfinity$1 = toIntegerOrInfinity$4;
      var toString$3 = toString$7;
      var requireObjectCoercible = requireObjectCoercible$3;
      var charAt$1 = uncurryThis$7("".charAt);
      var charCodeAt = uncurryThis$7("".charCodeAt);
      var stringSlice = uncurryThis$7("".slice);
      var createMethod$1 = function(CONVERT_TO_STRING) {
        return function($this, pos) {
          var S = toString$3(requireObjectCoercible($this));
          var position = toIntegerOrInfinity$1(pos);
          var size = S.length;
          var first, second;
          if (position < 0 || position >= size) return CONVERT_TO_STRING ? "" : void 0;
          first = charCodeAt(S, position);
          return first < 55296 || first > 56319 || position + 1 === size || (second = charCodeAt(S, position + 1)) < 56320 || second > 57343 ? CONVERT_TO_STRING ? charAt$1(S, position) : first : CONVERT_TO_STRING ? stringSlice(S, position, position + 2) : (first - 55296 << 10) + (second - 56320) + 65536;
        };
      };
      var stringMultibyte = {
        // `String.prototype.codePointAt` method
        // https://tc39.es/ecma262/#sec-string.prototype.codepointat
        codeAt: createMethod$1(false),
        // `String.prototype.at` method
        // https://github.com/mathiasbynens/String.prototype.at
        charAt: createMethod$1(true)
      };
      var charAt = stringMultibyte.charAt;
      var toString$2 = toString$7;
      var InternalStateModule$3 = internalState;
      var defineIterator$1 = iteratorDefine;
      var createIterResultObject$1 = createIterResultObject$3;
      var STRING_ITERATOR = "String Iterator";
      var setInternalState$3 = InternalStateModule$3.set;
      var getInternalState = InternalStateModule$3.getterFor(STRING_ITERATOR);
      defineIterator$1(String, "String", function(iterated) {
        setInternalState$3(this, {
          type: STRING_ITERATOR,
          string: toString$2(iterated),
          index: 0
        });
      }, function next() {
        var state = getInternalState(this);
        var string = state.string;
        var index = state.index;
        var point;
        if (index >= string.length) return createIterResultObject$1(void 0, true);
        point = charAt(string, index);
        state.index += point.length;
        return createIterResultObject$1(point, false);
      });
      var WrappedWellKnownSymbolModule$1 = wellKnownSymbolWrapped;
      var iterator$5 = WrappedWellKnownSymbolModule$1.f("iterator");
      var parent$12 = iterator$5;
      var iterator$4 = parent$12;
      var parent$11 = iterator$4;
      var iterator$3 = parent$11;
      var parent$10 = iterator$3;
      var iterator$2 = parent$10;
      var iterator$1 = iterator$2;
      var _Symbol$iterator$1 = getDefaultExportFromCjs(iterator$1);
      function _typeof$1(o) {
        "@babel/helpers - typeof";
        return _typeof$1 = "function" == typeof _Symbol$1 && "symbol" == typeof _Symbol$iterator$1 ? function(o2) {
          return typeof o2;
        } : function(o2) {
          return o2 && "function" == typeof _Symbol$1 && o2.constructor === _Symbol$1 && o2 !== _Symbol$1.prototype ? "symbol" : typeof o2;
        }, _typeof$1(o);
      }
      var WrappedWellKnownSymbolModule = wellKnownSymbolWrapped;
      var toPrimitive$4 = WrappedWellKnownSymbolModule.f("toPrimitive");
      var parent$$ = toPrimitive$4;
      var toPrimitive$3 = parent$$;
      var parent$_ = toPrimitive$3;
      var toPrimitive$2 = parent$_;
      var parent$Z = toPrimitive$2;
      var toPrimitive$1 = parent$Z;
      var toPrimitive = toPrimitive$1;
      var _Symbol$toPrimitive = getDefaultExportFromCjs(toPrimitive);
      function _toPrimitive(input, hint) {
        if (_typeof$1(input) !== "object" || input === null) return input;
        var prim = input[_Symbol$toPrimitive];
        if (prim !== void 0) {
          var res = prim.call(input, hint || "default");
          if (_typeof$1(res) !== "object") return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return (hint === "string" ? String : Number)(input);
      }
      function _toPropertyKey(arg) {
        var key = _toPrimitive(arg, "string");
        return _typeof$1(key) === "symbol" ? key : String(key);
      }
      function _defineProperties(target, props) {
        for (var i2 = 0; i2 < props.length; i2++) {
          var descriptor = props[i2];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) descriptor.writable = true;
          _Object$defineProperty$1(target, _toPropertyKey(descriptor.key), descriptor);
        }
      }
      function _createClass(Constructor, protoProps, staticProps) {
        if (protoProps) _defineProperties(Constructor.prototype, protoProps);
        if (staticProps) _defineProperties(Constructor, staticProps);
        _Object$defineProperty$1(Constructor, "prototype", {
          writable: false
        });
        return Constructor;
      }
      function _defineProperty(obj, key, value) {
        key = _toPropertyKey(key);
        if (key in obj) {
          _Object$defineProperty$1(obj, key, {
            value,
            enumerable: true,
            configurable: true,
            writable: true
          });
        } else {
          obj[key] = value;
        }
        return obj;
      }
      var uncurryThis$6 = functionUncurryThis;
      var aCallable$a = aCallable$e;
      var isObject$8 = isObject$h;
      var hasOwn$7 = hasOwnProperty_1;
      var arraySlice$3 = arraySlice$5;
      var NATIVE_BIND = functionBindNative;
      var $Function = Function;
      var concat$6 = uncurryThis$6([].concat);
      var join = uncurryThis$6([].join);
      var factories = {};
      var construct$3 = function(C, argsLength, args) {
        if (!hasOwn$7(factories, argsLength)) {
          var list = [];
          var i2 = 0;
          for (; i2 < argsLength; i2++) list[i2] = "a[" + i2 + "]";
          factories[argsLength] = $Function("C,a", "return new C(" + join(list, ",") + ")");
        }
        return factories[argsLength](C, args);
      };
      var functionBind = NATIVE_BIND ? $Function.bind : function bind2(that) {
        var F = aCallable$a(this);
        var Prototype = F.prototype;
        var partArgs = arraySlice$3(arguments, 1);
        var boundFunction = function bound() {
          var args = concat$6(partArgs, arraySlice$3(arguments));
          return this instanceof boundFunction ? construct$3(F, args.length, args) : F.apply(that, args);
        };
        if (isObject$8(Prototype)) boundFunction.prototype = Prototype;
        return boundFunction;
      };
      var $$D = _export;
      var bind$f = functionBind;
      $$D({ target: "Function", proto: true, forced: Function.bind !== bind$f }, {
        bind: bind$f
      });
      var global$b = global$p;
      var path$i = path$o;
      var getBuiltInPrototypeMethod$g = function(CONSTRUCTOR, METHOD) {
        var Namespace = path$i[CONSTRUCTOR + "Prototype"];
        var pureMethod = Namespace && Namespace[METHOD];
        if (pureMethod) return pureMethod;
        var NativeConstructor = global$b[CONSTRUCTOR];
        var NativePrototype = NativeConstructor && NativeConstructor.prototype;
        return NativePrototype && NativePrototype[METHOD];
      };
      var getBuiltInPrototypeMethod$f = getBuiltInPrototypeMethod$g;
      var bind$e = getBuiltInPrototypeMethod$f("Function", "bind");
      var isPrototypeOf$i = objectIsPrototypeOf;
      var method$f = bind$e;
      var FunctionPrototype = Function.prototype;
      var bind$d = function(it) {
        var own = it.bind;
        return it === FunctionPrototype || isPrototypeOf$i(FunctionPrototype, it) && own === FunctionPrototype.bind ? method$f : own;
      };
      var parent$Y = bind$d;
      var bind$c = parent$Y;
      var bind$b = bind$c;
      var _bindInstanceProperty$1 = getDefaultExportFromCjs(bind$b);
      var aCallable$9 = aCallable$e;
      var toObject$8 = toObject$e;
      var IndexedObject$1 = indexedObject;
      var lengthOfArrayLike$8 = lengthOfArrayLike$d;
      var $TypeError$8 = TypeError;
      var createMethod = function(IS_RIGHT) {
        return function(that, callbackfn, argumentsLength, memo) {
          aCallable$9(callbackfn);
          var O = toObject$8(that);
          var self2 = IndexedObject$1(O);
          var length2 = lengthOfArrayLike$8(O);
          var index = IS_RIGHT ? length2 - 1 : 0;
          var i2 = IS_RIGHT ? -1 : 1;
          if (argumentsLength < 2) while (true) {
            if (index in self2) {
              memo = self2[index];
              index += i2;
              break;
            }
            index += i2;
            if (IS_RIGHT ? index < 0 : length2 <= index) {
              throw new $TypeError$8("Reduce of empty array with no initial value");
            }
          }
          for (; IS_RIGHT ? index >= 0 : length2 > index; index += i2) if (index in self2) {
            memo = callbackfn(memo, self2[index], index, O);
          }
          return memo;
        };
      };
      var arrayReduce = {
        // `Array.prototype.reduce` method
        // https://tc39.es/ecma262/#sec-array.prototype.reduce
        left: createMethod(false),
        // `Array.prototype.reduceRight` method
        // https://tc39.es/ecma262/#sec-array.prototype.reduceright
        right: createMethod(true)
      };
      var fails$e = fails$u;
      var arrayMethodIsStrict$4 = function(METHOD_NAME, argument) {
        var method2 = [][METHOD_NAME];
        return !!method2 && fails$e(function() {
          method2.call(null, argument || function() {
            return 1;
          }, 1);
        });
      };
      var global$a = global$p;
      var classof$6 = classofRaw$2;
      var engineIsNode = classof$6(global$a.process) === "process";
      var $$C = _export;
      var $reduce = arrayReduce.left;
      var arrayMethodIsStrict$3 = arrayMethodIsStrict$4;
      var CHROME_VERSION = engineV8Version;
      var IS_NODE$4 = engineIsNode;
      var CHROME_BUG = !IS_NODE$4 && CHROME_VERSION > 79 && CHROME_VERSION < 83;
      var FORCED$4 = CHROME_BUG || !arrayMethodIsStrict$3("reduce");
      $$C({ target: "Array", proto: true, forced: FORCED$4 }, {
        reduce: function reduce2(callbackfn) {
          var length2 = arguments.length;
          return $reduce(this, callbackfn, length2, length2 > 1 ? arguments[1] : void 0);
        }
      });
      var getBuiltInPrototypeMethod$e = getBuiltInPrototypeMethod$g;
      var reduce$3 = getBuiltInPrototypeMethod$e("Array", "reduce");
      var isPrototypeOf$h = objectIsPrototypeOf;
      var method$e = reduce$3;
      var ArrayPrototype$f = Array.prototype;
      var reduce$2 = function(it) {
        var own = it.reduce;
        return it === ArrayPrototype$f || isPrototypeOf$h(ArrayPrototype$f, it) && own === ArrayPrototype$f.reduce ? method$e : own;
      };
      var parent$X = reduce$2;
      var reduce$1 = parent$X;
      var reduce = reduce$1;
      var _reduceInstanceProperty = getDefaultExportFromCjs(reduce);
      var $$B = _export;
      var $filter = arrayIteration.filter;
      var arrayMethodHasSpeciesSupport$3 = arrayMethodHasSpeciesSupport$5;
      var HAS_SPECIES_SUPPORT$3 = arrayMethodHasSpeciesSupport$3("filter");
      $$B({ target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT$3 }, {
        filter: function filter2(callbackfn) {
          return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
        }
      });
      var getBuiltInPrototypeMethod$d = getBuiltInPrototypeMethod$g;
      var filter$3 = getBuiltInPrototypeMethod$d("Array", "filter");
      var isPrototypeOf$g = objectIsPrototypeOf;
      var method$d = filter$3;
      var ArrayPrototype$e = Array.prototype;
      var filter$2 = function(it) {
        var own = it.filter;
        return it === ArrayPrototype$e || isPrototypeOf$g(ArrayPrototype$e, it) && own === ArrayPrototype$e.filter ? method$d : own;
      };
      var parent$W = filter$2;
      var filter$1 = parent$W;
      var filter = filter$1;
      var _filterInstanceProperty = getDefaultExportFromCjs(filter);
      var $$A = _export;
      var $map = arrayIteration.map;
      var arrayMethodHasSpeciesSupport$2 = arrayMethodHasSpeciesSupport$5;
      var HAS_SPECIES_SUPPORT$2 = arrayMethodHasSpeciesSupport$2("map");
      $$A({ target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT$2 }, {
        map: function map2(callbackfn) {
          return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
        }
      });
      var getBuiltInPrototypeMethod$c = getBuiltInPrototypeMethod$g;
      var map$6 = getBuiltInPrototypeMethod$c("Array", "map");
      var isPrototypeOf$f = objectIsPrototypeOf;
      var method$c = map$6;
      var ArrayPrototype$d = Array.prototype;
      var map$5 = function(it) {
        var own = it.map;
        return it === ArrayPrototype$d || isPrototypeOf$f(ArrayPrototype$d, it) && own === ArrayPrototype$d.map ? method$c : own;
      };
      var parent$V = map$5;
      var map$4 = parent$V;
      var map$3 = map$4;
      var _mapInstanceProperty = getDefaultExportFromCjs(map$3);
      var isArray$a = isArray$e;
      var lengthOfArrayLike$7 = lengthOfArrayLike$d;
      var doesNotExceedSafeInteger$2 = doesNotExceedSafeInteger$4;
      var bind$a = functionBindContext;
      var flattenIntoArray$1 = function(target, original, source, sourceLen, start, depth, mapper, thisArg) {
        var targetIndex = start;
        var sourceIndex = 0;
        var mapFn = mapper ? bind$a(mapper, thisArg) : false;
        var element, elementLen;
        while (sourceIndex < sourceLen) {
          if (sourceIndex in source) {
            element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];
            if (depth > 0 && isArray$a(element)) {
              elementLen = lengthOfArrayLike$7(element);
              targetIndex = flattenIntoArray$1(target, original, element, elementLen, targetIndex, depth - 1) - 1;
            } else {
              doesNotExceedSafeInteger$2(targetIndex + 1);
              target[targetIndex] = element;
            }
            targetIndex++;
          }
          sourceIndex++;
        }
        return targetIndex;
      };
      var flattenIntoArray_1 = flattenIntoArray$1;
      var $$z = _export;
      var flattenIntoArray = flattenIntoArray_1;
      var aCallable$8 = aCallable$e;
      var toObject$7 = toObject$e;
      var lengthOfArrayLike$6 = lengthOfArrayLike$d;
      var arraySpeciesCreate$1 = arraySpeciesCreate$4;
      $$z({ target: "Array", proto: true }, {
        flatMap: function flatMap2(callbackfn) {
          var O = toObject$7(this);
          var sourceLen = lengthOfArrayLike$6(O);
          var A;
          aCallable$8(callbackfn);
          A = arraySpeciesCreate$1(O, 0);
          A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
          return A;
        }
      });
      var getBuiltInPrototypeMethod$b = getBuiltInPrototypeMethod$g;
      var flatMap$3 = getBuiltInPrototypeMethod$b("Array", "flatMap");
      var isPrototypeOf$e = objectIsPrototypeOf;
      var method$b = flatMap$3;
      var ArrayPrototype$c = Array.prototype;
      var flatMap$2 = function(it) {
        var own = it.flatMap;
        return it === ArrayPrototype$c || isPrototypeOf$e(ArrayPrototype$c, it) && own === ArrayPrototype$c.flatMap ? method$b : own;
      };
      var parent$U = flatMap$2;
      var flatMap$1 = parent$U;
      var flatMap = flatMap$1;
      var _flatMapInstanceProperty = getDefaultExportFromCjs(flatMap);
      function createNewDataPipeFrom(from2) {
        return new DataPipeUnderConstruction(from2);
      }
      var SimpleDataPipe = function() {
        function SimpleDataPipe2(_source, _transformers, _target) {
          var _context, _context2, _context3;
          _classCallCheck(this, SimpleDataPipe2);
          _defineProperty(this, "_listeners", {
            add: _bindInstanceProperty$1(_context = this._add).call(_context, this),
            remove: _bindInstanceProperty$1(_context2 = this._remove).call(_context2, this),
            update: _bindInstanceProperty$1(_context3 = this._update).call(_context3, this)
          });
          this._source = _source;
          this._transformers = _transformers;
          this._target = _target;
        }
        _createClass(SimpleDataPipe2, [{
          key: "all",
          value: function all() {
            this._target.update(this._transformItems(this._source.get()));
            return this;
          }
          /** @inheritDoc */
        }, {
          key: "start",
          value: function start() {
            this._source.on("add", this._listeners.add);
            this._source.on("remove", this._listeners.remove);
            this._source.on("update", this._listeners.update);
            return this;
          }
          /** @inheritDoc */
        }, {
          key: "stop",
          value: function stop() {
            this._source.off("add", this._listeners.add);
            this._source.off("remove", this._listeners.remove);
            this._source.off("update", this._listeners.update);
            return this;
          }
          /**
           * Apply the transformers to the items.
           *
           * @param items - The items to be transformed.
           * @returns The transformed items.
           */
        }, {
          key: "_transformItems",
          value: function _transformItems(items) {
            var _context4;
            return _reduceInstanceProperty(_context4 = this._transformers).call(_context4, function(items2, transform) {
              return transform(items2);
            }, items);
          }
          /**
           * Handle an add event.
           *
           * @param _name - Ignored.
           * @param payload - The payload containing the ids of the added items.
           */
        }, {
          key: "_add",
          value: function _add(_name, payload) {
            if (payload == null) {
              return;
            }
            this._target.add(this._transformItems(this._source.get(payload.items)));
          }
          /**
           * Handle an update event.
           *
           * @param _name - Ignored.
           * @param payload - The payload containing the ids of the updated items.
           */
        }, {
          key: "_update",
          value: function _update(_name, payload) {
            if (payload == null) {
              return;
            }
            this._target.update(this._transformItems(this._source.get(payload.items)));
          }
          /**
           * Handle a remove event.
           *
           * @param _name - Ignored.
           * @param payload - The payload containing the data of the removed items.
           */
        }, {
          key: "_remove",
          value: function _remove(_name, payload) {
            if (payload == null) {
              return;
            }
            this._target.remove(this._transformItems(payload.oldData));
          }
        }]);
        return SimpleDataPipe2;
      }();
      var DataPipeUnderConstruction = function() {
        function DataPipeUnderConstruction2(_source) {
          _classCallCheck(this, DataPipeUnderConstruction2);
          _defineProperty(this, "_transformers", []);
          this._source = _source;
        }
        _createClass(DataPipeUnderConstruction2, [{
          key: "filter",
          value: function filter2(callback) {
            this._transformers.push(function(input) {
              return _filterInstanceProperty(input).call(input, callback);
            });
            return this;
          }
          /**
           * Map each source item to a new type.
           *
           * @param callback - A mapping function that takes a source item and returns
           * corresponding mapped item.
           * @typeParam TI - Target item type.
           * @typeParam TP - Target item type's id property name.
           * @returns This factory for further configuration.
           */
        }, {
          key: "map",
          value: function map2(callback) {
            this._transformers.push(function(input) {
              return _mapInstanceProperty(input).call(input, callback);
            });
            return this;
          }
          /**
           * Map each source item to zero or more items of a new type.
           *
           * @param callback - A mapping function that takes a source item and returns
           * an array of corresponding mapped items.
           * @typeParam TI - Target item type.
           * @typeParam TP - Target item type's id property name.
           * @returns This factory for further configuration.
           */
        }, {
          key: "flatMap",
          value: function flatMap2(callback) {
            this._transformers.push(function(input) {
              return _flatMapInstanceProperty(input).call(input, callback);
            });
            return this;
          }
          /**
           * Connect this pipe to given data set.
           *
           * @param target - The data set that will receive the items from this pipe.
           * @returns The pipe connected between given data sets and performing
           * configured transformation on the processed items.
           */
        }, {
          key: "to",
          value: function to(target) {
            return new SimpleDataPipe(this._source, this._transformers, target);
          }
        }]);
        return DataPipeUnderConstruction2;
      }();
      var call$a = functionCall;
      var anObject$7 = anObject$d;
      var getMethod$1 = getMethod$3;
      var iteratorClose$2 = function(iterator2, kind, value) {
        var innerResult, innerError;
        anObject$7(iterator2);
        try {
          innerResult = getMethod$1(iterator2, "return");
          if (!innerResult) {
            if (kind === "throw") throw value;
            return value;
          }
          innerResult = call$a(innerResult, iterator2);
        } catch (error) {
          innerError = true;
          innerResult = error;
        }
        if (kind === "throw") throw value;
        if (innerError) throw innerResult;
        anObject$7(innerResult);
        return value;
      };
      var anObject$6 = anObject$d;
      var iteratorClose$1 = iteratorClose$2;
      var callWithSafeIterationClosing$1 = function(iterator2, fn, value, ENTRIES2) {
        try {
          return ENTRIES2 ? fn(anObject$6(value)[0], value[1]) : fn(value);
        } catch (error) {
          iteratorClose$1(iterator2, "throw", error);
        }
      };
      var wellKnownSymbol$7 = wellKnownSymbol$n;
      var Iterators$1 = iterators;
      var ITERATOR$2 = wellKnownSymbol$7("iterator");
      var ArrayPrototype$b = Array.prototype;
      var isArrayIteratorMethod$2 = function(it) {
        return it !== void 0 && (Iterators$1.Array === it || ArrayPrototype$b[ITERATOR$2] === it);
      };
      var classof$5 = classof$d;
      var getMethod = getMethod$3;
      var isNullOrUndefined$3 = isNullOrUndefined$6;
      var Iterators = iterators;
      var wellKnownSymbol$6 = wellKnownSymbol$n;
      var ITERATOR$1 = wellKnownSymbol$6("iterator");
      var getIteratorMethod$9 = function(it) {
        if (!isNullOrUndefined$3(it)) return getMethod(it, ITERATOR$1) || getMethod(it, "@@iterator") || Iterators[classof$5(it)];
      };
      var call$9 = functionCall;
      var aCallable$7 = aCallable$e;
      var anObject$5 = anObject$d;
      var tryToString$3 = tryToString$6;
      var getIteratorMethod$8 = getIteratorMethod$9;
      var $TypeError$7 = TypeError;
      var getIterator$8 = function(argument, usingIterator) {
        var iteratorMethod = arguments.length < 2 ? getIteratorMethod$8(argument) : usingIterator;
        if (aCallable$7(iteratorMethod)) return anObject$5(call$9(iteratorMethod, argument));
        throw new $TypeError$7(tryToString$3(argument) + " is not iterable");
      };
      var bind$9 = functionBindContext;
      var call$8 = functionCall;
      var toObject$6 = toObject$e;
      var callWithSafeIterationClosing = callWithSafeIterationClosing$1;
      var isArrayIteratorMethod$1 = isArrayIteratorMethod$2;
      var isConstructor$2 = isConstructor$4;
      var lengthOfArrayLike$5 = lengthOfArrayLike$d;
      var createProperty$3 = createProperty$6;
      var getIterator$7 = getIterator$8;
      var getIteratorMethod$7 = getIteratorMethod$9;
      var $Array$1 = Array;
      var arrayFrom = function from2(arrayLike) {
        var O = toObject$6(arrayLike);
        var IS_CONSTRUCTOR = isConstructor$2(this);
        var argumentsLength = arguments.length;
        var mapfn = argumentsLength > 1 ? arguments[1] : void 0;
        var mapping = mapfn !== void 0;
        if (mapping) mapfn = bind$9(mapfn, argumentsLength > 2 ? arguments[2] : void 0);
        var iteratorMethod = getIteratorMethod$7(O);
        var index = 0;
        var length2, result, step, iterator2, next, value;
        if (iteratorMethod && !(this === $Array$1 && isArrayIteratorMethod$1(iteratorMethod))) {
          iterator2 = getIterator$7(O, iteratorMethod);
          next = iterator2.next;
          result = IS_CONSTRUCTOR ? new this() : [];
          for (; !(step = call$8(next, iterator2)).done; index++) {
            value = mapping ? callWithSafeIterationClosing(iterator2, mapfn, [step.value, index], true) : step.value;
            createProperty$3(result, index, value);
          }
        } else {
          length2 = lengthOfArrayLike$5(O);
          result = IS_CONSTRUCTOR ? new this(length2) : $Array$1(length2);
          for (; length2 > index; index++) {
            value = mapping ? mapfn(O[index], index) : O[index];
            createProperty$3(result, index, value);
          }
        }
        result.length = index;
        return result;
      };
      var wellKnownSymbol$5 = wellKnownSymbol$n;
      var ITERATOR = wellKnownSymbol$5("iterator");
      var SAFE_CLOSING = false;
      try {
        var called = 0;
        var iteratorWithReturn = {
          next: function() {
            return { done: !!called++ };
          },
          "return": function() {
            SAFE_CLOSING = true;
          }
        };
        iteratorWithReturn[ITERATOR] = function() {
          return this;
        };
        Array.from(iteratorWithReturn, function() {
          throw 2;
        });
      } catch (error) {
      }
      var checkCorrectnessOfIteration$2 = function(exec2, SKIP_CLOSING) {
        try {
          if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
        } catch (error) {
          return false;
        }
        var ITERATION_SUPPORT = false;
        try {
          var object = {};
          object[ITERATOR] = function() {
            return {
              next: function() {
                return { done: ITERATION_SUPPORT = true };
              }
            };
          };
          exec2(object);
        } catch (error) {
        }
        return ITERATION_SUPPORT;
      };
      var $$y = _export;
      var from$6 = arrayFrom;
      var checkCorrectnessOfIteration$1 = checkCorrectnessOfIteration$2;
      var INCORRECT_ITERATION = !checkCorrectnessOfIteration$1(function(iterable) {
        Array.from(iterable);
      });
      $$y({ target: "Array", stat: true, forced: INCORRECT_ITERATION }, {
        from: from$6
      });
      var path$h = path$o;
      var from$5 = path$h.Array.from;
      var parent$T = from$5;
      var from$4 = parent$T;
      var from$3 = from$4;
      var _Array$from$1 = getDefaultExportFromCjs(from$3);
      var getIteratorMethod$6 = getIteratorMethod$9;
      var getIteratorMethod_1 = getIteratorMethod$6;
      var parent$S = getIteratorMethod_1;
      var getIteratorMethod$5 = parent$S;
      var parent$R = getIteratorMethod$5;
      var getIteratorMethod$4 = parent$R;
      var parent$Q = getIteratorMethod$4;
      var getIteratorMethod$3 = parent$Q;
      var getIteratorMethod$2 = getIteratorMethod$3;
      var _getIteratorMethod$1 = getDefaultExportFromCjs(getIteratorMethod$2);
      var getIteratorMethod$1 = getIteratorMethod$2;
      var _getIteratorMethod = getDefaultExportFromCjs(getIteratorMethod$1);
      var $$x = _export;
      var isArray$9 = isArray$e;
      $$x({ target: "Array", stat: true }, {
        isArray: isArray$9
      });
      var path$g = path$o;
      var isArray$8 = path$g.Array.isArray;
      var parent$P = isArray$8;
      var isArray$7 = parent$P;
      var parent$O = isArray$7;
      var isArray$6 = parent$O;
      var parent$N = isArray$6;
      var isArray$5 = parent$N;
      var isArray$4 = isArray$5;
      var _Array$isArray$1 = getDefaultExportFromCjs(isArray$4);
      function _arrayWithHoles(arr) {
        if (_Array$isArray$1(arr)) return arr;
      }
      var DESCRIPTORS$8 = descriptors;
      var isArray$3 = isArray$e;
      var $TypeError$6 = TypeError;
      var getOwnPropertyDescriptor$5 = Object.getOwnPropertyDescriptor;
      var SILENT_ON_NON_WRITABLE_LENGTH_SET = DESCRIPTORS$8 && !function() {
        if (this !== void 0) return true;
        try {
          Object.defineProperty([], "length", { writable: false }).length = 1;
        } catch (error) {
          return error instanceof TypeError;
        }
      }();
      var arraySetLength = SILENT_ON_NON_WRITABLE_LENGTH_SET ? function(O, length2) {
        if (isArray$3(O) && !getOwnPropertyDescriptor$5(O, "length").writable) {
          throw new $TypeError$6("Cannot set read only .length");
        }
        return O.length = length2;
      } : function(O, length2) {
        return O.length = length2;
      };
      var $$w = _export;
      var toObject$5 = toObject$e;
      var lengthOfArrayLike$4 = lengthOfArrayLike$d;
      var setArrayLength$1 = arraySetLength;
      var doesNotExceedSafeInteger$1 = doesNotExceedSafeInteger$4;
      var fails$d = fails$u;
      var INCORRECT_TO_LENGTH = fails$d(function() {
        return [].push.call({ length: 4294967296 }, 1) !== 4294967297;
      });
      var properErrorOnNonWritableLength = function() {
        try {
          Object.defineProperty([], "length", { writable: false }).push();
        } catch (error) {
          return error instanceof TypeError;
        }
      };
      var FORCED$3 = INCORRECT_TO_LENGTH || !properErrorOnNonWritableLength();
      $$w({ target: "Array", proto: true, arity: 1, forced: FORCED$3 }, {
        // eslint-disable-next-line no-unused-vars -- required for `.length`
        push: function push2(item) {
          var O = toObject$5(this);
          var len = lengthOfArrayLike$4(O);
          var argCount = arguments.length;
          doesNotExceedSafeInteger$1(len + argCount);
          for (var i2 = 0; i2 < argCount; i2++) {
            O[len] = arguments[i2];
            len++;
          }
          setArrayLength$1(O, len);
          return len;
        }
      });
      var getBuiltInPrototypeMethod$a = getBuiltInPrototypeMethod$g;
      var push$8 = getBuiltInPrototypeMethod$a("Array", "push");
      var isPrototypeOf$d = objectIsPrototypeOf;
      var method$a = push$8;
      var ArrayPrototype$a = Array.prototype;
      var push$7 = function(it) {
        var own = it.push;
        return it === ArrayPrototype$a || isPrototypeOf$d(ArrayPrototype$a, it) && own === ArrayPrototype$a.push ? method$a : own;
      };
      var parent$M = push$7;
      var push$6 = parent$M;
      var parent$L = push$6;
      var push$5 = parent$L;
      var parent$K = push$5;
      var push$4 = parent$K;
      var push$3 = push$4;
      var _pushInstanceProperty = getDefaultExportFromCjs(push$3);
      function _iterableToArrayLimit(r, l) {
        var t = null == r ? null : "undefined" != typeof _Symbol$1 && _getIteratorMethod$1(r) || r["@@iterator"];
        if (null != t) {
          var e, n, i2, u, a = [], f = true, o = false;
          try {
            if (i2 = (t = t.call(r)).next, 0 === l) {
              if (Object(t) !== t) return;
              f = false;
            } else for (; !(f = (e = i2.call(t)).done) && (_pushInstanceProperty(a).call(a, e.value), a.length !== l); f = true) ;
          } catch (r2) {
            o = true, n = r2;
          } finally {
            try {
              if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
            } finally {
              if (o) throw n;
            }
          }
          return a;
        }
      }
      var $$v = _export;
      var isArray$2 = isArray$e;
      var isConstructor$1 = isConstructor$4;
      var isObject$7 = isObject$h;
      var toAbsoluteIndex$1 = toAbsoluteIndex$4;
      var lengthOfArrayLike$3 = lengthOfArrayLike$d;
      var toIndexedObject$2 = toIndexedObject$a;
      var createProperty$2 = createProperty$6;
      var wellKnownSymbol$4 = wellKnownSymbol$n;
      var arrayMethodHasSpeciesSupport$1 = arrayMethodHasSpeciesSupport$5;
      var nativeSlice = arraySlice$5;
      var HAS_SPECIES_SUPPORT$1 = arrayMethodHasSpeciesSupport$1("slice");
      var SPECIES$3 = wellKnownSymbol$4("species");
      var $Array = Array;
      var max$1 = Math.max;
      $$v({ target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT$1 }, {
        slice: function slice2(start, end) {
          var O = toIndexedObject$2(this);
          var length2 = lengthOfArrayLike$3(O);
          var k = toAbsoluteIndex$1(start, length2);
          var fin = toAbsoluteIndex$1(end === void 0 ? length2 : end, length2);
          var Constructor, result, n;
          if (isArray$2(O)) {
            Constructor = O.constructor;
            if (isConstructor$1(Constructor) && (Constructor === $Array || isArray$2(Constructor.prototype))) {
              Constructor = void 0;
            } else if (isObject$7(Constructor)) {
              Constructor = Constructor[SPECIES$3];
              if (Constructor === null) Constructor = void 0;
            }
            if (Constructor === $Array || Constructor === void 0) {
              return nativeSlice(O, k, fin);
            }
          }
          result = new (Constructor === void 0 ? $Array : Constructor)(max$1(fin - k, 0));
          for (n = 0; k < fin; k++, n++) if (k in O) createProperty$2(result, n, O[k]);
          result.length = n;
          return result;
        }
      });
      var getBuiltInPrototypeMethod$9 = getBuiltInPrototypeMethod$g;
      var slice$6 = getBuiltInPrototypeMethod$9("Array", "slice");
      var isPrototypeOf$c = objectIsPrototypeOf;
      var method$9 = slice$6;
      var ArrayPrototype$9 = Array.prototype;
      var slice$5 = function(it) {
        var own = it.slice;
        return it === ArrayPrototype$9 || isPrototypeOf$c(ArrayPrototype$9, it) && own === ArrayPrototype$9.slice ? method$9 : own;
      };
      var parent$J = slice$5;
      var slice$4 = parent$J;
      var parent$I = slice$4;
      var slice$3 = parent$I;
      var parent$H = slice$3;
      var slice$2 = parent$H;
      var slice$1 = slice$2;
      var _sliceInstanceProperty$1 = getDefaultExportFromCjs(slice$1);
      var parent$G = from$4;
      var from$2 = parent$G;
      var parent$F = from$2;
      var from$1 = parent$F;
      var from = from$1;
      var _Array$from = getDefaultExportFromCjs(from);
      function _arrayLikeToArray$4(arr, len) {
        if (len == null || len > arr.length) len = arr.length;
        for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++) arr2[i2] = arr[i2];
        return arr2;
      }
      function _unsupportedIterableToArray$4(o, minLen) {
        var _context;
        if (!o) return;
        if (typeof o === "string") return _arrayLikeToArray$4(o, minLen);
        var n = _sliceInstanceProperty$1(_context = Object.prototype.toString.call(o)).call(_context, 8, -1);
        if (n === "Object" && o.constructor) n = o.constructor.name;
        if (n === "Map" || n === "Set") return _Array$from(o);
        if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$4(o, minLen);
      }
      function _nonIterableRest() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      function _slicedToArray(arr, i2) {
        return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i2) || _unsupportedIterableToArray$4(arr, i2) || _nonIterableRest();
      }
      function _arrayWithoutHoles(arr) {
        if (_Array$isArray$1(arr)) return _arrayLikeToArray$4(arr);
      }
      function _iterableToArray(iter) {
        if (typeof _Symbol$1 !== "undefined" && _getIteratorMethod$1(iter) != null || iter["@@iterator"] != null) return _Array$from(iter);
      }
      function _nonIterableSpread() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      function _toConsumableArray(arr) {
        return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray$4(arr) || _nonIterableSpread();
      }
      var symbol = symbol$4;
      var _Symbol = getDefaultExportFromCjs(symbol);
      var getBuiltInPrototypeMethod$8 = getBuiltInPrototypeMethod$g;
      var concat$5 = getBuiltInPrototypeMethod$8("Array", "concat");
      var isPrototypeOf$b = objectIsPrototypeOf;
      var method$8 = concat$5;
      var ArrayPrototype$8 = Array.prototype;
      var concat$4 = function(it) {
        var own = it.concat;
        return it === ArrayPrototype$8 || isPrototypeOf$b(ArrayPrototype$8, it) && own === ArrayPrototype$8.concat ? method$8 : own;
      };
      var parent$E = concat$4;
      var concat$3 = parent$E;
      var concat$2 = concat$3;
      var _concatInstanceProperty = getDefaultExportFromCjs(concat$2);
      var slice = slice$4;
      var _sliceInstanceProperty = getDefaultExportFromCjs(slice);
      var getBuiltIn$5 = getBuiltIn$f;
      var uncurryThis$5 = functionUncurryThis;
      var getOwnPropertyNamesModule$1 = objectGetOwnPropertyNames;
      var getOwnPropertySymbolsModule$1 = objectGetOwnPropertySymbols;
      var anObject$4 = anObject$d;
      var concat$1 = uncurryThis$5([].concat);
      var ownKeys$7 = getBuiltIn$5("Reflect", "ownKeys") || function ownKeys2(it) {
        var keys2 = getOwnPropertyNamesModule$1.f(anObject$4(it));
        var getOwnPropertySymbols2 = getOwnPropertySymbolsModule$1.f;
        return getOwnPropertySymbols2 ? concat$1(keys2, getOwnPropertySymbols2(it)) : keys2;
      };
      var $$u = _export;
      var ownKeys$6 = ownKeys$7;
      $$u({ target: "Reflect", stat: true }, {
        ownKeys: ownKeys$6
      });
      var path$f = path$o;
      var ownKeys$5 = path$f.Reflect.ownKeys;
      var parent$D = ownKeys$5;
      var ownKeys$4 = parent$D;
      var ownKeys$3 = ownKeys$4;
      var _Reflect$ownKeys = getDefaultExportFromCjs(ownKeys$3);
      var isArray$1 = isArray$7;
      var _Array$isArray = getDefaultExportFromCjs(isArray$1);
      var $$t = _export;
      var toObject$4 = toObject$e;
      var nativeKeys = objectKeys$3;
      var fails$c = fails$u;
      var FAILS_ON_PRIMITIVES$2 = fails$c(function() {
        nativeKeys(1);
      });
      $$t({ target: "Object", stat: true, forced: FAILS_ON_PRIMITIVES$2 }, {
        keys: function keys2(it) {
          return nativeKeys(toObject$4(it));
        }
      });
      var path$e = path$o;
      var keys$6 = path$e.Object.keys;
      var parent$C = keys$6;
      var keys$5 = parent$C;
      var keys$4 = keys$5;
      var _Object$keys = getDefaultExportFromCjs(keys$4);
      var $forEach = arrayIteration.forEach;
      var arrayMethodIsStrict$2 = arrayMethodIsStrict$4;
      var STRICT_METHOD$2 = arrayMethodIsStrict$2("forEach");
      var arrayForEach = !STRICT_METHOD$2 ? function forEach2(callbackfn) {
        return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
      } : [].forEach;
      var $$s = _export;
      var forEach$8 = arrayForEach;
      $$s({ target: "Array", proto: true, forced: [].forEach !== forEach$8 }, {
        forEach: forEach$8
      });
      var getBuiltInPrototypeMethod$7 = getBuiltInPrototypeMethod$g;
      var forEach$7 = getBuiltInPrototypeMethod$7("Array", "forEach");
      var parent$B = forEach$7;
      var forEach$6 = parent$B;
      var classof$4 = classof$d;
      var hasOwn$6 = hasOwnProperty_1;
      var isPrototypeOf$a = objectIsPrototypeOf;
      var method$7 = forEach$6;
      var ArrayPrototype$7 = Array.prototype;
      var DOMIterables$3 = {
        DOMTokenList: true,
        NodeList: true
      };
      var forEach$5 = function(it) {
        var own = it.forEach;
        return it === ArrayPrototype$7 || isPrototypeOf$a(ArrayPrototype$7, it) && own === ArrayPrototype$7.forEach || hasOwn$6(DOMIterables$3, classof$4(it)) ? method$7 : own;
      };
      var forEach$4 = forEach$5;
      var _forEachInstanceProperty = getDefaultExportFromCjs(forEach$4);
      var $$r = _export;
      var uncurryThis$4 = functionUncurryThis;
      var isArray = isArray$e;
      var nativeReverse = uncurryThis$4([].reverse);
      var test$1 = [1, 2];
      $$r({ target: "Array", proto: true, forced: String(test$1) === String(test$1.reverse()) }, {
        reverse: function reverse2() {
          if (isArray(this)) this.length = this.length;
          return nativeReverse(this);
        }
      });
      var getBuiltInPrototypeMethod$6 = getBuiltInPrototypeMethod$g;
      var reverse$6 = getBuiltInPrototypeMethod$6("Array", "reverse");
      var isPrototypeOf$9 = objectIsPrototypeOf;
      var method$6 = reverse$6;
      var ArrayPrototype$6 = Array.prototype;
      var reverse$5 = function(it) {
        var own = it.reverse;
        return it === ArrayPrototype$6 || isPrototypeOf$9(ArrayPrototype$6, it) && own === ArrayPrototype$6.reverse ? method$6 : own;
      };
      var parent$A = reverse$5;
      var reverse$4 = parent$A;
      var reverse$3 = reverse$4;
      var _reverseInstanceProperty = getDefaultExportFromCjs(reverse$3);
      var tryToString$2 = tryToString$6;
      var $TypeError$5 = TypeError;
      var deletePropertyOrThrow$2 = function(O, P) {
        if (!delete O[P]) throw new $TypeError$5("Cannot delete property " + tryToString$2(P) + " of " + tryToString$2(O));
      };
      var $$q = _export;
      var toObject$3 = toObject$e;
      var toAbsoluteIndex = toAbsoluteIndex$4;
      var toIntegerOrInfinity = toIntegerOrInfinity$4;
      var lengthOfArrayLike$2 = lengthOfArrayLike$d;
      var setArrayLength = arraySetLength;
      var doesNotExceedSafeInteger = doesNotExceedSafeInteger$4;
      var arraySpeciesCreate = arraySpeciesCreate$4;
      var createProperty$1 = createProperty$6;
      var deletePropertyOrThrow$1 = deletePropertyOrThrow$2;
      var arrayMethodHasSpeciesSupport = arrayMethodHasSpeciesSupport$5;
      var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport("splice");
      var max = Math.max;
      var min = Math.min;
      $$q({ target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT }, {
        splice: function splice2(start, deleteCount) {
          var O = toObject$3(this);
          var len = lengthOfArrayLike$2(O);
          var actualStart = toAbsoluteIndex(start, len);
          var argumentsLength = arguments.length;
          var insertCount, actualDeleteCount, A, k, from2, to;
          if (argumentsLength === 0) {
            insertCount = actualDeleteCount = 0;
          } else if (argumentsLength === 1) {
            insertCount = 0;
            actualDeleteCount = len - actualStart;
          } else {
            insertCount = argumentsLength - 2;
            actualDeleteCount = min(max(toIntegerOrInfinity(deleteCount), 0), len - actualStart);
          }
          doesNotExceedSafeInteger(len + insertCount - actualDeleteCount);
          A = arraySpeciesCreate(O, actualDeleteCount);
          for (k = 0; k < actualDeleteCount; k++) {
            from2 = actualStart + k;
            if (from2 in O) createProperty$1(A, k, O[from2]);
          }
          A.length = actualDeleteCount;
          if (insertCount < actualDeleteCount) {
            for (k = actualStart; k < len - actualDeleteCount; k++) {
              from2 = k + actualDeleteCount;
              to = k + insertCount;
              if (from2 in O) O[to] = O[from2];
              else deletePropertyOrThrow$1(O, to);
            }
            for (k = len; k > len - actualDeleteCount + insertCount; k--) deletePropertyOrThrow$1(O, k - 1);
          } else if (insertCount > actualDeleteCount) {
            for (k = len - actualDeleteCount; k > actualStart; k--) {
              from2 = k + actualDeleteCount - 1;
              to = k + insertCount - 1;
              if (from2 in O) O[to] = O[from2];
              else deletePropertyOrThrow$1(O, to);
            }
          }
          for (k = 0; k < insertCount; k++) {
            O[k + actualStart] = arguments[k + 2];
          }
          setArrayLength(O, len - actualDeleteCount + insertCount);
          return A;
        }
      });
      var getBuiltInPrototypeMethod$5 = getBuiltInPrototypeMethod$g;
      var splice$3 = getBuiltInPrototypeMethod$5("Array", "splice");
      var isPrototypeOf$8 = objectIsPrototypeOf;
      var method$5 = splice$3;
      var ArrayPrototype$5 = Array.prototype;
      var splice$2 = function(it) {
        var own = it.splice;
        return it === ArrayPrototype$5 || isPrototypeOf$8(ArrayPrototype$5, it) && own === ArrayPrototype$5.splice ? method$5 : own;
      };
      var parent$z = splice$2;
      var splice$1 = parent$z;
      var splice = splice$1;
      var _spliceInstanceProperty = getDefaultExportFromCjs(splice);
      var DESCRIPTORS$7 = descriptors;
      var uncurryThis$3 = functionUncurryThis;
      var call$7 = functionCall;
      var fails$b = fails$u;
      var objectKeys = objectKeys$3;
      var getOwnPropertySymbolsModule = objectGetOwnPropertySymbols;
      var propertyIsEnumerableModule = objectPropertyIsEnumerable;
      var toObject$2 = toObject$e;
      var IndexedObject = indexedObject;
      var $assign = Object.assign;
      var defineProperty$3 = Object.defineProperty;
      var concat = uncurryThis$3([].concat);
      var objectAssign = !$assign || fails$b(function() {
        if (DESCRIPTORS$7 && $assign({ b: 1 }, $assign(defineProperty$3({}, "a", {
          enumerable: true,
          get: function() {
            defineProperty$3(this, "b", {
              value: 3,
              enumerable: false
            });
          }
        }), { b: 2 })).b !== 1) return true;
        var A = {};
        var B = {};
        var symbol2 = Symbol("assign detection");
        var alphabet = "abcdefghijklmnopqrst";
        A[symbol2] = 7;
        alphabet.split("").forEach(function(chr) {
          B[chr] = chr;
        });
        return $assign({}, A)[symbol2] !== 7 || objectKeys($assign({}, B)).join("") !== alphabet;
      }) ? function assign2(target, source) {
        var T = toObject$2(target);
        var argumentsLength = arguments.length;
        var index = 1;
        var getOwnPropertySymbols2 = getOwnPropertySymbolsModule.f;
        var propertyIsEnumerable = propertyIsEnumerableModule.f;
        while (argumentsLength > index) {
          var S = IndexedObject(arguments[index++]);
          var keys2 = getOwnPropertySymbols2 ? concat(objectKeys(S), getOwnPropertySymbols2(S)) : objectKeys(S);
          var length2 = keys2.length;
          var j = 0;
          var key;
          while (length2 > j) {
            key = keys2[j++];
            if (!DESCRIPTORS$7 || call$7(propertyIsEnumerable, S, key)) T[key] = S[key];
          }
        }
        return T;
      } : $assign;
      var $$p = _export;
      var assign$5 = objectAssign;
      $$p({ target: "Object", stat: true, arity: 2, forced: Object.assign !== assign$5 }, {
        assign: assign$5
      });
      var path$d = path$o;
      var assign$4 = path$d.Object.assign;
      var parent$y = assign$4;
      var assign$3 = parent$y;
      var assign$2 = assign$3;
      var _Object$assign = getDefaultExportFromCjs(assign$2);
      var $$o = _export;
      var fails$a = fails$u;
      var toObject$1 = toObject$e;
      var nativeGetPrototypeOf = objectGetPrototypeOf;
      var CORRECT_PROTOTYPE_GETTER = correctPrototypeGetter;
      var FAILS_ON_PRIMITIVES$1 = fails$a(function() {
        nativeGetPrototypeOf(1);
      });
      $$o({ target: "Object", stat: true, forced: FAILS_ON_PRIMITIVES$1, sham: !CORRECT_PROTOTYPE_GETTER }, {
        getPrototypeOf: function getPrototypeOf2(it) {
          return nativeGetPrototypeOf(toObject$1(it));
        }
      });
      var path$c = path$o;
      var getPrototypeOf$5 = path$c.Object.getPrototypeOf;
      var parent$x = getPrototypeOf$5;
      var getPrototypeOf$4 = parent$x;
      var $$n = _export;
      var DESCRIPTORS$6 = descriptors;
      var create$9 = objectCreate;
      $$n({ target: "Object", stat: true, sham: !DESCRIPTORS$6 }, {
        create: create$9
      });
      var path$b = path$o;
      var Object$3 = path$b.Object;
      var create$8 = function create2(P, D) {
        return Object$3.create(P, D);
      };
      var parent$w = create$8;
      var create$7 = parent$w;
      var create$6 = create$7;
      var _Object$create$1 = getDefaultExportFromCjs(create$6);
      var path$a = path$o;
      var apply$3 = functionApply;
      if (!path$a.JSON) path$a.JSON = { stringify: JSON.stringify };
      var stringify$2 = function stringify2(it, replacer, space) {
        return apply$3(path$a.JSON.stringify, null, arguments);
      };
      var parent$v = stringify$2;
      var stringify$1 = parent$v;
      var stringify = stringify$1;
      var _JSON$stringify = getDefaultExportFromCjs(stringify);
      var engineIsBun = typeof Bun == "function" && Bun && typeof Bun.version == "string";
      var $TypeError$4 = TypeError;
      var validateArgumentsLength$2 = function(passed, required) {
        if (passed < required) throw new $TypeError$4("Not enough arguments");
        return passed;
      };
      var global$9 = global$p;
      var apply$2 = functionApply;
      var isCallable$5 = isCallable$m;
      var ENGINE_IS_BUN = engineIsBun;
      var USER_AGENT = engineUserAgent;
      var arraySlice$2 = arraySlice$5;
      var validateArgumentsLength$1 = validateArgumentsLength$2;
      var Function$2 = global$9.Function;
      var WRAP = /MSIE .\./.test(USER_AGENT) || ENGINE_IS_BUN && function() {
        var version2 = global$9.Bun.version.split(".");
        return version2.length < 3 || version2[0] === "0" && (version2[1] < 3 || version2[1] === "3" && version2[2] === "0");
      }();
      var schedulersFix$2 = function(scheduler, hasTimeArg) {
        var firstParamIndex = hasTimeArg ? 2 : 1;
        return WRAP ? function(handler, timeout) {
          var boundArgs = validateArgumentsLength$1(arguments.length, 1) > firstParamIndex;
          var fn = isCallable$5(handler) ? handler : Function$2(handler);
          var params = boundArgs ? arraySlice$2(arguments, firstParamIndex) : [];
          var callback = boundArgs ? function() {
            apply$2(fn, this, params);
          } : fn;
          return hasTimeArg ? scheduler(callback, timeout) : scheduler(callback);
        } : scheduler;
      };
      var $$m = _export;
      var global$8 = global$p;
      var schedulersFix$1 = schedulersFix$2;
      var setInterval = schedulersFix$1(global$8.setInterval, true);
      $$m({ global: true, bind: true, forced: global$8.setInterval !== setInterval }, {
        setInterval
      });
      var $$l = _export;
      var global$7 = global$p;
      var schedulersFix = schedulersFix$2;
      var setTimeout$3 = schedulersFix(global$7.setTimeout, true);
      $$l({ global: true, bind: true, forced: global$7.setTimeout !== setTimeout$3 }, {
        setTimeout: setTimeout$3
      });
      var path$9 = path$o;
      var setTimeout$2 = path$9.setTimeout;
      var setTimeout$1 = setTimeout$2;
      var _setTimeout = getDefaultExportFromCjs(setTimeout$1);
      var componentEmitter = { exports: {} };
      (function(module2) {
        function Emitter2(object) {
          if (object) {
            return mixin(object);
          }
          this._callbacks = /* @__PURE__ */ new Map();
        }
        function mixin(object) {
          Object.assign(object, Emitter2.prototype);
          object._callbacks = /* @__PURE__ */ new Map();
          return object;
        }
        Emitter2.prototype.on = function(event, listener) {
          const callbacks = this._callbacks.get(event) ?? [];
          callbacks.push(listener);
          this._callbacks.set(event, callbacks);
          return this;
        };
        Emitter2.prototype.once = function(event, listener) {
          const on = (...arguments_) => {
            this.off(event, on);
            listener.apply(this, arguments_);
          };
          on.fn = listener;
          this.on(event, on);
          return this;
        };
        Emitter2.prototype.off = function(event, listener) {
          if (event === void 0 && listener === void 0) {
            this._callbacks.clear();
            return this;
          }
          if (listener === void 0) {
            this._callbacks.delete(event);
            return this;
          }
          const callbacks = this._callbacks.get(event);
          if (callbacks) {
            for (const [index, callback] of callbacks.entries()) {
              if (callback === listener || callback.fn === listener) {
                callbacks.splice(index, 1);
                break;
              }
            }
            if (callbacks.length === 0) {
              this._callbacks.delete(event);
            } else {
              this._callbacks.set(event, callbacks);
            }
          }
          return this;
        };
        Emitter2.prototype.emit = function(event, ...arguments_) {
          const callbacks = this._callbacks.get(event);
          if (callbacks) {
            const callbacksCopy = [...callbacks];
            for (const callback of callbacksCopy) {
              callback.apply(this, arguments_);
            }
          }
          return this;
        };
        Emitter2.prototype.listeners = function(event) {
          return this._callbacks.get(event) ?? [];
        };
        Emitter2.prototype.listenerCount = function(event) {
          if (event) {
            return this.listeners(event).length;
          }
          let totalCount = 0;
          for (const callbacks of this._callbacks.values()) {
            totalCount += callbacks.length;
          }
          return totalCount;
        };
        Emitter2.prototype.hasListeners = function(event) {
          return this.listenerCount(event) > 0;
        };
        Emitter2.prototype.addEventListener = Emitter2.prototype.on;
        Emitter2.prototype.removeListener = Emitter2.prototype.off;
        Emitter2.prototype.removeEventListener = Emitter2.prototype.off;
        Emitter2.prototype.removeAllListeners = Emitter2.prototype.off;
        {
          module2.exports = Emitter2;
        }
      })(componentEmitter);
      var componentEmitterExports = componentEmitter.exports;
      var Emitter = getDefaultExportFromCjs(componentEmitterExports);
      function _extends() {
        _extends = Object.assign || function(target) {
          for (var i2 = 1; i2 < arguments.length; i2++) {
            var source = arguments[i2];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };
        return _extends.apply(this, arguments);
      }
      function _inheritsLoose(subClass, superClass) {
        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
      }
      function _assertThisInitialized$1(self2) {
        if (self2 === void 0) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return self2;
      }
      var assign;
      if (typeof Object.assign !== "function") {
        assign = function assign2(target) {
          if (target === void 0 || target === null) {
            throw new TypeError("Cannot convert undefined or null to object");
          }
          var output = Object(target);
          for (var index = 1; index < arguments.length; index++) {
            var source = arguments[index];
            if (source !== void 0 && source !== null) {
              for (var nextKey in source) {
                if (source.hasOwnProperty(nextKey)) {
                  output[nextKey] = source[nextKey];
                }
              }
            }
          }
          return output;
        };
      } else {
        assign = Object.assign;
      }
      var assign$1 = assign;
      var VENDOR_PREFIXES = ["", "webkit", "Moz", "MS", "ms", "o"];
      var TEST_ELEMENT = typeof document === "undefined" ? {
        style: {}
      } : document.createElement("div");
      var TYPE_FUNCTION = "function";
      var round = Math.round, abs = Math.abs;
      var now = Date.now;
      function prefixed(obj, property) {
        var prefix;
        var prop;
        var camelProp = property[0].toUpperCase() + property.slice(1);
        var i2 = 0;
        while (i2 < VENDOR_PREFIXES.length) {
          prefix = VENDOR_PREFIXES[i2];
          prop = prefix ? prefix + camelProp : property;
          if (prop in obj) {
            return prop;
          }
          i2++;
        }
        return void 0;
      }
      var win;
      if (typeof window === "undefined") {
        win = {};
      } else {
        win = window;
      }
      var PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, "touchAction");
      var NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== void 0;
      function getTouchActionProps() {
        if (!NATIVE_TOUCH_ACTION) {
          return false;
        }
        var touchMap = {};
        var cssSupports = win.CSS && win.CSS.supports;
        ["auto", "manipulation", "pan-y", "pan-x", "pan-x pan-y", "none"].forEach(function(val) {
          return touchMap[val] = cssSupports ? win.CSS.supports("touch-action", val) : true;
        });
        return touchMap;
      }
      var TOUCH_ACTION_COMPUTE = "compute";
      var TOUCH_ACTION_AUTO = "auto";
      var TOUCH_ACTION_MANIPULATION = "manipulation";
      var TOUCH_ACTION_NONE = "none";
      var TOUCH_ACTION_PAN_X = "pan-x";
      var TOUCH_ACTION_PAN_Y = "pan-y";
      var TOUCH_ACTION_MAP = getTouchActionProps();
      var MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;
      var SUPPORT_TOUCH = "ontouchstart" in win;
      var SUPPORT_POINTER_EVENTS = prefixed(win, "PointerEvent") !== void 0;
      var SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);
      var INPUT_TYPE_TOUCH = "touch";
      var INPUT_TYPE_PEN = "pen";
      var INPUT_TYPE_MOUSE = "mouse";
      var INPUT_TYPE_KINECT = "kinect";
      var COMPUTE_INTERVAL = 25;
      var INPUT_START = 1;
      var INPUT_MOVE = 2;
      var INPUT_END = 4;
      var INPUT_CANCEL = 8;
      var DIRECTION_NONE = 1;
      var DIRECTION_LEFT = 2;
      var DIRECTION_RIGHT = 4;
      var DIRECTION_UP = 8;
      var DIRECTION_DOWN = 16;
      var DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;
      var DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;
      var DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;
      var PROPS_XY = ["x", "y"];
      var PROPS_CLIENT_XY = ["clientX", "clientY"];
      function each(obj, iterator2, context) {
        var i2;
        if (!obj) {
          return;
        }
        if (obj.forEach) {
          obj.forEach(iterator2, context);
        } else if (obj.length !== void 0) {
          i2 = 0;
          while (i2 < obj.length) {
            iterator2.call(context, obj[i2], i2, obj);
            i2++;
          }
        } else {
          for (i2 in obj) {
            obj.hasOwnProperty(i2) && iterator2.call(context, obj[i2], i2, obj);
          }
        }
      }
      function boolOrFn(val, args) {
        if (typeof val === TYPE_FUNCTION) {
          return val.apply(args ? args[0] || void 0 : void 0, args);
        }
        return val;
      }
      function inStr(str, find) {
        return str.indexOf(find) > -1;
      }
      function cleanTouchActions(actions) {
        if (inStr(actions, TOUCH_ACTION_NONE)) {
          return TOUCH_ACTION_NONE;
        }
        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);
        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);
        if (hasPanX && hasPanY) {
          return TOUCH_ACTION_NONE;
        }
        if (hasPanX || hasPanY) {
          return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;
        }
        if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {
          return TOUCH_ACTION_MANIPULATION;
        }
        return TOUCH_ACTION_AUTO;
      }
      var TouchAction = function() {
        function TouchAction2(manager, value) {
          this.manager = manager;
          this.set(value);
        }
        var _proto = TouchAction2.prototype;
        _proto.set = function set2(value) {
          if (value === TOUCH_ACTION_COMPUTE) {
            value = this.compute();
          }
          if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {
            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;
          }
          this.actions = value.toLowerCase().trim();
        };
        _proto.update = function update() {
          this.set(this.manager.options.touchAction);
        };
        _proto.compute = function compute() {
          var actions = [];
          each(this.manager.recognizers, function(recognizer) {
            if (boolOrFn(recognizer.options.enable, [recognizer])) {
              actions = actions.concat(recognizer.getTouchAction());
            }
          });
          return cleanTouchActions(actions.join(" "));
        };
        _proto.preventDefaults = function preventDefaults(input) {
          var srcEvent = input.srcEvent;
          var direction = input.offsetDirection;
          if (this.manager.session.prevented) {
            srcEvent.preventDefault();
            return;
          }
          var actions = this.actions;
          var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];
          var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];
          var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];
          if (hasNone) {
            var isTapPointer = input.pointers.length === 1;
            var isTapMovement = input.distance < 2;
            var isTapTouchTime = input.deltaTime < 250;
            if (isTapPointer && isTapMovement && isTapTouchTime) {
              return;
            }
          }
          if (hasPanX && hasPanY) {
            return;
          }
          if (hasNone || hasPanY && direction & DIRECTION_HORIZONTAL || hasPanX && direction & DIRECTION_VERTICAL) {
            return this.preventSrc(srcEvent);
          }
        };
        _proto.preventSrc = function preventSrc(srcEvent) {
          this.manager.session.prevented = true;
          srcEvent.preventDefault();
        };
        return TouchAction2;
      }();
      function hasParent(node2, parent2) {
        while (node2) {
          if (node2 === parent2) {
            return true;
          }
          node2 = node2.parentNode;
        }
        return false;
      }
      function getCenter(pointers) {
        var pointersLength = pointers.length;
        if (pointersLength === 1) {
          return {
            x: round(pointers[0].clientX),
            y: round(pointers[0].clientY)
          };
        }
        var x = 0;
        var y = 0;
        var i2 = 0;
        while (i2 < pointersLength) {
          x += pointers[i2].clientX;
          y += pointers[i2].clientY;
          i2++;
        }
        return {
          x: round(x / pointersLength),
          y: round(y / pointersLength)
        };
      }
      function simpleCloneInputData(input) {
        var pointers = [];
        var i2 = 0;
        while (i2 < input.pointers.length) {
          pointers[i2] = {
            clientX: round(input.pointers[i2].clientX),
            clientY: round(input.pointers[i2].clientY)
          };
          i2++;
        }
        return {
          timeStamp: now(),
          pointers,
          center: getCenter(pointers),
          deltaX: input.deltaX,
          deltaY: input.deltaY
        };
      }
      function getDistance(p1, p2, props) {
        if (!props) {
          props = PROPS_XY;
        }
        var x = p2[props[0]] - p1[props[0]];
        var y = p2[props[1]] - p1[props[1]];
        return Math.sqrt(x * x + y * y);
      }
      function getAngle(p1, p2, props) {
        if (!props) {
          props = PROPS_XY;
        }
        var x = p2[props[0]] - p1[props[0]];
        var y = p2[props[1]] - p1[props[1]];
        return Math.atan2(y, x) * 180 / Math.PI;
      }
      function getDirection(x, y) {
        if (x === y) {
          return DIRECTION_NONE;
        }
        if (abs(x) >= abs(y)) {
          return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;
        }
        return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;
      }
      function computeDeltaXY(session, input) {
        var center = input.center;
        var offset = session.offsetDelta || {};
        var prevDelta = session.prevDelta || {};
        var prevInput = session.prevInput || {};
        if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {
          prevDelta = session.prevDelta = {
            x: prevInput.deltaX || 0,
            y: prevInput.deltaY || 0
          };
          offset = session.offsetDelta = {
            x: center.x,
            y: center.y
          };
        }
        input.deltaX = prevDelta.x + (center.x - offset.x);
        input.deltaY = prevDelta.y + (center.y - offset.y);
      }
      function getVelocity(deltaTime, x, y) {
        return {
          x: x / deltaTime || 0,
          y: y / deltaTime || 0
        };
      }
      function getScale(start, end) {
        return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);
      }
      function getRotation(start, end) {
        return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);
      }
      function computeIntervalInputData(session, input) {
        var last = session.lastInterval || input;
        var deltaTime = input.timeStamp - last.timeStamp;
        var velocity;
        var velocityX;
        var velocityY;
        var direction;
        if (input.eventType !== INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === void 0)) {
          var deltaX = input.deltaX - last.deltaX;
          var deltaY = input.deltaY - last.deltaY;
          var v = getVelocity(deltaTime, deltaX, deltaY);
          velocityX = v.x;
          velocityY = v.y;
          velocity = abs(v.x) > abs(v.y) ? v.x : v.y;
          direction = getDirection(deltaX, deltaY);
          session.lastInterval = input;
        } else {
          velocity = last.velocity;
          velocityX = last.velocityX;
          velocityY = last.velocityY;
          direction = last.direction;
        }
        input.velocity = velocity;
        input.velocityX = velocityX;
        input.velocityY = velocityY;
        input.direction = direction;
      }
      function computeInputData(manager, input) {
        var session = manager.session;
        var pointers = input.pointers;
        var pointersLength = pointers.length;
        if (!session.firstInput) {
          session.firstInput = simpleCloneInputData(input);
        }
        if (pointersLength > 1 && !session.firstMultiple) {
          session.firstMultiple = simpleCloneInputData(input);
        } else if (pointersLength === 1) {
          session.firstMultiple = false;
        }
        var firstInput = session.firstInput, firstMultiple = session.firstMultiple;
        var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;
        var center = input.center = getCenter(pointers);
        input.timeStamp = now();
        input.deltaTime = input.timeStamp - firstInput.timeStamp;
        input.angle = getAngle(offsetCenter, center);
        input.distance = getDistance(offsetCenter, center);
        computeDeltaXY(session, input);
        input.offsetDirection = getDirection(input.deltaX, input.deltaY);
        var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);
        input.overallVelocityX = overallVelocity.x;
        input.overallVelocityY = overallVelocity.y;
        input.overallVelocity = abs(overallVelocity.x) > abs(overallVelocity.y) ? overallVelocity.x : overallVelocity.y;
        input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;
        input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;
        input.maxPointers = !session.prevInput ? input.pointers.length : input.pointers.length > session.prevInput.maxPointers ? input.pointers.length : session.prevInput.maxPointers;
        computeIntervalInputData(session, input);
        var target = manager.element;
        var srcEvent = input.srcEvent;
        var srcEventTarget;
        if (srcEvent.composedPath) {
          srcEventTarget = srcEvent.composedPath()[0];
        } else if (srcEvent.path) {
          srcEventTarget = srcEvent.path[0];
        } else {
          srcEventTarget = srcEvent.target;
        }
        if (hasParent(srcEventTarget, target)) {
          target = srcEventTarget;
        }
        input.target = target;
      }
      function inputHandler(manager, eventType, input) {
        var pointersLen = input.pointers.length;
        var changedPointersLen = input.changedPointers.length;
        var isFirst = eventType & INPUT_START && pointersLen - changedPointersLen === 0;
        var isFinal = eventType & (INPUT_END | INPUT_CANCEL) && pointersLen - changedPointersLen === 0;
        input.isFirst = !!isFirst;
        input.isFinal = !!isFinal;
        if (isFirst) {
          manager.session = {};
        }
        input.eventType = eventType;
        computeInputData(manager, input);
        manager.emit("hammer.input", input);
        manager.recognize(input);
        manager.session.prevInput = input;
      }
      function splitStr(str) {
        return str.trim().split(/\s+/g);
      }
      function addEventListeners(target, types, handler) {
        each(splitStr(types), function(type) {
          target.addEventListener(type, handler, false);
        });
      }
      function removeEventListeners(target, types, handler) {
        each(splitStr(types), function(type) {
          target.removeEventListener(type, handler, false);
        });
      }
      function getWindowForElement(element) {
        var doc = element.ownerDocument || element;
        return doc.defaultView || doc.parentWindow || window;
      }
      var Input = function() {
        function Input2(manager, callback) {
          var self2 = this;
          this.manager = manager;
          this.callback = callback;
          this.element = manager.element;
          this.target = manager.options.inputTarget;
          this.domHandler = function(ev) {
            if (boolOrFn(manager.options.enable, [manager])) {
              self2.handler(ev);
            }
          };
          this.init();
        }
        var _proto = Input2.prototype;
        _proto.handler = function handler() {
        };
        _proto.init = function init() {
          this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);
          this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);
          this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);
        };
        _proto.destroy = function destroy() {
          this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);
          this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);
          this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);
        };
        return Input2;
      }();
      function inArray(src, find, findByKey) {
        if (src.indexOf && !findByKey) {
          return src.indexOf(find);
        } else {
          var i2 = 0;
          while (i2 < src.length) {
            if (findByKey && src[i2][findByKey] == find || !findByKey && src[i2] === find) {
              return i2;
            }
            i2++;
          }
          return -1;
        }
      }
      var POINTER_INPUT_MAP = {
        pointerdown: INPUT_START,
        pointermove: INPUT_MOVE,
        pointerup: INPUT_END,
        pointercancel: INPUT_CANCEL,
        pointerout: INPUT_CANCEL
      };
      var IE10_POINTER_TYPE_ENUM = {
        2: INPUT_TYPE_TOUCH,
        3: INPUT_TYPE_PEN,
        4: INPUT_TYPE_MOUSE,
        5: INPUT_TYPE_KINECT
        // see https://twitter.com/jacobrossi/status/480596438489890816
      };
      var POINTER_ELEMENT_EVENTS = "pointerdown";
      var POINTER_WINDOW_EVENTS = "pointermove pointerup pointercancel";
      if (win.MSPointerEvent && !win.PointerEvent) {
        POINTER_ELEMENT_EVENTS = "MSPointerDown";
        POINTER_WINDOW_EVENTS = "MSPointerMove MSPointerUp MSPointerCancel";
      }
      var PointerEventInput = function(_Input) {
        _inheritsLoose(PointerEventInput2, _Input);
        function PointerEventInput2() {
          var _this;
          var proto = PointerEventInput2.prototype;
          proto.evEl = POINTER_ELEMENT_EVENTS;
          proto.evWin = POINTER_WINDOW_EVENTS;
          _this = _Input.apply(this, arguments) || this;
          _this.store = _this.manager.session.pointerEvents = [];
          return _this;
        }
        var _proto = PointerEventInput2.prototype;
        _proto.handler = function handler(ev) {
          var store2 = this.store;
          var removePointer = false;
          var eventTypeNormalized = ev.type.toLowerCase().replace("ms", "");
          var eventType = POINTER_INPUT_MAP[eventTypeNormalized];
          var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;
          var isTouch = pointerType === INPUT_TYPE_TOUCH;
          var storeIndex = inArray(store2, ev.pointerId, "pointerId");
          if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {
            if (storeIndex < 0) {
              store2.push(ev);
              storeIndex = store2.length - 1;
            }
          } else if (eventType & (INPUT_END | INPUT_CANCEL)) {
            removePointer = true;
          }
          if (storeIndex < 0) {
            return;
          }
          store2[storeIndex] = ev;
          this.callback(this.manager, eventType, {
            pointers: store2,
            changedPointers: [ev],
            pointerType,
            srcEvent: ev
          });
          if (removePointer) {
            store2.splice(storeIndex, 1);
          }
        };
        return PointerEventInput2;
      }(Input);
      function toArray(obj) {
        return Array.prototype.slice.call(obj, 0);
      }
      function uniqueArray(src, key, sort2) {
        var results = [];
        var values2 = [];
        var i2 = 0;
        while (i2 < src.length) {
          var val = key ? src[i2][key] : src[i2];
          if (inArray(values2, val) < 0) {
            results.push(src[i2]);
          }
          values2[i2] = val;
          i2++;
        }
        if (sort2) {
          if (!key) {
            results = results.sort();
          } else {
            results = results.sort(function(a, b) {
              return a[key] > b[key];
            });
          }
        }
        return results;
      }
      var TOUCH_INPUT_MAP = {
        touchstart: INPUT_START,
        touchmove: INPUT_MOVE,
        touchend: INPUT_END,
        touchcancel: INPUT_CANCEL
      };
      var TOUCH_TARGET_EVENTS = "touchstart touchmove touchend touchcancel";
      var TouchInput = function(_Input) {
        _inheritsLoose(TouchInput2, _Input);
        function TouchInput2() {
          var _this;
          TouchInput2.prototype.evTarget = TOUCH_TARGET_EVENTS;
          _this = _Input.apply(this, arguments) || this;
          _this.targetIds = {};
          return _this;
        }
        var _proto = TouchInput2.prototype;
        _proto.handler = function handler(ev) {
          var type = TOUCH_INPUT_MAP[ev.type];
          var touches = getTouches.call(this, ev, type);
          if (!touches) {
            return;
          }
          this.callback(this.manager, type, {
            pointers: touches[0],
            changedPointers: touches[1],
            pointerType: INPUT_TYPE_TOUCH,
            srcEvent: ev
          });
        };
        return TouchInput2;
      }(Input);
      function getTouches(ev, type) {
        var allTouches = toArray(ev.touches);
        var targetIds = this.targetIds;
        if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {
          targetIds[allTouches[0].identifier] = true;
          return [allTouches, allTouches];
        }
        var i2;
        var targetTouches;
        var changedTouches = toArray(ev.changedTouches);
        var changedTargetTouches = [];
        var target = this.target;
        targetTouches = allTouches.filter(function(touch) {
          return hasParent(touch.target, target);
        });
        if (type === INPUT_START) {
          i2 = 0;
          while (i2 < targetTouches.length) {
            targetIds[targetTouches[i2].identifier] = true;
            i2++;
          }
        }
        i2 = 0;
        while (i2 < changedTouches.length) {
          if (targetIds[changedTouches[i2].identifier]) {
            changedTargetTouches.push(changedTouches[i2]);
          }
          if (type & (INPUT_END | INPUT_CANCEL)) {
            delete targetIds[changedTouches[i2].identifier];
          }
          i2++;
        }
        if (!changedTargetTouches.length) {
          return;
        }
        return [
          // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'
          uniqueArray(targetTouches.concat(changedTargetTouches), "identifier", true),
          changedTargetTouches
        ];
      }
      var MOUSE_INPUT_MAP = {
        mousedown: INPUT_START,
        mousemove: INPUT_MOVE,
        mouseup: INPUT_END
      };
      var MOUSE_ELEMENT_EVENTS = "mousedown";
      var MOUSE_WINDOW_EVENTS = "mousemove mouseup";
      var MouseInput = function(_Input) {
        _inheritsLoose(MouseInput2, _Input);
        function MouseInput2() {
          var _this;
          var proto = MouseInput2.prototype;
          proto.evEl = MOUSE_ELEMENT_EVENTS;
          proto.evWin = MOUSE_WINDOW_EVENTS;
          _this = _Input.apply(this, arguments) || this;
          _this.pressed = false;
          return _this;
        }
        var _proto = MouseInput2.prototype;
        _proto.handler = function handler(ev) {
          var eventType = MOUSE_INPUT_MAP[ev.type];
          if (eventType & INPUT_START && ev.button === 0) {
            this.pressed = true;
          }
          if (eventType & INPUT_MOVE && ev.which !== 1) {
            eventType = INPUT_END;
          }
          if (!this.pressed) {
            return;
          }
          if (eventType & INPUT_END) {
            this.pressed = false;
          }
          this.callback(this.manager, eventType, {
            pointers: [ev],
            changedPointers: [ev],
            pointerType: INPUT_TYPE_MOUSE,
            srcEvent: ev
          });
        };
        return MouseInput2;
      }(Input);
      var DEDUP_TIMEOUT = 2500;
      var DEDUP_DISTANCE = 25;
      function setLastTouch(eventData) {
        var _eventData$changedPoi = eventData.changedPointers, touch = _eventData$changedPoi[0];
        if (touch.identifier === this.primaryTouch) {
          var lastTouch = {
            x: touch.clientX,
            y: touch.clientY
          };
          var lts = this.lastTouches;
          this.lastTouches.push(lastTouch);
          var removeLastTouch = function removeLastTouch2() {
            var i2 = lts.indexOf(lastTouch);
            if (i2 > -1) {
              lts.splice(i2, 1);
            }
          };
          setTimeout(removeLastTouch, DEDUP_TIMEOUT);
        }
      }
      function recordTouches(eventType, eventData) {
        if (eventType & INPUT_START) {
          this.primaryTouch = eventData.changedPointers[0].identifier;
          setLastTouch.call(this, eventData);
        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {
          setLastTouch.call(this, eventData);
        }
      }
      function isSyntheticEvent(eventData) {
        var x = eventData.srcEvent.clientX;
        var y = eventData.srcEvent.clientY;
        for (var i2 = 0; i2 < this.lastTouches.length; i2++) {
          var t = this.lastTouches[i2];
          var dx = Math.abs(x - t.x);
          var dy = Math.abs(y - t.y);
          if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {
            return true;
          }
        }
        return false;
      }
      var TouchMouseInput = function() {
        var TouchMouseInput2 = function(_Input) {
          _inheritsLoose(TouchMouseInput3, _Input);
          function TouchMouseInput3(_manager, callback) {
            var _this;
            _this = _Input.call(this, _manager, callback) || this;
            _this.handler = function(manager, inputEvent, inputData) {
              var isTouch = inputData.pointerType === INPUT_TYPE_TOUCH;
              var isMouse = inputData.pointerType === INPUT_TYPE_MOUSE;
              if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {
                return;
              }
              if (isTouch) {
                recordTouches.call(_assertThisInitialized$1(_assertThisInitialized$1(_this)), inputEvent, inputData);
              } else if (isMouse && isSyntheticEvent.call(_assertThisInitialized$1(_assertThisInitialized$1(_this)), inputData)) {
                return;
              }
              _this.callback(manager, inputEvent, inputData);
            };
            _this.touch = new TouchInput(_this.manager, _this.handler);
            _this.mouse = new MouseInput(_this.manager, _this.handler);
            _this.primaryTouch = null;
            _this.lastTouches = [];
            return _this;
          }
          var _proto = TouchMouseInput3.prototype;
          _proto.destroy = function destroy() {
            this.touch.destroy();
            this.mouse.destroy();
          };
          return TouchMouseInput3;
        }(Input);
        return TouchMouseInput2;
      }();
      function createInputInstance(manager) {
        var Type;
        var inputClass = manager.options.inputClass;
        if (inputClass) {
          Type = inputClass;
        } else if (SUPPORT_POINTER_EVENTS) {
          Type = PointerEventInput;
        } else if (SUPPORT_ONLY_TOUCH) {
          Type = TouchInput;
        } else if (!SUPPORT_TOUCH) {
          Type = MouseInput;
        } else {
          Type = TouchMouseInput;
        }
        return new Type(manager, inputHandler);
      }
      function invokeArrayArg(arg, fn, context) {
        if (Array.isArray(arg)) {
          each(arg, context[fn], context);
          return true;
        }
        return false;
      }
      var STATE_POSSIBLE = 1;
      var STATE_BEGAN = 2;
      var STATE_CHANGED = 4;
      var STATE_ENDED = 8;
      var STATE_RECOGNIZED = STATE_ENDED;
      var STATE_CANCELLED = 16;
      var STATE_FAILED = 32;
      var _uniqueId = 1;
      function uniqueId() {
        return _uniqueId++;
      }
      function getRecognizerByNameIfManager(otherRecognizer, recognizer) {
        var manager = recognizer.manager;
        if (manager) {
          return manager.get(otherRecognizer);
        }
        return otherRecognizer;
      }
      function stateStr(state) {
        if (state & STATE_CANCELLED) {
          return "cancel";
        } else if (state & STATE_ENDED) {
          return "end";
        } else if (state & STATE_CHANGED) {
          return "move";
        } else if (state & STATE_BEGAN) {
          return "start";
        }
        return "";
      }
      var Recognizer = function() {
        function Recognizer2(options) {
          if (options === void 0) {
            options = {};
          }
          this.options = _extends({
            enable: true
          }, options);
          this.id = uniqueId();
          this.manager = null;
          this.state = STATE_POSSIBLE;
          this.simultaneous = {};
          this.requireFail = [];
        }
        var _proto = Recognizer2.prototype;
        _proto.set = function set2(options) {
          assign$1(this.options, options);
          this.manager && this.manager.touchAction.update();
          return this;
        };
        _proto.recognizeWith = function recognizeWith(otherRecognizer) {
          if (invokeArrayArg(otherRecognizer, "recognizeWith", this)) {
            return this;
          }
          var simultaneous = this.simultaneous;
          otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
          if (!simultaneous[otherRecognizer.id]) {
            simultaneous[otherRecognizer.id] = otherRecognizer;
            otherRecognizer.recognizeWith(this);
          }
          return this;
        };
        _proto.dropRecognizeWith = function dropRecognizeWith(otherRecognizer) {
          if (invokeArrayArg(otherRecognizer, "dropRecognizeWith", this)) {
            return this;
          }
          otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
          delete this.simultaneous[otherRecognizer.id];
          return this;
        };
        _proto.requireFailure = function requireFailure(otherRecognizer) {
          if (invokeArrayArg(otherRecognizer, "requireFailure", this)) {
            return this;
          }
          var requireFail = this.requireFail;
          otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
          if (inArray(requireFail, otherRecognizer) === -1) {
            requireFail.push(otherRecognizer);
            otherRecognizer.requireFailure(this);
          }
          return this;
        };
        _proto.dropRequireFailure = function dropRequireFailure(otherRecognizer) {
          if (invokeArrayArg(otherRecognizer, "dropRequireFailure", this)) {
            return this;
          }
          otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
          var index = inArray(this.requireFail, otherRecognizer);
          if (index > -1) {
            this.requireFail.splice(index, 1);
          }
          return this;
        };
        _proto.hasRequireFailures = function hasRequireFailures() {
          return this.requireFail.length > 0;
        };
        _proto.canRecognizeWith = function canRecognizeWith(otherRecognizer) {
          return !!this.simultaneous[otherRecognizer.id];
        };
        _proto.emit = function emit(input) {
          var self2 = this;
          var state = this.state;
          function emit2(event) {
            self2.manager.emit(event, input);
          }
          if (state < STATE_ENDED) {
            emit2(self2.options.event + stateStr(state));
          }
          emit2(self2.options.event);
          if (input.additionalEvent) {
            emit2(input.additionalEvent);
          }
          if (state >= STATE_ENDED) {
            emit2(self2.options.event + stateStr(state));
          }
        };
        _proto.tryEmit = function tryEmit(input) {
          if (this.canEmit()) {
            return this.emit(input);
          }
          this.state = STATE_FAILED;
        };
        _proto.canEmit = function canEmit() {
          var i2 = 0;
          while (i2 < this.requireFail.length) {
            if (!(this.requireFail[i2].state & (STATE_FAILED | STATE_POSSIBLE))) {
              return false;
            }
            i2++;
          }
          return true;
        };
        _proto.recognize = function recognize(inputData) {
          var inputDataClone = assign$1({}, inputData);
          if (!boolOrFn(this.options.enable, [this, inputDataClone])) {
            this.reset();
            this.state = STATE_FAILED;
            return;
          }
          if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {
            this.state = STATE_POSSIBLE;
          }
          this.state = this.process(inputDataClone);
          if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {
            this.tryEmit(inputDataClone);
          }
        };
        _proto.process = function process2(inputData) {
        };
        _proto.getTouchAction = function getTouchAction() {
        };
        _proto.reset = function reset() {
        };
        return Recognizer2;
      }();
      var TapRecognizer = function(_Recognizer) {
        _inheritsLoose(TapRecognizer2, _Recognizer);
        function TapRecognizer2(options) {
          var _this;
          if (options === void 0) {
            options = {};
          }
          _this = _Recognizer.call(this, _extends({
            event: "tap",
            pointers: 1,
            taps: 1,
            interval: 300,
            // max time between the multi-tap taps
            time: 250,
            // max time of the pointer to be down (like finger on the screen)
            threshold: 9,
            // a minimal movement is ok, but keep it low
            posThreshold: 10
          }, options)) || this;
          _this.pTime = false;
          _this.pCenter = false;
          _this._timer = null;
          _this._input = null;
          _this.count = 0;
          return _this;
        }
        var _proto = TapRecognizer2.prototype;
        _proto.getTouchAction = function getTouchAction() {
          return [TOUCH_ACTION_MANIPULATION];
        };
        _proto.process = function process2(input) {
          var _this2 = this;
          var options = this.options;
          var validPointers = input.pointers.length === options.pointers;
          var validMovement = input.distance < options.threshold;
          var validTouchTime = input.deltaTime < options.time;
          this.reset();
          if (input.eventType & INPUT_START && this.count === 0) {
            return this.failTimeout();
          }
          if (validMovement && validTouchTime && validPointers) {
            if (input.eventType !== INPUT_END) {
              return this.failTimeout();
            }
            var validInterval = this.pTime ? input.timeStamp - this.pTime < options.interval : true;
            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;
            this.pTime = input.timeStamp;
            this.pCenter = input.center;
            if (!validMultiTap || !validInterval) {
              this.count = 1;
            } else {
              this.count += 1;
            }
            this._input = input;
            var tapCount = this.count % options.taps;
            if (tapCount === 0) {
              if (!this.hasRequireFailures()) {
                return STATE_RECOGNIZED;
              } else {
                this._timer = setTimeout(function() {
                  _this2.state = STATE_RECOGNIZED;
                  _this2.tryEmit();
                }, options.interval);
                return STATE_BEGAN;
              }
            }
          }
          return STATE_FAILED;
        };
        _proto.failTimeout = function failTimeout() {
          var _this3 = this;
          this._timer = setTimeout(function() {
            _this3.state = STATE_FAILED;
          }, this.options.interval);
          return STATE_FAILED;
        };
        _proto.reset = function reset() {
          clearTimeout(this._timer);
        };
        _proto.emit = function emit() {
          if (this.state === STATE_RECOGNIZED) {
            this._input.tapCount = this.count;
            this.manager.emit(this.options.event, this._input);
          }
        };
        return TapRecognizer2;
      }(Recognizer);
      var AttrRecognizer = function(_Recognizer) {
        _inheritsLoose(AttrRecognizer2, _Recognizer);
        function AttrRecognizer2(options) {
          if (options === void 0) {
            options = {};
          }
          return _Recognizer.call(this, _extends({
            pointers: 1
          }, options)) || this;
        }
        var _proto = AttrRecognizer2.prototype;
        _proto.attrTest = function attrTest(input) {
          var optionPointers = this.options.pointers;
          return optionPointers === 0 || input.pointers.length === optionPointers;
        };
        _proto.process = function process2(input) {
          var state = this.state;
          var eventType = input.eventType;
          var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);
          var isValid = this.attrTest(input);
          if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {
            return state | STATE_CANCELLED;
          } else if (isRecognized || isValid) {
            if (eventType & INPUT_END) {
              return state | STATE_ENDED;
            } else if (!(state & STATE_BEGAN)) {
              return STATE_BEGAN;
            }
            return state | STATE_CHANGED;
          }
          return STATE_FAILED;
        };
        return AttrRecognizer2;
      }(Recognizer);
      function directionStr(direction) {
        if (direction === DIRECTION_DOWN) {
          return "down";
        } else if (direction === DIRECTION_UP) {
          return "up";
        } else if (direction === DIRECTION_LEFT) {
          return "left";
        } else if (direction === DIRECTION_RIGHT) {
          return "right";
        }
        return "";
      }
      var PanRecognizer = function(_AttrRecognizer) {
        _inheritsLoose(PanRecognizer2, _AttrRecognizer);
        function PanRecognizer2(options) {
          var _this;
          if (options === void 0) {
            options = {};
          }
          _this = _AttrRecognizer.call(this, _extends({
            event: "pan",
            threshold: 10,
            pointers: 1,
            direction: DIRECTION_ALL
          }, options)) || this;
          _this.pX = null;
          _this.pY = null;
          return _this;
        }
        var _proto = PanRecognizer2.prototype;
        _proto.getTouchAction = function getTouchAction() {
          var direction = this.options.direction;
          var actions = [];
          if (direction & DIRECTION_HORIZONTAL) {
            actions.push(TOUCH_ACTION_PAN_Y);
          }
          if (direction & DIRECTION_VERTICAL) {
            actions.push(TOUCH_ACTION_PAN_X);
          }
          return actions;
        };
        _proto.directionTest = function directionTest(input) {
          var options = this.options;
          var hasMoved = true;
          var distance = input.distance;
          var direction = input.direction;
          var x = input.deltaX;
          var y = input.deltaY;
          if (!(direction & options.direction)) {
            if (options.direction & DIRECTION_HORIZONTAL) {
              direction = x === 0 ? DIRECTION_NONE : x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;
              hasMoved = x !== this.pX;
              distance = Math.abs(input.deltaX);
            } else {
              direction = y === 0 ? DIRECTION_NONE : y < 0 ? DIRECTION_UP : DIRECTION_DOWN;
              hasMoved = y !== this.pY;
              distance = Math.abs(input.deltaY);
            }
          }
          input.direction = direction;
          return hasMoved && distance > options.threshold && direction & options.direction;
        };
        _proto.attrTest = function attrTest(input) {
          return AttrRecognizer.prototype.attrTest.call(this, input) && // replace with a super call
          (this.state & STATE_BEGAN || !(this.state & STATE_BEGAN) && this.directionTest(input));
        };
        _proto.emit = function emit(input) {
          this.pX = input.deltaX;
          this.pY = input.deltaY;
          var direction = directionStr(input.direction);
          if (direction) {
            input.additionalEvent = this.options.event + direction;
          }
          _AttrRecognizer.prototype.emit.call(this, input);
        };
        return PanRecognizer2;
      }(AttrRecognizer);
      var SwipeRecognizer = function(_AttrRecognizer) {
        _inheritsLoose(SwipeRecognizer2, _AttrRecognizer);
        function SwipeRecognizer2(options) {
          if (options === void 0) {
            options = {};
          }
          return _AttrRecognizer.call(this, _extends({
            event: "swipe",
            threshold: 10,
            velocity: 0.3,
            direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,
            pointers: 1
          }, options)) || this;
        }
        var _proto = SwipeRecognizer2.prototype;
        _proto.getTouchAction = function getTouchAction() {
          return PanRecognizer.prototype.getTouchAction.call(this);
        };
        _proto.attrTest = function attrTest(input) {
          var direction = this.options.direction;
          var velocity;
          if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {
            velocity = input.overallVelocity;
          } else if (direction & DIRECTION_HORIZONTAL) {
            velocity = input.overallVelocityX;
          } else if (direction & DIRECTION_VERTICAL) {
            velocity = input.overallVelocityY;
          }
          return _AttrRecognizer.prototype.attrTest.call(this, input) && direction & input.offsetDirection && input.distance > this.options.threshold && input.maxPointers === this.options.pointers && abs(velocity) > this.options.velocity && input.eventType & INPUT_END;
        };
        _proto.emit = function emit(input) {
          var direction = directionStr(input.offsetDirection);
          if (direction) {
            this.manager.emit(this.options.event + direction, input);
          }
          this.manager.emit(this.options.event, input);
        };
        return SwipeRecognizer2;
      }(AttrRecognizer);
      var PinchRecognizer = function(_AttrRecognizer) {
        _inheritsLoose(PinchRecognizer2, _AttrRecognizer);
        function PinchRecognizer2(options) {
          if (options === void 0) {
            options = {};
          }
          return _AttrRecognizer.call(this, _extends({
            event: "pinch",
            threshold: 0,
            pointers: 2
          }, options)) || this;
        }
        var _proto = PinchRecognizer2.prototype;
        _proto.getTouchAction = function getTouchAction() {
          return [TOUCH_ACTION_NONE];
        };
        _proto.attrTest = function attrTest(input) {
          return _AttrRecognizer.prototype.attrTest.call(this, input) && (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);
        };
        _proto.emit = function emit(input) {
          if (input.scale !== 1) {
            var inOut = input.scale < 1 ? "in" : "out";
            input.additionalEvent = this.options.event + inOut;
          }
          _AttrRecognizer.prototype.emit.call(this, input);
        };
        return PinchRecognizer2;
      }(AttrRecognizer);
      var RotateRecognizer = function(_AttrRecognizer) {
        _inheritsLoose(RotateRecognizer2, _AttrRecognizer);
        function RotateRecognizer2(options) {
          if (options === void 0) {
            options = {};
          }
          return _AttrRecognizer.call(this, _extends({
            event: "rotate",
            threshold: 0,
            pointers: 2
          }, options)) || this;
        }
        var _proto = RotateRecognizer2.prototype;
        _proto.getTouchAction = function getTouchAction() {
          return [TOUCH_ACTION_NONE];
        };
        _proto.attrTest = function attrTest(input) {
          return _AttrRecognizer.prototype.attrTest.call(this, input) && (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);
        };
        return RotateRecognizer2;
      }(AttrRecognizer);
      var PressRecognizer = function(_Recognizer) {
        _inheritsLoose(PressRecognizer2, _Recognizer);
        function PressRecognizer2(options) {
          var _this;
          if (options === void 0) {
            options = {};
          }
          _this = _Recognizer.call(this, _extends({
            event: "press",
            pointers: 1,
            time: 251,
            // minimal time of the pointer to be pressed
            threshold: 9
          }, options)) || this;
          _this._timer = null;
          _this._input = null;
          return _this;
        }
        var _proto = PressRecognizer2.prototype;
        _proto.getTouchAction = function getTouchAction() {
          return [TOUCH_ACTION_AUTO];
        };
        _proto.process = function process2(input) {
          var _this2 = this;
          var options = this.options;
          var validPointers = input.pointers.length === options.pointers;
          var validMovement = input.distance < options.threshold;
          var validTime = input.deltaTime > options.time;
          this._input = input;
          if (!validMovement || !validPointers || input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime) {
            this.reset();
          } else if (input.eventType & INPUT_START) {
            this.reset();
            this._timer = setTimeout(function() {
              _this2.state = STATE_RECOGNIZED;
              _this2.tryEmit();
            }, options.time);
          } else if (input.eventType & INPUT_END) {
            return STATE_RECOGNIZED;
          }
          return STATE_FAILED;
        };
        _proto.reset = function reset() {
          clearTimeout(this._timer);
        };
        _proto.emit = function emit(input) {
          if (this.state !== STATE_RECOGNIZED) {
            return;
          }
          if (input && input.eventType & INPUT_END) {
            this.manager.emit(this.options.event + "up", input);
          } else {
            this._input.timeStamp = now();
            this.manager.emit(this.options.event, this._input);
          }
        };
        return PressRecognizer2;
      }(Recognizer);
      var defaults = {
        /**
         * @private
         * set if DOM events are being triggered.
         * But this is slower and unused by simple implementations, so disabled by default.
         * @type {Boolean}
         * @default false
         */
        domEvents: false,
        /**
         * @private
         * The value for the touchAction property/fallback.
         * When set to `compute` it will magically set the correct value based on the added recognizers.
         * @type {String}
         * @default compute
         */
        touchAction: TOUCH_ACTION_COMPUTE,
        /**
         * @private
         * @type {Boolean}
         * @default true
         */
        enable: true,
        /**
         * @private
         * EXPERIMENTAL FEATURE -- can be removed/changed
         * Change the parent input target element.
         * If Null, then it is being set the to main element.
         * @type {Null|EventTarget}
         * @default null
         */
        inputTarget: null,
        /**
         * @private
         * force an input class
         * @type {Null|Function}
         * @default null
         */
        inputClass: null,
        /**
         * @private
         * Some CSS properties can be used to improve the working of Hammer.
         * Add them to this method and they will be set when creating a new Manager.
         * @namespace
         */
        cssProps: {
          /**
           * @private
           * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.
           * @type {String}
           * @default 'none'
           */
          userSelect: "none",
          /**
           * @private
           * Disable the Windows Phone grippers when pressing an element.
           * @type {String}
           * @default 'none'
           */
          touchSelect: "none",
          /**
           * @private
           * Disables the default callout shown when you touch and hold a touch target.
           * On iOS, when you touch and hold a touch target such as a link, Safari displays
           * a callout containing information about the link. This property allows you to disable that callout.
           * @type {String}
           * @default 'none'
           */
          touchCallout: "none",
          /**
           * @private
           * Specifies whether zooming is enabled. Used by IE10>
           * @type {String}
           * @default 'none'
           */
          contentZooming: "none",
          /**
           * @private
           * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.
           * @type {String}
           * @default 'none'
           */
          userDrag: "none",
          /**
           * @private
           * Overrides the highlight color shown when the user taps a link or a JavaScript
           * clickable element in iOS. This property obeys the alpha value, if specified.
           * @type {String}
           * @default 'rgba(0,0,0,0)'
           */
          tapHighlightColor: "rgba(0,0,0,0)"
        }
      };
      var preset = [[RotateRecognizer, {
        enable: false
      }], [PinchRecognizer, {
        enable: false
      }, ["rotate"]], [SwipeRecognizer, {
        direction: DIRECTION_HORIZONTAL
      }], [PanRecognizer, {
        direction: DIRECTION_HORIZONTAL
      }, ["swipe"]], [TapRecognizer], [TapRecognizer, {
        event: "doubletap",
        taps: 2
      }, ["tap"]], [PressRecognizer]];
      var STOP = 1;
      var FORCED_STOP = 2;
      function toggleCssProps(manager, add) {
        var element = manager.element;
        if (!element.style) {
          return;
        }
        var prop;
        each(manager.options.cssProps, function(value, name) {
          prop = prefixed(element.style, name);
          if (add) {
            manager.oldCssProps[prop] = element.style[prop];
            element.style[prop] = value;
          } else {
            element.style[prop] = manager.oldCssProps[prop] || "";
          }
        });
        if (!add) {
          manager.oldCssProps = {};
        }
      }
      function triggerDomEvent(event, data2) {
        var gestureEvent = document.createEvent("Event");
        gestureEvent.initEvent(event, true, true);
        gestureEvent.gesture = data2;
        data2.target.dispatchEvent(gestureEvent);
      }
      var Manager = function() {
        function Manager2(element, options) {
          var _this = this;
          this.options = assign$1({}, defaults, options || {});
          this.options.inputTarget = this.options.inputTarget || element;
          this.handlers = {};
          this.session = {};
          this.recognizers = [];
          this.oldCssProps = {};
          this.element = element;
          this.input = createInputInstance(this);
          this.touchAction = new TouchAction(this, this.options.touchAction);
          toggleCssProps(this, true);
          each(this.options.recognizers, function(item) {
            var recognizer = _this.add(new item[0](item[1]));
            item[2] && recognizer.recognizeWith(item[2]);
            item[3] && recognizer.requireFailure(item[3]);
          }, this);
        }
        var _proto = Manager2.prototype;
        _proto.set = function set2(options) {
          assign$1(this.options, options);
          if (options.touchAction) {
            this.touchAction.update();
          }
          if (options.inputTarget) {
            this.input.destroy();
            this.input.target = options.inputTarget;
            this.input.init();
          }
          return this;
        };
        _proto.stop = function stop(force) {
          this.session.stopped = force ? FORCED_STOP : STOP;
        };
        _proto.recognize = function recognize(inputData) {
          var session = this.session;
          if (session.stopped) {
            return;
          }
          this.touchAction.preventDefaults(inputData);
          var recognizer;
          var recognizers = this.recognizers;
          var curRecognizer = session.curRecognizer;
          if (!curRecognizer || curRecognizer && curRecognizer.state & STATE_RECOGNIZED) {
            session.curRecognizer = null;
            curRecognizer = null;
          }
          var i2 = 0;
          while (i2 < recognizers.length) {
            recognizer = recognizers[i2];
            if (session.stopped !== FORCED_STOP && // 1
            (!curRecognizer || recognizer === curRecognizer || // 2
            recognizer.canRecognizeWith(curRecognizer))) {
              recognizer.recognize(inputData);
            } else {
              recognizer.reset();
            }
            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {
              session.curRecognizer = recognizer;
              curRecognizer = recognizer;
            }
            i2++;
          }
        };
        _proto.get = function get2(recognizer) {
          if (recognizer instanceof Recognizer) {
            return recognizer;
          }
          var recognizers = this.recognizers;
          for (var i2 = 0; i2 < recognizers.length; i2++) {
            if (recognizers[i2].options.event === recognizer) {
              return recognizers[i2];
            }
          }
          return null;
        };
        _proto.add = function add(recognizer) {
          if (invokeArrayArg(recognizer, "add", this)) {
            return this;
          }
          var existing = this.get(recognizer.options.event);
          if (existing) {
            this.remove(existing);
          }
          this.recognizers.push(recognizer);
          recognizer.manager = this;
          this.touchAction.update();
          return recognizer;
        };
        _proto.remove = function remove(recognizer) {
          if (invokeArrayArg(recognizer, "remove", this)) {
            return this;
          }
          var targetRecognizer = this.get(recognizer);
          if (recognizer) {
            var recognizers = this.recognizers;
            var index = inArray(recognizers, targetRecognizer);
            if (index !== -1) {
              recognizers.splice(index, 1);
              this.touchAction.update();
            }
          }
          return this;
        };
        _proto.on = function on(events, handler) {
          if (events === void 0 || handler === void 0) {
            return this;
          }
          var handlers = this.handlers;
          each(splitStr(events), function(event) {
            handlers[event] = handlers[event] || [];
            handlers[event].push(handler);
          });
          return this;
        };
        _proto.off = function off(events, handler) {
          if (events === void 0) {
            return this;
          }
          var handlers = this.handlers;
          each(splitStr(events), function(event) {
            if (!handler) {
              delete handlers[event];
            } else {
              handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);
            }
          });
          return this;
        };
        _proto.emit = function emit(event, data2) {
          if (this.options.domEvents) {
            triggerDomEvent(event, data2);
          }
          var handlers = this.handlers[event] && this.handlers[event].slice();
          if (!handlers || !handlers.length) {
            return;
          }
          data2.type = event;
          data2.preventDefault = function() {
            data2.srcEvent.preventDefault();
          };
          var i2 = 0;
          while (i2 < handlers.length) {
            handlers[i2](data2);
            i2++;
          }
        };
        _proto.destroy = function destroy() {
          this.element && toggleCssProps(this, false);
          this.handlers = {};
          this.session = {};
          this.input.destroy();
          this.element = null;
        };
        return Manager2;
      }();
      var SINGLE_TOUCH_INPUT_MAP = {
        touchstart: INPUT_START,
        touchmove: INPUT_MOVE,
        touchend: INPUT_END,
        touchcancel: INPUT_CANCEL
      };
      var SINGLE_TOUCH_TARGET_EVENTS = "touchstart";
      var SINGLE_TOUCH_WINDOW_EVENTS = "touchstart touchmove touchend touchcancel";
      var SingleTouchInput = function(_Input) {
        _inheritsLoose(SingleTouchInput2, _Input);
        function SingleTouchInput2() {
          var _this;
          var proto = SingleTouchInput2.prototype;
          proto.evTarget = SINGLE_TOUCH_TARGET_EVENTS;
          proto.evWin = SINGLE_TOUCH_WINDOW_EVENTS;
          _this = _Input.apply(this, arguments) || this;
          _this.started = false;
          return _this;
        }
        var _proto = SingleTouchInput2.prototype;
        _proto.handler = function handler(ev) {
          var type = SINGLE_TOUCH_INPUT_MAP[ev.type];
          if (type === INPUT_START) {
            this.started = true;
          }
          if (!this.started) {
            return;
          }
          var touches = normalizeSingleTouches.call(this, ev, type);
          if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {
            this.started = false;
          }
          this.callback(this.manager, type, {
            pointers: touches[0],
            changedPointers: touches[1],
            pointerType: INPUT_TYPE_TOUCH,
            srcEvent: ev
          });
        };
        return SingleTouchInput2;
      }(Input);
      function normalizeSingleTouches(ev, type) {
        var all = toArray(ev.touches);
        var changed = toArray(ev.changedTouches);
        if (type & (INPUT_END | INPUT_CANCEL)) {
          all = uniqueArray(all.concat(changed), "identifier", true);
        }
        return [all, changed];
      }
      function deprecate(method2, name, message) {
        var deprecationMessage = "DEPRECATED METHOD: " + name + "\n" + message + " AT \n";
        return function() {
          var e = new Error("get-stack-trace");
          var stack = e && e.stack ? e.stack.replace(/^[^\(]+?[\n$]/gm, "").replace(/^\s+at\s+/gm, "").replace(/^Object.<anonymous>\s*\(/gm, "{anonymous}()@") : "Unknown Stack Trace";
          var log = window.console && (window.console.warn || window.console.log);
          if (log) {
            log.call(window.console, deprecationMessage, stack);
          }
          return method2.apply(this, arguments);
        };
      }
      var extend = deprecate(function(dest, src, merge2) {
        var keys2 = Object.keys(src);
        var i2 = 0;
        while (i2 < keys2.length) {
          if (!merge2 || merge2 && dest[keys2[i2]] === void 0) {
            dest[keys2[i2]] = src[keys2[i2]];
          }
          i2++;
        }
        return dest;
      }, "extend", "Use `assign`.");
      var merge$1 = deprecate(function(dest, src) {
        return extend(dest, src, true);
      }, "merge", "Use `assign`.");
      function inherit(child, base, properties) {
        var baseP = base.prototype;
        var childP;
        childP = child.prototype = Object.create(baseP);
        childP.constructor = child;
        childP._super = baseP;
        if (properties) {
          assign$1(childP, properties);
        }
      }
      function bindFn(fn, context) {
        return function boundFn() {
          return fn.apply(context, arguments);
        };
      }
      var Hammer = function() {
        var Hammer2 = (
          /**
            * @private
            * @const {string}
            */
          function Hammer3(element, options) {
            if (options === void 0) {
              options = {};
            }
            return new Manager(element, _extends({
              recognizers: preset.concat()
            }, options));
          }
        );
        Hammer2.VERSION = "2.0.17-rc";
        Hammer2.DIRECTION_ALL = DIRECTION_ALL;
        Hammer2.DIRECTION_DOWN = DIRECTION_DOWN;
        Hammer2.DIRECTION_LEFT = DIRECTION_LEFT;
        Hammer2.DIRECTION_RIGHT = DIRECTION_RIGHT;
        Hammer2.DIRECTION_UP = DIRECTION_UP;
        Hammer2.DIRECTION_HORIZONTAL = DIRECTION_HORIZONTAL;
        Hammer2.DIRECTION_VERTICAL = DIRECTION_VERTICAL;
        Hammer2.DIRECTION_NONE = DIRECTION_NONE;
        Hammer2.DIRECTION_DOWN = DIRECTION_DOWN;
        Hammer2.INPUT_START = INPUT_START;
        Hammer2.INPUT_MOVE = INPUT_MOVE;
        Hammer2.INPUT_END = INPUT_END;
        Hammer2.INPUT_CANCEL = INPUT_CANCEL;
        Hammer2.STATE_POSSIBLE = STATE_POSSIBLE;
        Hammer2.STATE_BEGAN = STATE_BEGAN;
        Hammer2.STATE_CHANGED = STATE_CHANGED;
        Hammer2.STATE_ENDED = STATE_ENDED;
        Hammer2.STATE_RECOGNIZED = STATE_RECOGNIZED;
        Hammer2.STATE_CANCELLED = STATE_CANCELLED;
        Hammer2.STATE_FAILED = STATE_FAILED;
        Hammer2.Manager = Manager;
        Hammer2.Input = Input;
        Hammer2.TouchAction = TouchAction;
        Hammer2.TouchInput = TouchInput;
        Hammer2.MouseInput = MouseInput;
        Hammer2.PointerEventInput = PointerEventInput;
        Hammer2.TouchMouseInput = TouchMouseInput;
        Hammer2.SingleTouchInput = SingleTouchInput;
        Hammer2.Recognizer = Recognizer;
        Hammer2.AttrRecognizer = AttrRecognizer;
        Hammer2.Tap = TapRecognizer;
        Hammer2.Pan = PanRecognizer;
        Hammer2.Swipe = SwipeRecognizer;
        Hammer2.Pinch = PinchRecognizer;
        Hammer2.Rotate = RotateRecognizer;
        Hammer2.Press = PressRecognizer;
        Hammer2.on = addEventListeners;
        Hammer2.off = removeEventListeners;
        Hammer2.each = each;
        Hammer2.merge = merge$1;
        Hammer2.extend = extend;
        Hammer2.bindFn = bindFn;
        Hammer2.assign = assign$1;
        Hammer2.inherit = inherit;
        Hammer2.bindFn = bindFn;
        Hammer2.prefixed = prefixed;
        Hammer2.toArray = toArray;
        Hammer2.inArray = inArray;
        Hammer2.uniqueArray = uniqueArray;
        Hammer2.splitStr = splitStr;
        Hammer2.boolOrFn = boolOrFn;
        Hammer2.hasParent = hasParent;
        Hammer2.addEventListeners = addEventListeners;
        Hammer2.removeEventListeners = removeEventListeners;
        Hammer2.defaults = assign$1({}, defaults, {
          preset
        });
        return Hammer2;
      }();
      var RealHammer = Hammer;
      function _createForOfIteratorHelper$3(o, allowArrayLike) {
        var it = typeof _Symbol !== "undefined" && _getIteratorMethod(o) || o["@@iterator"];
        if (!it) {
          if (_Array$isArray(o) || (it = _unsupportedIterableToArray$3(o)) || allowArrayLike && o && typeof o.length === "number") {
            if (it) o = it;
            var i2 = 0;
            var F = function F2() {
            };
            return { s: F, n: function n() {
              if (i2 >= o.length) return { done: true };
              return { done: false, value: o[i2++] };
            }, e: function e(_e) {
              throw _e;
            }, f: F };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var normalCompletion = true, didErr = false, err;
        return { s: function s() {
          it = it.call(o);
        }, n: function n() {
          var step = it.next();
          normalCompletion = step.done;
          return step;
        }, e: function e(_e2) {
          didErr = true;
          err = _e2;
        }, f: function f() {
          try {
            if (!normalCompletion && it.return != null) it.return();
          } finally {
            if (didErr) throw err;
          }
        } };
      }
      function _unsupportedIterableToArray$3(o, minLen) {
        var _context15;
        if (!o) return;
        if (typeof o === "string") return _arrayLikeToArray$3(o, minLen);
        var n = _sliceInstanceProperty(_context15 = Object.prototype.toString.call(o)).call(_context15, 8, -1);
        if (n === "Object" && o.constructor) n = o.constructor.name;
        if (n === "Map" || n === "Set") return _Array$from$1(o);
        if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$3(o, minLen);
      }
      function _arrayLikeToArray$3(arr, len) {
        if (len == null || len > arr.length) len = arr.length;
        for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++) arr2[i2] = arr[i2];
        return arr2;
      }
      var DELETE = _Symbol("DELETE");
      function pureDeepObjectAssign(base) {
        var _context;
        for (var _len = arguments.length, updates = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          updates[_key - 1] = arguments[_key];
        }
        return deepObjectAssign.apply(void 0, _concatInstanceProperty(_context = [{}, base]).call(_context, updates));
      }
      function deepObjectAssign() {
        var merged = deepObjectAssignNonentry.apply(void 0, arguments);
        stripDelete(merged);
        return merged;
      }
      function deepObjectAssignNonentry() {
        for (var _len2 = arguments.length, values2 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          values2[_key2] = arguments[_key2];
        }
        if (values2.length < 2) {
          return values2[0];
        } else if (values2.length > 2) {
          var _context2;
          return deepObjectAssignNonentry.apply(void 0, _concatInstanceProperty(_context2 = [deepObjectAssign(values2[0], values2[1])]).call(_context2, _toConsumableArray(_sliceInstanceProperty(values2).call(values2, 2))));
        }
        var a = values2[0];
        var b = values2[1];
        if (a instanceof Date && b instanceof Date) {
          a.setTime(b.getTime());
          return a;
        }
        var _iterator = _createForOfIteratorHelper$3(_Reflect$ownKeys(b)), _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done; ) {
            var prop = _step.value;
            if (!Object.prototype.propertyIsEnumerable.call(b, prop)) ;
            else if (b[prop] === DELETE) {
              delete a[prop];
            } else if (a[prop] !== null && b[prop] !== null && typeof a[prop] === "object" && typeof b[prop] === "object" && !_Array$isArray(a[prop]) && !_Array$isArray(b[prop])) {
              a[prop] = deepObjectAssignNonentry(a[prop], b[prop]);
            } else {
              a[prop] = clone(b[prop]);
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
        return a;
      }
      function clone(a) {
        if (_Array$isArray(a)) {
          return _mapInstanceProperty(a).call(a, function(value) {
            return clone(value);
          });
        } else if (typeof a === "object" && a !== null) {
          if (a instanceof Date) {
            return new Date(a.getTime());
          }
          return deepObjectAssignNonentry({}, a);
        } else {
          return a;
        }
      }
      function stripDelete(a) {
        for (var _i = 0, _Object$keys$1 = _Object$keys(a); _i < _Object$keys$1.length; _i++) {
          var prop = _Object$keys$1[_i];
          if (a[prop] === DELETE) {
            delete a[prop];
          } else if (typeof a[prop] === "object" && a[prop] !== null) {
            stripDelete(a[prop]);
          }
        }
      }
      function hammerMock() {
        var noop2 = function noop3() {
        };
        return {
          on: noop2,
          off: noop2,
          destroy: noop2,
          emit: noop2,
          get() {
            return {
              set: noop2
            };
          }
        };
      }
      var Hammer$1 = typeof window !== "undefined" ? window.Hammer || RealHammer : function() {
        return hammerMock();
      };
      function Activator$1(container) {
        var _this = this, _context3;
        this._cleanupQueue = [];
        this.active = false;
        this._dom = {
          container,
          overlay: document.createElement("div")
        };
        this._dom.overlay.classList.add("vis-overlay");
        this._dom.container.appendChild(this._dom.overlay);
        this._cleanupQueue.push(function() {
          _this._dom.overlay.parentNode.removeChild(_this._dom.overlay);
        });
        var hammer = Hammer$1(this._dom.overlay);
        hammer.on("tap", _bindInstanceProperty$1(_context3 = this._onTapOverlay).call(_context3, this));
        this._cleanupQueue.push(function() {
          hammer.destroy();
        });
        var events = ["tap", "doubletap", "press", "pinch", "pan", "panstart", "panmove", "panend"];
        _forEachInstanceProperty(events).call(events, function(event) {
          hammer.on(event, function(event2) {
            event2.srcEvent.stopPropagation();
          });
        });
        if (document && document.body) {
          this._onClick = function(event) {
            if (!_hasParent(event.target, container)) {
              _this.deactivate();
            }
          };
          document.body.addEventListener("click", this._onClick);
          this._cleanupQueue.push(function() {
            document.body.removeEventListener("click", _this._onClick);
          });
        }
        this._escListener = function(event) {
          if ("key" in event ? event.key === "Escape" : event.keyCode === 27) {
            _this.deactivate();
          }
        };
      }
      Emitter(Activator$1.prototype);
      Activator$1.current = null;
      Activator$1.prototype.destroy = function() {
        var _context4, _context5;
        this.deactivate();
        var _iterator2 = _createForOfIteratorHelper$3(_reverseInstanceProperty(_context4 = _spliceInstanceProperty(_context5 = this._cleanupQueue).call(_context5, 0)).call(_context4)), _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
            var callback = _step2.value;
            callback();
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      };
      Activator$1.prototype.activate = function() {
        if (Activator$1.current) {
          Activator$1.current.deactivate();
        }
        Activator$1.current = this;
        this.active = true;
        this._dom.overlay.style.display = "none";
        this._dom.container.classList.add("vis-active");
        this.emit("change");
        this.emit("activate");
        document.body.addEventListener("keydown", this._escListener);
      };
      Activator$1.prototype.deactivate = function() {
        this.active = false;
        this._dom.overlay.style.display = "block";
        this._dom.container.classList.remove("vis-active");
        document.body.removeEventListener("keydown", this._escListener);
        this.emit("change");
        this.emit("deactivate");
      };
      Activator$1.prototype._onTapOverlay = function(event) {
        this.activate();
        event.srcEvent.stopPropagation();
      };
      function _hasParent(element, parent2) {
        while (element) {
          if (element === parent2) {
            return true;
          }
          element = element.parentNode;
        }
        return false;
      }
      var isConstructor = isConstructor$4;
      var tryToString$1 = tryToString$6;
      var $TypeError$3 = TypeError;
      var aConstructor$2 = function(argument) {
        if (isConstructor(argument)) return argument;
        throw new $TypeError$3(tryToString$1(argument) + " is not a constructor");
      };
      var $$k = _export;
      var getBuiltIn$4 = getBuiltIn$f;
      var apply$1 = functionApply;
      var bind$8 = functionBind;
      var aConstructor$1 = aConstructor$2;
      var anObject$3 = anObject$d;
      var isObject$6 = isObject$h;
      var create$5 = objectCreate;
      var fails$9 = fails$u;
      var nativeConstruct = getBuiltIn$4("Reflect", "construct");
      var ObjectPrototype = Object.prototype;
      var push$2 = [].push;
      var NEW_TARGET_BUG = fails$9(function() {
        function F() {
        }
        return !(nativeConstruct(function() {
        }, [], F) instanceof F);
      });
      var ARGS_BUG = !fails$9(function() {
        nativeConstruct(function() {
        });
      });
      var FORCED$2 = NEW_TARGET_BUG || ARGS_BUG;
      $$k({ target: "Reflect", stat: true, forced: FORCED$2, sham: FORCED$2 }, {
        construct: function construct2(Target, args) {
          aConstructor$1(Target);
          anObject$3(args);
          var newTarget = arguments.length < 3 ? Target : aConstructor$1(arguments[2]);
          if (ARGS_BUG && !NEW_TARGET_BUG) return nativeConstruct(Target, args, newTarget);
          if (Target === newTarget) {
            switch (args.length) {
              case 0:
                return new Target();
              case 1:
                return new Target(args[0]);
              case 2:
                return new Target(args[0], args[1]);
              case 3:
                return new Target(args[0], args[1], args[2]);
              case 4:
                return new Target(args[0], args[1], args[2], args[3]);
            }
            var $args = [null];
            apply$1(push$2, $args, args);
            return new (apply$1(bind$8, Target, $args))();
          }
          var proto = newTarget.prototype;
          var instance = create$5(isObject$6(proto) ? proto : ObjectPrototype);
          var result = apply$1(Target, instance, args);
          return isObject$6(result) ? result : instance;
        }
      });
      var path$8 = path$o;
      var construct$2 = path$8.Reflect.construct;
      var parent$u = construct$2;
      var construct$1 = parent$u;
      var construct = construct$1;
      var _Reflect$construct = getDefaultExportFromCjs(construct);
      var path$7 = path$o;
      var getOwnPropertySymbols$2 = path$7.Object.getOwnPropertySymbols;
      var parent$t = getOwnPropertySymbols$2;
      var getOwnPropertySymbols$1 = parent$t;
      var getOwnPropertySymbols = getOwnPropertySymbols$1;
      var _Object$getOwnPropertySymbols = getDefaultExportFromCjs(getOwnPropertySymbols);
      var getOwnPropertyDescriptor$4 = { exports: {} };
      var $$j = _export;
      var fails$8 = fails$u;
      var toIndexedObject$1 = toIndexedObject$a;
      var nativeGetOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;
      var DESCRIPTORS$5 = descriptors;
      var FORCED$1 = !DESCRIPTORS$5 || fails$8(function() {
        nativeGetOwnPropertyDescriptor(1);
      });
      $$j({ target: "Object", stat: true, forced: FORCED$1, sham: !DESCRIPTORS$5 }, {
        getOwnPropertyDescriptor: function getOwnPropertyDescriptor2(it, key) {
          return nativeGetOwnPropertyDescriptor(toIndexedObject$1(it), key);
        }
      });
      var path$6 = path$o;
      var Object$2 = path$6.Object;
      var getOwnPropertyDescriptor$3 = getOwnPropertyDescriptor$4.exports = function getOwnPropertyDescriptor2(it, key) {
        return Object$2.getOwnPropertyDescriptor(it, key);
      };
      if (Object$2.getOwnPropertyDescriptor.sham) getOwnPropertyDescriptor$3.sham = true;
      var getOwnPropertyDescriptorExports = getOwnPropertyDescriptor$4.exports;
      var parent$s = getOwnPropertyDescriptorExports;
      var getOwnPropertyDescriptor$2 = parent$s;
      var getOwnPropertyDescriptor$1 = getOwnPropertyDescriptor$2;
      var _Object$getOwnPropertyDescriptor = getDefaultExportFromCjs(getOwnPropertyDescriptor$1);
      var $$i = _export;
      var DESCRIPTORS$4 = descriptors;
      var ownKeys$2 = ownKeys$7;
      var toIndexedObject = toIndexedObject$a;
      var getOwnPropertyDescriptorModule$1 = objectGetOwnPropertyDescriptor;
      var createProperty = createProperty$6;
      $$i({ target: "Object", stat: true, sham: !DESCRIPTORS$4 }, {
        getOwnPropertyDescriptors: function getOwnPropertyDescriptors2(object) {
          var O = toIndexedObject(object);
          var getOwnPropertyDescriptor2 = getOwnPropertyDescriptorModule$1.f;
          var keys2 = ownKeys$2(O);
          var result = {};
          var index = 0;
          var key, descriptor;
          while (keys2.length > index) {
            descriptor = getOwnPropertyDescriptor2(O, key = keys2[index++]);
            if (descriptor !== void 0) createProperty(result, key, descriptor);
          }
          return result;
        }
      });
      var path$5 = path$o;
      var getOwnPropertyDescriptors$2 = path$5.Object.getOwnPropertyDescriptors;
      var parent$r = getOwnPropertyDescriptors$2;
      var getOwnPropertyDescriptors$1 = parent$r;
      var getOwnPropertyDescriptors = getOwnPropertyDescriptors$1;
      var _Object$getOwnPropertyDescriptors = getDefaultExportFromCjs(getOwnPropertyDescriptors);
      var defineProperties$4 = { exports: {} };
      var $$h = _export;
      var DESCRIPTORS$3 = descriptors;
      var defineProperties$3 = objectDefineProperties.f;
      $$h({ target: "Object", stat: true, forced: Object.defineProperties !== defineProperties$3, sham: !DESCRIPTORS$3 }, {
        defineProperties: defineProperties$3
      });
      var path$4 = path$o;
      var Object$1 = path$4.Object;
      var defineProperties$2 = defineProperties$4.exports = function defineProperties2(T, D) {
        return Object$1.defineProperties(T, D);
      };
      if (Object$1.defineProperties.sham) defineProperties$2.sham = true;
      var definePropertiesExports = defineProperties$4.exports;
      var parent$q = definePropertiesExports;
      var defineProperties$1 = parent$q;
      var defineProperties = defineProperties$1;
      var _Object$defineProperties = getDefaultExportFromCjs(defineProperties);
      var defineProperty$2 = defineProperty$b;
      var _Object$defineProperty = getDefaultExportFromCjs(defineProperty$2);
      function _assertThisInitialized(self2) {
        if (self2 === void 0) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return self2;
      }
      var parent$p = create$7;
      var create$4 = parent$p;
      var parent$o = create$4;
      var create$3 = parent$o;
      var create$2 = create$3;
      var _Object$create = getDefaultExportFromCjs(create$2);
      var $$g = _export;
      var setPrototypeOf$6 = objectSetPrototypeOf;
      $$g({ target: "Object", stat: true }, {
        setPrototypeOf: setPrototypeOf$6
      });
      var path$3 = path$o;
      var setPrototypeOf$5 = path$3.Object.setPrototypeOf;
      var parent$n = setPrototypeOf$5;
      var setPrototypeOf$4 = parent$n;
      var parent$m = setPrototypeOf$4;
      var setPrototypeOf$3 = parent$m;
      var parent$l = setPrototypeOf$3;
      var setPrototypeOf$2 = parent$l;
      var setPrototypeOf$1 = setPrototypeOf$2;
      var _Object$setPrototypeOf = getDefaultExportFromCjs(setPrototypeOf$1);
      var parent$k = bind$c;
      var bind$7 = parent$k;
      var parent$j = bind$7;
      var bind$6 = parent$j;
      var bind$5 = bind$6;
      var _bindInstanceProperty = getDefaultExportFromCjs(bind$5);
      function _setPrototypeOf(o, p) {
        var _context;
        _setPrototypeOf = _Object$setPrototypeOf ? _bindInstanceProperty(_context = _Object$setPrototypeOf).call(_context) : function _setPrototypeOf2(o2, p2) {
          o2.__proto__ = p2;
          return o2;
        };
        return _setPrototypeOf(o, p);
      }
      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function");
        }
        subClass.prototype = _Object$create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            writable: true,
            configurable: true
          }
        });
        _Object$defineProperty$1(subClass, "prototype", {
          writable: false
        });
        if (superClass) _setPrototypeOf(subClass, superClass);
      }
      function _possibleConstructorReturn(self2, call2) {
        if (call2 && (_typeof$1(call2) === "object" || typeof call2 === "function")) {
          return call2;
        } else if (call2 !== void 0) {
          throw new TypeError("Derived constructors may only return object or undefined");
        }
        return _assertThisInitialized(self2);
      }
      var parent$i = getPrototypeOf$4;
      var getPrototypeOf$3 = parent$i;
      var parent$h = getPrototypeOf$3;
      var getPrototypeOf$2 = parent$h;
      var getPrototypeOf$1 = getPrototypeOf$2;
      var _Object$getPrototypeOf = getDefaultExportFromCjs(getPrototypeOf$1);
      function _getPrototypeOf(o) {
        var _context;
        _getPrototypeOf = _Object$setPrototypeOf ? _bindInstanceProperty(_context = _Object$getPrototypeOf).call(_context) : function _getPrototypeOf2(o2) {
          return o2.__proto__ || _Object$getPrototypeOf(o2);
        };
        return _getPrototypeOf(o);
      }
      var regeneratorRuntime$1 = { exports: {} };
      var _typeof = { exports: {} };
      (function(module2) {
        var _Symbol2 = symbol$1;
        var _Symbol$iterator2 = iterator$1;
        function _typeof2(o) {
          "@babel/helpers - typeof";
          return module2.exports = _typeof2 = "function" == typeof _Symbol2 && "symbol" == typeof _Symbol$iterator2 ? function(o2) {
            return typeof o2;
          } : function(o2) {
            return o2 && "function" == typeof _Symbol2 && o2.constructor === _Symbol2 && o2 !== _Symbol2.prototype ? "symbol" : typeof o2;
          }, module2.exports.__esModule = true, module2.exports["default"] = module2.exports, _typeof2(o);
        }
        module2.exports = _typeof2, module2.exports.__esModule = true, module2.exports["default"] = module2.exports;
      })(_typeof);
      var _typeofExports = _typeof.exports;
      var parent$g = forEach$5;
      var forEach$3 = parent$g;
      var parent$f = forEach$3;
      var forEach$2 = parent$f;
      var forEach$1 = forEach$2;
      var hasOwn$5 = hasOwnProperty_1;
      var ownKeys$1 = ownKeys$7;
      var getOwnPropertyDescriptorModule = objectGetOwnPropertyDescriptor;
      var definePropertyModule = objectDefineProperty;
      var copyConstructorProperties$1 = function(target, source, exceptions) {
        var keys2 = ownKeys$1(source);
        var defineProperty2 = definePropertyModule.f;
        var getOwnPropertyDescriptor2 = getOwnPropertyDescriptorModule.f;
        for (var i2 = 0; i2 < keys2.length; i2++) {
          var key = keys2[i2];
          if (!hasOwn$5(target, key) && !(exceptions && hasOwn$5(exceptions, key))) {
            defineProperty2(target, key, getOwnPropertyDescriptor2(source, key));
          }
        }
      };
      var isObject$5 = isObject$h;
      var createNonEnumerableProperty$3 = createNonEnumerableProperty$9;
      var installErrorCause$1 = function(O, options) {
        if (isObject$5(options) && "cause" in options) {
          createNonEnumerableProperty$3(O, "cause", options.cause);
        }
      };
      var uncurryThis$2 = functionUncurryThis;
      var $Error$1 = Error;
      var replace = uncurryThis$2("".replace);
      var TEST = function(arg) {
        return String(new $Error$1(arg).stack);
      }("zxcasd");
      var V8_OR_CHAKRA_STACK_ENTRY = /\n\s*at [^:]*:[^\n]*/;
      var IS_V8_OR_CHAKRA_STACK = V8_OR_CHAKRA_STACK_ENTRY.test(TEST);
      var errorStackClear = function(stack, dropEntries) {
        if (IS_V8_OR_CHAKRA_STACK && typeof stack == "string" && !$Error$1.prepareStackTrace) {
          while (dropEntries--) stack = replace(stack, V8_OR_CHAKRA_STACK_ENTRY, "");
        }
        return stack;
      };
      var fails$7 = fails$u;
      var createPropertyDescriptor$1 = createPropertyDescriptor$7;
      var errorStackInstallable = !fails$7(function() {
        var error = new Error("a");
        if (!("stack" in error)) return true;
        Object.defineProperty(error, "stack", createPropertyDescriptor$1(1, 7));
        return error.stack !== 7;
      });
      var createNonEnumerableProperty$2 = createNonEnumerableProperty$9;
      var clearErrorStack = errorStackClear;
      var ERROR_STACK_INSTALLABLE = errorStackInstallable;
      var captureStackTrace = Error.captureStackTrace;
      var errorStackInstall = function(error, C, stack, dropEntries) {
        if (ERROR_STACK_INSTALLABLE) {
          if (captureStackTrace) captureStackTrace(error, C);
          else createNonEnumerableProperty$2(error, "stack", clearErrorStack(stack, dropEntries));
        }
      };
      var bind$4 = functionBindContext;
      var call$6 = functionCall;
      var anObject$2 = anObject$d;
      var tryToString = tryToString$6;
      var isArrayIteratorMethod = isArrayIteratorMethod$2;
      var lengthOfArrayLike$1 = lengthOfArrayLike$d;
      var isPrototypeOf$7 = objectIsPrototypeOf;
      var getIterator$6 = getIterator$8;
      var getIteratorMethod = getIteratorMethod$9;
      var iteratorClose = iteratorClose$2;
      var $TypeError$2 = TypeError;
      var Result = function(stopped, result) {
        this.stopped = stopped;
        this.result = result;
      };
      var ResultPrototype = Result.prototype;
      var iterate$7 = function(iterable, unboundFunction, options) {
        var that = options && options.that;
        var AS_ENTRIES = !!(options && options.AS_ENTRIES);
        var IS_RECORD = !!(options && options.IS_RECORD);
        var IS_ITERATOR = !!(options && options.IS_ITERATOR);
        var INTERRUPTED = !!(options && options.INTERRUPTED);
        var fn = bind$4(unboundFunction, that);
        var iterator2, iterFn, index, length2, result, next, step;
        var stop = function(condition) {
          if (iterator2) iteratorClose(iterator2, "normal", condition);
          return new Result(true, condition);
        };
        var callFn = function(value) {
          if (AS_ENTRIES) {
            anObject$2(value);
            return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
          }
          return INTERRUPTED ? fn(value, stop) : fn(value);
        };
        if (IS_RECORD) {
          iterator2 = iterable.iterator;
        } else if (IS_ITERATOR) {
          iterator2 = iterable;
        } else {
          iterFn = getIteratorMethod(iterable);
          if (!iterFn) throw new $TypeError$2(tryToString(iterable) + " is not iterable");
          if (isArrayIteratorMethod(iterFn)) {
            for (index = 0, length2 = lengthOfArrayLike$1(iterable); length2 > index; index++) {
              result = callFn(iterable[index]);
              if (result && isPrototypeOf$7(ResultPrototype, result)) return result;
            }
            return new Result(false);
          }
          iterator2 = getIterator$6(iterable, iterFn);
        }
        next = IS_RECORD ? iterable.next : iterator2.next;
        while (!(step = call$6(next, iterator2)).done) {
          try {
            result = callFn(step.value);
          } catch (error) {
            iteratorClose(iterator2, "throw", error);
          }
          if (typeof result == "object" && result && isPrototypeOf$7(ResultPrototype, result)) return result;
        }
        return new Result(false);
      };
      var toString$1 = toString$7;
      var normalizeStringArgument$1 = function(argument, $default) {
        return argument === void 0 ? arguments.length < 2 ? "" : $default : toString$1(argument);
      };
      var $$f = _export;
      var isPrototypeOf$6 = objectIsPrototypeOf;
      var getPrototypeOf = objectGetPrototypeOf;
      var setPrototypeOf = objectSetPrototypeOf;
      var copyConstructorProperties = copyConstructorProperties$1;
      var create$1 = objectCreate;
      var createNonEnumerableProperty$1 = createNonEnumerableProperty$9;
      var createPropertyDescriptor = createPropertyDescriptor$7;
      var installErrorCause = installErrorCause$1;
      var installErrorStack = errorStackInstall;
      var iterate$6 = iterate$7;
      var normalizeStringArgument = normalizeStringArgument$1;
      var wellKnownSymbol$3 = wellKnownSymbol$n;
      var TO_STRING_TAG = wellKnownSymbol$3("toStringTag");
      var $Error = Error;
      var push$1 = [].push;
      var $AggregateError = function AggregateError(errors, message) {
        var isInstance = isPrototypeOf$6(AggregateErrorPrototype, this);
        var that;
        if (setPrototypeOf) {
          that = setPrototypeOf(new $Error(), isInstance ? getPrototypeOf(this) : AggregateErrorPrototype);
        } else {
          that = isInstance ? this : create$1(AggregateErrorPrototype);
          createNonEnumerableProperty$1(that, TO_STRING_TAG, "Error");
        }
        if (message !== void 0) createNonEnumerableProperty$1(that, "message", normalizeStringArgument(message));
        installErrorStack(that, $AggregateError, that.stack, 1);
        if (arguments.length > 2) installErrorCause(that, arguments[2]);
        var errorsArray = [];
        iterate$6(errors, push$1, { that: errorsArray });
        createNonEnumerableProperty$1(that, "errors", errorsArray);
        return that;
      };
      if (setPrototypeOf) setPrototypeOf($AggregateError, $Error);
      else copyConstructorProperties($AggregateError, $Error, { name: true });
      var AggregateErrorPrototype = $AggregateError.prototype = create$1($Error.prototype, {
        constructor: createPropertyDescriptor(1, $AggregateError),
        message: createPropertyDescriptor(1, ""),
        name: createPropertyDescriptor(1, "AggregateError")
      });
      $$f({ global: true, constructor: true, arity: 2 }, {
        AggregateError: $AggregateError
      });
      var getBuiltIn$3 = getBuiltIn$f;
      var defineBuiltInAccessor$1 = defineBuiltInAccessor$3;
      var wellKnownSymbol$2 = wellKnownSymbol$n;
      var DESCRIPTORS$2 = descriptors;
      var SPECIES$2 = wellKnownSymbol$2("species");
      var setSpecies$2 = function(CONSTRUCTOR_NAME) {
        var Constructor = getBuiltIn$3(CONSTRUCTOR_NAME);
        if (DESCRIPTORS$2 && Constructor && !Constructor[SPECIES$2]) {
          defineBuiltInAccessor$1(Constructor, SPECIES$2, {
            configurable: true,
            get: function() {
              return this;
            }
          });
        }
      };
      var isPrototypeOf$5 = objectIsPrototypeOf;
      var $TypeError$1 = TypeError;
      var anInstance$3 = function(it, Prototype) {
        if (isPrototypeOf$5(Prototype, it)) return it;
        throw new $TypeError$1("Incorrect invocation");
      };
      var anObject$1 = anObject$d;
      var aConstructor = aConstructor$2;
      var isNullOrUndefined$2 = isNullOrUndefined$6;
      var wellKnownSymbol$1 = wellKnownSymbol$n;
      var SPECIES$1 = wellKnownSymbol$1("species");
      var speciesConstructor$2 = function(O, defaultConstructor) {
        var C = anObject$1(O).constructor;
        var S;
        return C === void 0 || isNullOrUndefined$2(S = anObject$1(C)[SPECIES$1]) ? defaultConstructor : aConstructor(S);
      };
      var userAgent$4 = engineUserAgent;
      var engineIsIos = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent$4);
      var global$6 = global$p;
      var apply = functionApply;
      var bind$3 = functionBindContext;
      var isCallable$4 = isCallable$m;
      var hasOwn$4 = hasOwnProperty_1;
      var fails$6 = fails$u;
      var html = html$2;
      var arraySlice$1 = arraySlice$5;
      var createElement = documentCreateElement$1;
      var validateArgumentsLength = validateArgumentsLength$2;
      var IS_IOS$1 = engineIsIos;
      var IS_NODE$3 = engineIsNode;
      var set$3 = global$6.setImmediate;
      var clear = global$6.clearImmediate;
      var process$2 = global$6.process;
      var Dispatch = global$6.Dispatch;
      var Function$1 = global$6.Function;
      var MessageChannel = global$6.MessageChannel;
      var String$1 = global$6.String;
      var counter = 0;
      var queue$2 = {};
      var ONREADYSTATECHANGE = "onreadystatechange";
      var $location, defer, channel, port;
      fails$6(function() {
        $location = global$6.location;
      });
      var run = function(id2) {
        if (hasOwn$4(queue$2, id2)) {
          var fn = queue$2[id2];
          delete queue$2[id2];
          fn();
        }
      };
      var runner = function(id2) {
        return function() {
          run(id2);
        };
      };
      var eventListener = function(event) {
        run(event.data);
      };
      var globalPostMessageDefer = function(id2) {
        global$6.postMessage(String$1(id2), $location.protocol + "//" + $location.host);
      };
      if (!set$3 || !clear) {
        set$3 = function setImmediate(handler) {
          validateArgumentsLength(arguments.length, 1);
          var fn = isCallable$4(handler) ? handler : Function$1(handler);
          var args = arraySlice$1(arguments, 1);
          queue$2[++counter] = function() {
            apply(fn, void 0, args);
          };
          defer(counter);
          return counter;
        };
        clear = function clearImmediate(id2) {
          delete queue$2[id2];
        };
        if (IS_NODE$3) {
          defer = function(id2) {
            process$2.nextTick(runner(id2));
          };
        } else if (Dispatch && Dispatch.now) {
          defer = function(id2) {
            Dispatch.now(runner(id2));
          };
        } else if (MessageChannel && !IS_IOS$1) {
          channel = new MessageChannel();
          port = channel.port2;
          channel.port1.onmessage = eventListener;
          defer = bind$3(port.postMessage, port);
        } else if (global$6.addEventListener && isCallable$4(global$6.postMessage) && !global$6.importScripts && $location && $location.protocol !== "file:" && !fails$6(globalPostMessageDefer)) {
          defer = globalPostMessageDefer;
          global$6.addEventListener("message", eventListener, false);
        } else if (ONREADYSTATECHANGE in createElement("script")) {
          defer = function(id2) {
            html.appendChild(createElement("script"))[ONREADYSTATECHANGE] = function() {
              html.removeChild(this);
              run(id2);
            };
          };
        } else {
          defer = function(id2) {
            setTimeout(runner(id2), 0);
          };
        }
      }
      var task$1 = {
        set: set$3,
        clear
      };
      var Queue$3 = function() {
        this.head = null;
        this.tail = null;
      };
      Queue$3.prototype = {
        add: function(item) {
          var entry = { item, next: null };
          var tail = this.tail;
          if (tail) tail.next = entry;
          else this.head = entry;
          this.tail = entry;
        },
        get: function() {
          var entry = this.head;
          if (entry) {
            var next = this.head = entry.next;
            if (next === null) this.tail = null;
            return entry.item;
          }
        }
      };
      var queue$1 = Queue$3;
      var userAgent$3 = engineUserAgent;
      var engineIsIosPebble = /ipad|iphone|ipod/i.test(userAgent$3) && typeof Pebble != "undefined";
      var userAgent$2 = engineUserAgent;
      var engineIsWebosWebkit = /web0s(?!.*chrome)/i.test(userAgent$2);
      var global$5 = global$p;
      var bind$2 = functionBindContext;
      var getOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;
      var macrotask = task$1.set;
      var Queue$2 = queue$1;
      var IS_IOS = engineIsIos;
      var IS_IOS_PEBBLE = engineIsIosPebble;
      var IS_WEBOS_WEBKIT = engineIsWebosWebkit;
      var IS_NODE$2 = engineIsNode;
      var MutationObserver = global$5.MutationObserver || global$5.WebKitMutationObserver;
      var document$2 = global$5.document;
      var process$1 = global$5.process;
      var Promise$1 = global$5.Promise;
      var queueMicrotaskDescriptor = getOwnPropertyDescriptor(global$5, "queueMicrotask");
      var microtask$1 = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;
      var notify$1, toggle, node, promise$5, then;
      if (!microtask$1) {
        var queue = new Queue$2();
        var flush = function() {
          var parent2, fn;
          if (IS_NODE$2 && (parent2 = process$1.domain)) parent2.exit();
          while (fn = queue.get()) try {
            fn();
          } catch (error) {
            if (queue.head) notify$1();
            throw error;
          }
          if (parent2) parent2.enter();
        };
        if (!IS_IOS && !IS_NODE$2 && !IS_WEBOS_WEBKIT && MutationObserver && document$2) {
          toggle = true;
          node = document$2.createTextNode("");
          new MutationObserver(flush).observe(node, { characterData: true });
          notify$1 = function() {
            node.data = toggle = !toggle;
          };
        } else if (!IS_IOS_PEBBLE && Promise$1 && Promise$1.resolve) {
          promise$5 = Promise$1.resolve(void 0);
          promise$5.constructor = Promise$1;
          then = bind$2(promise$5.then, promise$5);
          notify$1 = function() {
            then(flush);
          };
        } else if (IS_NODE$2) {
          notify$1 = function() {
            process$1.nextTick(flush);
          };
        } else {
          macrotask = bind$2(macrotask, global$5);
          notify$1 = function() {
            macrotask(flush);
          };
        }
        microtask$1 = function(fn) {
          if (!queue.head) notify$1();
          queue.add(fn);
        };
      }
      var microtask_1 = microtask$1;
      var hostReportErrors$1 = function(a, b) {
        try {
          arguments.length === 1 ? console.error(a) : console.error(a, b);
        } catch (error) {
        }
      };
      var perform$6 = function(exec2) {
        try {
          return { error: false, value: exec2() };
        } catch (error) {
          return { error: true, value: error };
        }
      };
      var global$4 = global$p;
      var promiseNativeConstructor = global$4.Promise;
      var engineIsDeno = typeof Deno == "object" && Deno && typeof Deno.version == "object";
      var IS_DENO$1 = engineIsDeno;
      var IS_NODE$1 = engineIsNode;
      var engineIsBrowser = !IS_DENO$1 && !IS_NODE$1 && typeof window == "object" && typeof document == "object";
      var global$3 = global$p;
      var NativePromiseConstructor$5 = promiseNativeConstructor;
      var isCallable$3 = isCallable$m;
      var isForced = isForced_1;
      var inspectSource = inspectSource$2;
      var wellKnownSymbol = wellKnownSymbol$n;
      var IS_BROWSER = engineIsBrowser;
      var IS_DENO = engineIsDeno;
      var V8_VERSION = engineV8Version;
      var NativePromisePrototype$2 = NativePromiseConstructor$5 && NativePromiseConstructor$5.prototype;
      var SPECIES = wellKnownSymbol("species");
      var SUBCLASSING = false;
      var NATIVE_PROMISE_REJECTION_EVENT$1 = isCallable$3(global$3.PromiseRejectionEvent);
      var FORCED_PROMISE_CONSTRUCTOR$5 = isForced("Promise", function() {
        var PROMISE_CONSTRUCTOR_SOURCE = inspectSource(NativePromiseConstructor$5);
        var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(NativePromiseConstructor$5);
        if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION === 66) return true;
        if (!(NativePromisePrototype$2["catch"] && NativePromisePrototype$2["finally"])) return true;
        if (!V8_VERSION || V8_VERSION < 51 || !/native code/.test(PROMISE_CONSTRUCTOR_SOURCE)) {
          var promise2 = new NativePromiseConstructor$5(function(resolve) {
            resolve(1);
          });
          var FakePromise = function(exec2) {
            exec2(function() {
            }, function() {
            });
          };
          var constructor = promise2.constructor = {};
          constructor[SPECIES] = FakePromise;
          SUBCLASSING = promise2.then(function() {
          }) instanceof FakePromise;
          if (!SUBCLASSING) return true;
        }
        return !GLOBAL_CORE_JS_PROMISE && (IS_BROWSER || IS_DENO) && !NATIVE_PROMISE_REJECTION_EVENT$1;
      });
      var promiseConstructorDetection = {
        CONSTRUCTOR: FORCED_PROMISE_CONSTRUCTOR$5,
        REJECTION_EVENT: NATIVE_PROMISE_REJECTION_EVENT$1,
        SUBCLASSING
      };
      var newPromiseCapability$2 = {};
      var aCallable$6 = aCallable$e;
      var $TypeError = TypeError;
      var PromiseCapability = function(C) {
        var resolve, reject;
        this.promise = new C(function($$resolve, $$reject) {
          if (resolve !== void 0 || reject !== void 0) throw new $TypeError("Bad Promise constructor");
          resolve = $$resolve;
          reject = $$reject;
        });
        this.resolve = aCallable$6(resolve);
        this.reject = aCallable$6(reject);
      };
      newPromiseCapability$2.f = function(C) {
        return new PromiseCapability(C);
      };
      var $$e = _export;
      var IS_NODE = engineIsNode;
      var global$2 = global$p;
      var call$5 = functionCall;
      var defineBuiltIn$1 = defineBuiltIn$6;
      var setToStringTag$1 = setToStringTag$7;
      var setSpecies$1 = setSpecies$2;
      var aCallable$5 = aCallable$e;
      var isCallable$2 = isCallable$m;
      var isObject$4 = isObject$h;
      var anInstance$2 = anInstance$3;
      var speciesConstructor$1 = speciesConstructor$2;
      var task = task$1.set;
      var microtask = microtask_1;
      var hostReportErrors = hostReportErrors$1;
      var perform$5 = perform$6;
      var Queue$1 = queue$1;
      var InternalStateModule$2 = internalState;
      var NativePromiseConstructor$4 = promiseNativeConstructor;
      var PromiseConstructorDetection = promiseConstructorDetection;
      var newPromiseCapabilityModule$7 = newPromiseCapability$2;
      var PROMISE = "Promise";
      var FORCED_PROMISE_CONSTRUCTOR$4 = PromiseConstructorDetection.CONSTRUCTOR;
      var NATIVE_PROMISE_REJECTION_EVENT = PromiseConstructorDetection.REJECTION_EVENT;
      PromiseConstructorDetection.SUBCLASSING;
      var getInternalPromiseState = InternalStateModule$2.getterFor(PROMISE);
      var setInternalState$2 = InternalStateModule$2.set;
      var NativePromisePrototype$1 = NativePromiseConstructor$4 && NativePromiseConstructor$4.prototype;
      var PromiseConstructor = NativePromiseConstructor$4;
      var PromisePrototype = NativePromisePrototype$1;
      var TypeError$1 = global$2.TypeError;
      var document$1 = global$2.document;
      var process = global$2.process;
      var newPromiseCapability$1 = newPromiseCapabilityModule$7.f;
      var newGenericPromiseCapability = newPromiseCapability$1;
      var DISPATCH_EVENT = !!(document$1 && document$1.createEvent && global$2.dispatchEvent);
      var UNHANDLED_REJECTION = "unhandledrejection";
      var REJECTION_HANDLED = "rejectionhandled";
      var PENDING = 0;
      var FULFILLED = 1;
      var REJECTED = 2;
      var HANDLED = 1;
      var UNHANDLED = 2;
      var Internal, OwnPromiseCapability, PromiseWrapper;
      var isThenable = function(it) {
        var then2;
        return isObject$4(it) && isCallable$2(then2 = it.then) ? then2 : false;
      };
      var callReaction = function(reaction, state) {
        var value = state.value;
        var ok = state.state === FULFILLED;
        var handler = ok ? reaction.ok : reaction.fail;
        var resolve = reaction.resolve;
        var reject = reaction.reject;
        var domain = reaction.domain;
        var result, then2, exited;
        try {
          if (handler) {
            if (!ok) {
              if (state.rejection === UNHANDLED) onHandleUnhandled(state);
              state.rejection = HANDLED;
            }
            if (handler === true) result = value;
            else {
              if (domain) domain.enter();
              result = handler(value);
              if (domain) {
                domain.exit();
                exited = true;
              }
            }
            if (result === reaction.promise) {
              reject(new TypeError$1("Promise-chain cycle"));
            } else if (then2 = isThenable(result)) {
              call$5(then2, result, resolve, reject);
            } else resolve(result);
          } else reject(value);
        } catch (error) {
          if (domain && !exited) domain.exit();
          reject(error);
        }
      };
      var notify = function(state, isReject) {
        if (state.notified) return;
        state.notified = true;
        microtask(function() {
          var reactions = state.reactions;
          var reaction;
          while (reaction = reactions.get()) {
            callReaction(reaction, state);
          }
          state.notified = false;
          if (isReject && !state.rejection) onUnhandled(state);
        });
      };
      var dispatchEvent = function(name, promise2, reason) {
        var event, handler;
        if (DISPATCH_EVENT) {
          event = document$1.createEvent("Event");
          event.promise = promise2;
          event.reason = reason;
          event.initEvent(name, false, true);
          global$2.dispatchEvent(event);
        } else event = { promise: promise2, reason };
        if (!NATIVE_PROMISE_REJECTION_EVENT && (handler = global$2["on" + name])) handler(event);
        else if (name === UNHANDLED_REJECTION) hostReportErrors("Unhandled promise rejection", reason);
      };
      var onUnhandled = function(state) {
        call$5(task, global$2, function() {
          var promise2 = state.facade;
          var value = state.value;
          var IS_UNHANDLED = isUnhandled(state);
          var result;
          if (IS_UNHANDLED) {
            result = perform$5(function() {
              if (IS_NODE) {
                process.emit("unhandledRejection", value, promise2);
              } else dispatchEvent(UNHANDLED_REJECTION, promise2, value);
            });
            state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
            if (result.error) throw result.value;
          }
        });
      };
      var isUnhandled = function(state) {
        return state.rejection !== HANDLED && !state.parent;
      };
      var onHandleUnhandled = function(state) {
        call$5(task, global$2, function() {
          var promise2 = state.facade;
          if (IS_NODE) {
            process.emit("rejectionHandled", promise2);
          } else dispatchEvent(REJECTION_HANDLED, promise2, state.value);
        });
      };
      var bind$1 = function(fn, state, unwrap) {
        return function(value) {
          fn(state, value, unwrap);
        };
      };
      var internalReject = function(state, value, unwrap) {
        if (state.done) return;
        state.done = true;
        if (unwrap) state = unwrap;
        state.value = value;
        state.state = REJECTED;
        notify(state, true);
      };
      var internalResolve = function(state, value, unwrap) {
        if (state.done) return;
        state.done = true;
        if (unwrap) state = unwrap;
        try {
          if (state.facade === value) throw new TypeError$1("Promise can't be resolved itself");
          var then2 = isThenable(value);
          if (then2) {
            microtask(function() {
              var wrapper = { done: false };
              try {
                call$5(
                  then2,
                  value,
                  bind$1(internalResolve, wrapper, state),
                  bind$1(internalReject, wrapper, state)
                );
              } catch (error) {
                internalReject(wrapper, error, state);
              }
            });
          } else {
            state.value = value;
            state.state = FULFILLED;
            notify(state, false);
          }
        } catch (error) {
          internalReject({ done: false }, error, state);
        }
      };
      if (FORCED_PROMISE_CONSTRUCTOR$4) {
        PromiseConstructor = function Promise2(executor) {
          anInstance$2(this, PromisePrototype);
          aCallable$5(executor);
          call$5(Internal, this);
          var state = getInternalPromiseState(this);
          try {
            executor(bind$1(internalResolve, state), bind$1(internalReject, state));
          } catch (error) {
            internalReject(state, error);
          }
        };
        PromisePrototype = PromiseConstructor.prototype;
        Internal = function Promise2(executor) {
          setInternalState$2(this, {
            type: PROMISE,
            done: false,
            notified: false,
            parent: false,
            reactions: new Queue$1(),
            rejection: false,
            state: PENDING,
            value: void 0
          });
        };
        Internal.prototype = defineBuiltIn$1(PromisePrototype, "then", function then2(onFulfilled, onRejected) {
          var state = getInternalPromiseState(this);
          var reaction = newPromiseCapability$1(speciesConstructor$1(this, PromiseConstructor));
          state.parent = true;
          reaction.ok = isCallable$2(onFulfilled) ? onFulfilled : true;
          reaction.fail = isCallable$2(onRejected) && onRejected;
          reaction.domain = IS_NODE ? process.domain : void 0;
          if (state.state === PENDING) state.reactions.add(reaction);
          else microtask(function() {
            callReaction(reaction, state);
          });
          return reaction.promise;
        });
        OwnPromiseCapability = function() {
          var promise2 = new Internal();
          var state = getInternalPromiseState(promise2);
          this.promise = promise2;
          this.resolve = bind$1(internalResolve, state);
          this.reject = bind$1(internalReject, state);
        };
        newPromiseCapabilityModule$7.f = newPromiseCapability$1 = function(C) {
          return C === PromiseConstructor || C === PromiseWrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);
        };
      }
      $$e({ global: true, constructor: true, wrap: true, forced: FORCED_PROMISE_CONSTRUCTOR$4 }, {
        Promise: PromiseConstructor
      });
      setToStringTag$1(PromiseConstructor, PROMISE, false, true);
      setSpecies$1(PROMISE);
      var NativePromiseConstructor$3 = promiseNativeConstructor;
      var checkCorrectnessOfIteration = checkCorrectnessOfIteration$2;
      var FORCED_PROMISE_CONSTRUCTOR$3 = promiseConstructorDetection.CONSTRUCTOR;
      var promiseStaticsIncorrectIteration = FORCED_PROMISE_CONSTRUCTOR$3 || !checkCorrectnessOfIteration(function(iterable) {
        NativePromiseConstructor$3.all(iterable).then(void 0, function() {
        });
      });
      var $$d = _export;
      var call$4 = functionCall;
      var aCallable$4 = aCallable$e;
      var newPromiseCapabilityModule$6 = newPromiseCapability$2;
      var perform$4 = perform$6;
      var iterate$5 = iterate$7;
      var PROMISE_STATICS_INCORRECT_ITERATION$3 = promiseStaticsIncorrectIteration;
      $$d({ target: "Promise", stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION$3 }, {
        all: function all(iterable) {
          var C = this;
          var capability = newPromiseCapabilityModule$6.f(C);
          var resolve = capability.resolve;
          var reject = capability.reject;
          var result = perform$4(function() {
            var $promiseResolve = aCallable$4(C.resolve);
            var values2 = [];
            var counter2 = 0;
            var remaining = 1;
            iterate$5(iterable, function(promise2) {
              var index = counter2++;
              var alreadyCalled = false;
              remaining++;
              call$4($promiseResolve, C, promise2).then(function(value) {
                if (alreadyCalled) return;
                alreadyCalled = true;
                values2[index] = value;
                --remaining || resolve(values2);
              }, reject);
            });
            --remaining || resolve(values2);
          });
          if (result.error) reject(result.value);
          return capability.promise;
        }
      });
      var $$c = _export;
      var FORCED_PROMISE_CONSTRUCTOR$2 = promiseConstructorDetection.CONSTRUCTOR;
      var NativePromiseConstructor$2 = promiseNativeConstructor;
      NativePromiseConstructor$2 && NativePromiseConstructor$2.prototype;
      $$c({ target: "Promise", proto: true, forced: FORCED_PROMISE_CONSTRUCTOR$2, real: true }, {
        "catch": function(onRejected) {
          return this.then(void 0, onRejected);
        }
      });
      var $$b = _export;
      var call$3 = functionCall;
      var aCallable$3 = aCallable$e;
      var newPromiseCapabilityModule$5 = newPromiseCapability$2;
      var perform$3 = perform$6;
      var iterate$4 = iterate$7;
      var PROMISE_STATICS_INCORRECT_ITERATION$2 = promiseStaticsIncorrectIteration;
      $$b({ target: "Promise", stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION$2 }, {
        race: function race(iterable) {
          var C = this;
          var capability = newPromiseCapabilityModule$5.f(C);
          var reject = capability.reject;
          var result = perform$3(function() {
            var $promiseResolve = aCallable$3(C.resolve);
            iterate$4(iterable, function(promise2) {
              call$3($promiseResolve, C, promise2).then(capability.resolve, reject);
            });
          });
          if (result.error) reject(result.value);
          return capability.promise;
        }
      });
      var $$a = _export;
      var call$2 = functionCall;
      var newPromiseCapabilityModule$4 = newPromiseCapability$2;
      var FORCED_PROMISE_CONSTRUCTOR$1 = promiseConstructorDetection.CONSTRUCTOR;
      $$a({ target: "Promise", stat: true, forced: FORCED_PROMISE_CONSTRUCTOR$1 }, {
        reject: function reject(r) {
          var capability = newPromiseCapabilityModule$4.f(this);
          call$2(capability.reject, void 0, r);
          return capability.promise;
        }
      });
      var anObject = anObject$d;
      var isObject$3 = isObject$h;
      var newPromiseCapability = newPromiseCapability$2;
      var promiseResolve$2 = function(C, x) {
        anObject(C);
        if (isObject$3(x) && x.constructor === C) return x;
        var promiseCapability = newPromiseCapability.f(C);
        var resolve = promiseCapability.resolve;
        resolve(x);
        return promiseCapability.promise;
      };
      var $$9 = _export;
      var getBuiltIn$2 = getBuiltIn$f;
      var IS_PURE = isPure;
      var NativePromiseConstructor$1 = promiseNativeConstructor;
      var FORCED_PROMISE_CONSTRUCTOR = promiseConstructorDetection.CONSTRUCTOR;
      var promiseResolve$1 = promiseResolve$2;
      var PromiseConstructorWrapper = getBuiltIn$2("Promise");
      var CHECK_WRAPPER = !FORCED_PROMISE_CONSTRUCTOR;
      $$9({ target: "Promise", stat: true, forced: IS_PURE }, {
        resolve: function resolve(x) {
          return promiseResolve$1(CHECK_WRAPPER && this === PromiseConstructorWrapper ? NativePromiseConstructor$1 : this, x);
        }
      });
      var $$8 = _export;
      var call$1 = functionCall;
      var aCallable$2 = aCallable$e;
      var newPromiseCapabilityModule$3 = newPromiseCapability$2;
      var perform$2 = perform$6;
      var iterate$3 = iterate$7;
      var PROMISE_STATICS_INCORRECT_ITERATION$1 = promiseStaticsIncorrectIteration;
      $$8({ target: "Promise", stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION$1 }, {
        allSettled: function allSettled(iterable) {
          var C = this;
          var capability = newPromiseCapabilityModule$3.f(C);
          var resolve = capability.resolve;
          var reject = capability.reject;
          var result = perform$2(function() {
            var promiseResolve2 = aCallable$2(C.resolve);
            var values2 = [];
            var counter2 = 0;
            var remaining = 1;
            iterate$3(iterable, function(promise2) {
              var index = counter2++;
              var alreadyCalled = false;
              remaining++;
              call$1(promiseResolve2, C, promise2).then(function(value) {
                if (alreadyCalled) return;
                alreadyCalled = true;
                values2[index] = { status: "fulfilled", value };
                --remaining || resolve(values2);
              }, function(error) {
                if (alreadyCalled) return;
                alreadyCalled = true;
                values2[index] = { status: "rejected", reason: error };
                --remaining || resolve(values2);
              });
            });
            --remaining || resolve(values2);
          });
          if (result.error) reject(result.value);
          return capability.promise;
        }
      });
      var $$7 = _export;
      var call = functionCall;
      var aCallable$1 = aCallable$e;
      var getBuiltIn$1 = getBuiltIn$f;
      var newPromiseCapabilityModule$2 = newPromiseCapability$2;
      var perform$1 = perform$6;
      var iterate$2 = iterate$7;
      var PROMISE_STATICS_INCORRECT_ITERATION = promiseStaticsIncorrectIteration;
      var PROMISE_ANY_ERROR = "No one promise resolved";
      $$7({ target: "Promise", stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION }, {
        any: function any(iterable) {
          var C = this;
          var AggregateError = getBuiltIn$1("AggregateError");
          var capability = newPromiseCapabilityModule$2.f(C);
          var resolve = capability.resolve;
          var reject = capability.reject;
          var result = perform$1(function() {
            var promiseResolve2 = aCallable$1(C.resolve);
            var errors = [];
            var counter2 = 0;
            var remaining = 1;
            var alreadyResolved = false;
            iterate$2(iterable, function(promise2) {
              var index = counter2++;
              var alreadyRejected = false;
              remaining++;
              call(promiseResolve2, C, promise2).then(function(value) {
                if (alreadyRejected || alreadyResolved) return;
                alreadyResolved = true;
                resolve(value);
              }, function(error) {
                if (alreadyRejected || alreadyResolved) return;
                alreadyRejected = true;
                errors[index] = error;
                --remaining || reject(new AggregateError(errors, PROMISE_ANY_ERROR));
              });
            });
            --remaining || reject(new AggregateError(errors, PROMISE_ANY_ERROR));
          });
          if (result.error) reject(result.value);
          return capability.promise;
        }
      });
      var $$6 = _export;
      var NativePromiseConstructor = promiseNativeConstructor;
      var fails$5 = fails$u;
      var getBuiltIn = getBuiltIn$f;
      var isCallable$1 = isCallable$m;
      var speciesConstructor = speciesConstructor$2;
      var promiseResolve = promiseResolve$2;
      var NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;
      var NON_GENERIC = !!NativePromiseConstructor && fails$5(function() {
        NativePromisePrototype["finally"].call({ then: function() {
        } }, function() {
        });
      });
      $$6({ target: "Promise", proto: true, real: true, forced: NON_GENERIC }, {
        "finally": function(onFinally) {
          var C = speciesConstructor(this, getBuiltIn("Promise"));
          var isFunction = isCallable$1(onFinally);
          return this.then(
            isFunction ? function(x) {
              return promiseResolve(C, onFinally()).then(function() {
                return x;
              });
            } : onFinally,
            isFunction ? function(e) {
              return promiseResolve(C, onFinally()).then(function() {
                throw e;
              });
            } : onFinally
          );
        }
      });
      var path$2 = path$o;
      var promise$4 = path$2.Promise;
      var parent$e = promise$4;
      var promise$3 = parent$e;
      var $$5 = _export;
      var newPromiseCapabilityModule$1 = newPromiseCapability$2;
      $$5({ target: "Promise", stat: true }, {
        withResolvers: function withResolvers() {
          var promiseCapability = newPromiseCapabilityModule$1.f(this);
          return {
            promise: promiseCapability.promise,
            resolve: promiseCapability.resolve,
            reject: promiseCapability.reject
          };
        }
      });
      var parent$d = promise$3;
      var promise$2 = parent$d;
      var $$4 = _export;
      var newPromiseCapabilityModule = newPromiseCapability$2;
      var perform = perform$6;
      $$4({ target: "Promise", stat: true, forced: true }, {
        "try": function(callbackfn) {
          var promiseCapability = newPromiseCapabilityModule.f(this);
          var result = perform(callbackfn);
          (result.error ? promiseCapability.reject : promiseCapability.resolve)(result.value);
          return promiseCapability.promise;
        }
      });
      var parent$c = promise$2;
      var promise$1 = parent$c;
      var promise = promise$1;
      var parent$b = reverse$4;
      var reverse$2 = parent$b;
      var parent$a = reverse$2;
      var reverse$1 = parent$a;
      var reverse = reverse$1;
      (function(module2) {
        var _typeof2 = _typeofExports["default"];
        var _Object$defineProperty2 = defineProperty$8;
        var _Symbol2 = symbol$1;
        var _Object$create2 = create$2;
        var _Object$getPrototypeOf2 = getPrototypeOf$1;
        var _forEachInstanceProperty2 = forEach$1;
        var _pushInstanceProperty2 = push$3;
        var _Object$setPrototypeOf2 = setPrototypeOf$1;
        var _Promise = promise;
        var _reverseInstanceProperty2 = reverse;
        var _sliceInstanceProperty2 = slice$1;
        function _regeneratorRuntime2() {
          module2.exports = _regeneratorRuntime2 = function _regeneratorRuntime3() {
            return e;
          }, module2.exports.__esModule = true, module2.exports["default"] = module2.exports;
          var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = _Object$defineProperty2 || function(t2, e2, r2) {
            t2[e2] = r2.value;
          }, i2 = "function" == typeof _Symbol2 ? _Symbol2 : {}, a = i2.iterator || "@@iterator", c = i2.asyncIterator || "@@asyncIterator", u = i2.toStringTag || "@@toStringTag";
          function define2(t2, e2, r2) {
            return _Object$defineProperty2(t2, e2, {
              value: r2,
              enumerable: true,
              configurable: true,
              writable: true
            }), t2[e2];
          }
          try {
            define2({}, "");
          } catch (t2) {
            define2 = function define3(t3, e2, r2) {
              return t3[e2] = r2;
            };
          }
          function wrap2(t2, e2, r2, n2) {
            var i3 = e2 && e2.prototype instanceof Generator ? e2 : Generator, a2 = _Object$create2(i3.prototype), c2 = new Context(n2 || []);
            return o(a2, "_invoke", {
              value: makeInvokeMethod(t2, r2, c2)
            }), a2;
          }
          function tryCatch(t2, e2, r2) {
            try {
              return {
                type: "normal",
                arg: t2.call(e2, r2)
              };
            } catch (t3) {
              return {
                type: "throw",
                arg: t3
              };
            }
          }
          e.wrap = wrap2;
          var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {};
          function Generator() {
          }
          function GeneratorFunction() {
          }
          function GeneratorFunctionPrototype() {
          }
          var p = {};
          define2(p, a, function() {
            return this;
          });
          var d = _Object$getPrototypeOf2, v = d && d(d(values2([])));
          v && v !== r && n.call(v, a) && (p = v);
          var g = GeneratorFunctionPrototype.prototype = Generator.prototype = _Object$create2(p);
          function defineIteratorMethods(t2) {
            var _context;
            _forEachInstanceProperty2(_context = ["next", "throw", "return"]).call(_context, function(e2) {
              define2(t2, e2, function(t3) {
                return this._invoke(e2, t3);
              });
            });
          }
          function AsyncIterator(t2, e2) {
            function invoke(r3, o2, i3, a2) {
              var c2 = tryCatch(t2[r3], t2, o2);
              if ("throw" !== c2.type) {
                var u2 = c2.arg, h2 = u2.value;
                return h2 && "object" == _typeof2(h2) && n.call(h2, "__await") ? e2.resolve(h2.__await).then(function(t3) {
                  invoke("next", t3, i3, a2);
                }, function(t3) {
                  invoke("throw", t3, i3, a2);
                }) : e2.resolve(h2).then(function(t3) {
                  u2.value = t3, i3(u2);
                }, function(t3) {
                  return invoke("throw", t3, i3, a2);
                });
              }
              a2(c2.arg);
            }
            var r2;
            o(this, "_invoke", {
              value: function value(t3, n2) {
                function callInvokeWithMethodAndArg() {
                  return new e2(function(e3, r3) {
                    invoke(t3, n2, e3, r3);
                  });
                }
                return r2 = r2 ? r2.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
              }
            });
          }
          function makeInvokeMethod(e2, r2, n2) {
            var o2 = h;
            return function(i3, a2) {
              if (o2 === f) throw new Error("Generator is already running");
              if (o2 === s) {
                if ("throw" === i3) throw a2;
                return {
                  value: t,
                  done: true
                };
              }
              for (n2.method = i3, n2.arg = a2; ; ) {
                var c2 = n2.delegate;
                if (c2) {
                  var u2 = maybeInvokeDelegate(c2, n2);
                  if (u2) {
                    if (u2 === y) continue;
                    return u2;
                  }
                }
                if ("next" === n2.method) n2.sent = n2._sent = n2.arg;
                else if ("throw" === n2.method) {
                  if (o2 === h) throw o2 = s, n2.arg;
                  n2.dispatchException(n2.arg);
                } else "return" === n2.method && n2.abrupt("return", n2.arg);
                o2 = f;
                var p2 = tryCatch(e2, r2, n2);
                if ("normal" === p2.type) {
                  if (o2 = n2.done ? s : l, p2.arg === y) continue;
                  return {
                    value: p2.arg,
                    done: n2.done
                  };
                }
                "throw" === p2.type && (o2 = s, n2.method = "throw", n2.arg = p2.arg);
              }
            };
          }
          function maybeInvokeDelegate(e2, r2) {
            var n2 = r2.method, o2 = e2.iterator[n2];
            if (o2 === t) return r2.delegate = null, "throw" === n2 && e2.iterator["return"] && (r2.method = "return", r2.arg = t, maybeInvokeDelegate(e2, r2), "throw" === r2.method) || "return" !== n2 && (r2.method = "throw", r2.arg = new TypeError("The iterator does not provide a '" + n2 + "' method")), y;
            var i3 = tryCatch(o2, e2.iterator, r2.arg);
            if ("throw" === i3.type) return r2.method = "throw", r2.arg = i3.arg, r2.delegate = null, y;
            var a2 = i3.arg;
            return a2 ? a2.done ? (r2[e2.resultName] = a2.value, r2.next = e2.nextLoc, "return" !== r2.method && (r2.method = "next", r2.arg = t), r2.delegate = null, y) : a2 : (r2.method = "throw", r2.arg = new TypeError("iterator result is not an object"), r2.delegate = null, y);
          }
          function pushTryEntry(t2) {
            var _context2;
            var e2 = {
              tryLoc: t2[0]
            };
            1 in t2 && (e2.catchLoc = t2[1]), 2 in t2 && (e2.finallyLoc = t2[2], e2.afterLoc = t2[3]), _pushInstanceProperty2(_context2 = this.tryEntries).call(_context2, e2);
          }
          function resetTryEntry(t2) {
            var e2 = t2.completion || {};
            e2.type = "normal", delete e2.arg, t2.completion = e2;
          }
          function Context(t2) {
            this.tryEntries = [{
              tryLoc: "root"
            }], _forEachInstanceProperty2(t2).call(t2, pushTryEntry, this), this.reset(true);
          }
          function values2(e2) {
            if (e2 || "" === e2) {
              var r2 = e2[a];
              if (r2) return r2.call(e2);
              if ("function" == typeof e2.next) return e2;
              if (!isNaN(e2.length)) {
                var o2 = -1, i3 = function next() {
                  for (; ++o2 < e2.length; ) if (n.call(e2, o2)) return next.value = e2[o2], next.done = false, next;
                  return next.value = t, next.done = true, next;
                };
                return i3.next = i3;
              }
            }
            throw new TypeError(_typeof2(e2) + " is not iterable");
          }
          return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", {
            value: GeneratorFunctionPrototype,
            configurable: true
          }), o(GeneratorFunctionPrototype, "constructor", {
            value: GeneratorFunction,
            configurable: true
          }), GeneratorFunction.displayName = define2(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function(t2) {
            var e2 = "function" == typeof t2 && t2.constructor;
            return !!e2 && (e2 === GeneratorFunction || "GeneratorFunction" === (e2.displayName || e2.name));
          }, e.mark = function(t2) {
            return _Object$setPrototypeOf2 ? _Object$setPrototypeOf2(t2, GeneratorFunctionPrototype) : (t2.__proto__ = GeneratorFunctionPrototype, define2(t2, u, "GeneratorFunction")), t2.prototype = _Object$create2(g), t2;
          }, e.awrap = function(t2) {
            return {
              __await: t2
            };
          }, defineIteratorMethods(AsyncIterator.prototype), define2(AsyncIterator.prototype, c, function() {
            return this;
          }), e.AsyncIterator = AsyncIterator, e.async = function(t2, r2, n2, o2, i3) {
            void 0 === i3 && (i3 = _Promise);
            var a2 = new AsyncIterator(wrap2(t2, r2, n2, o2), i3);
            return e.isGeneratorFunction(r2) ? a2 : a2.next().then(function(t3) {
              return t3.done ? t3.value : a2.next();
            });
          }, defineIteratorMethods(g), define2(g, u, "Generator"), define2(g, a, function() {
            return this;
          }), define2(g, "toString", function() {
            return "[object Generator]";
          }), e.keys = function(t2) {
            var e2 = Object(t2), r2 = [];
            for (var n2 in e2) _pushInstanceProperty2(r2).call(r2, n2);
            return _reverseInstanceProperty2(r2).call(r2), function next() {
              for (; r2.length; ) {
                var t3 = r2.pop();
                if (t3 in e2) return next.value = t3, next.done = false, next;
              }
              return next.done = true, next;
            };
          }, e.values = values2, Context.prototype = {
            constructor: Context,
            reset: function reset(e2) {
              var _context3;
              if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = false, this.delegate = null, this.method = "next", this.arg = t, _forEachInstanceProperty2(_context3 = this.tryEntries).call(_context3, resetTryEntry), !e2) for (var r2 in this) "t" === r2.charAt(0) && n.call(this, r2) && !isNaN(+_sliceInstanceProperty2(r2).call(r2, 1)) && (this[r2] = t);
            },
            stop: function stop() {
              this.done = true;
              var t2 = this.tryEntries[0].completion;
              if ("throw" === t2.type) throw t2.arg;
              return this.rval;
            },
            dispatchException: function dispatchException(e2) {
              if (this.done) throw e2;
              var r2 = this;
              function handle(n2, o3) {
                return a2.type = "throw", a2.arg = e2, r2.next = n2, o3 && (r2.method = "next", r2.arg = t), !!o3;
              }
              for (var o2 = this.tryEntries.length - 1; o2 >= 0; --o2) {
                var i3 = this.tryEntries[o2], a2 = i3.completion;
                if ("root" === i3.tryLoc) return handle("end");
                if (i3.tryLoc <= this.prev) {
                  var c2 = n.call(i3, "catchLoc"), u2 = n.call(i3, "finallyLoc");
                  if (c2 && u2) {
                    if (this.prev < i3.catchLoc) return handle(i3.catchLoc, true);
                    if (this.prev < i3.finallyLoc) return handle(i3.finallyLoc);
                  } else if (c2) {
                    if (this.prev < i3.catchLoc) return handle(i3.catchLoc, true);
                  } else {
                    if (!u2) throw new Error("try statement without catch or finally");
                    if (this.prev < i3.finallyLoc) return handle(i3.finallyLoc);
                  }
                }
              }
            },
            abrupt: function abrupt(t2, e2) {
              for (var r2 = this.tryEntries.length - 1; r2 >= 0; --r2) {
                var o2 = this.tryEntries[r2];
                if (o2.tryLoc <= this.prev && n.call(o2, "finallyLoc") && this.prev < o2.finallyLoc) {
                  var i3 = o2;
                  break;
                }
              }
              i3 && ("break" === t2 || "continue" === t2) && i3.tryLoc <= e2 && e2 <= i3.finallyLoc && (i3 = null);
              var a2 = i3 ? i3.completion : {};
              return a2.type = t2, a2.arg = e2, i3 ? (this.method = "next", this.next = i3.finallyLoc, y) : this.complete(a2);
            },
            complete: function complete(t2, e2) {
              if ("throw" === t2.type) throw t2.arg;
              return "break" === t2.type || "continue" === t2.type ? this.next = t2.arg : "return" === t2.type ? (this.rval = this.arg = t2.arg, this.method = "return", this.next = "end") : "normal" === t2.type && e2 && (this.next = e2), y;
            },
            finish: function finish(t2) {
              for (var e2 = this.tryEntries.length - 1; e2 >= 0; --e2) {
                var r2 = this.tryEntries[e2];
                if (r2.finallyLoc === t2) return this.complete(r2.completion, r2.afterLoc), resetTryEntry(r2), y;
              }
            },
            "catch": function _catch(t2) {
              for (var e2 = this.tryEntries.length - 1; e2 >= 0; --e2) {
                var r2 = this.tryEntries[e2];
                if (r2.tryLoc === t2) {
                  var n2 = r2.completion;
                  if ("throw" === n2.type) {
                    var o2 = n2.arg;
                    resetTryEntry(r2);
                  }
                  return o2;
                }
              }
              throw new Error("illegal catch attempt");
            },
            delegateYield: function delegateYield(e2, r2, n2) {
              return this.delegate = {
                iterator: values2(e2),
                resultName: r2,
                nextLoc: n2
              }, "next" === this.method && (this.arg = t), y;
            }
          }, e;
        }
        module2.exports = _regeneratorRuntime2, module2.exports.__esModule = true, module2.exports["default"] = module2.exports;
      })(regeneratorRuntime$1);
      var regeneratorRuntimeExports = regeneratorRuntime$1.exports;
      var runtime = regeneratorRuntimeExports();
      var regenerator = runtime;
      try {
        regeneratorRuntime = runtime;
      } catch (accidentalStrictMode) {
        if (typeof globalThis === "object") {
          globalThis.regeneratorRuntime = runtime;
        } else {
          Function("r", "regeneratorRuntime = r")(runtime);
        }
      }
      var _regeneratorRuntime = getDefaultExportFromCjs(regenerator);
      var internalMetadata = { exports: {} };
      var fails$4 = fails$u;
      var arrayBufferNonExtensible = fails$4(function() {
        if (typeof ArrayBuffer == "function") {
          var buffer = new ArrayBuffer(8);
          if (Object.isExtensible(buffer)) Object.defineProperty(buffer, "a", { value: 8 });
        }
      });
      var fails$3 = fails$u;
      var isObject$2 = isObject$h;
      var classof$3 = classofRaw$2;
      var ARRAY_BUFFER_NON_EXTENSIBLE = arrayBufferNonExtensible;
      var $isExtensible = Object.isExtensible;
      var FAILS_ON_PRIMITIVES = fails$3(function() {
        $isExtensible(1);
      });
      var objectIsExtensible = FAILS_ON_PRIMITIVES || ARRAY_BUFFER_NON_EXTENSIBLE ? function isExtensible2(it) {
        if (!isObject$2(it)) return false;
        if (ARRAY_BUFFER_NON_EXTENSIBLE && classof$3(it) === "ArrayBuffer") return false;
        return $isExtensible ? $isExtensible(it) : true;
      } : $isExtensible;
      var fails$2 = fails$u;
      var freezing = !fails$2(function() {
        return Object.isExtensible(Object.preventExtensions({}));
      });
      var $$3 = _export;
      var uncurryThis$1 = functionUncurryThis;
      var hiddenKeys = hiddenKeys$6;
      var isObject$1 = isObject$h;
      var hasOwn$3 = hasOwnProperty_1;
      var defineProperty$1 = objectDefineProperty.f;
      var getOwnPropertyNamesModule = objectGetOwnPropertyNames;
      var getOwnPropertyNamesExternalModule = objectGetOwnPropertyNamesExternal;
      var isExtensible = objectIsExtensible;
      var uid = uid$4;
      var FREEZING = freezing;
      var REQUIRED = false;
      var METADATA = uid("meta");
      var id = 0;
      var setMetadata = function(it) {
        defineProperty$1(it, METADATA, { value: {
          objectID: "O" + id++,
          // object ID
          weakData: {}
          // weak collections IDs
        } });
      };
      var fastKey$1 = function(it, create2) {
        if (!isObject$1(it)) return typeof it == "symbol" ? it : (typeof it == "string" ? "S" : "P") + it;
        if (!hasOwn$3(it, METADATA)) {
          if (!isExtensible(it)) return "F";
          if (!create2) return "E";
          setMetadata(it);
        }
        return it[METADATA].objectID;
      };
      var getWeakData = function(it, create2) {
        if (!hasOwn$3(it, METADATA)) {
          if (!isExtensible(it)) return true;
          if (!create2) return false;
          setMetadata(it);
        }
        return it[METADATA].weakData;
      };
      var onFreeze = function(it) {
        if (FREEZING && REQUIRED && isExtensible(it) && !hasOwn$3(it, METADATA)) setMetadata(it);
        return it;
      };
      var enable = function() {
        meta.enable = function() {
        };
        REQUIRED = true;
        var getOwnPropertyNames2 = getOwnPropertyNamesModule.f;
        var splice2 = uncurryThis$1([].splice);
        var test2 = {};
        test2[METADATA] = 1;
        if (getOwnPropertyNames2(test2).length) {
          getOwnPropertyNamesModule.f = function(it) {
            var result = getOwnPropertyNames2(it);
            for (var i2 = 0, length2 = result.length; i2 < length2; i2++) {
              if (result[i2] === METADATA) {
                splice2(result, i2, 1);
                break;
              }
            }
            return result;
          };
          $$3({ target: "Object", stat: true, forced: true }, {
            getOwnPropertyNames: getOwnPropertyNamesExternalModule.f
          });
        }
      };
      var meta = internalMetadata.exports = {
        enable,
        fastKey: fastKey$1,
        getWeakData,
        onFreeze
      };
      hiddenKeys[METADATA] = true;
      var internalMetadataExports = internalMetadata.exports;
      var $$2 = _export;
      var global$1 = global$p;
      var InternalMetadataModule = internalMetadataExports;
      var fails$1 = fails$u;
      var createNonEnumerableProperty = createNonEnumerableProperty$9;
      var iterate$1 = iterate$7;
      var anInstance$1 = anInstance$3;
      var isCallable = isCallable$m;
      var isObject = isObject$h;
      var isNullOrUndefined$1 = isNullOrUndefined$6;
      var setToStringTag = setToStringTag$7;
      var defineProperty = objectDefineProperty.f;
      var forEach = arrayIteration.forEach;
      var DESCRIPTORS$1 = descriptors;
      var InternalStateModule$1 = internalState;
      var setInternalState$1 = InternalStateModule$1.set;
      var internalStateGetterFor$1 = InternalStateModule$1.getterFor;
      var collection$2 = function(CONSTRUCTOR_NAME, wrapper, common) {
        var IS_MAP = CONSTRUCTOR_NAME.indexOf("Map") !== -1;
        var IS_WEAK = CONSTRUCTOR_NAME.indexOf("Weak") !== -1;
        var ADDER = IS_MAP ? "set" : "add";
        var NativeConstructor = global$1[CONSTRUCTOR_NAME];
        var NativePrototype = NativeConstructor && NativeConstructor.prototype;
        var exported = {};
        var Constructor;
        if (!DESCRIPTORS$1 || !isCallable(NativeConstructor) || !(IS_WEAK || NativePrototype.forEach && !fails$1(function() {
          new NativeConstructor().entries().next();
        }))) {
          Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);
          InternalMetadataModule.enable();
        } else {
          Constructor = wrapper(function(target, iterable) {
            setInternalState$1(anInstance$1(target, Prototype), {
              type: CONSTRUCTOR_NAME,
              collection: new NativeConstructor()
            });
            if (!isNullOrUndefined$1(iterable)) iterate$1(iterable, target[ADDER], { that: target, AS_ENTRIES: IS_MAP });
          });
          var Prototype = Constructor.prototype;
          var getInternalState2 = internalStateGetterFor$1(CONSTRUCTOR_NAME);
          forEach(["add", "clear", "delete", "forEach", "get", "has", "set", "keys", "values", "entries"], function(KEY) {
            var IS_ADDER = KEY === "add" || KEY === "set";
            if (KEY in NativePrototype && !(IS_WEAK && KEY === "clear")) {
              createNonEnumerableProperty(Prototype, KEY, function(a, b) {
                var collection2 = getInternalState2(this).collection;
                if (!IS_ADDER && IS_WEAK && !isObject(a)) return KEY === "get" ? void 0 : false;
                var result = collection2[KEY](a === 0 ? 0 : a, b);
                return IS_ADDER ? this : result;
              });
            }
          });
          IS_WEAK || defineProperty(Prototype, "size", {
            configurable: true,
            get: function() {
              return getInternalState2(this).collection.size;
            }
          });
        }
        setToStringTag(Constructor, CONSTRUCTOR_NAME, false, true);
        exported[CONSTRUCTOR_NAME] = Constructor;
        $$2({ global: true, forced: true }, exported);
        if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);
        return Constructor;
      };
      var defineBuiltIn = defineBuiltIn$6;
      var defineBuiltIns$1 = function(target, src, options) {
        for (var key in src) {
          if (options && options.unsafe && target[key]) target[key] = src[key];
          else defineBuiltIn(target, key, src[key], options);
        }
        return target;
      };
      var create = objectCreate;
      var defineBuiltInAccessor = defineBuiltInAccessor$3;
      var defineBuiltIns = defineBuiltIns$1;
      var bind = functionBindContext;
      var anInstance = anInstance$3;
      var isNullOrUndefined = isNullOrUndefined$6;
      var iterate = iterate$7;
      var defineIterator = iteratorDefine;
      var createIterResultObject = createIterResultObject$3;
      var setSpecies = setSpecies$2;
      var DESCRIPTORS = descriptors;
      var fastKey = internalMetadataExports.fastKey;
      var InternalStateModule = internalState;
      var setInternalState = InternalStateModule.set;
      var internalStateGetterFor = InternalStateModule.getterFor;
      var collectionStrong$2 = {
        getConstructor: function(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
          var Constructor = wrapper(function(that, iterable) {
            anInstance(that, Prototype);
            setInternalState(that, {
              type: CONSTRUCTOR_NAME,
              index: create(null),
              first: void 0,
              last: void 0,
              size: 0
            });
            if (!DESCRIPTORS) that.size = 0;
            if (!isNullOrUndefined(iterable)) iterate(iterable, that[ADDER], { that, AS_ENTRIES: IS_MAP });
          });
          var Prototype = Constructor.prototype;
          var getInternalState2 = internalStateGetterFor(CONSTRUCTOR_NAME);
          var define2 = function(that, key, value) {
            var state = getInternalState2(that);
            var entry = getEntry(that, key);
            var previous, index;
            if (entry) {
              entry.value = value;
            } else {
              state.last = entry = {
                index: index = fastKey(key, true),
                key,
                value,
                previous: previous = state.last,
                next: void 0,
                removed: false
              };
              if (!state.first) state.first = entry;
              if (previous) previous.next = entry;
              if (DESCRIPTORS) state.size++;
              else that.size++;
              if (index !== "F") state.index[index] = entry;
            }
            return that;
          };
          var getEntry = function(that, key) {
            var state = getInternalState2(that);
            var index = fastKey(key);
            var entry;
            if (index !== "F") return state.index[index];
            for (entry = state.first; entry; entry = entry.next) {
              if (entry.key === key) return entry;
            }
          };
          defineBuiltIns(Prototype, {
            // `{ Map, Set }.prototype.clear()` methods
            // https://tc39.es/ecma262/#sec-map.prototype.clear
            // https://tc39.es/ecma262/#sec-set.prototype.clear
            clear: function clear2() {
              var that = this;
              var state = getInternalState2(that);
              var data2 = state.index;
              var entry = state.first;
              while (entry) {
                entry.removed = true;
                if (entry.previous) entry.previous = entry.previous.next = void 0;
                delete data2[entry.index];
                entry = entry.next;
              }
              state.first = state.last = void 0;
              if (DESCRIPTORS) state.size = 0;
              else that.size = 0;
            },
            // `{ Map, Set }.prototype.delete(key)` methods
            // https://tc39.es/ecma262/#sec-map.prototype.delete
            // https://tc39.es/ecma262/#sec-set.prototype.delete
            "delete": function(key) {
              var that = this;
              var state = getInternalState2(that);
              var entry = getEntry(that, key);
              if (entry) {
                var next = entry.next;
                var prev = entry.previous;
                delete state.index[entry.index];
                entry.removed = true;
                if (prev) prev.next = next;
                if (next) next.previous = prev;
                if (state.first === entry) state.first = next;
                if (state.last === entry) state.last = prev;
                if (DESCRIPTORS) state.size--;
                else that.size--;
              }
              return !!entry;
            },
            // `{ Map, Set }.prototype.forEach(callbackfn, thisArg = undefined)` methods
            // https://tc39.es/ecma262/#sec-map.prototype.foreach
            // https://tc39.es/ecma262/#sec-set.prototype.foreach
            forEach: function forEach2(callbackfn) {
              var state = getInternalState2(this);
              var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : void 0);
              var entry;
              while (entry = entry ? entry.next : state.first) {
                boundFunction(entry.value, entry.key, this);
                while (entry && entry.removed) entry = entry.previous;
              }
            },
            // `{ Map, Set}.prototype.has(key)` methods
            // https://tc39.es/ecma262/#sec-map.prototype.has
            // https://tc39.es/ecma262/#sec-set.prototype.has
            has: function has2(key) {
              return !!getEntry(this, key);
            }
          });
          defineBuiltIns(Prototype, IS_MAP ? {
            // `Map.prototype.get(key)` method
            // https://tc39.es/ecma262/#sec-map.prototype.get
            get: function get2(key) {
              var entry = getEntry(this, key);
              return entry && entry.value;
            },
            // `Map.prototype.set(key, value)` method
            // https://tc39.es/ecma262/#sec-map.prototype.set
            set: function set2(key, value) {
              return define2(this, key === 0 ? 0 : key, value);
            }
          } : {
            // `Set.prototype.add(value)` method
            // https://tc39.es/ecma262/#sec-set.prototype.add
            add: function add(value) {
              return define2(this, value = value === 0 ? 0 : value, value);
            }
          });
          if (DESCRIPTORS) defineBuiltInAccessor(Prototype, "size", {
            configurable: true,
            get: function() {
              return getInternalState2(this).size;
            }
          });
          return Constructor;
        },
        setStrong: function(Constructor, CONSTRUCTOR_NAME, IS_MAP) {
          var ITERATOR_NAME = CONSTRUCTOR_NAME + " Iterator";
          var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);
          var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);
          defineIterator(Constructor, CONSTRUCTOR_NAME, function(iterated, kind) {
            setInternalState(this, {
              type: ITERATOR_NAME,
              target: iterated,
              state: getInternalCollectionState(iterated),
              kind,
              last: void 0
            });
          }, function() {
            var state = getInternalIteratorState(this);
            var kind = state.kind;
            var entry = state.last;
            while (entry && entry.removed) entry = entry.previous;
            if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {
              state.target = void 0;
              return createIterResultObject(void 0, true);
            }
            if (kind === "keys") return createIterResultObject(entry.key, false);
            if (kind === "values") return createIterResultObject(entry.value, false);
            return createIterResultObject([entry.key, entry.value], false);
          }, IS_MAP ? "entries" : "values", !IS_MAP, true);
          setSpecies(CONSTRUCTOR_NAME);
        }
      };
      var collection$1 = collection$2;
      var collectionStrong$1 = collectionStrong$2;
      collection$1("Map", function(init) {
        return function Map2() {
          return init(this, arguments.length ? arguments[0] : void 0);
        };
      }, collectionStrong$1);
      var path$1 = path$o;
      var map$2 = path$1.Map;
      var parent$9 = map$2;
      var map$1 = parent$9;
      var map = map$1;
      var _Map = getDefaultExportFromCjs(map);
      var $$1 = _export;
      var $some = arrayIteration.some;
      var arrayMethodIsStrict$1 = arrayMethodIsStrict$4;
      var STRICT_METHOD$1 = arrayMethodIsStrict$1("some");
      $$1({ target: "Array", proto: true, forced: !STRICT_METHOD$1 }, {
        some: function some2(callbackfn) {
          return $some(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
        }
      });
      var getBuiltInPrototypeMethod$4 = getBuiltInPrototypeMethod$g;
      var some$3 = getBuiltInPrototypeMethod$4("Array", "some");
      var isPrototypeOf$4 = objectIsPrototypeOf;
      var method$4 = some$3;
      var ArrayPrototype$4 = Array.prototype;
      var some$2 = function(it) {
        var own = it.some;
        return it === ArrayPrototype$4 || isPrototypeOf$4(ArrayPrototype$4, it) && own === ArrayPrototype$4.some ? method$4 : own;
      };
      var parent$8 = some$2;
      var some$1 = parent$8;
      var some = some$1;
      var _someInstanceProperty = getDefaultExportFromCjs(some);
      var getBuiltInPrototypeMethod$3 = getBuiltInPrototypeMethod$g;
      var keys$3 = getBuiltInPrototypeMethod$3("Array", "keys");
      var parent$7 = keys$3;
      var keys$2 = parent$7;
      var classof$2 = classof$d;
      var hasOwn$2 = hasOwnProperty_1;
      var isPrototypeOf$3 = objectIsPrototypeOf;
      var method$3 = keys$2;
      var ArrayPrototype$3 = Array.prototype;
      var DOMIterables$2 = {
        DOMTokenList: true,
        NodeList: true
      };
      var keys$1 = function(it) {
        var own = it.keys;
        return it === ArrayPrototype$3 || isPrototypeOf$3(ArrayPrototype$3, it) && own === ArrayPrototype$3.keys || hasOwn$2(DOMIterables$2, classof$2(it)) ? method$3 : own;
      };
      var keys = keys$1;
      var _keysInstanceProperty = getDefaultExportFromCjs(keys);
      var arraySlice = arraySliceSimple;
      var floor = Math.floor;
      var mergeSort = function(array, comparefn) {
        var length2 = array.length;
        var middle = floor(length2 / 2);
        return length2 < 8 ? insertionSort(array, comparefn) : merge(
          array,
          mergeSort(arraySlice(array, 0, middle), comparefn),
          mergeSort(arraySlice(array, middle), comparefn),
          comparefn
        );
      };
      var insertionSort = function(array, comparefn) {
        var length2 = array.length;
        var i2 = 1;
        var element, j;
        while (i2 < length2) {
          j = i2;
          element = array[i2];
          while (j && comparefn(array[j - 1], element) > 0) {
            array[j] = array[--j];
          }
          if (j !== i2++) array[j] = element;
        }
        return array;
      };
      var merge = function(array, left, right, comparefn) {
        var llength = left.length;
        var rlength = right.length;
        var lindex = 0;
        var rindex = 0;
        while (lindex < llength || rindex < rlength) {
          array[lindex + rindex] = lindex < llength && rindex < rlength ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++] : lindex < llength ? left[lindex++] : right[rindex++];
        }
        return array;
      };
      var arraySort = mergeSort;
      var userAgent$1 = engineUserAgent;
      var firefox = userAgent$1.match(/firefox\/(\d+)/i);
      var engineFfVersion = !!firefox && +firefox[1];
      var UA = engineUserAgent;
      var engineIsIeOrEdge = /MSIE|Trident/.test(UA);
      var userAgent = engineUserAgent;
      var webkit = userAgent.match(/AppleWebKit\/(\d+)\./);
      var engineWebkitVersion = !!webkit && +webkit[1];
      var $ = _export;
      var uncurryThis = functionUncurryThis;
      var aCallable = aCallable$e;
      var toObject = toObject$e;
      var lengthOfArrayLike = lengthOfArrayLike$d;
      var deletePropertyOrThrow = deletePropertyOrThrow$2;
      var toString = toString$7;
      var fails = fails$u;
      var internalSort = arraySort;
      var arrayMethodIsStrict = arrayMethodIsStrict$4;
      var FF = engineFfVersion;
      var IE_OR_EDGE = engineIsIeOrEdge;
      var V8 = engineV8Version;
      var WEBKIT = engineWebkitVersion;
      var test = [];
      var nativeSort = uncurryThis(test.sort);
      var push = uncurryThis(test.push);
      var FAILS_ON_UNDEFINED = fails(function() {
        test.sort(void 0);
      });
      var FAILS_ON_NULL = fails(function() {
        test.sort(null);
      });
      var STRICT_METHOD = arrayMethodIsStrict("sort");
      var STABLE_SORT = !fails(function() {
        if (V8) return V8 < 70;
        if (FF && FF > 3) return;
        if (IE_OR_EDGE) return true;
        if (WEBKIT) return WEBKIT < 603;
        var result = "";
        var code, chr, value, index;
        for (code = 65; code < 76; code++) {
          chr = String.fromCharCode(code);
          switch (code) {
            case 66:
            case 69:
            case 70:
            case 72:
              value = 3;
              break;
            case 68:
            case 71:
              value = 4;
              break;
            default:
              value = 2;
          }
          for (index = 0; index < 47; index++) {
            test.push({ k: chr + index, v: value });
          }
        }
        test.sort(function(a, b) {
          return b.v - a.v;
        });
        for (index = 0; index < test.length; index++) {
          chr = test[index].k.charAt(0);
          if (result.charAt(result.length - 1) !== chr) result += chr;
        }
        return result !== "DGBEFHACIJK";
      });
      var FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD || !STABLE_SORT;
      var getSortCompare = function(comparefn) {
        return function(x, y) {
          if (y === void 0) return -1;
          if (x === void 0) return 1;
          if (comparefn !== void 0) return +comparefn(x, y) || 0;
          return toString(x) > toString(y) ? 1 : -1;
        };
      };
      $({ target: "Array", proto: true, forced: FORCED }, {
        sort: function sort2(comparefn) {
          if (comparefn !== void 0) aCallable(comparefn);
          var array = toObject(this);
          if (STABLE_SORT) return comparefn === void 0 ? nativeSort(array) : nativeSort(array, comparefn);
          var items = [];
          var arrayLength = lengthOfArrayLike(array);
          var itemsLength, index;
          for (index = 0; index < arrayLength; index++) {
            if (index in array) push(items, array[index]);
          }
          internalSort(items, getSortCompare(comparefn));
          itemsLength = lengthOfArrayLike(items);
          index = 0;
          while (index < itemsLength) array[index] = items[index++];
          while (index < arrayLength) deletePropertyOrThrow(array, index++);
          return array;
        }
      });
      var getBuiltInPrototypeMethod$2 = getBuiltInPrototypeMethod$g;
      var sort$3 = getBuiltInPrototypeMethod$2("Array", "sort");
      var isPrototypeOf$2 = objectIsPrototypeOf;
      var method$2 = sort$3;
      var ArrayPrototype$2 = Array.prototype;
      var sort$2 = function(it) {
        var own = it.sort;
        return it === ArrayPrototype$2 || isPrototypeOf$2(ArrayPrototype$2, it) && own === ArrayPrototype$2.sort ? method$2 : own;
      };
      var parent$6 = sort$2;
      var sort$1 = parent$6;
      var sort = sort$1;
      var _sortInstanceProperty = getDefaultExportFromCjs(sort);
      var getBuiltInPrototypeMethod$1 = getBuiltInPrototypeMethod$g;
      var values$3 = getBuiltInPrototypeMethod$1("Array", "values");
      var parent$5 = values$3;
      var values$2 = parent$5;
      var classof$1 = classof$d;
      var hasOwn$1 = hasOwnProperty_1;
      var isPrototypeOf$1 = objectIsPrototypeOf;
      var method$1 = values$2;
      var ArrayPrototype$1 = Array.prototype;
      var DOMIterables$1 = {
        DOMTokenList: true,
        NodeList: true
      };
      var values$1 = function(it) {
        var own = it.values;
        return it === ArrayPrototype$1 || isPrototypeOf$1(ArrayPrototype$1, it) && own === ArrayPrototype$1.values || hasOwn$1(DOMIterables$1, classof$1(it)) ? method$1 : own;
      };
      var values = values$1;
      var _valuesInstanceProperty = getDefaultExportFromCjs(values);
      var iterator = iterator$4;
      var _Symbol$iterator = getDefaultExportFromCjs(iterator);
      var getBuiltInPrototypeMethod = getBuiltInPrototypeMethod$g;
      var entries$3 = getBuiltInPrototypeMethod("Array", "entries");
      var parent$4 = entries$3;
      var entries$2 = parent$4;
      var classof = classof$d;
      var hasOwn = hasOwnProperty_1;
      var isPrototypeOf = objectIsPrototypeOf;
      var method = entries$2;
      var ArrayPrototype = Array.prototype;
      var DOMIterables = {
        DOMTokenList: true,
        NodeList: true
      };
      var entries$1 = function(it) {
        var own = it.entries;
        return it === ArrayPrototype || isPrototypeOf(ArrayPrototype, it) && own === ArrayPrototype.entries || hasOwn(DOMIterables, classof(it)) ? method : own;
      };
      var entries = entries$1;
      var _entriesInstanceProperty = getDefaultExportFromCjs(entries);
      let getRandomValues;
      const rnds8 = new Uint8Array(16);
      function rng() {
        if (!getRandomValues) {
          getRandomValues = typeof crypto !== "undefined" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);
          if (!getRandomValues) {
            throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
          }
        }
        return getRandomValues(rnds8);
      }
      const byteToHex = [];
      for (let i2 = 0; i2 < 256; ++i2) {
        byteToHex.push((i2 + 256).toString(16).slice(1));
      }
      function unsafeStringify(arr, offset = 0) {
        return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + "-" + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + "-" + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + "-" + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + "-" + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];
      }
      const randomUUID = typeof crypto !== "undefined" && crypto.randomUUID && crypto.randomUUID.bind(crypto);
      var native = {
        randomUUID
      };
      function v4(options, buf, offset) {
        if (native.randomUUID && !buf && !options) {
          return native.randomUUID();
        }
        options = options || {};
        const rnds = options.random || (options.rng || rng)();
        rnds[6] = rnds[6] & 15 | 64;
        rnds[8] = rnds[8] & 63 | 128;
        if (buf) {
          offset = offset || 0;
          for (let i2 = 0; i2 < 16; ++i2) {
            buf[offset + i2] = rnds[i2];
          }
          return buf;
        }
        return unsafeStringify(rnds);
      }
      function isId(value) {
        return typeof value === "string" || typeof value === "number";
      }
      var Queue = function() {
        function Queue2(options) {
          _classCallCheck(this, Queue2);
          _defineProperty(this, "_queue", []);
          _defineProperty(this, "_timeout", null);
          _defineProperty(this, "_extended", null);
          this.delay = null;
          this.max = Infinity;
          this.setOptions(options);
        }
        _createClass(Queue2, [{
          key: "setOptions",
          value: function setOptions(options) {
            if (options && typeof options.delay !== "undefined") {
              this.delay = options.delay;
            }
            if (options && typeof options.max !== "undefined") {
              this.max = options.max;
            }
            this._flushIfNeeded();
          }
          /**
           * Extend an object with queuing functionality.
           * The object will be extended with a function flush, and the methods provided in options.replace will be replaced with queued ones.
           *
           * @param object - The object to be extended.
           * @param options - Additional options.
           * @returns The created queue.
           */
        }, {
          key: "destroy",
          value: (
            /**
             * Destroy the queue. The queue will first flush all queued actions, and in case it has extended an object, will restore the original object.
             */
            function destroy() {
              this.flush();
              if (this._extended) {
                var object = this._extended.object;
                var methods = this._extended.methods;
                for (var i2 = 0; i2 < methods.length; i2++) {
                  var method2 = methods[i2];
                  if (method2.original) {
                    object[method2.name] = method2.original;
                  } else {
                    delete object[method2.name];
                  }
                }
                this._extended = null;
              }
            }
          )
          /**
           * Replace a method on an object with a queued version.
           *
           * @param object - Object having the method.
           * @param method - The method name.
           */
        }, {
          key: "replace",
          value: function replace2(object, method2) {
            var me = this;
            var original = object[method2];
            if (!original) {
              throw new Error("Method " + method2 + " undefined");
            }
            object[method2] = function() {
              for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
              }
              me.queue({
                args,
                fn: original,
                context: this
              });
            };
          }
          /**
           * Queue a call.
           *
           * @param entry - The function or entry to be queued.
           */
        }, {
          key: "queue",
          value: function queue2(entry) {
            if (typeof entry === "function") {
              this._queue.push({
                fn: entry
              });
            } else {
              this._queue.push(entry);
            }
            this._flushIfNeeded();
          }
          /**
           * Check whether the queue needs to be flushed.
           */
        }, {
          key: "_flushIfNeeded",
          value: function _flushIfNeeded() {
            var _this = this;
            if (this._queue.length > this.max) {
              this.flush();
            }
            if (this._timeout != null) {
              clearTimeout(this._timeout);
              this._timeout = null;
            }
            if (this.queue.length > 0 && typeof this.delay === "number") {
              this._timeout = _setTimeout(function() {
                _this.flush();
              }, this.delay);
            }
          }
          /**
           * Flush all queued calls
           */
        }, {
          key: "flush",
          value: function flush2() {
            var _context, _context2;
            _forEachInstanceProperty(_context = _spliceInstanceProperty(_context2 = this._queue).call(_context2, 0)).call(_context, function(entry) {
              entry.fn.apply(entry.context || entry.fn, entry.args || []);
            });
          }
        }], [{
          key: "extend",
          value: function extend2(object, options) {
            var queue2 = new Queue2(options);
            if (object.flush !== void 0) {
              throw new Error("Target object already has a property flush");
            }
            object.flush = function() {
              queue2.flush();
            };
            var methods = [{
              name: "flush",
              original: void 0
            }];
            if (options && options.replace) {
              for (var i2 = 0; i2 < options.replace.length; i2++) {
                var name = options.replace[i2];
                methods.push({
                  name,
                  // @TODO: better solution?
                  original: object[name]
                });
                queue2.replace(object, name);
              }
            }
            queue2._extended = {
              object,
              methods
            };
            return queue2;
          }
        }]);
        return Queue2;
      }();
      var DataSetPart = function() {
        function DataSetPart2() {
          _classCallCheck(this, DataSetPart2);
          _defineProperty(this, "_subscribers", {
            "*": [],
            add: [],
            remove: [],
            update: []
          });
          _defineProperty(this, "subscribe", DataSetPart2.prototype.on);
          _defineProperty(this, "unsubscribe", DataSetPart2.prototype.off);
        }
        _createClass(DataSetPart2, [{
          key: "_trigger",
          value: (
            /**
             * Trigger an event
             *
             * @param event - Event name.
             * @param payload - Event payload.
             * @param senderId - Id of the sender.
             */
            function _trigger(event, payload, senderId) {
              var _context, _context2;
              if (event === "*") {
                throw new Error("Cannot trigger event *");
              }
              _forEachInstanceProperty(_context = _concatInstanceProperty(_context2 = []).call(_context2, _toConsumableArray(this._subscribers[event]), _toConsumableArray(this._subscribers["*"]))).call(_context, function(subscriber) {
                subscriber(event, payload, senderId != null ? senderId : null);
              });
            }
          )
          /**
           * Subscribe to an event, add an event listener.
           *
           * @remarks Non-function callbacks are ignored.
           * @param event - Event name.
           * @param callback - Callback method.
           */
        }, {
          key: "on",
          value: function on(event, callback) {
            if (typeof callback === "function") {
              this._subscribers[event].push(callback);
            }
          }
          /**
           * Unsubscribe from an event, remove an event listener.
           *
           * @remarks If the same callback was subscribed more than once **all** occurences will be removed.
           * @param event - Event name.
           * @param callback - Callback method.
           */
        }, {
          key: "off",
          value: function off(event, callback) {
            var _context3;
            this._subscribers[event] = _filterInstanceProperty(_context3 = this._subscribers[event]).call(_context3, function(subscriber) {
              return subscriber !== callback;
            });
          }
        }]);
        return DataSetPart2;
      }();
      var collection = collection$2;
      var collectionStrong = collectionStrong$2;
      collection("Set", function(init) {
        return function Set() {
          return init(this, arguments.length ? arguments[0] : void 0);
        };
      }, collectionStrong);
      var path = path$o;
      var set$2 = path.Set;
      var parent$3 = set$2;
      var set$1 = parent$3;
      var set = set$1;
      var _Set = getDefaultExportFromCjs(set);
      var getIterator$5 = getIterator$8;
      var getIterator_1 = getIterator$5;
      var parent$2 = getIterator_1;
      var getIterator$4 = parent$2;
      var parent$1 = getIterator$4;
      var getIterator$3 = parent$1;
      var parent = getIterator$3;
      var getIterator$2 = parent;
      var getIterator$1 = getIterator$2;
      var getIterator = getIterator$1;
      var _getIterator = getDefaultExportFromCjs(getIterator);
      function _createForOfIteratorHelper$2(o, allowArrayLike) {
        var it = typeof _Symbol !== "undefined" && _getIteratorMethod(o) || o["@@iterator"];
        if (!it) {
          if (_Array$isArray(o) || (it = _unsupportedIterableToArray$2(o)) || allowArrayLike && o && typeof o.length === "number") {
            if (it) o = it;
            var i2 = 0;
            var F = function F2() {
            };
            return { s: F, n: function n() {
              if (i2 >= o.length) return { done: true };
              return { done: false, value: o[i2++] };
            }, e: function e(_e) {
              throw _e;
            }, f: F };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var normalCompletion = true, didErr = false, err;
        return { s: function s() {
          it = it.call(o);
        }, n: function n() {
          var step = it.next();
          normalCompletion = step.done;
          return step;
        }, e: function e(_e2) {
          didErr = true;
          err = _e2;
        }, f: function f() {
          try {
            if (!normalCompletion && it.return != null) it.return();
          } finally {
            if (didErr) throw err;
          }
        } };
      }
      function _unsupportedIterableToArray$2(o, minLen) {
        var _context10;
        if (!o) return;
        if (typeof o === "string") return _arrayLikeToArray$2(o, minLen);
        var n = _sliceInstanceProperty(_context10 = Object.prototype.toString.call(o)).call(_context10, 8, -1);
        if (n === "Object" && o.constructor) n = o.constructor.name;
        if (n === "Map" || n === "Set") return _Array$from$1(o);
        if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$2(o, minLen);
      }
      function _arrayLikeToArray$2(arr, len) {
        if (len == null || len > arr.length) len = arr.length;
        for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++) arr2[i2] = arr[i2];
        return arr2;
      }
      var DataStream = function(_Symbol$iterator$12) {
        function DataStream2(pairs) {
          _classCallCheck(this, DataStream2);
          this._pairs = pairs;
        }
        _createClass(DataStream2, [{
          key: _Symbol$iterator$12,
          value: _regeneratorRuntime.mark(function value() {
            var _iterator, _step, _step$value, id2, item;
            return _regeneratorRuntime.wrap(function value$(_context) {
              while (1) switch (_context.prev = _context.next) {
                case 0:
                  _iterator = _createForOfIteratorHelper$2(this._pairs);
                  _context.prev = 1;
                  _iterator.s();
                case 3:
                  if ((_step = _iterator.n()).done) {
                    _context.next = 9;
                    break;
                  }
                  _step$value = _slicedToArray(_step.value, 2), id2 = _step$value[0], item = _step$value[1];
                  _context.next = 7;
                  return [id2, item];
                case 7:
                  _context.next = 3;
                  break;
                case 9:
                  _context.next = 14;
                  break;
                case 11:
                  _context.prev = 11;
                  _context.t0 = _context["catch"](1);
                  _iterator.e(_context.t0);
                case 14:
                  _context.prev = 14;
                  _iterator.f();
                  return _context.finish(14);
                case 17:
                case "end":
                  return _context.stop();
              }
            }, value, this, [[1, 11, 14, 17]]);
          })
          /**
           * Return an iterable of key, value pairs for every entry in the stream.
           */
        }, {
          key: "entries",
          value: _regeneratorRuntime.mark(function entries2() {
            var _iterator2, _step2, _step2$value, id2, item;
            return _regeneratorRuntime.wrap(function entries$(_context2) {
              while (1) switch (_context2.prev = _context2.next) {
                case 0:
                  _iterator2 = _createForOfIteratorHelper$2(this._pairs);
                  _context2.prev = 1;
                  _iterator2.s();
                case 3:
                  if ((_step2 = _iterator2.n()).done) {
                    _context2.next = 9;
                    break;
                  }
                  _step2$value = _slicedToArray(_step2.value, 2), id2 = _step2$value[0], item = _step2$value[1];
                  _context2.next = 7;
                  return [id2, item];
                case 7:
                  _context2.next = 3;
                  break;
                case 9:
                  _context2.next = 14;
                  break;
                case 11:
                  _context2.prev = 11;
                  _context2.t0 = _context2["catch"](1);
                  _iterator2.e(_context2.t0);
                case 14:
                  _context2.prev = 14;
                  _iterator2.f();
                  return _context2.finish(14);
                case 17:
                case "end":
                  return _context2.stop();
              }
            }, entries2, this, [[1, 11, 14, 17]]);
          })
          /**
           * Return an iterable of keys in the stream.
           */
        }, {
          key: "keys",
          value: _regeneratorRuntime.mark(function keys2() {
            var _iterator3, _step3, _step3$value, id2;
            return _regeneratorRuntime.wrap(function keys$(_context3) {
              while (1) switch (_context3.prev = _context3.next) {
                case 0:
                  _iterator3 = _createForOfIteratorHelper$2(this._pairs);
                  _context3.prev = 1;
                  _iterator3.s();
                case 3:
                  if ((_step3 = _iterator3.n()).done) {
                    _context3.next = 9;
                    break;
                  }
                  _step3$value = _slicedToArray(_step3.value, 1), id2 = _step3$value[0];
                  _context3.next = 7;
                  return id2;
                case 7:
                  _context3.next = 3;
                  break;
                case 9:
                  _context3.next = 14;
                  break;
                case 11:
                  _context3.prev = 11;
                  _context3.t0 = _context3["catch"](1);
                  _iterator3.e(_context3.t0);
                case 14:
                  _context3.prev = 14;
                  _iterator3.f();
                  return _context3.finish(14);
                case 17:
                case "end":
                  return _context3.stop();
              }
            }, keys2, this, [[1, 11, 14, 17]]);
          })
          /**
           * Return an iterable of values in the stream.
           */
        }, {
          key: "values",
          value: _regeneratorRuntime.mark(function values2() {
            var _iterator4, _step4, _step4$value, item;
            return _regeneratorRuntime.wrap(function values$(_context4) {
              while (1) switch (_context4.prev = _context4.next) {
                case 0:
                  _iterator4 = _createForOfIteratorHelper$2(this._pairs);
                  _context4.prev = 1;
                  _iterator4.s();
                case 3:
                  if ((_step4 = _iterator4.n()).done) {
                    _context4.next = 9;
                    break;
                  }
                  _step4$value = _slicedToArray(_step4.value, 2), item = _step4$value[1];
                  _context4.next = 7;
                  return item;
                case 7:
                  _context4.next = 3;
                  break;
                case 9:
                  _context4.next = 14;
                  break;
                case 11:
                  _context4.prev = 11;
                  _context4.t0 = _context4["catch"](1);
                  _iterator4.e(_context4.t0);
                case 14:
                  _context4.prev = 14;
                  _iterator4.f();
                  return _context4.finish(14);
                case 17:
                case "end":
                  return _context4.stop();
              }
            }, values2, this, [[1, 11, 14, 17]]);
          })
          /**
           * Return an array containing all the ids in this stream.
           *
           * @remarks
           * The array may contain duplicities.
           * @returns The array with all ids from this stream.
           */
        }, {
          key: "toIdArray",
          value: function toIdArray() {
            var _context5;
            return _mapInstanceProperty(_context5 = _toConsumableArray(this._pairs)).call(_context5, function(pair) {
              return pair[0];
            });
          }
          /**
           * Return an array containing all the items in this stream.
           *
           * @remarks
           * The array may contain duplicities.
           * @returns The array with all items from this stream.
           */
        }, {
          key: "toItemArray",
          value: function toItemArray() {
            var _context6;
            return _mapInstanceProperty(_context6 = _toConsumableArray(this._pairs)).call(_context6, function(pair) {
              return pair[1];
            });
          }
          /**
           * Return an array containing all the entries in this stream.
           *
           * @remarks
           * The array may contain duplicities.
           * @returns The array with all entries from this stream.
           */
        }, {
          key: "toEntryArray",
          value: function toEntryArray() {
            return _toConsumableArray(this._pairs);
          }
          /**
           * Return an object map containing all the items in this stream accessible by ids.
           *
           * @remarks
           * In case of duplicate ids (coerced to string so `7 == '7'`) the last encoutered appears in the returned object.
           * @returns The object map of all id → item pairs from this stream.
           */
        }, {
          key: "toObjectMap",
          value: function toObjectMap() {
            var map2 = _Object$create$1(null);
            var _iterator5 = _createForOfIteratorHelper$2(this._pairs), _step5;
            try {
              for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
                var _step5$value = _slicedToArray(_step5.value, 2), id2 = _step5$value[0], item = _step5$value[1];
                map2[id2] = item;
              }
            } catch (err) {
              _iterator5.e(err);
            } finally {
              _iterator5.f();
            }
            return map2;
          }
          /**
           * Return a map containing all the items in this stream accessible by ids.
           *
           * @returns The map of all id → item pairs from this stream.
           */
        }, {
          key: "toMap",
          value: function toMap() {
            return new _Map(this._pairs);
          }
          /**
           * Return a set containing all the (unique) ids in this stream.
           *
           * @returns The set of all ids from this stream.
           */
        }, {
          key: "toIdSet",
          value: function toIdSet() {
            return new _Set(this.toIdArray());
          }
          /**
           * Return a set containing all the (unique) items in this stream.
           *
           * @returns The set of all items from this stream.
           */
        }, {
          key: "toItemSet",
          value: function toItemSet() {
            return new _Set(this.toItemArray());
          }
          /**
           * Cache the items from this stream.
           *
           * @remarks
           * This method allows for items to be fetched immediatelly and used (possibly multiple times) later.
           * It can also be used to optimize performance as {@link DataStream} would otherwise reevaluate everything upon each iteration.
           *
           * ## Example
           * ```javascript
           * const ds = new DataSet([…])
           *
           * const cachedStream = ds.stream()
           *   .filter(…)
           *   .sort(…)
           *   .map(…)
           *   .cached(…) // Data are fetched, processed and cached here.
           *
           * ds.clear()
           * chachedStream // Still has all the items.
           * ```
           * @returns A new {@link DataStream} with cached items (detached from the original {@link DataSet}).
           */
        }, {
          key: "cache",
          value: function cache() {
            return new DataStream2(_toConsumableArray(this._pairs));
          }
          /**
           * Get the distinct values of given property.
           *
           * @param callback - The function that picks and possibly converts the property.
           * @typeParam T - The type of the distinct value.
           * @returns A set of all distinct properties.
           */
        }, {
          key: "distinct",
          value: function distinct(callback) {
            var set2 = new _Set();
            var _iterator6 = _createForOfIteratorHelper$2(this._pairs), _step6;
            try {
              for (_iterator6.s(); !(_step6 = _iterator6.n()).done; ) {
                var _step6$value = _slicedToArray(_step6.value, 2), id2 = _step6$value[0], item = _step6$value[1];
                set2.add(callback(item, id2));
              }
            } catch (err) {
              _iterator6.e(err);
            } finally {
              _iterator6.f();
            }
            return set2;
          }
          /**
           * Filter the items of the stream.
           *
           * @param callback - The function that decides whether an item will be included.
           * @returns A new data stream with the filtered items.
           */
        }, {
          key: "filter",
          value: function filter2(callback) {
            var pairs = this._pairs;
            return new DataStream2({
              [_Symbol$iterator]() {
                return _regeneratorRuntime.mark(function _callee() {
                  var _iterator7, _step7, _step7$value, id2, item;
                  return _regeneratorRuntime.wrap(function _callee$(_context7) {
                    while (1) switch (_context7.prev = _context7.next) {
                      case 0:
                        _iterator7 = _createForOfIteratorHelper$2(pairs);
                        _context7.prev = 1;
                        _iterator7.s();
                      case 3:
                        if ((_step7 = _iterator7.n()).done) {
                          _context7.next = 10;
                          break;
                        }
                        _step7$value = _slicedToArray(_step7.value, 2), id2 = _step7$value[0], item = _step7$value[1];
                        if (!callback(item, id2)) {
                          _context7.next = 8;
                          break;
                        }
                        _context7.next = 8;
                        return [id2, item];
                      case 8:
                        _context7.next = 3;
                        break;
                      case 10:
                        _context7.next = 15;
                        break;
                      case 12:
                        _context7.prev = 12;
                        _context7.t0 = _context7["catch"](1);
                        _iterator7.e(_context7.t0);
                      case 15:
                        _context7.prev = 15;
                        _iterator7.f();
                        return _context7.finish(15);
                      case 18:
                      case "end":
                        return _context7.stop();
                    }
                  }, _callee, null, [[1, 12, 15, 18]]);
                })();
              }
            });
          }
          /**
           * Execute a callback for each item of the stream.
           *
           * @param callback - The function that will be invoked for each item.
           */
        }, {
          key: "forEach",
          value: function forEach2(callback) {
            var _iterator8 = _createForOfIteratorHelper$2(this._pairs), _step8;
            try {
              for (_iterator8.s(); !(_step8 = _iterator8.n()).done; ) {
                var _step8$value = _slicedToArray(_step8.value, 2), id2 = _step8$value[0], item = _step8$value[1];
                callback(item, id2);
              }
            } catch (err) {
              _iterator8.e(err);
            } finally {
              _iterator8.f();
            }
          }
          /**
           * Map the items into a different type.
           *
           * @param callback - The function that does the conversion.
           * @typeParam Mapped - The type of the item after mapping.
           * @returns A new data stream with the mapped items.
           */
        }, {
          key: "map",
          value: function map2(callback) {
            var pairs = this._pairs;
            return new DataStream2({
              [_Symbol$iterator]() {
                return _regeneratorRuntime.mark(function _callee2() {
                  var _iterator9, _step9, _step9$value, id2, item;
                  return _regeneratorRuntime.wrap(function _callee2$(_context8) {
                    while (1) switch (_context8.prev = _context8.next) {
                      case 0:
                        _iterator9 = _createForOfIteratorHelper$2(pairs);
                        _context8.prev = 1;
                        _iterator9.s();
                      case 3:
                        if ((_step9 = _iterator9.n()).done) {
                          _context8.next = 9;
                          break;
                        }
                        _step9$value = _slicedToArray(_step9.value, 2), id2 = _step9$value[0], item = _step9$value[1];
                        _context8.next = 7;
                        return [id2, callback(item, id2)];
                      case 7:
                        _context8.next = 3;
                        break;
                      case 9:
                        _context8.next = 14;
                        break;
                      case 11:
                        _context8.prev = 11;
                        _context8.t0 = _context8["catch"](1);
                        _iterator9.e(_context8.t0);
                      case 14:
                        _context8.prev = 14;
                        _iterator9.f();
                        return _context8.finish(14);
                      case 17:
                      case "end":
                        return _context8.stop();
                    }
                  }, _callee2, null, [[1, 11, 14, 17]]);
                })();
              }
            });
          }
          /**
           * Get the item with the maximum value of given property.
           *
           * @param callback - The function that picks and possibly converts the property.
           * @returns The item with the maximum if found otherwise null.
           */
        }, {
          key: "max",
          value: function max2(callback) {
            var iter = _getIterator(this._pairs);
            var curr = iter.next();
            if (curr.done) {
              return null;
            }
            var maxItem = curr.value[1];
            var maxValue = callback(curr.value[1], curr.value[0]);
            while (!(curr = iter.next()).done) {
              var _curr$value = _slicedToArray(curr.value, 2), id2 = _curr$value[0], item = _curr$value[1];
              var _value = callback(item, id2);
              if (_value > maxValue) {
                maxValue = _value;
                maxItem = item;
              }
            }
            return maxItem;
          }
          /**
           * Get the item with the minimum value of given property.
           *
           * @param callback - The function that picks and possibly converts the property.
           * @returns The item with the minimum if found otherwise null.
           */
        }, {
          key: "min",
          value: function min2(callback) {
            var iter = _getIterator(this._pairs);
            var curr = iter.next();
            if (curr.done) {
              return null;
            }
            var minItem = curr.value[1];
            var minValue = callback(curr.value[1], curr.value[0]);
            while (!(curr = iter.next()).done) {
              var _curr$value2 = _slicedToArray(curr.value, 2), id2 = _curr$value2[0], item = _curr$value2[1];
              var _value2 = callback(item, id2);
              if (_value2 < minValue) {
                minValue = _value2;
                minItem = item;
              }
            }
            return minItem;
          }
          /**
           * Reduce the items into a single value.
           *
           * @param callback - The function that does the reduction.
           * @param accumulator - The initial value of the accumulator.
           * @typeParam T - The type of the accumulated value.
           * @returns The reduced value.
           */
        }, {
          key: "reduce",
          value: function reduce2(callback, accumulator) {
            var _iterator10 = _createForOfIteratorHelper$2(this._pairs), _step10;
            try {
              for (_iterator10.s(); !(_step10 = _iterator10.n()).done; ) {
                var _step10$value = _slicedToArray(_step10.value, 2), id2 = _step10$value[0], item = _step10$value[1];
                accumulator = callback(accumulator, item, id2);
              }
            } catch (err) {
              _iterator10.e(err);
            } finally {
              _iterator10.f();
            }
            return accumulator;
          }
          /**
           * Sort the items.
           *
           * @param callback - Item comparator.
           * @returns A new stream with sorted items.
           */
        }, {
          key: "sort",
          value: function sort2(callback) {
            var _this = this;
            return new DataStream2({
              [_Symbol$iterator]: function() {
                var _context9;
                return _getIterator(_sortInstanceProperty(_context9 = _toConsumableArray(_this._pairs)).call(_context9, function(_ref, _ref2) {
                  var _ref3 = _slicedToArray(_ref, 2), idA = _ref3[0], itemA = _ref3[1];
                  var _ref4 = _slicedToArray(_ref2, 2), idB = _ref4[0], itemB = _ref4[1];
                  return callback(itemA, itemB, idA, idB);
                }));
              }
            });
          }
        }]);
        return DataStream2;
      }(_Symbol$iterator);
      function ownKeys(e, r) {
        var t = _Object$keys(e);
        if (_Object$getOwnPropertySymbols) {
          var o = _Object$getOwnPropertySymbols(e);
          r && (o = _filterInstanceProperty(o).call(o, function(r2) {
            return _Object$getOwnPropertyDescriptor(e, r2).enumerable;
          })), t.push.apply(t, o);
        }
        return t;
      }
      function _objectSpread(e) {
        for (var r = 1; r < arguments.length; r++) {
          var _context10, _context11;
          var t = null != arguments[r] ? arguments[r] : {};
          r % 2 ? _forEachInstanceProperty(_context10 = ownKeys(Object(t), true)).call(_context10, function(r2) {
            _defineProperty(e, r2, t[r2]);
          }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(e, _Object$getOwnPropertyDescriptors(t)) : _forEachInstanceProperty(_context11 = ownKeys(Object(t))).call(_context11, function(r2) {
            _Object$defineProperty(e, r2, _Object$getOwnPropertyDescriptor(t, r2));
          });
        }
        return e;
      }
      function _createForOfIteratorHelper$1(o, allowArrayLike) {
        var it = typeof _Symbol !== "undefined" && _getIteratorMethod(o) || o["@@iterator"];
        if (!it) {
          if (_Array$isArray(o) || (it = _unsupportedIterableToArray$1(o)) || allowArrayLike && o && typeof o.length === "number") {
            if (it) o = it;
            var i2 = 0;
            var F = function F2() {
            };
            return { s: F, n: function n() {
              if (i2 >= o.length) return { done: true };
              return { done: false, value: o[i2++] };
            }, e: function e(_e) {
              throw _e;
            }, f: F };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var normalCompletion = true, didErr = false, err;
        return { s: function s() {
          it = it.call(o);
        }, n: function n() {
          var step = it.next();
          normalCompletion = step.done;
          return step;
        }, e: function e(_e2) {
          didErr = true;
          err = _e2;
        }, f: function f() {
          try {
            if (!normalCompletion && it.return != null) it.return();
          } finally {
            if (didErr) throw err;
          }
        } };
      }
      function _unsupportedIterableToArray$1(o, minLen) {
        var _context9;
        if (!o) return;
        if (typeof o === "string") return _arrayLikeToArray$1(o, minLen);
        var n = _sliceInstanceProperty(_context9 = Object.prototype.toString.call(o)).call(_context9, 8, -1);
        if (n === "Object" && o.constructor) n = o.constructor.name;
        if (n === "Map" || n === "Set") return _Array$from$1(o);
        if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$1(o, minLen);
      }
      function _arrayLikeToArray$1(arr, len) {
        if (len == null || len > arr.length) len = arr.length;
        for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++) arr2[i2] = arr[i2];
        return arr2;
      }
      function _createSuper$1(Derived) {
        var hasNativeReflectConstruct = _isNativeReflectConstruct$1();
        return function _createSuperInternal() {
          var Super = _getPrototypeOf(Derived), result;
          if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = _Reflect$construct(Super, arguments, NewTarget);
          } else {
            result = Super.apply(this, arguments);
          }
          return _possibleConstructorReturn(this, result);
        };
      }
      function _isNativeReflectConstruct$1() {
        if (typeof Reflect === "undefined" || !_Reflect$construct) return false;
        if (_Reflect$construct.sham) return false;
        if (typeof Proxy === "function") return true;
        try {
          Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function() {
          }));
          return true;
        } catch (e) {
          return false;
        }
      }
      function ensureFullItem(item, idProp) {
        if (item[idProp] == null) {
          item[idProp] = v4();
        }
        return item;
      }
      var DataSet = function(_DataSetPart) {
        _inherits(DataSet2, _DataSetPart);
        var _super = _createSuper$1(DataSet2);
        function DataSet2(data2, options) {
          var _this;
          _classCallCheck(this, DataSet2);
          _this = _super.call(this);
          _defineProperty(_assertThisInitialized(_this), "_queue", null);
          if (data2 && !_Array$isArray(data2)) {
            options = data2;
            data2 = [];
          }
          _this._options = options || {};
          _this._data = new _Map();
          _this.length = 0;
          _this._idProp = _this._options.fieldId || "id";
          if (data2 && data2.length) {
            _this.add(data2);
          }
          _this.setOptions(options);
          return _this;
        }
        _createClass(DataSet2, [{
          key: "idProp",
          get: (
            /** Flush all queued calls. */
            /** @inheritDoc */
            /** @inheritDoc */
            function get2() {
              return this._idProp;
            }
          )
        }, {
          key: "setOptions",
          value: function setOptions(options) {
            if (options && options.queue !== void 0) {
              if (options.queue === false) {
                if (this._queue) {
                  this._queue.destroy();
                  this._queue = null;
                }
              } else {
                if (!this._queue) {
                  this._queue = Queue.extend(this, {
                    replace: ["add", "update", "remove"]
                  });
                }
                if (options.queue && typeof options.queue === "object") {
                  this._queue.setOptions(options.queue);
                }
              }
            }
          }
          /**
           * Add a data item or an array with items.
           *
           * After the items are added to the DataSet, the DataSet will trigger an event `add`. When a `senderId` is provided, this id will be passed with the triggered event to all subscribers.
           *
           * ## Example
           *
           * ```javascript
           * // create a DataSet
           * const data = new vis.DataSet()
           *
           * // add items
           * const ids = data.add([
           *   { id: 1, text: 'item 1' },
           *   { id: 2, text: 'item 2' },
           *   { text: 'item without an id' }
           * ])
           *
           * console.log(ids) // [1, 2, '<UUIDv4>']
           * ```
           *
           * @param data - Items to be added (ids will be generated if missing).
           * @param senderId - Sender id.
           * @returns addedIds - Array with the ids (generated if not present) of the added items.
           * @throws When an item with the same id as any of the added items already exists.
           */
        }, {
          key: "add",
          value: function add(data2, senderId) {
            var _this2 = this;
            var addedIds = [];
            var id2;
            if (_Array$isArray(data2)) {
              var idsToAdd = _mapInstanceProperty(data2).call(data2, function(d) {
                return d[_this2._idProp];
              });
              if (_someInstanceProperty(idsToAdd).call(idsToAdd, function(id3) {
                return _this2._data.has(id3);
              })) {
                throw new Error("A duplicate id was found in the parameter array.");
              }
              for (var i2 = 0, len = data2.length; i2 < len; i2++) {
                id2 = this._addItem(data2[i2]);
                addedIds.push(id2);
              }
            } else if (data2 && typeof data2 === "object") {
              id2 = this._addItem(data2);
              addedIds.push(id2);
            } else {
              throw new Error("Unknown dataType");
            }
            if (addedIds.length) {
              this._trigger("add", {
                items: addedIds
              }, senderId);
            }
            return addedIds;
          }
          /**
           * Update existing items. When an item does not exist, it will be created.
           *
           * @remarks
           * The provided properties will be merged in the existing item. When an item does not exist, it will be created.
           *
           * After the items are updated, the DataSet will trigger an event `add` for the added items, and an event `update`. When a `senderId` is provided, this id will be passed with the triggered event to all subscribers.
           *
           * ## Example
           *
           * ```javascript
           * // create a DataSet
           * const data = new vis.DataSet([
           *   { id: 1, text: 'item 1' },
           *   { id: 2, text: 'item 2' },
           *   { id: 3, text: 'item 3' }
           * ])
           *
           * // update items
           * const ids = data.update([
           *   { id: 2, text: 'item 2 (updated)' },
           *   { id: 4, text: 'item 4 (new)' }
           * ])
           *
           * console.log(ids) // [2, 4]
           * ```
           *
           * ## Warning for TypeScript users
           * This method may introduce partial items into the data set. Use add or updateOnly instead for better type safety.
           * @param data - Items to be updated (if the id is already present) or added (if the id is missing).
           * @param senderId - Sender id.
           * @returns updatedIds - The ids of the added (these may be newly generated if there was no id in the item from the data) or updated items.
           * @throws When the supplied data is neither an item nor an array of items.
           */
        }, {
          key: "update",
          value: function update(data2, senderId) {
            var _this3 = this;
            var addedIds = [];
            var updatedIds = [];
            var oldData = [];
            var updatedData = [];
            var idProp = this._idProp;
            var addOrUpdate = function addOrUpdate2(item) {
              var origId = item[idProp];
              if (origId != null && _this3._data.has(origId)) {
                var fullItem = item;
                var oldItem = _Object$assign({}, _this3._data.get(origId));
                var id2 = _this3._updateItem(fullItem);
                updatedIds.push(id2);
                updatedData.push(fullItem);
                oldData.push(oldItem);
              } else {
                var _id = _this3._addItem(item);
                addedIds.push(_id);
              }
            };
            if (_Array$isArray(data2)) {
              for (var i2 = 0, len = data2.length; i2 < len; i2++) {
                if (data2[i2] && typeof data2[i2] === "object") {
                  addOrUpdate(data2[i2]);
                } else {
                  console.warn("Ignoring input item, which is not an object at index " + i2);
                }
              }
            } else if (data2 && typeof data2 === "object") {
              addOrUpdate(data2);
            } else {
              throw new Error("Unknown dataType");
            }
            if (addedIds.length) {
              this._trigger("add", {
                items: addedIds
              }, senderId);
            }
            if (updatedIds.length) {
              var props = {
                items: updatedIds,
                oldData,
                data: updatedData
              };
              this._trigger("update", props, senderId);
            }
            return _concatInstanceProperty(addedIds).call(addedIds, updatedIds);
          }
          /**
           * Update existing items. When an item does not exist, an error will be thrown.
           *
           * @remarks
           * The provided properties will be deeply merged into the existing item.
           * When an item does not exist (id not present in the data set or absent), an error will be thrown and nothing will be changed.
           *
           * After the items are updated, the DataSet will trigger an event `update`.
           * When a `senderId` is provided, this id will be passed with the triggered event to all subscribers.
           *
           * ## Example
           *
           * ```javascript
           * // create a DataSet
           * const data = new vis.DataSet([
           *   { id: 1, text: 'item 1' },
           *   { id: 2, text: 'item 2' },
           *   { id: 3, text: 'item 3' },
           * ])
           *
           * // update items
           * const ids = data.update([
           *   { id: 2, text: 'item 2 (updated)' }, // works
           *   // { id: 4, text: 'item 4 (new)' }, // would throw
           *   // { text: 'item 4 (new)' }, // would also throw
           * ])
           *
           * console.log(ids) // [2]
           * ```
           * @param data - Updates (the id and optionally other props) to the items in this data set.
           * @param senderId - Sender id.
           * @returns updatedIds - The ids of the updated items.
           * @throws When the supplied data is neither an item nor an array of items, when the ids are missing.
           */
        }, {
          key: "updateOnly",
          value: function updateOnly(data2, senderId) {
            var _context, _this4 = this;
            if (!_Array$isArray(data2)) {
              data2 = [data2];
            }
            var updateEventData = _mapInstanceProperty(_context = _mapInstanceProperty(data2).call(data2, function(update) {
              var oldData = _this4._data.get(update[_this4._idProp]);
              if (oldData == null) {
                throw new Error("Updating non-existent items is not allowed.");
              }
              return {
                oldData,
                update
              };
            })).call(_context, function(_ref) {
              var oldData = _ref.oldData, update = _ref.update;
              var id2 = oldData[_this4._idProp];
              var updatedData = pureDeepObjectAssign(oldData, update);
              _this4._data.set(id2, updatedData);
              return {
                id: id2,
                oldData,
                updatedData
              };
            });
            if (updateEventData.length) {
              var props = {
                items: _mapInstanceProperty(updateEventData).call(updateEventData, function(value) {
                  return value.id;
                }),
                oldData: _mapInstanceProperty(updateEventData).call(updateEventData, function(value) {
                  return value.oldData;
                }),
                data: _mapInstanceProperty(updateEventData).call(updateEventData, function(value) {
                  return value.updatedData;
                })
              };
              this._trigger("update", props, senderId);
              return props.items;
            } else {
              return [];
            }
          }
          /** @inheritDoc */
        }, {
          key: "get",
          value: function get2(first, second) {
            var id2 = void 0;
            var ids = void 0;
            var options = void 0;
            if (isId(first)) {
              id2 = first;
              options = second;
            } else if (_Array$isArray(first)) {
              ids = first;
              options = second;
            } else {
              options = first;
            }
            var returnType = options && options.returnType === "Object" ? "Object" : "Array";
            var filter2 = options && _filterInstanceProperty(options);
            var items = [];
            var item = void 0;
            var itemIds = void 0;
            var itemId = void 0;
            if (id2 != null) {
              item = this._data.get(id2);
              if (item && filter2 && !filter2(item)) {
                item = void 0;
              }
            } else if (ids != null) {
              for (var i2 = 0, len = ids.length; i2 < len; i2++) {
                item = this._data.get(ids[i2]);
                if (item != null && (!filter2 || filter2(item))) {
                  items.push(item);
                }
              }
            } else {
              var _context2;
              itemIds = _toConsumableArray(_keysInstanceProperty(_context2 = this._data).call(_context2));
              for (var _i = 0, _len = itemIds.length; _i < _len; _i++) {
                itemId = itemIds[_i];
                item = this._data.get(itemId);
                if (item != null && (!filter2 || filter2(item))) {
                  items.push(item);
                }
              }
            }
            if (options && options.order && id2 == void 0) {
              this._sort(items, options.order);
            }
            if (options && options.fields) {
              var fields = options.fields;
              if (id2 != void 0 && item != null) {
                item = this._filterFields(item, fields);
              } else {
                for (var _i2 = 0, _len2 = items.length; _i2 < _len2; _i2++) {
                  items[_i2] = this._filterFields(items[_i2], fields);
                }
              }
            }
            if (returnType == "Object") {
              var result = {};
              for (var _i3 = 0, _len3 = items.length; _i3 < _len3; _i3++) {
                var resultant = items[_i3];
                var _id2 = resultant[this._idProp];
                result[_id2] = resultant;
              }
              return result;
            } else {
              if (id2 != null) {
                var _item;
                return (_item = item) !== null && _item !== void 0 ? _item : null;
              } else {
                return items;
              }
            }
          }
          /** @inheritDoc */
        }, {
          key: "getIds",
          value: function getIds(options) {
            var data2 = this._data;
            var filter2 = options && _filterInstanceProperty(options);
            var order = options && options.order;
            var itemIds = _toConsumableArray(_keysInstanceProperty(data2).call(data2));
            var ids = [];
            if (filter2) {
              if (order) {
                var items = [];
                for (var i2 = 0, len = itemIds.length; i2 < len; i2++) {
                  var id2 = itemIds[i2];
                  var item = this._data.get(id2);
                  if (item != null && filter2(item)) {
                    items.push(item);
                  }
                }
                this._sort(items, order);
                for (var _i4 = 0, _len4 = items.length; _i4 < _len4; _i4++) {
                  ids.push(items[_i4][this._idProp]);
                }
              } else {
                for (var _i5 = 0, _len5 = itemIds.length; _i5 < _len5; _i5++) {
                  var _id3 = itemIds[_i5];
                  var _item2 = this._data.get(_id3);
                  if (_item2 != null && filter2(_item2)) {
                    ids.push(_item2[this._idProp]);
                  }
                }
              }
            } else {
              if (order) {
                var _items = [];
                for (var _i6 = 0, _len6 = itemIds.length; _i6 < _len6; _i6++) {
                  var _id4 = itemIds[_i6];
                  _items.push(data2.get(_id4));
                }
                this._sort(_items, order);
                for (var _i7 = 0, _len7 = _items.length; _i7 < _len7; _i7++) {
                  ids.push(_items[_i7][this._idProp]);
                }
              } else {
                for (var _i8 = 0, _len8 = itemIds.length; _i8 < _len8; _i8++) {
                  var _id5 = itemIds[_i8];
                  var _item3 = data2.get(_id5);
                  if (_item3 != null) {
                    ids.push(_item3[this._idProp]);
                  }
                }
              }
            }
            return ids;
          }
          /** @inheritDoc */
        }, {
          key: "getDataSet",
          value: function getDataSet() {
            return this;
          }
          /** @inheritDoc */
        }, {
          key: "forEach",
          value: function forEach2(callback, options) {
            var filter2 = options && _filterInstanceProperty(options);
            var data2 = this._data;
            var itemIds = _toConsumableArray(_keysInstanceProperty(data2).call(data2));
            if (options && options.order) {
              var items = this.get(options);
              for (var i2 = 0, len = items.length; i2 < len; i2++) {
                var item = items[i2];
                var id2 = item[this._idProp];
                callback(item, id2);
              }
            } else {
              for (var _i9 = 0, _len9 = itemIds.length; _i9 < _len9; _i9++) {
                var _id6 = itemIds[_i9];
                var _item4 = this._data.get(_id6);
                if (_item4 != null && (!filter2 || filter2(_item4))) {
                  callback(_item4, _id6);
                }
              }
            }
          }
          /** @inheritDoc */
        }, {
          key: "map",
          value: function map2(callback, options) {
            var filter2 = options && _filterInstanceProperty(options);
            var mappedItems = [];
            var data2 = this._data;
            var itemIds = _toConsumableArray(_keysInstanceProperty(data2).call(data2));
            for (var i2 = 0, len = itemIds.length; i2 < len; i2++) {
              var id2 = itemIds[i2];
              var item = this._data.get(id2);
              if (item != null && (!filter2 || filter2(item))) {
                mappedItems.push(callback(item, id2));
              }
            }
            if (options && options.order) {
              this._sort(mappedItems, options.order);
            }
            return mappedItems;
          }
          /**
           * Filter the fields of an item.
           *
           * @param item - The item whose fields should be filtered.
           * @param fields - The names of the fields that will be kept.
           * @typeParam K - Field name type.
           * @returns The item without any additional fields.
           */
        }, {
          key: "_filterFields",
          value: function _filterFields(item, fields) {
            var _context3;
            if (!item) {
              return item;
            }
            return _reduceInstanceProperty(_context3 = _Array$isArray(fields) ? (
              // Use the supplied array
              fields
            ) : (
              // Use the keys of the supplied object
              _Object$keys(fields)
            )).call(_context3, function(filteredItem, field) {
              filteredItem[field] = item[field];
              return filteredItem;
            }, {});
          }
          /**
           * Sort the provided array with items.
           *
           * @param items - Items to be sorted in place.
           * @param order - A field name or custom sort function.
           * @typeParam T - The type of the items in the items array.
           */
        }, {
          key: "_sort",
          value: function _sort(items, order) {
            if (typeof order === "string") {
              var name = order;
              _sortInstanceProperty(items).call(items, function(a, b) {
                var av = a[name];
                var bv = b[name];
                return av > bv ? 1 : av < bv ? -1 : 0;
              });
            } else if (typeof order === "function") {
              _sortInstanceProperty(items).call(items, order);
            } else {
              throw new TypeError("Order must be a function or a string");
            }
          }
          /**
           * Remove an item or multiple items by “reference” (only the id is used) or by id.
           *
           * The method ignores removal of non-existing items, and returns an array containing the ids of the items which are actually removed from the DataSet.
           *
           * After the items are removed, the DataSet will trigger an event `remove` for the removed items. When a `senderId` is provided, this id will be passed with the triggered event to all subscribers.
           *
           * ## Example
           * ```javascript
           * // create a DataSet
           * const data = new vis.DataSet([
           *   { id: 1, text: 'item 1' },
           *   { id: 2, text: 'item 2' },
           *   { id: 3, text: 'item 3' }
           * ])
           *
           * // remove items
           * const ids = data.remove([2, { id: 3 }, 4])
           *
           * console.log(ids) // [2, 3]
           * ```
           *
           * @param id - One or more items or ids of items to be removed.
           * @param senderId - Sender id.
           * @returns The ids of the removed items.
           */
        }, {
          key: "remove",
          value: function remove(id2, senderId) {
            var removedIds = [];
            var removedItems = [];
            var ids = _Array$isArray(id2) ? id2 : [id2];
            for (var i2 = 0, len = ids.length; i2 < len; i2++) {
              var item = this._remove(ids[i2]);
              if (item) {
                var itemId = item[this._idProp];
                if (itemId != null) {
                  removedIds.push(itemId);
                  removedItems.push(item);
                }
              }
            }
            if (removedIds.length) {
              this._trigger("remove", {
                items: removedIds,
                oldData: removedItems
              }, senderId);
            }
            return removedIds;
          }
          /**
           * Remove an item by its id or reference.
           *
           * @param id - Id of an item or the item itself.
           * @returns The removed item if removed, null otherwise.
           */
        }, {
          key: "_remove",
          value: function _remove(id2) {
            var ident;
            if (isId(id2)) {
              ident = id2;
            } else if (id2 && typeof id2 === "object") {
              ident = id2[this._idProp];
            }
            if (ident != null && this._data.has(ident)) {
              var item = this._data.get(ident) || null;
              this._data.delete(ident);
              --this.length;
              return item;
            }
            return null;
          }
          /**
           * Clear the entire data set.
           *
           * After the items are removed, the {@link DataSet} will trigger an event `remove` for all removed items. When a `senderId` is provided, this id will be passed with the triggered event to all subscribers.
           *
           * @param senderId - Sender id.
           * @returns removedIds - The ids of all removed items.
           */
        }, {
          key: "clear",
          value: function clear2(senderId) {
            var _context4;
            var ids = _toConsumableArray(_keysInstanceProperty(_context4 = this._data).call(_context4));
            var items = [];
            for (var i2 = 0, len = ids.length; i2 < len; i2++) {
              items.push(this._data.get(ids[i2]));
            }
            this._data.clear();
            this.length = 0;
            this._trigger("remove", {
              items: ids,
              oldData: items
            }, senderId);
            return ids;
          }
          /**
           * Find the item with maximum value of a specified field.
           *
           * @param field - Name of the property that should be searched for max value.
           * @returns Item containing max value, or null if no items.
           */
        }, {
          key: "max",
          value: function max2(field) {
            var _context5;
            var max3 = null;
            var maxField = null;
            var _iterator = _createForOfIteratorHelper$1(_valuesInstanceProperty(_context5 = this._data).call(_context5)), _step;
            try {
              for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                var item = _step.value;
                var itemField = item[field];
                if (typeof itemField === "number" && (maxField == null || itemField > maxField)) {
                  max3 = item;
                  maxField = itemField;
                }
              }
            } catch (err) {
              _iterator.e(err);
            } finally {
              _iterator.f();
            }
            return max3 || null;
          }
          /**
           * Find the item with minimum value of a specified field.
           *
           * @param field - Name of the property that should be searched for min value.
           * @returns Item containing min value, or null if no items.
           */
        }, {
          key: "min",
          value: function min2(field) {
            var _context6;
            var min3 = null;
            var minField = null;
            var _iterator2 = _createForOfIteratorHelper$1(_valuesInstanceProperty(_context6 = this._data).call(_context6)), _step2;
            try {
              for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
                var item = _step2.value;
                var itemField = item[field];
                if (typeof itemField === "number" && (minField == null || itemField < minField)) {
                  min3 = item;
                  minField = itemField;
                }
              }
            } catch (err) {
              _iterator2.e(err);
            } finally {
              _iterator2.f();
            }
            return min3 || null;
          }
          /**
           * Find all distinct values of a specified field
           *
           * @param prop - The property name whose distinct values should be returned.
           * @returns Unordered array containing all distinct values. Items without specified property are ignored.
           */
        }, {
          key: "distinct",
          value: function distinct(prop) {
            var data2 = this._data;
            var itemIds = _toConsumableArray(_keysInstanceProperty(data2).call(data2));
            var values2 = [];
            var count = 0;
            for (var i2 = 0, len = itemIds.length; i2 < len; i2++) {
              var id2 = itemIds[i2];
              var item = data2.get(id2);
              var value = item[prop];
              var exists = false;
              for (var j = 0; j < count; j++) {
                if (values2[j] == value) {
                  exists = true;
                  break;
                }
              }
              if (!exists && value !== void 0) {
                values2[count] = value;
                count++;
              }
            }
            return values2;
          }
          /**
           * Add a single item. Will fail when an item with the same id already exists.
           *
           * @param item - A new item to be added.
           * @returns Added item's id. An id is generated when it is not present in the item.
           */
        }, {
          key: "_addItem",
          value: function _addItem(item) {
            var fullItem = ensureFullItem(item, this._idProp);
            var id2 = fullItem[this._idProp];
            if (this._data.has(id2)) {
              throw new Error("Cannot add item: item with id " + id2 + " already exists");
            }
            this._data.set(id2, fullItem);
            ++this.length;
            return id2;
          }
          /**
           * Update a single item: merge with existing item.
           * Will fail when the item has no id, or when there does not exist an item with the same id.
           *
           * @param update - The new item
           * @returns The id of the updated item.
           */
        }, {
          key: "_updateItem",
          value: function _updateItem(update) {
            var id2 = update[this._idProp];
            if (id2 == null) {
              throw new Error("Cannot update item: item has no id (item: " + _JSON$stringify(update) + ")");
            }
            var item = this._data.get(id2);
            if (!item) {
              throw new Error("Cannot update item: no item with id " + id2 + " found");
            }
            this._data.set(id2, _objectSpread(_objectSpread({}, item), update));
            return id2;
          }
          /** @inheritDoc */
        }, {
          key: "stream",
          value: function stream(ids) {
            if (ids) {
              var data2 = this._data;
              return new DataStream({
                [_Symbol$iterator]() {
                  return _regeneratorRuntime.mark(function _callee() {
                    var _iterator3, _step3, id2, item;
                    return _regeneratorRuntime.wrap(function _callee$(_context7) {
                      while (1) switch (_context7.prev = _context7.next) {
                        case 0:
                          _iterator3 = _createForOfIteratorHelper$1(ids);
                          _context7.prev = 1;
                          _iterator3.s();
                        case 3:
                          if ((_step3 = _iterator3.n()).done) {
                            _context7.next = 11;
                            break;
                          }
                          id2 = _step3.value;
                          item = data2.get(id2);
                          if (!(item != null)) {
                            _context7.next = 9;
                            break;
                          }
                          _context7.next = 9;
                          return [id2, item];
                        case 9:
                          _context7.next = 3;
                          break;
                        case 11:
                          _context7.next = 16;
                          break;
                        case 13:
                          _context7.prev = 13;
                          _context7.t0 = _context7["catch"](1);
                          _iterator3.e(_context7.t0);
                        case 16:
                          _context7.prev = 16;
                          _iterator3.f();
                          return _context7.finish(16);
                        case 19:
                        case "end":
                          return _context7.stop();
                      }
                    }, _callee, null, [[1, 13, 16, 19]]);
                  })();
                }
              });
            } else {
              var _context8;
              return new DataStream({
                [_Symbol$iterator]: _bindInstanceProperty$1(_context8 = _entriesInstanceProperty(this._data)).call(_context8, this._data)
              });
            }
          }
        }]);
        return DataSet2;
      }(DataSetPart);
      function _createForOfIteratorHelper(o, allowArrayLike) {
        var it = typeof _Symbol !== "undefined" && _getIteratorMethod(o) || o["@@iterator"];
        if (!it) {
          if (_Array$isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
            if (it) o = it;
            var i2 = 0;
            var F = function F2() {
            };
            return { s: F, n: function n() {
              if (i2 >= o.length) return { done: true };
              return { done: false, value: o[i2++] };
            }, e: function e(_e) {
              throw _e;
            }, f: F };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var normalCompletion = true, didErr = false, err;
        return { s: function s() {
          it = it.call(o);
        }, n: function n() {
          var step = it.next();
          normalCompletion = step.done;
          return step;
        }, e: function e(_e2) {
          didErr = true;
          err = _e2;
        }, f: function f() {
          try {
            if (!normalCompletion && it.return != null) it.return();
          } finally {
            if (didErr) throw err;
          }
        } };
      }
      function _unsupportedIterableToArray(o, minLen) {
        var _context5;
        if (!o) return;
        if (typeof o === "string") return _arrayLikeToArray(o, minLen);
        var n = _sliceInstanceProperty(_context5 = Object.prototype.toString.call(o)).call(_context5, 8, -1);
        if (n === "Object" && o.constructor) n = o.constructor.name;
        if (n === "Map" || n === "Set") return _Array$from$1(o);
        if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
      }
      function _arrayLikeToArray(arr, len) {
        if (len == null || len > arr.length) len = arr.length;
        for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++) arr2[i2] = arr[i2];
        return arr2;
      }
      function _createSuper(Derived) {
        var hasNativeReflectConstruct = _isNativeReflectConstruct();
        return function _createSuperInternal() {
          var Super = _getPrototypeOf(Derived), result;
          if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = _Reflect$construct(Super, arguments, NewTarget);
          } else {
            result = Super.apply(this, arguments);
          }
          return _possibleConstructorReturn(this, result);
        };
      }
      function _isNativeReflectConstruct() {
        if (typeof Reflect === "undefined" || !_Reflect$construct) return false;
        if (_Reflect$construct.sham) return false;
        if (typeof Proxy === "function") return true;
        try {
          Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function() {
          }));
          return true;
        } catch (e) {
          return false;
        }
      }
      var DataView = function(_DataSetPart) {
        _inherits(DataView2, _DataSetPart);
        var _super = _createSuper(DataView2);
        function DataView2(data2, options) {
          var _context;
          var _this;
          _classCallCheck(this, DataView2);
          _this = _super.call(this);
          _defineProperty(_assertThisInitialized(_this), "length", 0);
          _defineProperty(_assertThisInitialized(_this), "_ids", new _Set());
          _this._options = options || {};
          _this._listener = _bindInstanceProperty$1(_context = _this._onEvent).call(_context, _assertThisInitialized(_this));
          _this.setData(data2);
          return _this;
        }
        _createClass(DataView2, [{
          key: "idProp",
          get: (
            /** @inheritDoc */
            function get2() {
              return this.getDataSet().idProp;
            }
          )
        }, {
          key: "setData",
          value: function setData(data2) {
            if (this._data) {
              if (this._data.off) {
                this._data.off("*", this._listener);
              }
              var ids = this._data.getIds({
                filter: _filterInstanceProperty(this._options)
              });
              var items = this._data.get(ids);
              this._ids.clear();
              this.length = 0;
              this._trigger("remove", {
                items: ids,
                oldData: items
              });
            }
            if (data2 != null) {
              this._data = data2;
              var _ids = this._data.getIds({
                filter: _filterInstanceProperty(this._options)
              });
              for (var i2 = 0, len = _ids.length; i2 < len; i2++) {
                var id2 = _ids[i2];
                this._ids.add(id2);
              }
              this.length = _ids.length;
              this._trigger("add", {
                items: _ids
              });
            } else {
              this._data = new DataSet();
            }
            if (this._data.on) {
              this._data.on("*", this._listener);
            }
          }
          /**
           * Refresh the DataView.
           * Useful when the DataView has a filter function containing a variable parameter.
           */
        }, {
          key: "refresh",
          value: function refresh() {
            var ids = this._data.getIds({
              filter: _filterInstanceProperty(this._options)
            });
            var oldIds = _toConsumableArray(this._ids);
            var newIds = {};
            var addedIds = [];
            var removedIds = [];
            var removedItems = [];
            for (var i2 = 0, len = ids.length; i2 < len; i2++) {
              var id2 = ids[i2];
              newIds[id2] = true;
              if (!this._ids.has(id2)) {
                addedIds.push(id2);
                this._ids.add(id2);
              }
            }
            for (var _i = 0, _len = oldIds.length; _i < _len; _i++) {
              var _id = oldIds[_i];
              var item = this._data.get(_id);
              if (item == null) {
                console.error("If you see this, report it please.");
              } else if (!newIds[_id]) {
                removedIds.push(_id);
                removedItems.push(item);
                this._ids.delete(_id);
              }
            }
            this.length += addedIds.length - removedIds.length;
            if (addedIds.length) {
              this._trigger("add", {
                items: addedIds
              });
            }
            if (removedIds.length) {
              this._trigger("remove", {
                items: removedIds,
                oldData: removedItems
              });
            }
          }
          /** @inheritDoc */
        }, {
          key: "get",
          value: function get2(first, second) {
            if (this._data == null) {
              return null;
            }
            var ids = null;
            var options;
            if (isId(first) || _Array$isArray(first)) {
              ids = first;
              options = second;
            } else {
              options = first;
            }
            var viewOptions = _Object$assign({}, this._options, options);
            var thisFilter = _filterInstanceProperty(this._options);
            var optionsFilter = options && _filterInstanceProperty(options);
            if (thisFilter && optionsFilter) {
              viewOptions.filter = function(item) {
                return thisFilter(item) && optionsFilter(item);
              };
            }
            if (ids == null) {
              return this._data.get(viewOptions);
            } else {
              return this._data.get(ids, viewOptions);
            }
          }
          /** @inheritDoc */
        }, {
          key: "getIds",
          value: function getIds(options) {
            if (this._data.length) {
              var defaultFilter = _filterInstanceProperty(this._options);
              var optionsFilter = options != null ? _filterInstanceProperty(options) : null;
              var filter2;
              if (optionsFilter) {
                if (defaultFilter) {
                  filter2 = function filter3(item) {
                    return defaultFilter(item) && optionsFilter(item);
                  };
                } else {
                  filter2 = optionsFilter;
                }
              } else {
                filter2 = defaultFilter;
              }
              return this._data.getIds({
                filter: filter2,
                order: options && options.order
              });
            } else {
              return [];
            }
          }
          /** @inheritDoc */
        }, {
          key: "forEach",
          value: function forEach2(callback, options) {
            if (this._data) {
              var _context2;
              var defaultFilter = _filterInstanceProperty(this._options);
              var optionsFilter = options && _filterInstanceProperty(options);
              var filter2;
              if (optionsFilter) {
                if (defaultFilter) {
                  filter2 = function filter3(item) {
                    return defaultFilter(item) && optionsFilter(item);
                  };
                } else {
                  filter2 = optionsFilter;
                }
              } else {
                filter2 = defaultFilter;
              }
              _forEachInstanceProperty(_context2 = this._data).call(_context2, callback, {
                filter: filter2,
                order: options && options.order
              });
            }
          }
          /** @inheritDoc */
        }, {
          key: "map",
          value: function map2(callback, options) {
            if (this._data) {
              var _context3;
              var defaultFilter = _filterInstanceProperty(this._options);
              var optionsFilter = options && _filterInstanceProperty(options);
              var filter2;
              if (optionsFilter) {
                if (defaultFilter) {
                  filter2 = function filter3(item) {
                    return defaultFilter(item) && optionsFilter(item);
                  };
                } else {
                  filter2 = optionsFilter;
                }
              } else {
                filter2 = defaultFilter;
              }
              return _mapInstanceProperty(_context3 = this._data).call(_context3, callback, {
                filter: filter2,
                order: options && options.order
              });
            } else {
              return [];
            }
          }
          /** @inheritDoc */
        }, {
          key: "getDataSet",
          value: function getDataSet() {
            return this._data.getDataSet();
          }
          /** @inheritDoc */
        }, {
          key: "stream",
          value: function stream(ids) {
            var _context4;
            return this._data.stream(ids || {
              [_Symbol$iterator]: _bindInstanceProperty$1(_context4 = _keysInstanceProperty(this._ids)).call(_context4, this._ids)
            });
          }
          /**
           * Render the instance unusable prior to garbage collection.
           *
           * @remarks
           * The intention of this method is to help discover scenarios where the data
           * view is being used when the programmer thinks it has been garbage collected
           * already. It's stricter version of `dataView.setData(null)`.
           */
        }, {
          key: "dispose",
          value: function dispose() {
            var _this$_data;
            if ((_this$_data = this._data) !== null && _this$_data !== void 0 && _this$_data.off) {
              this._data.off("*", this._listener);
            }
            var message = "This data view has already been disposed of.";
            var replacement2 = {
              get: function get2() {
                throw new Error(message);
              },
              set: function set2() {
                throw new Error(message);
              },
              configurable: false
            };
            var _iterator = _createForOfIteratorHelper(_Reflect$ownKeys(DataView2.prototype)), _step;
            try {
              for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                var key = _step.value;
                _Object$defineProperty(this, key, replacement2);
              }
            } catch (err) {
              _iterator.e(err);
            } finally {
              _iterator.f();
            }
          }
          /**
           * Event listener. Will propagate all events from the connected data set to the subscribers of the DataView, but will filter the items and only trigger when there are changes in the filtered data set.
           *
           * @param event - The name of the event.
           * @param params - Parameters of the event.
           * @param senderId - Id supplied by the sender.
           */
        }, {
          key: "_onEvent",
          value: function _onEvent(event, params, senderId) {
            if (!params || !params.items || !this._data) {
              return;
            }
            var ids = params.items;
            var addedIds = [];
            var updatedIds = [];
            var removedIds = [];
            var oldItems = [];
            var updatedItems = [];
            var removedItems = [];
            switch (event) {
              case "add":
                for (var i2 = 0, len = ids.length; i2 < len; i2++) {
                  var id2 = ids[i2];
                  var item = this.get(id2);
                  if (item) {
                    this._ids.add(id2);
                    addedIds.push(id2);
                  }
                }
                break;
              case "update":
                for (var _i2 = 0, _len2 = ids.length; _i2 < _len2; _i2++) {
                  var _id2 = ids[_i2];
                  var _item = this.get(_id2);
                  if (_item) {
                    if (this._ids.has(_id2)) {
                      updatedIds.push(_id2);
                      updatedItems.push(params.data[_i2]);
                      oldItems.push(params.oldData[_i2]);
                    } else {
                      this._ids.add(_id2);
                      addedIds.push(_id2);
                    }
                  } else {
                    if (this._ids.has(_id2)) {
                      this._ids.delete(_id2);
                      removedIds.push(_id2);
                      removedItems.push(params.oldData[_i2]);
                    }
                  }
                }
                break;
              case "remove":
                for (var _i3 = 0, _len3 = ids.length; _i3 < _len3; _i3++) {
                  var _id3 = ids[_i3];
                  if (this._ids.has(_id3)) {
                    this._ids.delete(_id3);
                    removedIds.push(_id3);
                    removedItems.push(params.oldData[_i3]);
                  }
                }
                break;
            }
            this.length += addedIds.length - removedIds.length;
            if (addedIds.length) {
              this._trigger("add", {
                items: addedIds
              }, senderId);
            }
            if (updatedIds.length) {
              this._trigger("update", {
                items: updatedIds,
                oldData: oldItems,
                data: updatedItems
              }, senderId);
            }
            if (removedIds.length) {
              this._trigger("remove", {
                items: removedIds,
                oldData: removedItems
              }, senderId);
            }
          }
        }]);
        return DataView2;
      }(DataSetPart);
      function isDataSetLike(idProp, v) {
        return typeof v === "object" && v !== null && idProp === v.idProp && typeof v.add === "function" && typeof v.clear === "function" && typeof v.distinct === "function" && typeof _forEachInstanceProperty(v) === "function" && typeof v.get === "function" && typeof v.getDataSet === "function" && typeof v.getIds === "function" && typeof v.length === "number" && typeof _mapInstanceProperty(v) === "function" && typeof v.max === "function" && typeof v.min === "function" && typeof v.off === "function" && typeof v.on === "function" && typeof v.remove === "function" && typeof v.setOptions === "function" && typeof v.stream === "function" && typeof v.update === "function" && typeof v.updateOnly === "function";
      }
      function isDataViewLike(idProp, v) {
        return typeof v === "object" && v !== null && idProp === v.idProp && typeof _forEachInstanceProperty(v) === "function" && typeof v.get === "function" && typeof v.getDataSet === "function" && typeof v.getIds === "function" && typeof v.length === "number" && typeof _mapInstanceProperty(v) === "function" && typeof v.off === "function" && typeof v.on === "function" && typeof v.stream === "function" && isDataSetLike(idProp, v.getDataSet());
      }
      exports2.DELETE = DELETE;
      exports2.DataSet = DataSet;
      exports2.DataStream = DataStream;
      exports2.DataView = DataView;
      exports2.Queue = Queue;
      exports2.createNewDataPipeFrom = createNewDataPipeFrom;
      exports2.isDataSetLike = isDataSetLike;
      exports2.isDataViewLike = isDataViewLike;
    });
  }
});

// node_modules/vis-network/peer/umd/vis-network.min.js
var require_vis_network_min = __commonJS({
  "node_modules/vis-network/peer/umd/vis-network.min.js"(exports, module) {
    !function(t, e) {
      "object" == typeof exports && "undefined" != typeof module ? e(exports, require_vis_data()) : "function" == typeof define && define.amd ? define(["exports", "vis-data/peer/umd/vis-data.js"], e) : e((t = "undefined" != typeof globalThis ? globalThis : t || self).vis = t.vis || {}, t.vis);
    }(exports, function(t, e) {
      var i = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};
      function o(t2) {
        return t2 && t2.__esModule && Object.prototype.hasOwnProperty.call(t2, "default") ? t2.default : t2;
      }
      var n = function(t2) {
        return t2 && t2.Math === Math && t2;
      }, r = n("object" == typeof globalThis && globalThis) || n("object" == typeof window && window) || n("object" == typeof self && self) || n("object" == typeof i && i) || /* @__PURE__ */ function() {
        return this;
      }() || i || Function("return this")(), s = function(t2) {
        try {
          return !!t2();
        } catch (t3) {
          return true;
        }
      }, a = !s(function() {
        var t2 = (function() {
        }).bind();
        return "function" != typeof t2 || t2.hasOwnProperty("prototype");
      }), h = a, d = Function.prototype, l = d.apply, c = d.call, u = "object" == typeof Reflect && Reflect.apply || (h ? c.bind(l) : function() {
        return c.apply(l, arguments);
      }), f = a, p = Function.prototype, v = p.call, g = f && p.bind.bind(v, v), y = f ? g : function(t2) {
        return function() {
          return v.apply(t2, arguments);
        };
      }, m = y, b = m({}.toString), w = m("".slice), k = function(t2) {
        return w(b(t2), 8, -1);
      }, _ = k, x = y, E = function(t2) {
        if ("Function" === _(t2)) return x(t2);
      }, O = "object" == typeof document && document.all, C = { all: O, IS_HTMLDDA: void 0 === O && void 0 !== O }, S = C.all, T = C.IS_HTMLDDA ? function(t2) {
        return "function" == typeof t2 || t2 === S;
      } : function(t2) {
        return "function" == typeof t2;
      }, M = {}, P = !s(function() {
        return 7 !== Object.defineProperty({}, 1, { get: function() {
          return 7;
        } })[1];
      }), D = a, I = Function.prototype.call, B = D ? I.bind(I) : function() {
        return I.apply(I, arguments);
      }, F = {}, z = {}.propertyIsEnumerable, N = Object.getOwnPropertyDescriptor, A = N && !z.call({ 1: 2 }, 1);
      F.f = A ? function(t2) {
        var e2 = N(this, t2);
        return !!e2 && e2.enumerable;
      } : z;
      var R, j, L = function(t2, e2) {
        return { enumerable: !(1 & t2), configurable: !(2 & t2), writable: !(4 & t2), value: e2 };
      }, H = s, W = k, V = Object, q = y("".split), U = H(function() {
        return !V("z").propertyIsEnumerable(0);
      }) ? function(t2) {
        return "String" === W(t2) ? q(t2, "") : V(t2);
      } : V, Y = function(t2) {
        return null == t2;
      }, X = Y, K = TypeError, G = function(t2) {
        if (X(t2)) throw new K("Can't call method on " + t2);
        return t2;
      }, $ = U, Z = G, Q = function(t2) {
        return $(Z(t2));
      }, J = T, tt = C.all, et = C.IS_HTMLDDA ? function(t2) {
        return "object" == typeof t2 ? null !== t2 : J(t2) || t2 === tt;
      } : function(t2) {
        return "object" == typeof t2 ? null !== t2 : J(t2);
      }, it = {}, ot = it, nt = r, rt = T, st = function(t2) {
        return rt(t2) ? t2 : void 0;
      }, at = function(t2, e2) {
        return arguments.length < 2 ? st(ot[t2]) || st(nt[t2]) : ot[t2] && ot[t2][e2] || nt[t2] && nt[t2][e2];
      }, ht = y({}.isPrototypeOf), dt = "undefined" != typeof navigator && String(navigator.userAgent) || "", lt = r, ct = dt, ut = lt.process, ft = lt.Deno, pt = ut && ut.versions || ft && ft.version, vt = pt && pt.v8;
      vt && (j = (R = vt.split("."))[0] > 0 && R[0] < 4 ? 1 : +(R[0] + R[1])), !j && ct && (!(R = ct.match(/Edge\/(\d+)/)) || R[1] >= 74) && (R = ct.match(/Chrome\/(\d+)/)) && (j = +R[1]);
      var gt = j, yt = gt, mt = s, bt = r.String, wt = !!Object.getOwnPropertySymbols && !mt(function() {
        var t2 = Symbol("symbol detection");
        return !bt(t2) || !(Object(t2) instanceof Symbol) || !Symbol.sham && yt && yt < 41;
      }), kt = wt && !Symbol.sham && "symbol" == typeof Symbol.iterator, _t = at, xt = T, Et = ht, Ot = Object, Ct = kt ? function(t2) {
        return "symbol" == typeof t2;
      } : function(t2) {
        var e2 = _t("Symbol");
        return xt(e2) && Et(e2.prototype, Ot(t2));
      }, St = String, Tt = function(t2) {
        try {
          return St(t2);
        } catch (t3) {
          return "Object";
        }
      }, Mt = T, Pt = Tt, Dt = TypeError, It = function(t2) {
        if (Mt(t2)) return t2;
        throw new Dt(Pt(t2) + " is not a function");
      }, Bt = It, Ft = Y, zt = function(t2, e2) {
        var i2 = t2[e2];
        return Ft(i2) ? void 0 : Bt(i2);
      }, Nt = B, At = T, Rt = et, jt = TypeError, Lt = { exports: {} }, Ht = r, Wt = Object.defineProperty, Vt = function(t2, e2) {
        try {
          Wt(Ht, t2, { value: e2, configurable: true, writable: true });
        } catch (i2) {
          Ht[t2] = e2;
        }
        return e2;
      }, qt = "__core-js_shared__", Ut = r[qt] || Vt(qt, {}), Yt = Ut;
      (Lt.exports = function(t2, e2) {
        return Yt[t2] || (Yt[t2] = void 0 !== e2 ? e2 : {});
      })("versions", []).push({ version: "3.33.0", mode: "pure", copyright: "© 2014-2023 Denis Pushkarev (zloirock.ru)", license: "https://github.com/zloirock/core-js/blob/v3.33.0/LICENSE", source: "https://github.com/zloirock/core-js" });
      var Xt = Lt.exports, Kt = G, Gt = Object, $t = function(t2) {
        return Gt(Kt(t2));
      }, Zt = $t, Qt = y({}.hasOwnProperty), Jt = Object.hasOwn || function(t2, e2) {
        return Qt(Zt(t2), e2);
      }, te = y, ee = 0, ie = Math.random(), oe = te(1 .toString), ne = function(t2) {
        return "Symbol(" + (void 0 === t2 ? "" : t2) + ")_" + oe(++ee + ie, 36);
      }, re = Xt, se = Jt, ae = ne, he = wt, de = kt, le = r.Symbol, ce = re("wks"), ue = de ? le.for || le : le && le.withoutSetter || ae, fe = function(t2) {
        return se(ce, t2) || (ce[t2] = he && se(le, t2) ? le[t2] : ue("Symbol." + t2)), ce[t2];
      }, pe = B, ve = et, ge = Ct, ye = zt, me = function(t2, e2) {
        var i2, o2;
        if ("string" === e2 && At(i2 = t2.toString) && !Rt(o2 = Nt(i2, t2))) return o2;
        if (At(i2 = t2.valueOf) && !Rt(o2 = Nt(i2, t2))) return o2;
        if ("string" !== e2 && At(i2 = t2.toString) && !Rt(o2 = Nt(i2, t2))) return o2;
        throw new jt("Can't convert object to primitive value");
      }, be = TypeError, we = fe("toPrimitive"), ke = function(t2, e2) {
        if (!ve(t2) || ge(t2)) return t2;
        var i2, o2 = ye(t2, we);
        if (o2) {
          if (void 0 === e2 && (e2 = "default"), i2 = pe(o2, t2, e2), !ve(i2) || ge(i2)) return i2;
          throw new be("Can't convert object to primitive value");
        }
        return void 0 === e2 && (e2 = "number"), me(t2, e2);
      }, _e = Ct, xe = function(t2) {
        var e2 = ke(t2, "string");
        return _e(e2) ? e2 : e2 + "";
      }, Ee = et, Oe = r.document, Ce = Ee(Oe) && Ee(Oe.createElement), Se = function(t2) {
        return Ce ? Oe.createElement(t2) : {};
      }, Te = Se, Me = !P && !s(function() {
        return 7 !== Object.defineProperty(Te("div"), "a", { get: function() {
          return 7;
        } }).a;
      }), Pe = P, De = B, Ie = F, Be = L, Fe = Q, ze = xe, Ne = Jt, Ae = Me, Re = Object.getOwnPropertyDescriptor;
      M.f = Pe ? Re : function(t2, e2) {
        if (t2 = Fe(t2), e2 = ze(e2), Ae) try {
          return Re(t2, e2);
        } catch (t3) {
        }
        if (Ne(t2, e2)) return Be(!De(Ie.f, t2, e2), t2[e2]);
      };
      var je = s, Le = T, He = /#|\.prototype\./, We = function(t2, e2) {
        var i2 = qe[Ve(t2)];
        return i2 === Ye || i2 !== Ue && (Le(e2) ? je(e2) : !!e2);
      }, Ve = We.normalize = function(t2) {
        return String(t2).replace(He, ".").toLowerCase();
      }, qe = We.data = {}, Ue = We.NATIVE = "N", Ye = We.POLYFILL = "P", Xe = We, Ke = It, Ge = a, $e = E(E.bind), Ze = function(t2, e2) {
        return Ke(t2), void 0 === e2 ? t2 : Ge ? $e(t2, e2) : function() {
          return t2.apply(e2, arguments);
        };
      }, Qe = {}, Je = P && s(function() {
        return 42 !== Object.defineProperty(function() {
        }, "prototype", { value: 42, writable: false }).prototype;
      }), ti = et, ei = String, ii = TypeError, oi = function(t2) {
        if (ti(t2)) return t2;
        throw new ii(ei(t2) + " is not an object");
      }, ni = P, ri = Me, si = Je, ai = oi, hi = xe, di = TypeError, li = Object.defineProperty, ci = Object.getOwnPropertyDescriptor, ui = "enumerable", fi = "configurable", pi = "writable";
      Qe.f = ni ? si ? function(t2, e2, i2) {
        if (ai(t2), e2 = hi(e2), ai(i2), "function" == typeof t2 && "prototype" === e2 && "value" in i2 && pi in i2 && !i2[pi]) {
          var o2 = ci(t2, e2);
          o2 && o2[pi] && (t2[e2] = i2.value, i2 = { configurable: fi in i2 ? i2[fi] : o2[fi], enumerable: ui in i2 ? i2[ui] : o2[ui], writable: false });
        }
        return li(t2, e2, i2);
      } : li : function(t2, e2, i2) {
        if (ai(t2), e2 = hi(e2), ai(i2), ri) try {
          return li(t2, e2, i2);
        } catch (t3) {
        }
        if ("get" in i2 || "set" in i2) throw new di("Accessors not supported");
        return "value" in i2 && (t2[e2] = i2.value), t2;
      };
      var vi = Qe, gi = L, yi = P ? function(t2, e2, i2) {
        return vi.f(t2, e2, gi(1, i2));
      } : function(t2, e2, i2) {
        return t2[e2] = i2, t2;
      }, mi = r, bi = u, wi = E, ki = T, _i = M.f, xi = Xe, Ei = it, Oi = Ze, Ci = yi, Si = Jt, Ti = function(t2) {
        var e2 = function(i2, o2, n2) {
          if (this instanceof e2) {
            switch (arguments.length) {
              case 0:
                return new t2();
              case 1:
                return new t2(i2);
              case 2:
                return new t2(i2, o2);
            }
            return new t2(i2, o2, n2);
          }
          return bi(t2, this, arguments);
        };
        return e2.prototype = t2.prototype, e2;
      }, Mi = function(t2, e2) {
        var i2, o2, n2, r2, s2, a2, h2, d2, l2, c2 = t2.target, u2 = t2.global, f2 = t2.stat, p2 = t2.proto, v2 = u2 ? mi : f2 ? mi[c2] : (mi[c2] || {}).prototype, g2 = u2 ? Ei : Ei[c2] || Ci(Ei, c2, {})[c2], y2 = g2.prototype;
        for (r2 in e2) o2 = !(i2 = xi(u2 ? r2 : c2 + (f2 ? "." : "#") + r2, t2.forced)) && v2 && Si(v2, r2), a2 = g2[r2], o2 && (h2 = t2.dontCallGetSet ? (l2 = _i(v2, r2)) && l2.value : v2[r2]), s2 = o2 && h2 ? h2 : e2[r2], o2 && typeof a2 == typeof s2 || (d2 = t2.bind && o2 ? Oi(s2, mi) : t2.wrap && o2 ? Ti(s2) : p2 && ki(s2) ? wi(s2) : s2, (t2.sham || s2 && s2.sham || a2 && a2.sham) && Ci(d2, "sham", true), Ci(g2, r2, d2), p2 && (Si(Ei, n2 = c2 + "Prototype") || Ci(Ei, n2, {}), Ci(Ei[n2], r2, s2), t2.real && y2 && (i2 || !y2[r2]) && Ci(y2, r2, s2)));
      }, Pi = Math.ceil, Di = Math.floor, Ii = Math.trunc || function(t2) {
        var e2 = +t2;
        return (e2 > 0 ? Di : Pi)(e2);
      }, Bi = function(t2) {
        var e2 = +t2;
        return e2 != e2 || 0 === e2 ? 0 : Ii(e2);
      }, Fi = Bi, zi = Math.max, Ni = Math.min, Ai = function(t2, e2) {
        var i2 = Fi(t2);
        return i2 < 0 ? zi(i2 + e2, 0) : Ni(i2, e2);
      }, Ri = Bi, ji = Math.min, Li = function(t2) {
        return t2 > 0 ? ji(Ri(t2), 9007199254740991) : 0;
      }, Hi = function(t2) {
        return Li(t2.length);
      }, Wi = Q, Vi = Ai, qi = Hi, Ui = function(t2) {
        return function(e2, i2, o2) {
          var n2, r2 = Wi(e2), s2 = qi(r2), a2 = Vi(o2, s2);
          if (t2 && i2 != i2) {
            for (; s2 > a2; ) if ((n2 = r2[a2++]) != n2) return true;
          } else for (; s2 > a2; a2++) if ((t2 || a2 in r2) && r2[a2] === i2) return t2 || a2 || 0;
          return !t2 && -1;
        };
      }, Yi = { includes: Ui(true), indexOf: Ui(false) }, Xi = {}, Ki = Jt, Gi = Q, $i = Yi.indexOf, Zi = Xi, Qi = y([].push), Ji = function(t2, e2) {
        var i2, o2 = Gi(t2), n2 = 0, r2 = [];
        for (i2 in o2) !Ki(Zi, i2) && Ki(o2, i2) && Qi(r2, i2);
        for (; e2.length > n2; ) Ki(o2, i2 = e2[n2++]) && (~$i(r2, i2) || Qi(r2, i2));
        return r2;
      }, to = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"], eo = Ji, io = to, oo = Object.keys || function(t2) {
        return eo(t2, io);
      }, no = {};
      no.f = Object.getOwnPropertySymbols;
      var ro = P, so = y, ao = B, ho = s, lo = oo, co = no, uo = F, fo = $t, po = U, vo = Object.assign, go = Object.defineProperty, yo = so([].concat), mo = !vo || ho(function() {
        if (ro && 1 !== vo({ b: 1 }, vo(go({}, "a", { enumerable: true, get: function() {
          go(this, "b", { value: 3, enumerable: false });
        } }), { b: 2 })).b) return true;
        var t2 = {}, e2 = {}, i2 = Symbol("assign detection"), o2 = "abcdefghijklmnopqrst";
        return t2[i2] = 7, o2.split("").forEach(function(t3) {
          e2[t3] = t3;
        }), 7 !== vo({}, t2)[i2] || lo(vo({}, e2)).join("") !== o2;
      }) ? function(t2, e2) {
        for (var i2 = fo(t2), o2 = arguments.length, n2 = 1, r2 = co.f, s2 = uo.f; o2 > n2; ) for (var a2, h2 = po(arguments[n2++]), d2 = r2 ? yo(lo(h2), r2(h2)) : lo(h2), l2 = d2.length, c2 = 0; l2 > c2; ) a2 = d2[c2++], ro && !ao(s2, h2, a2) || (i2[a2] = h2[a2]);
        return i2;
      } : vo, bo = mo;
      Mi({ target: "Object", stat: true, arity: 2, forced: Object.assign !== bo }, { assign: bo });
      var wo = o(it.Object.assign), ko = y([].slice), _o = y, xo = It, Eo = et, Oo = Jt, Co = ko, So = a, To = Function, Mo = _o([].concat), Po = _o([].join), Do = {}, Io = So ? To.bind : function(t2) {
        var e2 = xo(this), i2 = e2.prototype, o2 = Co(arguments, 1), n2 = function() {
          var i3 = Mo(o2, Co(arguments));
          return this instanceof n2 ? function(t3, e3, i4) {
            if (!Oo(Do, e3)) {
              for (var o3 = [], n3 = 0; n3 < e3; n3++) o3[n3] = "a[" + n3 + "]";
              Do[e3] = To("C,a", "return new C(" + Po(o3, ",") + ")");
            }
            return Do[e3](t3, i4);
          }(e2, i3.length, i3) : e2.apply(t2, i3);
        };
        return Eo(i2) && (n2.prototype = i2), n2;
      }, Bo = Io;
      Mi({ target: "Function", proto: true, forced: Function.bind !== Bo }, { bind: Bo });
      var Fo = it, zo = function(t2) {
        return Fo[t2 + "Prototype"];
      }, No = zo("Function").bind, Ao = ht, Ro = No, jo = Function.prototype, Lo = function(t2) {
        var e2 = t2.bind;
        return t2 === jo || Ao(jo, t2) && e2 === jo.bind ? Ro : e2;
      }, Ho = Lo, Wo = o(Ho);
      function Vo(t2, e2, i2, o2) {
        t2.beginPath(), t2.arc(e2, i2, o2, 0, 2 * Math.PI, false), t2.closePath();
      }
      function qo(t2, e2, i2, o2, n2, r2) {
        var s2 = Math.PI / 180;
        o2 - 2 * r2 < 0 && (r2 = o2 / 2), n2 - 2 * r2 < 0 && (r2 = n2 / 2), t2.beginPath(), t2.moveTo(e2 + r2, i2), t2.lineTo(e2 + o2 - r2, i2), t2.arc(e2 + o2 - r2, i2 + r2, r2, 270 * s2, 360 * s2, false), t2.lineTo(e2 + o2, i2 + n2 - r2), t2.arc(e2 + o2 - r2, i2 + n2 - r2, r2, 0, 90 * s2, false), t2.lineTo(e2 + r2, i2 + n2), t2.arc(e2 + r2, i2 + n2 - r2, r2, 90 * s2, 180 * s2, false), t2.lineTo(e2, i2 + r2), t2.arc(e2 + r2, i2 + r2, r2, 180 * s2, 270 * s2, false), t2.closePath();
      }
      function Uo(t2, e2, i2, o2, n2) {
        var r2 = 0.5522848, s2 = o2 / 2 * r2, a2 = n2 / 2 * r2, h2 = e2 + o2, d2 = i2 + n2, l2 = e2 + o2 / 2, c2 = i2 + n2 / 2;
        t2.beginPath(), t2.moveTo(e2, c2), t2.bezierCurveTo(e2, c2 - a2, l2 - s2, i2, l2, i2), t2.bezierCurveTo(l2 + s2, i2, h2, c2 - a2, h2, c2), t2.bezierCurveTo(h2, c2 + a2, l2 + s2, d2, l2, d2), t2.bezierCurveTo(l2 - s2, d2, e2, c2 + a2, e2, c2), t2.closePath();
      }
      function Yo(t2, e2, i2, o2, n2) {
        var r2 = n2 * (1 / 3), s2 = 0.5522848, a2 = o2 / 2 * s2, h2 = r2 / 2 * s2, d2 = e2 + o2, l2 = i2 + r2, c2 = e2 + o2 / 2, u2 = i2 + r2 / 2, f2 = i2 + (n2 - r2 / 2), p2 = i2 + n2;
        t2.beginPath(), t2.moveTo(d2, u2), t2.bezierCurveTo(d2, u2 + h2, c2 + a2, l2, c2, l2), t2.bezierCurveTo(c2 - a2, l2, e2, u2 + h2, e2, u2), t2.bezierCurveTo(e2, u2 - h2, c2 - a2, i2, c2, i2), t2.bezierCurveTo(c2 + a2, i2, d2, u2 - h2, d2, u2), t2.lineTo(d2, f2), t2.bezierCurveTo(d2, f2 + h2, c2 + a2, p2, c2, p2), t2.bezierCurveTo(c2 - a2, p2, e2, f2 + h2, e2, f2), t2.lineTo(e2, u2);
      }
      function Xo(t2, e2, i2, o2, n2, r2) {
        t2.beginPath(), t2.moveTo(e2, i2);
        for (var s2 = r2.length, a2 = o2 - e2, h2 = n2 - i2, d2 = h2 / a2, l2 = Math.sqrt(a2 * a2 + h2 * h2), c2 = 0, u2 = true, f2 = 0, p2 = +r2[0]; l2 >= 0.1; ) (p2 = +r2[c2++ % s2]) > l2 && (p2 = l2), f2 = Math.sqrt(p2 * p2 / (1 + d2 * d2)), e2 += f2 = a2 < 0 ? -f2 : f2, i2 += d2 * f2, true === u2 ? t2.lineTo(e2, i2) : t2.moveTo(e2, i2), l2 -= p2, u2 = !u2;
      }
      var Ko = { circle: Vo, dashedLine: Xo, database: Yo, diamond: function(t2, e2, i2, o2) {
        t2.beginPath(), t2.lineTo(e2, i2 + o2), t2.lineTo(e2 + o2, i2), t2.lineTo(e2, i2 - o2), t2.lineTo(e2 - o2, i2), t2.closePath();
      }, ellipse: Uo, ellipse_vis: Uo, hexagon: function(t2, e2, i2, o2) {
        t2.beginPath();
        var n2 = 2 * Math.PI / 6;
        t2.moveTo(e2 + o2, i2);
        for (var r2 = 1; r2 < 6; r2++) t2.lineTo(e2 + o2 * Math.cos(n2 * r2), i2 + o2 * Math.sin(n2 * r2));
        t2.closePath();
      }, roundRect: qo, square: function(t2, e2, i2, o2) {
        t2.beginPath(), t2.rect(e2 - o2, i2 - o2, 2 * o2, 2 * o2), t2.closePath();
      }, star: function(t2, e2, i2, o2) {
        t2.beginPath(), i2 += 0.1 * (o2 *= 0.82);
        for (var n2 = 0; n2 < 10; n2++) {
          var r2 = n2 % 2 == 0 ? 1.3 * o2 : 0.5 * o2;
          t2.lineTo(e2 + r2 * Math.sin(2 * n2 * Math.PI / 10), i2 - r2 * Math.cos(2 * n2 * Math.PI / 10));
        }
        t2.closePath();
      }, triangle: function(t2, e2, i2, o2) {
        t2.beginPath(), i2 += 0.275 * (o2 *= 1.15);
        var n2 = 2 * o2, r2 = n2 / 2, s2 = Math.sqrt(3) / 6 * n2, a2 = Math.sqrt(n2 * n2 - r2 * r2);
        t2.moveTo(e2, i2 - (a2 - s2)), t2.lineTo(e2 + r2, i2 + s2), t2.lineTo(e2 - r2, i2 + s2), t2.lineTo(e2, i2 - (a2 - s2)), t2.closePath();
      }, triangleDown: function(t2, e2, i2, o2) {
        t2.beginPath(), i2 -= 0.275 * (o2 *= 1.15);
        var n2 = 2 * o2, r2 = n2 / 2, s2 = Math.sqrt(3) / 6 * n2, a2 = Math.sqrt(n2 * n2 - r2 * r2);
        t2.moveTo(e2, i2 + (a2 - s2)), t2.lineTo(e2 + r2, i2 - s2), t2.lineTo(e2 - r2, i2 - s2), t2.lineTo(e2, i2 + (a2 - s2)), t2.closePath();
      } };
      var Go = { exports: {} };
      !function(t2) {
        function e2(t3) {
          if (t3) return function(t4) {
            for (var i2 in e2.prototype) t4[i2] = e2.prototype[i2];
            return t4;
          }(t3);
        }
        t2.exports = e2, e2.prototype.on = e2.prototype.addEventListener = function(t3, e3) {
          return this._callbacks = this._callbacks || {}, (this._callbacks["$" + t3] = this._callbacks["$" + t3] || []).push(e3), this;
        }, e2.prototype.once = function(t3, e3) {
          function i2() {
            this.off(t3, i2), e3.apply(this, arguments);
          }
          return i2.fn = e3, this.on(t3, i2), this;
        }, e2.prototype.off = e2.prototype.removeListener = e2.prototype.removeAllListeners = e2.prototype.removeEventListener = function(t3, e3) {
          if (this._callbacks = this._callbacks || {}, 0 == arguments.length) return this._callbacks = {}, this;
          var i2, o2 = this._callbacks["$" + t3];
          if (!o2) return this;
          if (1 == arguments.length) return delete this._callbacks["$" + t3], this;
          for (var n2 = 0; n2 < o2.length; n2++) if ((i2 = o2[n2]) === e3 || i2.fn === e3) {
            o2.splice(n2, 1);
            break;
          }
          return 0 === o2.length && delete this._callbacks["$" + t3], this;
        }, e2.prototype.emit = function(t3) {
          this._callbacks = this._callbacks || {};
          for (var e3 = new Array(arguments.length - 1), i2 = this._callbacks["$" + t3], o2 = 1; o2 < arguments.length; o2++) e3[o2 - 1] = arguments[o2];
          if (i2) {
            o2 = 0;
            for (var n2 = (i2 = i2.slice(0)).length; o2 < n2; ++o2) i2[o2].apply(this, e3);
          }
          return this;
        }, e2.prototype.listeners = function(t3) {
          return this._callbacks = this._callbacks || {}, this._callbacks["$" + t3] || [];
        }, e2.prototype.hasListeners = function(t3) {
          return !!this.listeners(t3).length;
        };
      }(Go);
      var $o = o(Go.exports), Zo = {};
      Zo[fe("toStringTag")] = "z";
      var Qo, Jo, tn, en = "[object z]" === String(Zo), on = en, nn = T, rn = k, sn = fe("toStringTag"), an = Object, hn = "Arguments" === rn(/* @__PURE__ */ function() {
        return arguments;
      }()), dn = on ? rn : function(t2) {
        var e2, i2, o2;
        return void 0 === t2 ? "Undefined" : null === t2 ? "Null" : "string" == typeof (i2 = function(t3, e3) {
          try {
            return t3[e3];
          } catch (t4) {
          }
        }(e2 = an(t2), sn)) ? i2 : hn ? rn(e2) : "Object" === (o2 = rn(e2)) && nn(e2.callee) ? "Arguments" : o2;
      }, ln = dn, cn = String, un = function(t2) {
        if ("Symbol" === ln(t2)) throw new TypeError("Cannot convert a Symbol value to a string");
        return cn(t2);
      }, fn = y, pn = Bi, vn = un, gn = G, yn = fn("".charAt), mn = fn("".charCodeAt), bn = fn("".slice), wn = function(t2) {
        return function(e2, i2) {
          var o2, n2, r2 = vn(gn(e2)), s2 = pn(i2), a2 = r2.length;
          return s2 < 0 || s2 >= a2 ? t2 ? "" : void 0 : (o2 = mn(r2, s2)) < 55296 || o2 > 56319 || s2 + 1 === a2 || (n2 = mn(r2, s2 + 1)) < 56320 || n2 > 57343 ? t2 ? yn(r2, s2) : o2 : t2 ? bn(r2, s2, s2 + 2) : n2 - 56320 + (o2 - 55296 << 10) + 65536;
        };
      }, kn = { codeAt: wn(false), charAt: wn(true) }, _n = T, xn = r.WeakMap, En = _n(xn) && /native code/.test(String(xn)), On = ne, Cn = Xt("keys"), Sn = function(t2) {
        return Cn[t2] || (Cn[t2] = On(t2));
      }, Tn = En, Mn = r, Pn = et, Dn = yi, In = Jt, Bn = Ut, Fn = Sn, zn = Xi, Nn = "Object already initialized", An = Mn.TypeError, Rn = Mn.WeakMap;
      if (Tn || Bn.state) {
        var jn = Bn.state || (Bn.state = new Rn());
        jn.get = jn.get, jn.has = jn.has, jn.set = jn.set, Qo = function(t2, e2) {
          if (jn.has(t2)) throw new An(Nn);
          return e2.facade = t2, jn.set(t2, e2), e2;
        }, Jo = function(t2) {
          return jn.get(t2) || {};
        }, tn = function(t2) {
          return jn.has(t2);
        };
      } else {
        var Ln = Fn("state");
        zn[Ln] = true, Qo = function(t2, e2) {
          if (In(t2, Ln)) throw new An(Nn);
          return e2.facade = t2, Dn(t2, Ln, e2), e2;
        }, Jo = function(t2) {
          return In(t2, Ln) ? t2[Ln] : {};
        }, tn = function(t2) {
          return In(t2, Ln);
        };
      }
      var Hn = { set: Qo, get: Jo, has: tn, enforce: function(t2) {
        return tn(t2) ? Jo(t2) : Qo(t2, {});
      }, getterFor: function(t2) {
        return function(e2) {
          var i2;
          if (!Pn(e2) || (i2 = Jo(e2)).type !== t2) throw new An("Incompatible receiver, " + t2 + " required");
          return i2;
        };
      } }, Wn = P, Vn = Jt, qn = Function.prototype, Un = Wn && Object.getOwnPropertyDescriptor, Yn = Vn(qn, "name"), Xn = { EXISTS: Yn, PROPER: Yn && "something" === (function() {
      }).name, CONFIGURABLE: Yn && (!Wn || Wn && Un(qn, "name").configurable) }, Kn = {}, Gn = P, $n = Je, Zn = Qe, Qn = oi, Jn = Q, tr = oo;
      Kn.f = Gn && !$n ? Object.defineProperties : function(t2, e2) {
        Qn(t2);
        for (var i2, o2 = Jn(e2), n2 = tr(e2), r2 = n2.length, s2 = 0; r2 > s2; ) Zn.f(t2, i2 = n2[s2++], o2[i2]);
        return t2;
      };
      var er, ir = at("document", "documentElement"), or = oi, nr = Kn, rr = to, sr = Xi, ar = ir, hr = Se, dr = "prototype", lr = "script", cr = Sn("IE_PROTO"), ur = function() {
      }, fr = function(t2) {
        return "<" + lr + ">" + t2 + "</" + lr + ">";
      }, pr = function(t2) {
        t2.write(fr("")), t2.close();
        var e2 = t2.parentWindow.Object;
        return t2 = null, e2;
      }, vr = function() {
        try {
          er = new ActiveXObject("htmlfile");
        } catch (t3) {
        }
        var t2, e2, i2;
        vr = "undefined" != typeof document ? document.domain && er ? pr(er) : (e2 = hr("iframe"), i2 = "java" + lr + ":", e2.style.display = "none", ar.appendChild(e2), e2.src = String(i2), (t2 = e2.contentWindow.document).open(), t2.write(fr("document.F=Object")), t2.close(), t2.F) : pr(er);
        for (var o2 = rr.length; o2--; ) delete vr[dr][rr[o2]];
        return vr();
      };
      sr[cr] = true;
      var gr, yr, mr, br = Object.create || function(t2, e2) {
        var i2;
        return null !== t2 ? (ur[dr] = or(t2), i2 = new ur(), ur[dr] = null, i2[cr] = t2) : i2 = vr(), void 0 === e2 ? i2 : nr.f(i2, e2);
      }, wr = !s(function() {
        function t2() {
        }
        return t2.prototype.constructor = null, Object.getPrototypeOf(new t2()) !== t2.prototype;
      }), kr = Jt, _r = T, xr = $t, Er = wr, Or = Sn("IE_PROTO"), Cr = Object, Sr = Cr.prototype, Tr = Er ? Cr.getPrototypeOf : function(t2) {
        var e2 = xr(t2);
        if (kr(e2, Or)) return e2[Or];
        var i2 = e2.constructor;
        return _r(i2) && e2 instanceof i2 ? i2.prototype : e2 instanceof Cr ? Sr : null;
      }, Mr = yi, Pr = function(t2, e2, i2, o2) {
        return o2 && o2.enumerable ? t2[e2] = i2 : Mr(t2, e2, i2), t2;
      }, Dr = s, Ir = T, Br = et, Fr = br, zr = Tr, Nr = Pr, Ar = fe("iterator"), Rr = false;
      [].keys && ("next" in (mr = [].keys()) ? (yr = zr(zr(mr))) !== Object.prototype && (gr = yr) : Rr = true);
      var jr = !Br(gr) || Dr(function() {
        var t2 = {};
        return gr[Ar].call(t2) !== t2;
      });
      Ir((gr = jr ? {} : Fr(gr))[Ar]) || Nr(gr, Ar, function() {
        return this;
      });
      var Lr = { IteratorPrototype: gr, BUGGY_SAFARI_ITERATORS: Rr }, Hr = dn, Wr = en ? {}.toString : function() {
        return "[object " + Hr(this) + "]";
      }, Vr = en, qr = Qe.f, Ur = yi, Yr = Jt, Xr = Wr, Kr = fe("toStringTag"), Gr = function(t2, e2, i2, o2) {
        if (t2) {
          var n2 = i2 ? t2 : t2.prototype;
          Yr(n2, Kr) || qr(n2, Kr, { configurable: true, value: e2 }), o2 && !Vr && Ur(n2, "toString", Xr);
        }
      }, $r = {}, Zr = Lr.IteratorPrototype, Qr = br, Jr = L, ts = Gr, es = $r, is = function() {
        return this;
      }, os = y, ns = It, rs = T, ss = String, as = TypeError, hs = function(t2, e2, i2) {
        try {
          return os(ns(Object.getOwnPropertyDescriptor(t2, e2)[i2]));
        } catch (t3) {
        }
      }, ds = oi, ls = function(t2) {
        if ("object" == typeof t2 || rs(t2)) return t2;
        throw new as("Can't set " + ss(t2) + " as a prototype");
      }, cs = Object.setPrototypeOf || ("__proto__" in {} ? function() {
        var t2, e2 = false, i2 = {};
        try {
          (t2 = hs(Object.prototype, "__proto__", "set"))(i2, []), e2 = i2 instanceof Array;
        } catch (t3) {
        }
        return function(i3, o2) {
          return ds(i3), ls(o2), e2 ? t2(i3, o2) : i3.__proto__ = o2, i3;
        };
      }() : void 0), us = Mi, fs = B, ps = Xn, vs = function(t2, e2, i2, o2) {
        var n2 = e2 + " Iterator";
        return t2.prototype = Qr(Zr, { next: Jr(+!o2, i2) }), ts(t2, n2, false, true), es[n2] = is, t2;
      }, gs = Tr, ys = Gr, ms = Pr, bs = $r, ws = Lr, ks = ps.PROPER, _s = ws.BUGGY_SAFARI_ITERATORS, xs = fe("iterator"), Es = "keys", Os = "values", Cs = "entries", Ss = function() {
        return this;
      }, Ts = function(t2, e2, i2, o2, n2, r2, s2) {
        vs(i2, e2, o2);
        var a2, h2, d2, l2 = function(t3) {
          if (t3 === n2 && v2) return v2;
          if (!_s && t3 && t3 in f2) return f2[t3];
          switch (t3) {
            case Es:
            case Os:
            case Cs:
              return function() {
                return new i2(this, t3);
              };
          }
          return function() {
            return new i2(this);
          };
        }, c2 = e2 + " Iterator", u2 = false, f2 = t2.prototype, p2 = f2[xs] || f2["@@iterator"] || n2 && f2[n2], v2 = !_s && p2 || l2(n2), g2 = "Array" === e2 && f2.entries || p2;
        if (g2 && (a2 = gs(g2.call(new t2()))) !== Object.prototype && a2.next && (ys(a2, c2, true, true), bs[c2] = Ss), ks && n2 === Os && p2 && p2.name !== Os && (u2 = true, v2 = function() {
          return fs(p2, this);
        }), n2) if (h2 = { values: l2(Os), keys: r2 ? v2 : l2(Es), entries: l2(Cs) }, s2) for (d2 in h2) (_s || u2 || !(d2 in f2)) && ms(f2, d2, h2[d2]);
        else us({ target: e2, proto: true, forced: _s || u2 }, h2);
        return s2 && f2[xs] !== v2 && ms(f2, xs, v2, { name: n2 }), bs[e2] = v2, h2;
      }, Ms = function(t2, e2) {
        return { value: t2, done: e2 };
      }, Ps = kn.charAt, Ds = un, Is = Hn, Bs = Ts, Fs = Ms, zs = "String Iterator", Ns = Is.set, As = Is.getterFor(zs);
      Bs(String, "String", function(t2) {
        Ns(this, { type: zs, string: Ds(t2), index: 0 });
      }, function() {
        var t2, e2 = As(this), i2 = e2.string, o2 = e2.index;
        return o2 >= i2.length ? Fs(void 0, true) : (t2 = Ps(i2, o2), e2.index += t2.length, Fs(t2, false));
      });
      var Rs = B, js = oi, Ls = zt, Hs = function(t2, e2, i2) {
        var o2, n2;
        js(t2);
        try {
          if (!(o2 = Ls(t2, "return"))) {
            if ("throw" === e2) throw i2;
            return i2;
          }
          o2 = Rs(o2, t2);
        } catch (t3) {
          n2 = true, o2 = t3;
        }
        if ("throw" === e2) throw i2;
        if (n2) throw o2;
        return js(o2), i2;
      }, Ws = oi, Vs = Hs, qs = $r, Us = fe("iterator"), Ys = Array.prototype, Xs = function(t2) {
        return void 0 !== t2 && (qs.Array === t2 || Ys[Us] === t2);
      }, Ks = T, Gs = Ut, $s = y(Function.toString);
      Ks(Gs.inspectSource) || (Gs.inspectSource = function(t2) {
        return $s(t2);
      });
      var Zs = Gs.inspectSource, Qs = y, Js = s, ta = T, ea = dn, ia = Zs, oa = function() {
      }, na = [], ra = at("Reflect", "construct"), sa = /^\s*(?:class|function)\b/, aa = Qs(sa.exec), ha = !sa.test(oa), da = function(t2) {
        if (!ta(t2)) return false;
        try {
          return ra(oa, na, t2), true;
        } catch (t3) {
          return false;
        }
      }, la = function(t2) {
        if (!ta(t2)) return false;
        switch (ea(t2)) {
          case "AsyncFunction":
          case "GeneratorFunction":
          case "AsyncGeneratorFunction":
            return false;
        }
        try {
          return ha || !!aa(sa, ia(t2));
        } catch (t3) {
          return true;
        }
      };
      la.sham = true;
      var ca = !ra || Js(function() {
        var t2;
        return da(da.call) || !da(Object) || !da(function() {
          t2 = true;
        }) || t2;
      }) ? la : da, ua = xe, fa = Qe, pa = L, va = function(t2, e2, i2) {
        var o2 = ua(e2);
        o2 in t2 ? fa.f(t2, o2, pa(0, i2)) : t2[o2] = i2;
      }, ga = dn, ya = zt, ma = Y, ba = $r, wa = fe("iterator"), ka = function(t2) {
        if (!ma(t2)) return ya(t2, wa) || ya(t2, "@@iterator") || ba[ga(t2)];
      }, _a = B, xa = It, Ea = oi, Oa = Tt, Ca = ka, Sa = TypeError, Ta = function(t2, e2) {
        var i2 = arguments.length < 2 ? Ca(t2) : e2;
        if (xa(i2)) return Ea(_a(i2, t2));
        throw new Sa(Oa(t2) + " is not iterable");
      }, Ma = Ze, Pa = B, Da = $t, Ia = function(t2, e2, i2, o2) {
        try {
          return o2 ? e2(Ws(i2)[0], i2[1]) : e2(i2);
        } catch (e3) {
          Vs(t2, "throw", e3);
        }
      }, Ba = Xs, Fa = ca, za = Hi, Na = va, Aa = Ta, Ra = ka, ja = Array, La = fe("iterator"), Ha = false;
      try {
        var Wa = 0, Va = { next: function() {
          return { done: !!Wa++ };
        }, return: function() {
          Ha = true;
        } };
        Va[La] = function() {
          return this;
        }, Array.from(Va, function() {
          throw 2;
        });
      } catch (t2) {
      }
      var qa = function(t2) {
        var e2 = Da(t2), i2 = Fa(this), o2 = arguments.length, n2 = o2 > 1 ? arguments[1] : void 0, r2 = void 0 !== n2;
        r2 && (n2 = Ma(n2, o2 > 2 ? arguments[2] : void 0));
        var s2, a2, h2, d2, l2, c2, u2 = Ra(e2), f2 = 0;
        if (!u2 || this === ja && Ba(u2)) for (s2 = za(e2), a2 = i2 ? new this(s2) : ja(s2); s2 > f2; f2++) c2 = r2 ? n2(e2[f2], f2) : e2[f2], Na(a2, f2, c2);
        else for (l2 = (d2 = Aa(e2, u2)).next, a2 = i2 ? new this() : []; !(h2 = Pa(l2, d2)).done; f2++) c2 = r2 ? Ia(d2, n2, [h2.value, f2], true) : h2.value, Na(a2, f2, c2);
        return a2.length = f2, a2;
      }, Ua = function(t2, e2) {
        try {
          if (!e2 && !Ha) return false;
        } catch (t3) {
          return false;
        }
        var i2 = false;
        try {
          var o2 = {};
          o2[La] = function() {
            return { next: function() {
              return { done: i2 = true };
            } };
          }, t2(o2);
        } catch (t3) {
        }
        return i2;
      };
      Mi({ target: "Array", stat: true, forced: !Ua(function(t2) {
        Array.from(t2);
      }) }, { from: qa });
      var Ya = it.Array.from, Xa = o(Ya), Ka = Q, Ga = $r, $a = Hn;
      Qe.f;
      var Za = Ts, Qa = Ms, Ja = "Array Iterator", th = $a.set, eh = $a.getterFor(Ja);
      Za(Array, "Array", function(t2, e2) {
        th(this, { type: Ja, target: Ka(t2), index: 0, kind: e2 });
      }, function() {
        var t2 = eh(this), e2 = t2.target, i2 = t2.kind, o2 = t2.index++;
        if (!e2 || o2 >= e2.length) return t2.target = void 0, Qa(void 0, true);
        switch (i2) {
          case "keys":
            return Qa(o2, false);
          case "values":
            return Qa(e2[o2], false);
        }
        return Qa([o2, e2[o2]], false);
      }, "values"), Ga.Arguments = Ga.Array;
      var ih = ka, oh = { CSSRuleList: 0, CSSStyleDeclaration: 0, CSSValueList: 0, ClientRectList: 0, DOMRectList: 0, DOMStringList: 0, DOMTokenList: 1, DataTransferItemList: 0, FileList: 0, HTMLAllCollection: 0, HTMLCollection: 0, HTMLFormElement: 0, HTMLSelectElement: 0, MediaList: 0, MimeTypeArray: 0, NamedNodeMap: 0, NodeList: 1, PaintRequestList: 0, Plugin: 0, PluginArray: 0, SVGLengthList: 0, SVGNumberList: 0, SVGPathSegList: 0, SVGPointList: 0, SVGStringList: 0, SVGTransformList: 0, SourceBufferList: 0, StyleSheetList: 0, TextTrackCueList: 0, TextTrackList: 0, TouchList: 0 }, nh = r, rh = dn, sh = yi, ah = $r, hh = fe("toStringTag");
      for (var dh in oh) {
        var lh = nh[dh], ch = lh && lh.prototype;
        ch && rh(ch) !== hh && sh(ch, hh, dh), ah[dh] = ah.Array;
      }
      var uh = ih, fh = o(uh), ph = o(uh);
      function vh(t2, e2) {
        if (!(t2 instanceof e2)) throw new TypeError("Cannot call a class as a function");
      }
      var gh = { exports: {} }, yh = Mi, mh = P, bh = Qe.f;
      yh({ target: "Object", stat: true, forced: Object.defineProperty !== bh, sham: !mh }, { defineProperty: bh });
      var wh = it.Object, kh = gh.exports = function(t2, e2, i2) {
        return wh.defineProperty(t2, e2, i2);
      };
      wh.defineProperty.sham && (kh.sham = true);
      var _h = gh.exports, xh = o(_h), Eh = k, Oh = Array.isArray || function(t2) {
        return "Array" === Eh(t2);
      }, Ch = TypeError, Sh = function(t2) {
        if (t2 > 9007199254740991) throw Ch("Maximum allowed index exceeded");
        return t2;
      }, Th = Oh, Mh = ca, Ph = et, Dh = fe("species"), Ih = Array, Bh = function(t2) {
        var e2;
        return Th(t2) && (e2 = t2.constructor, (Mh(e2) && (e2 === Ih || Th(e2.prototype)) || Ph(e2) && null === (e2 = e2[Dh])) && (e2 = void 0)), void 0 === e2 ? Ih : e2;
      }, Fh = function(t2, e2) {
        return new (Bh(t2))(0 === e2 ? 0 : e2);
      }, zh = s, Nh = gt, Ah = fe("species"), Rh = function(t2) {
        return Nh >= 51 || !zh(function() {
          var e2 = [];
          return (e2.constructor = {})[Ah] = function() {
            return { foo: 1 };
          }, 1 !== e2[t2](Boolean).foo;
        });
      }, jh = Mi, Lh = s, Hh = Oh, Wh = et, Vh = $t, qh = Hi, Uh = Sh, Yh = va, Xh = Fh, Kh = Rh, Gh = gt, $h = fe("isConcatSpreadable"), Zh = Gh >= 51 || !Lh(function() {
        var t2 = [];
        return t2[$h] = false, t2.concat()[0] !== t2;
      }), Qh = function(t2) {
        if (!Wh(t2)) return false;
        var e2 = t2[$h];
        return void 0 !== e2 ? !!e2 : Hh(t2);
      };
      jh({ target: "Array", proto: true, arity: 1, forced: !Zh || !Kh("concat") }, { concat: function(t2) {
        var e2, i2, o2, n2, r2, s2 = Vh(this), a2 = Xh(s2, 0), h2 = 0;
        for (e2 = -1, o2 = arguments.length; e2 < o2; e2++) if (Qh(r2 = -1 === e2 ? s2 : arguments[e2])) for (n2 = qh(r2), Uh(h2 + n2), i2 = 0; i2 < n2; i2++, h2++) i2 in r2 && Yh(a2, h2, r2[i2]);
        else Uh(h2 + 1), Yh(a2, h2++, r2);
        return a2.length = h2, a2;
      } });
      var Jh = {}, td = Ji, ed = to.concat("length", "prototype");
      Jh.f = Object.getOwnPropertyNames || function(t2) {
        return td(t2, ed);
      };
      var id = {}, od = Ai, nd = Hi, rd = va, sd = Array, ad = Math.max, hd = function(t2, e2, i2) {
        for (var o2 = nd(t2), n2 = od(e2, o2), r2 = od(void 0 === i2 ? o2 : i2, o2), s2 = sd(ad(r2 - n2, 0)), a2 = 0; n2 < r2; n2++, a2++) rd(s2, a2, t2[n2]);
        return s2.length = a2, s2;
      }, dd = k, ld = Q, cd = Jh.f, ud = hd, fd = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
      id.f = function(t2) {
        return fd && "Window" === dd(t2) ? function(t3) {
          try {
            return cd(t3);
          } catch (t4) {
            return ud(fd);
          }
        }(t2) : cd(ld(t2));
      };
      var pd = Qe, vd = function(t2, e2, i2) {
        return pd.f(t2, e2, i2);
      }, gd = {}, yd = fe;
      gd.f = yd;
      var md = it, bd = Jt, wd = gd, kd = Qe.f, _d = function(t2) {
        var e2 = md.Symbol || (md.Symbol = {});
        bd(e2, t2) || kd(e2, t2, { value: wd.f(t2) });
      }, xd = B, Ed = at, Od = fe, Cd = Pr, Sd = function() {
        var t2 = Ed("Symbol"), e2 = t2 && t2.prototype, i2 = e2 && e2.valueOf, o2 = Od("toPrimitive");
        e2 && !e2[o2] && Cd(e2, o2, function(t3) {
          return xd(i2, this);
        }, { arity: 1 });
      }, Td = Ze, Md = U, Pd = $t, Dd = Hi, Id = Fh, Bd = y([].push), Fd = function(t2) {
        var e2 = 1 === t2, i2 = 2 === t2, o2 = 3 === t2, n2 = 4 === t2, r2 = 6 === t2, s2 = 7 === t2, a2 = 5 === t2 || r2;
        return function(h2, d2, l2, c2) {
          for (var u2, f2, p2 = Pd(h2), v2 = Md(p2), g2 = Td(d2, l2), y2 = Dd(v2), m2 = 0, b2 = c2 || Id, w2 = e2 ? b2(h2, y2) : i2 || s2 ? b2(h2, 0) : void 0; y2 > m2; m2++) if ((a2 || m2 in v2) && (f2 = g2(u2 = v2[m2], m2, p2), t2)) if (e2) w2[m2] = f2;
          else if (f2) switch (t2) {
            case 3:
              return true;
            case 5:
              return u2;
            case 6:
              return m2;
            case 2:
              Bd(w2, u2);
          }
          else switch (t2) {
            case 4:
              return false;
            case 7:
              Bd(w2, u2);
          }
          return r2 ? -1 : o2 || n2 ? n2 : w2;
        };
      }, zd = { forEach: Fd(0), map: Fd(1), filter: Fd(2), some: Fd(3), every: Fd(4), find: Fd(5), findIndex: Fd(6), filterReject: Fd(7) }, Nd = Mi, Ad = r, Rd = B, jd = y, Ld = P, Hd = wt, Wd = s, Vd = Jt, qd = ht, Ud = oi, Yd = Q, Xd = xe, Kd = un, Gd = L, $d = br, Zd = oo, Qd = Jh, Jd = id, tl = no, el = M, il = Qe, ol = Kn, nl = F, rl = Pr, sl = vd, al = Xt, hl = Xi, dl = ne, ll = fe, cl = gd, ul = _d, fl = Sd, pl = Gr, vl = Hn, gl = zd.forEach, yl = Sn("hidden"), ml = "Symbol", bl = "prototype", wl = vl.set, kl = vl.getterFor(ml), _l = Object[bl], xl = Ad.Symbol, El = xl && xl[bl], Ol = Ad.RangeError, Cl = Ad.TypeError, Sl = Ad.QObject, Tl = el.f, Ml = il.f, Pl = Jd.f, Dl = nl.f, Il = jd([].push), Bl = al("symbols"), Fl = al("op-symbols"), zl = al("wks"), Nl = !Sl || !Sl[bl] || !Sl[bl].findChild, Al = function(t2, e2, i2) {
        var o2 = Tl(_l, e2);
        o2 && delete _l[e2], Ml(t2, e2, i2), o2 && t2 !== _l && Ml(_l, e2, o2);
      }, Rl = Ld && Wd(function() {
        return 7 !== $d(Ml({}, "a", { get: function() {
          return Ml(this, "a", { value: 7 }).a;
        } })).a;
      }) ? Al : Ml, jl = function(t2, e2) {
        var i2 = Bl[t2] = $d(El);
        return wl(i2, { type: ml, tag: t2, description: e2 }), Ld || (i2.description = e2), i2;
      }, Ll = function(t2, e2, i2) {
        t2 === _l && Ll(Fl, e2, i2), Ud(t2);
        var o2 = Xd(e2);
        return Ud(i2), Vd(Bl, o2) ? (i2.enumerable ? (Vd(t2, yl) && t2[yl][o2] && (t2[yl][o2] = false), i2 = $d(i2, { enumerable: Gd(0, false) })) : (Vd(t2, yl) || Ml(t2, yl, Gd(1, {})), t2[yl][o2] = true), Rl(t2, o2, i2)) : Ml(t2, o2, i2);
      }, Hl = function(t2, e2) {
        Ud(t2);
        var i2 = Yd(e2), o2 = Zd(i2).concat(Ul(i2));
        return gl(o2, function(e3) {
          Ld && !Rd(Wl, i2, e3) || Ll(t2, e3, i2[e3]);
        }), t2;
      }, Wl = function(t2) {
        var e2 = Xd(t2), i2 = Rd(Dl, this, e2);
        return !(this === _l && Vd(Bl, e2) && !Vd(Fl, e2)) && (!(i2 || !Vd(this, e2) || !Vd(Bl, e2) || Vd(this, yl) && this[yl][e2]) || i2);
      }, Vl = function(t2, e2) {
        var i2 = Yd(t2), o2 = Xd(e2);
        if (i2 !== _l || !Vd(Bl, o2) || Vd(Fl, o2)) {
          var n2 = Tl(i2, o2);
          return !n2 || !Vd(Bl, o2) || Vd(i2, yl) && i2[yl][o2] || (n2.enumerable = true), n2;
        }
      }, ql = function(t2) {
        var e2 = Pl(Yd(t2)), i2 = [];
        return gl(e2, function(t3) {
          Vd(Bl, t3) || Vd(hl, t3) || Il(i2, t3);
        }), i2;
      }, Ul = function(t2) {
        var e2 = t2 === _l, i2 = Pl(e2 ? Fl : Yd(t2)), o2 = [];
        return gl(i2, function(t3) {
          !Vd(Bl, t3) || e2 && !Vd(_l, t3) || Il(o2, Bl[t3]);
        }), o2;
      };
      Hd || (xl = function() {
        if (qd(El, this)) throw new Cl("Symbol is not a constructor");
        var t2 = arguments.length && void 0 !== arguments[0] ? Kd(arguments[0]) : void 0, e2 = dl(t2), i2 = function(t3) {
          this === _l && Rd(i2, Fl, t3), Vd(this, yl) && Vd(this[yl], e2) && (this[yl][e2] = false);
          var o2 = Gd(1, t3);
          try {
            Rl(this, e2, o2);
          } catch (t4) {
            if (!(t4 instanceof Ol)) throw t4;
            Al(this, e2, o2);
          }
        };
        return Ld && Nl && Rl(_l, e2, { configurable: true, set: i2 }), jl(e2, t2);
      }, rl(El = xl[bl], "toString", function() {
        return kl(this).tag;
      }), rl(xl, "withoutSetter", function(t2) {
        return jl(dl(t2), t2);
      }), nl.f = Wl, il.f = Ll, ol.f = Hl, el.f = Vl, Qd.f = Jd.f = ql, tl.f = Ul, cl.f = function(t2) {
        return jl(ll(t2), t2);
      }, Ld && sl(El, "description", { configurable: true, get: function() {
        return kl(this).description;
      } })), Nd({ global: true, constructor: true, wrap: true, forced: !Hd, sham: !Hd }, { Symbol: xl }), gl(Zd(zl), function(t2) {
        ul(t2);
      }), Nd({ target: ml, stat: true, forced: !Hd }, { useSetter: function() {
        Nl = true;
      }, useSimple: function() {
        Nl = false;
      } }), Nd({ target: "Object", stat: true, forced: !Hd, sham: !Ld }, { create: function(t2, e2) {
        return void 0 === e2 ? $d(t2) : Hl($d(t2), e2);
      }, defineProperty: Ll, defineProperties: Hl, getOwnPropertyDescriptor: Vl }), Nd({ target: "Object", stat: true, forced: !Hd }, { getOwnPropertyNames: ql }), fl(), pl(xl, ml), hl[yl] = true;
      var Yl = wt && !!Symbol.for && !!Symbol.keyFor, Xl = Mi, Kl = at, Gl = Jt, $l = un, Zl = Xt, Ql = Yl, Jl = Zl("string-to-symbol-registry"), tc = Zl("symbol-to-string-registry");
      Xl({ target: "Symbol", stat: true, forced: !Ql }, { for: function(t2) {
        var e2 = $l(t2);
        if (Gl(Jl, e2)) return Jl[e2];
        var i2 = Kl("Symbol")(e2);
        return Jl[e2] = i2, tc[i2] = e2, i2;
      } });
      var ec = Mi, ic = Jt, oc = Ct, nc = Tt, rc = Yl, sc = Xt("symbol-to-string-registry");
      ec({ target: "Symbol", stat: true, forced: !rc }, { keyFor: function(t2) {
        if (!oc(t2)) throw new TypeError(nc(t2) + " is not a symbol");
        if (ic(sc, t2)) return sc[t2];
      } });
      var ac = Oh, hc = T, dc = k, lc = un, cc = y([].push), uc = Mi, fc = at, pc = u, vc = B, gc = y, yc = s, mc = T, bc = Ct, wc = ko, kc = function(t2) {
        if (hc(t2)) return t2;
        if (ac(t2)) {
          for (var e2 = t2.length, i2 = [], o2 = 0; o2 < e2; o2++) {
            var n2 = t2[o2];
            "string" == typeof n2 ? cc(i2, n2) : "number" != typeof n2 && "Number" !== dc(n2) && "String" !== dc(n2) || cc(i2, lc(n2));
          }
          var r2 = i2.length, s2 = true;
          return function(t3, e3) {
            if (s2) return s2 = false, e3;
            if (ac(this)) return e3;
            for (var o3 = 0; o3 < r2; o3++) if (i2[o3] === t3) return e3;
          };
        }
      }, _c = wt, xc = String, Ec = fc("JSON", "stringify"), Oc = gc(/./.exec), Cc = gc("".charAt), Sc = gc("".charCodeAt), Tc = gc("".replace), Mc = gc(1 .toString), Pc = /[\uD800-\uDFFF]/g, Dc = /^[\uD800-\uDBFF]$/, Ic = /^[\uDC00-\uDFFF]$/, Bc = !_c || yc(function() {
        var t2 = fc("Symbol")("stringify detection");
        return "[null]" !== Ec([t2]) || "{}" !== Ec({ a: t2 }) || "{}" !== Ec(Object(t2));
      }), Fc = yc(function() {
        return '"\\udf06\\ud834"' !== Ec("\uDF06\uD834") || '"\\udead"' !== Ec("\uDEAD");
      }), zc = function(t2, e2) {
        var i2 = wc(arguments), o2 = kc(e2);
        if (mc(o2) || void 0 !== t2 && !bc(t2)) return i2[1] = function(t3, e3) {
          if (mc(o2) && (e3 = vc(o2, this, xc(t3), e3)), !bc(e3)) return e3;
        }, pc(Ec, null, i2);
      }, Nc = function(t2, e2, i2) {
        var o2 = Cc(i2, e2 - 1), n2 = Cc(i2, e2 + 1);
        return Oc(Dc, t2) && !Oc(Ic, n2) || Oc(Ic, t2) && !Oc(Dc, o2) ? "\\u" + Mc(Sc(t2, 0), 16) : t2;
      };
      Ec && uc({ target: "JSON", stat: true, arity: 3, forced: Bc || Fc }, { stringify: function(t2, e2, i2) {
        var o2 = wc(arguments), n2 = pc(Bc ? zc : Ec, null, o2);
        return Fc && "string" == typeof n2 ? Tc(n2, Pc, Nc) : n2;
      } });
      var Ac = no, Rc = $t;
      Mi({ target: "Object", stat: true, forced: !wt || s(function() {
        Ac.f(1);
      }) }, { getOwnPropertySymbols: function(t2) {
        var e2 = Ac.f;
        return e2 ? e2(Rc(t2)) : [];
      } }), _d("asyncIterator"), _d("hasInstance"), _d("isConcatSpreadable"), _d("iterator"), _d("match"), _d("matchAll"), _d("replace"), _d("search"), _d("species"), _d("split");
      var jc = Sd;
      _d("toPrimitive"), jc();
      var Lc = at, Hc = Gr;
      _d("toStringTag"), Hc(Lc("Symbol"), "Symbol"), _d("unscopables"), Gr(r.JSON, "JSON", true);
      var Wc = it.Symbol, Vc = fe, qc = Qe.f, Uc = Vc("metadata"), Yc = Function.prototype;
      void 0 === Yc[Uc] && qc(Yc, Uc, { value: null }), _d("asyncDispose"), _d("dispose"), _d("metadata");
      var Xc = Wc, Kc = y, Gc = at("Symbol"), $c = Gc.keyFor, Zc = Kc(Gc.prototype.valueOf), Qc = Gc.isRegisteredSymbol || function(t2) {
        try {
          return void 0 !== $c(Zc(t2));
        } catch (t3) {
          return false;
        }
      };
      Mi({ target: "Symbol", stat: true }, { isRegisteredSymbol: Qc });
      for (var Jc = Xt, tu = at, eu = y, iu = Ct, ou = fe, nu = tu("Symbol"), ru = nu.isWellKnownSymbol, su = tu("Object", "getOwnPropertyNames"), au = eu(nu.prototype.valueOf), hu = Jc("wks"), du = 0, lu = su(nu), cu = lu.length; du < cu; du++) try {
        var uu = lu[du];
        iu(nu[uu]) && ou(uu);
      } catch (t2) {
      }
      var fu = function(t2) {
        if (ru && ru(t2)) return true;
        try {
          for (var e2 = au(t2), i2 = 0, o2 = su(hu), n2 = o2.length; i2 < n2; i2++) if (hu[o2[i2]] == e2) return true;
        } catch (t3) {
        }
        return false;
      };
      Mi({ target: "Symbol", stat: true, forced: true }, { isWellKnownSymbol: fu }), _d("matcher"), _d("observable"), Mi({ target: "Symbol", stat: true, name: "isRegisteredSymbol" }, { isRegistered: Qc }), Mi({ target: "Symbol", stat: true, name: "isWellKnownSymbol", forced: true }, { isWellKnown: fu }), _d("metadataKey"), _d("patternMatch"), _d("replaceAll");
      var pu = o(Xc), vu = o(gd.f("iterator"));
      function gu(t2) {
        return gu = "function" == typeof pu && "symbol" == typeof vu ? function(t3) {
          return typeof t3;
        } : function(t3) {
          return t3 && "function" == typeof pu && t3.constructor === pu && t3 !== pu.prototype ? "symbol" : typeof t3;
        }, gu(t2);
      }
      var yu = o(gd.f("toPrimitive"));
      function mu(t2) {
        var e2 = function(t3, e3) {
          if ("object" !== gu(t3) || null === t3) return t3;
          var i2 = t3[yu];
          if (void 0 !== i2) {
            var o2 = i2.call(t3, e3 || "default");
            if ("object" !== gu(o2)) return o2;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === e3 ? String : Number)(t3);
        }(t2, "string");
        return "symbol" === gu(e2) ? e2 : String(e2);
      }
      function bu(t2, e2) {
        for (var i2 = 0; i2 < e2.length; i2++) {
          var o2 = e2[i2];
          o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), xh(t2, mu(o2.key), o2);
        }
      }
      function wu(t2, e2, i2) {
        return e2 && bu(t2.prototype, e2), i2 && bu(t2, i2), xh(t2, "prototype", { writable: false }), t2;
      }
      Mi({ target: "Array", stat: true }, { isArray: Oh });
      var ku = it.Array.isArray, _u = o(ku);
      var xu = P, Eu = Oh, Ou = TypeError, Cu = Object.getOwnPropertyDescriptor, Su = xu && !function() {
        if (void 0 !== this) return true;
        try {
          Object.defineProperty([], "length", { writable: false }).length = 1;
        } catch (t2) {
          return t2 instanceof TypeError;
        }
      }() ? function(t2, e2) {
        if (Eu(t2) && !Cu(t2, "length").writable) throw new Ou("Cannot set read only .length");
        return t2.length = e2;
      } : function(t2, e2) {
        return t2.length = e2;
      }, Tu = $t, Mu = Hi, Pu = Su, Du = Sh;
      Mi({ target: "Array", proto: true, arity: 1, forced: s(function() {
        return 4294967297 !== [].push.call({ length: 4294967296 }, 1);
      }) || !function() {
        try {
          Object.defineProperty([], "length", { writable: false }).push();
        } catch (t2) {
          return t2 instanceof TypeError;
        }
      }() }, { push: function(t2) {
        var e2 = Tu(this), i2 = Mu(e2), o2 = arguments.length;
        Du(i2 + o2);
        for (var n2 = 0; n2 < o2; n2++) e2[i2] = arguments[n2], i2++;
        return Pu(e2, i2), i2;
      } });
      var Iu = zo("Array").push, Bu = ht, Fu = Iu, zu = Array.prototype, Nu = function(t2) {
        var e2 = t2.push;
        return t2 === zu || Bu(zu, t2) && e2 === zu.push ? Fu : e2;
      }, Au = o(Nu);
      var Ru = Mi, ju = Oh, Lu = ca, Hu = et, Wu = Ai, Vu = Hi, qu = Q, Uu = va, Yu = fe, Xu = ko, Ku = Rh("slice"), Gu = Yu("species"), $u = Array, Zu = Math.max;
      Ru({ target: "Array", proto: true, forced: !Ku }, { slice: function(t2, e2) {
        var i2, o2, n2, r2 = qu(this), s2 = Vu(r2), a2 = Wu(t2, s2), h2 = Wu(void 0 === e2 ? s2 : e2, s2);
        if (ju(r2) && (i2 = r2.constructor, (Lu(i2) && (i2 === $u || ju(i2.prototype)) || Hu(i2) && null === (i2 = i2[Gu])) && (i2 = void 0), i2 === $u || void 0 === i2)) return Xu(r2, a2, h2);
        for (o2 = new (void 0 === i2 ? $u : i2)(Zu(h2 - a2, 0)), n2 = 0; a2 < h2; a2++, n2++) a2 in r2 && Uu(o2, n2, r2[a2]);
        return o2.length = n2, o2;
      } });
      var Qu = zo("Array").slice, Ju = ht, tf = Qu, ef = Array.prototype, of = function(t2) {
        var e2 = t2.slice;
        return t2 === ef || Ju(ef, t2) && e2 === ef.slice ? tf : e2;
      }, nf = of, rf = o(nf), sf = o(Ya);
      function af(t2, e2) {
        (null == e2 || e2 > t2.length) && (e2 = t2.length);
        for (var i2 = 0, o2 = new Array(e2); i2 < e2; i2++) o2[i2] = t2[i2];
        return o2;
      }
      function hf(t2, e2) {
        var i2;
        if (t2) {
          if ("string" == typeof t2) return af(t2, e2);
          var o2 = rf(i2 = Object.prototype.toString.call(t2)).call(i2, 8, -1);
          return "Object" === o2 && t2.constructor && (o2 = t2.constructor.name), "Map" === o2 || "Set" === o2 ? sf(t2) : "Arguments" === o2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o2) ? af(t2, e2) : void 0;
        }
      }
      function df(t2, e2) {
        return function(t3) {
          if (_u(t3)) return t3;
        }(t2) || function(t3, e3) {
          var i2 = null == t3 ? null : void 0 !== pu && fh(t3) || t3["@@iterator"];
          if (null != i2) {
            var o2, n2, r2, s2, a2 = [], h2 = true, d2 = false;
            try {
              if (r2 = (i2 = i2.call(t3)).next, 0 === e3) {
                if (Object(i2) !== i2) return;
                h2 = false;
              } else for (; !(h2 = (o2 = r2.call(i2)).done) && (Au(a2).call(a2, o2.value), a2.length !== e3); h2 = true) ;
            } catch (t4) {
              d2 = true, n2 = t4;
            } finally {
              try {
                if (!h2 && null != i2.return && (s2 = i2.return(), Object(s2) !== s2)) return;
              } finally {
                if (d2) throw n2;
              }
            }
            return a2;
          }
        }(t2, e2) || hf(t2, e2) || function() {
          throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }
      function lf(t2) {
        return function(t3) {
          if (_u(t3)) return af(t3);
        }(t2) || function(t3) {
          if (void 0 !== pu && null != fh(t3) || null != t3["@@iterator"]) return sf(t3);
        }(t2) || hf(t2) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }
      var cf = o(Wc), uf = zo("Array").concat, ff = ht, pf = uf, vf = Array.prototype, gf = function(t2) {
        var e2 = t2.concat;
        return t2 === vf || ff(vf, t2) && e2 === vf.concat ? pf : e2;
      }, yf = o(gf), mf = o(nf), bf = at, wf = Jh, kf = no, _f = oi, xf = y([].concat), Ef = bf("Reflect", "ownKeys") || function(t2) {
        var e2 = wf.f(_f(t2)), i2 = kf.f;
        return i2 ? xf(e2, i2(t2)) : e2;
      }, Of = o(ku), Cf = zd.map;
      Mi({ target: "Array", proto: true, forced: !Rh("map") }, { map: function(t2) {
        return Cf(this, t2, arguments.length > 1 ? arguments[1] : void 0);
      } });
      var Sf = zo("Array").map, Tf = ht, Mf = Sf, Pf = Array.prototype, Df = function(t2) {
        var e2 = t2.map;
        return t2 === Pf || Tf(Pf, t2) && e2 === Pf.map ? Mf : e2;
      }, If = o(Df), Bf = $t, Ff = oo;
      Mi({ target: "Object", stat: true, forced: s(function() {
        Ff(1);
      }) }, { keys: function(t2) {
        return Ff(Bf(t2));
      } });
      var zf = o(it.Object.keys), Nf = Mi, Af = Date, Rf = y(Af.prototype.getTime);
      Nf({ target: "Date", stat: true }, { now: function() {
        return Rf(new Af());
      } });
      var jf = o(it.Date.now), Lf = s, Hf = function(t2, e2) {
        var i2 = [][t2];
        return !!i2 && Lf(function() {
          i2.call(null, e2 || function() {
            return 1;
          }, 1);
        });
      }, Wf = zd.forEach, Vf = Hf("forEach") ? [].forEach : function(t2) {
        return Wf(this, t2, arguments.length > 1 ? arguments[1] : void 0);
      };
      Mi({ target: "Array", proto: true, forced: [].forEach !== Vf }, { forEach: Vf });
      var qf = zo("Array").forEach, Uf = dn, Yf = Jt, Xf = ht, Kf = qf, Gf = Array.prototype, $f = { DOMTokenList: true, NodeList: true }, Zf = function(t2) {
        var e2 = t2.forEach;
        return t2 === Gf || Xf(Gf, t2) && e2 === Gf.forEach || Yf($f, Uf(t2)) ? Kf : e2;
      }, Qf = o(Zf), Jf = Mi, tp = Oh, ep = y([].reverse), ip = [1, 2];
      Jf({ target: "Array", proto: true, forced: String(ip) === String(ip.reverse()) }, { reverse: function() {
        return tp(this) && (this.length = this.length), ep(this);
      } });
      var op = zo("Array").reverse, np = ht, rp = op, sp = Array.prototype, ap = function(t2) {
        var e2 = t2.reverse;
        return t2 === sp || np(sp, t2) && e2 === sp.reverse ? rp : e2;
      }, hp = o(ap), dp = Tt, lp = TypeError, cp = function(t2, e2) {
        if (!delete t2[e2]) throw new lp("Cannot delete property " + dp(e2) + " of " + dp(t2));
      }, up = Mi, fp = $t, pp = Ai, vp = Bi, gp = Hi, yp = Su, mp = Sh, bp = Fh, wp = va, kp = cp, _p = Rh("splice"), xp = Math.max, Ep = Math.min;
      up({ target: "Array", proto: true, forced: !_p }, { splice: function(t2, e2) {
        var i2, o2, n2, r2, s2, a2, h2 = fp(this), d2 = gp(h2), l2 = pp(t2, d2), c2 = arguments.length;
        for (0 === c2 ? i2 = o2 = 0 : 1 === c2 ? (i2 = 0, o2 = d2 - l2) : (i2 = c2 - 2, o2 = Ep(xp(vp(e2), 0), d2 - l2)), mp(d2 + i2 - o2), n2 = bp(h2, o2), r2 = 0; r2 < o2; r2++) (s2 = l2 + r2) in h2 && wp(n2, r2, h2[s2]);
        if (n2.length = o2, i2 < o2) {
          for (r2 = l2; r2 < d2 - o2; r2++) a2 = r2 + i2, (s2 = r2 + o2) in h2 ? h2[a2] = h2[s2] : kp(h2, a2);
          for (r2 = d2; r2 > d2 - o2 + i2; r2--) kp(h2, r2 - 1);
        } else if (i2 > o2) for (r2 = d2 - o2; r2 > l2; r2--) a2 = r2 + i2 - 1, (s2 = r2 + o2 - 1) in h2 ? h2[a2] = h2[s2] : kp(h2, a2);
        for (r2 = 0; r2 < i2; r2++) h2[r2 + l2] = arguments[r2 + 2];
        return yp(h2, d2 - o2 + i2), n2;
      } });
      var Op = zo("Array").splice, Cp = ht, Sp = Op, Tp = Array.prototype, Mp = function(t2) {
        var e2 = t2.splice;
        return t2 === Tp || Cp(Tp, t2) && e2 === Tp.splice ? Sp : e2;
      }, Pp = o(Mp), Dp = Yi.includes;
      Mi({ target: "Array", proto: true, forced: s(function() {
        return !Array(1).includes();
      }) }, { includes: function(t2) {
        return Dp(this, t2, arguments.length > 1 ? arguments[1] : void 0);
      } });
      var Ip = zo("Array").includes, Bp = et, Fp = k, zp = fe("match"), Np = function(t2) {
        var e2;
        return Bp(t2) && (void 0 !== (e2 = t2[zp]) ? !!e2 : "RegExp" === Fp(t2));
      }, Ap = TypeError, Rp = fe("match"), jp = Mi, Lp = function(t2) {
        if (Np(t2)) throw new Ap("The method doesn't accept regular expressions");
        return t2;
      }, Hp = G, Wp = un, Vp = function(t2) {
        var e2 = /./;
        try {
          "/./"[t2](e2);
        } catch (i2) {
          try {
            return e2[Rp] = false, "/./"[t2](e2);
          } catch (t3) {
          }
        }
        return false;
      }, qp = y("".indexOf);
      jp({ target: "String", proto: true, forced: !Vp("includes") }, { includes: function(t2) {
        return !!~qp(Wp(Hp(this)), Wp(Lp(t2)), arguments.length > 1 ? arguments[1] : void 0);
      } });
      var Up = zo("String").includes, Yp = ht, Xp = Ip, Kp = Up, Gp = Array.prototype, $p = String.prototype, Zp = function(t2) {
        var e2 = t2.includes;
        return t2 === Gp || Yp(Gp, t2) && e2 === Gp.includes ? Xp : "string" == typeof t2 || t2 === $p || Yp($p, t2) && e2 === $p.includes ? Kp : e2;
      }, Qp = o(Zp), Jp = $t, tv = Tr, ev = wr;
      Mi({ target: "Object", stat: true, forced: s(function() {
        tv(1);
      }), sham: !ev }, { getPrototypeOf: function(t2) {
        return tv(Jp(t2));
      } });
      var iv = it.Object.getPrototypeOf, ov = o(iv), nv = zd.filter;
      Mi({ target: "Array", proto: true, forced: !Rh("filter") }, { filter: function(t2) {
        return nv(this, t2, arguments.length > 1 ? arguments[1] : void 0);
      } });
      var rv = zo("Array").filter, sv = ht, av = rv, hv = Array.prototype, dv = function(t2) {
        var e2 = t2.filter;
        return t2 === hv || sv(hv, t2) && e2 === hv.filter ? av : e2;
      }, lv = o(dv), cv = "	\n\v\f\r                　\u2028\u2029\uFEFF", uv = G, fv = un, pv = cv, vv = y("".replace), gv = RegExp("^[" + pv + "]+"), yv = RegExp("(^|[^" + pv + "])[" + pv + "]+$"), mv = function(t2) {
        return function(e2) {
          var i2 = fv(uv(e2));
          return 1 & t2 && (i2 = vv(i2, gv, "")), 2 & t2 && (i2 = vv(i2, yv, "$1")), i2;
        };
      }, bv = { start: mv(1), end: mv(2), trim: mv(3) }, wv = r, kv = s, _v = y, xv = un, Ev = bv.trim, Ov = cv, Cv = wv.parseInt, Sv = wv.Symbol, Tv = Sv && Sv.iterator, Mv = /^[+-]?0x/i, Pv = _v(Mv.exec), Dv = 8 !== Cv(Ov + "08") || 22 !== Cv(Ov + "0x16") || Tv && !kv(function() {
        Cv(Object(Tv));
      }) ? function(t2, e2) {
        var i2 = Ev(xv(t2));
        return Cv(i2, e2 >>> 0 || (Pv(Mv, i2) ? 16 : 10));
      } : Cv;
      Mi({ global: true, forced: parseInt !== Dv }, { parseInt: Dv });
      var Iv = o(it.parseInt), Bv = Mi, Fv = Yi.indexOf, zv = Hf, Nv = E([].indexOf), Av = !!Nv && 1 / Nv([1], 1, -0) < 0;
      Bv({ target: "Array", proto: true, forced: Av || !zv("indexOf") }, { indexOf: function(t2) {
        var e2 = arguments.length > 1 ? arguments[1] : void 0;
        return Av ? Nv(this, t2, e2) || 0 : Fv(this, t2, e2);
      } });
      var Rv = zo("Array").indexOf, jv = ht, Lv = Rv, Hv = Array.prototype, Wv = function(t2) {
        var e2 = t2.indexOf;
        return t2 === Hv || jv(Hv, t2) && e2 === Hv.indexOf ? Lv : e2;
      }, Vv = o(Wv);
      Mi({ target: "Object", stat: true, sham: !P }, { create: br });
      var qv = it.Object, Uv = function(t2, e2) {
        return qv.create(t2, e2);
      }, Yv = o(Uv), Xv = it, Kv = u;
      Xv.JSON || (Xv.JSON = { stringify: JSON.stringify });
      var Gv = function(t2, e2, i2) {
        return Kv(Xv.JSON.stringify, null, arguments);
      }, $v = o(Gv), Zv = "function" == typeof Bun && Bun && "string" == typeof Bun.version, Qv = TypeError, Jv = r, tg = u, eg = T, ig = Zv, og = dt, ng = ko, rg = function(t2, e2) {
        if (t2 < e2) throw new Qv("Not enough arguments");
        return t2;
      }, sg = Jv.Function, ag = /MSIE .\./.test(og) || ig && function() {
        var t2 = Jv.Bun.version.split(".");
        return t2.length < 3 || "0" === t2[0] && (t2[1] < 3 || "3" === t2[1] && "0" === t2[2]);
      }(), hg = function(t2, e2) {
        var i2 = e2 ? 2 : 1;
        return ag ? function(o2, n2) {
          var r2 = rg(arguments.length, 1) > i2, s2 = eg(o2) ? o2 : sg(o2), a2 = r2 ? ng(arguments, i2) : [], h2 = r2 ? function() {
            tg(s2, this, a2);
          } : s2;
          return e2 ? t2(h2, n2) : t2(h2);
        } : t2;
      }, dg = Mi, lg = r, cg = hg(lg.setInterval, true);
      dg({ global: true, bind: true, forced: lg.setInterval !== cg }, { setInterval: cg });
      var ug = Mi, fg = r, pg = hg(fg.setTimeout, true);
      ug({ global: true, bind: true, forced: fg.setTimeout !== pg }, { setTimeout: pg });
      var vg = o(it.setTimeout), gg = $t, yg = Ai, mg = Hi, bg = function(t2) {
        for (var e2 = gg(this), i2 = mg(e2), o2 = arguments.length, n2 = yg(o2 > 1 ? arguments[1] : void 0, i2), r2 = o2 > 2 ? arguments[2] : void 0, s2 = void 0 === r2 ? i2 : yg(r2, i2); s2 > n2; ) e2[n2++] = t2;
        return e2;
      };
      Mi({ target: "Array", proto: true }, { fill: bg });
      var wg, kg = zo("Array").fill, _g = ht, xg = kg, Eg = Array.prototype, Og = function(t2) {
        var e2 = t2.fill;
        return t2 === Eg || _g(Eg, t2) && e2 === Eg.fill ? xg : e2;
      }, Cg = o(Og);
      function Sg() {
        return Sg = Object.assign || function(t2) {
          for (var e2 = 1; e2 < arguments.length; e2++) {
            var i2 = arguments[e2];
            for (var o2 in i2) Object.prototype.hasOwnProperty.call(i2, o2) && (t2[o2] = i2[o2]);
          }
          return t2;
        }, Sg.apply(this, arguments);
      }
      function Tg(t2, e2) {
        t2.prototype = Object.create(e2.prototype), t2.prototype.constructor = t2, t2.__proto__ = e2;
      }
      function Mg(t2) {
        if (void 0 === t2) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t2;
      }
      wg = "function" != typeof Object.assign ? function(t2) {
        if (null == t2) throw new TypeError("Cannot convert undefined or null to object");
        for (var e2 = Object(t2), i2 = 1; i2 < arguments.length; i2++) {
          var o2 = arguments[i2];
          if (null != o2) for (var n2 in o2) o2.hasOwnProperty(n2) && (e2[n2] = o2[n2]);
        }
        return e2;
      } : Object.assign;
      var Pg, Dg = wg, Ig = ["", "webkit", "Moz", "MS", "ms", "o"], Bg = "undefined" == typeof document ? { style: {} } : document.createElement("div"), Fg = Math.round, zg = Math.abs, Ng = Date.now;
      function Ag(t2, e2) {
        for (var i2, o2, n2 = e2[0].toUpperCase() + e2.slice(1), r2 = 0; r2 < Ig.length; ) {
          if ((o2 = (i2 = Ig[r2]) ? i2 + n2 : e2) in t2) return o2;
          r2++;
        }
      }
      Pg = "undefined" == typeof window ? {} : window;
      var Rg = Ag(Bg.style, "touchAction"), jg = void 0 !== Rg;
      var Lg = "compute", Hg = "auto", Wg = "manipulation", Vg = "none", qg = "pan-x", Ug = "pan-y", Yg = function() {
        if (!jg) return false;
        var t2 = {}, e2 = Pg.CSS && Pg.CSS.supports;
        return ["auto", "manipulation", "pan-y", "pan-x", "pan-x pan-y", "none"].forEach(function(i2) {
          return t2[i2] = !e2 || Pg.CSS.supports("touch-action", i2);
        }), t2;
      }(), Xg = "ontouchstart" in Pg, Kg = void 0 !== Ag(Pg, "PointerEvent"), Gg = Xg && /mobile|tablet|ip(ad|hone|od)|android/i.test(navigator.userAgent), $g = "touch", Zg = "mouse", Qg = 25, Jg = 1, ty = 4, ey = 8, iy = 1, oy = 2, ny = 4, ry = 8, sy = 16, ay = oy | ny, hy = ry | sy, dy = ay | hy, ly = ["x", "y"], cy = ["clientX", "clientY"];
      function uy(t2, e2, i2) {
        var o2;
        if (t2) if (t2.forEach) t2.forEach(e2, i2);
        else if (void 0 !== t2.length) for (o2 = 0; o2 < t2.length; ) e2.call(i2, t2[o2], o2, t2), o2++;
        else for (o2 in t2) t2.hasOwnProperty(o2) && e2.call(i2, t2[o2], o2, t2);
      }
      function fy(t2, e2) {
        return "function" == typeof t2 ? t2.apply(e2 && e2[0] || void 0, e2) : t2;
      }
      function py(t2, e2) {
        return t2.indexOf(e2) > -1;
      }
      var vy = function() {
        function t2(t3, e3) {
          this.manager = t3, this.set(e3);
        }
        var e2 = t2.prototype;
        return e2.set = function(t3) {
          t3 === Lg && (t3 = this.compute()), jg && this.manager.element.style && Yg[t3] && (this.manager.element.style[Rg] = t3), this.actions = t3.toLowerCase().trim();
        }, e2.update = function() {
          this.set(this.manager.options.touchAction);
        }, e2.compute = function() {
          var t3 = [];
          return uy(this.manager.recognizers, function(e3) {
            fy(e3.options.enable, [e3]) && (t3 = t3.concat(e3.getTouchAction()));
          }), function(t4) {
            if (py(t4, Vg)) return Vg;
            var e3 = py(t4, qg), i2 = py(t4, Ug);
            return e3 && i2 ? Vg : e3 || i2 ? e3 ? qg : Ug : py(t4, Wg) ? Wg : Hg;
          }(t3.join(" "));
        }, e2.preventDefaults = function(t3) {
          var e3 = t3.srcEvent, i2 = t3.offsetDirection;
          if (this.manager.session.prevented) e3.preventDefault();
          else {
            var o2 = this.actions, n2 = py(o2, Vg) && !Yg[Vg], r2 = py(o2, Ug) && !Yg[Ug], s2 = py(o2, qg) && !Yg[qg];
            if (n2) {
              var a2 = 1 === t3.pointers.length, h2 = t3.distance < 2, d2 = t3.deltaTime < 250;
              if (a2 && h2 && d2) return;
            }
            if (!s2 || !r2) return n2 || r2 && i2 & ay || s2 && i2 & hy ? this.preventSrc(e3) : void 0;
          }
        }, e2.preventSrc = function(t3) {
          this.manager.session.prevented = true, t3.preventDefault();
        }, t2;
      }();
      function gy(t2, e2) {
        for (; t2; ) {
          if (t2 === e2) return true;
          t2 = t2.parentNode;
        }
        return false;
      }
      function yy(t2) {
        var e2 = t2.length;
        if (1 === e2) return { x: Fg(t2[0].clientX), y: Fg(t2[0].clientY) };
        for (var i2 = 0, o2 = 0, n2 = 0; n2 < e2; ) i2 += t2[n2].clientX, o2 += t2[n2].clientY, n2++;
        return { x: Fg(i2 / e2), y: Fg(o2 / e2) };
      }
      function my(t2) {
        for (var e2 = [], i2 = 0; i2 < t2.pointers.length; ) e2[i2] = { clientX: Fg(t2.pointers[i2].clientX), clientY: Fg(t2.pointers[i2].clientY) }, i2++;
        return { timeStamp: Ng(), pointers: e2, center: yy(e2), deltaX: t2.deltaX, deltaY: t2.deltaY };
      }
      function by(t2, e2, i2) {
        i2 || (i2 = ly);
        var o2 = e2[i2[0]] - t2[i2[0]], n2 = e2[i2[1]] - t2[i2[1]];
        return Math.sqrt(o2 * o2 + n2 * n2);
      }
      function wy(t2, e2, i2) {
        i2 || (i2 = ly);
        var o2 = e2[i2[0]] - t2[i2[0]], n2 = e2[i2[1]] - t2[i2[1]];
        return 180 * Math.atan2(n2, o2) / Math.PI;
      }
      function ky(t2, e2) {
        return t2 === e2 ? iy : zg(t2) >= zg(e2) ? t2 < 0 ? oy : ny : e2 < 0 ? ry : sy;
      }
      function _y(t2, e2, i2) {
        return { x: e2 / t2 || 0, y: i2 / t2 || 0 };
      }
      function xy(t2, e2) {
        var i2 = t2.session, o2 = e2.pointers, n2 = o2.length;
        i2.firstInput || (i2.firstInput = my(e2)), n2 > 1 && !i2.firstMultiple ? i2.firstMultiple = my(e2) : 1 === n2 && (i2.firstMultiple = false);
        var r2 = i2.firstInput, s2 = i2.firstMultiple, a2 = s2 ? s2.center : r2.center, h2 = e2.center = yy(o2);
        e2.timeStamp = Ng(), e2.deltaTime = e2.timeStamp - r2.timeStamp, e2.angle = wy(a2, h2), e2.distance = by(a2, h2), function(t3, e3) {
          var i3 = e3.center, o3 = t3.offsetDelta || {}, n3 = t3.prevDelta || {}, r3 = t3.prevInput || {};
          e3.eventType !== Jg && r3.eventType !== ty || (n3 = t3.prevDelta = { x: r3.deltaX || 0, y: r3.deltaY || 0 }, o3 = t3.offsetDelta = { x: i3.x, y: i3.y }), e3.deltaX = n3.x + (i3.x - o3.x), e3.deltaY = n3.y + (i3.y - o3.y);
        }(i2, e2), e2.offsetDirection = ky(e2.deltaX, e2.deltaY);
        var d2, l2, c2 = _y(e2.deltaTime, e2.deltaX, e2.deltaY);
        e2.overallVelocityX = c2.x, e2.overallVelocityY = c2.y, e2.overallVelocity = zg(c2.x) > zg(c2.y) ? c2.x : c2.y, e2.scale = s2 ? (d2 = s2.pointers, by((l2 = o2)[0], l2[1], cy) / by(d2[0], d2[1], cy)) : 1, e2.rotation = s2 ? function(t3, e3) {
          return wy(e3[1], e3[0], cy) + wy(t3[1], t3[0], cy);
        }(s2.pointers, o2) : 0, e2.maxPointers = i2.prevInput ? e2.pointers.length > i2.prevInput.maxPointers ? e2.pointers.length : i2.prevInput.maxPointers : e2.pointers.length, function(t3, e3) {
          var i3, o3, n3, r3, s3 = t3.lastInterval || e3, a3 = e3.timeStamp - s3.timeStamp;
          if (e3.eventType !== ey && (a3 > Qg || void 0 === s3.velocity)) {
            var h3 = e3.deltaX - s3.deltaX, d3 = e3.deltaY - s3.deltaY, l3 = _y(a3, h3, d3);
            o3 = l3.x, n3 = l3.y, i3 = zg(l3.x) > zg(l3.y) ? l3.x : l3.y, r3 = ky(h3, d3), t3.lastInterval = e3;
          } else i3 = s3.velocity, o3 = s3.velocityX, n3 = s3.velocityY, r3 = s3.direction;
          e3.velocity = i3, e3.velocityX = o3, e3.velocityY = n3, e3.direction = r3;
        }(i2, e2);
        var u2, f2 = t2.element, p2 = e2.srcEvent;
        gy(u2 = p2.composedPath ? p2.composedPath()[0] : p2.path ? p2.path[0] : p2.target, f2) && (f2 = u2), e2.target = f2;
      }
      function Ey(t2, e2, i2) {
        var o2 = i2.pointers.length, n2 = i2.changedPointers.length, r2 = e2 & Jg && o2 - n2 == 0, s2 = e2 & (ty | ey) && o2 - n2 == 0;
        i2.isFirst = !!r2, i2.isFinal = !!s2, r2 && (t2.session = {}), i2.eventType = e2, xy(t2, i2), t2.emit("hammer.input", i2), t2.recognize(i2), t2.session.prevInput = i2;
      }
      function Oy(t2) {
        return t2.trim().split(/\s+/g);
      }
      function Cy(t2, e2, i2) {
        uy(Oy(e2), function(e3) {
          t2.addEventListener(e3, i2, false);
        });
      }
      function Sy(t2, e2, i2) {
        uy(Oy(e2), function(e3) {
          t2.removeEventListener(e3, i2, false);
        });
      }
      function Ty(t2) {
        var e2 = t2.ownerDocument || t2;
        return e2.defaultView || e2.parentWindow || window;
      }
      var My = function() {
        function t2(t3, e3) {
          var i2 = this;
          this.manager = t3, this.callback = e3, this.element = t3.element, this.target = t3.options.inputTarget, this.domHandler = function(e4) {
            fy(t3.options.enable, [t3]) && i2.handler(e4);
          }, this.init();
        }
        var e2 = t2.prototype;
        return e2.handler = function() {
        }, e2.init = function() {
          this.evEl && Cy(this.element, this.evEl, this.domHandler), this.evTarget && Cy(this.target, this.evTarget, this.domHandler), this.evWin && Cy(Ty(this.element), this.evWin, this.domHandler);
        }, e2.destroy = function() {
          this.evEl && Sy(this.element, this.evEl, this.domHandler), this.evTarget && Sy(this.target, this.evTarget, this.domHandler), this.evWin && Sy(Ty(this.element), this.evWin, this.domHandler);
        }, t2;
      }();
      function Py(t2, e2, i2) {
        if (t2.indexOf && !i2) return t2.indexOf(e2);
        for (var o2 = 0; o2 < t2.length; ) {
          if (i2 && t2[o2][i2] == e2 || !i2 && t2[o2] === e2) return o2;
          o2++;
        }
        return -1;
      }
      var Dy = { pointerdown: Jg, pointermove: 2, pointerup: ty, pointercancel: ey, pointerout: ey }, Iy = { 2: $g, 3: "pen", 4: Zg, 5: "kinect" }, By = "pointerdown", Fy = "pointermove pointerup pointercancel";
      Pg.MSPointerEvent && !Pg.PointerEvent && (By = "MSPointerDown", Fy = "MSPointerMove MSPointerUp MSPointerCancel");
      var zy = function(t2) {
        function e2() {
          var i2, o2 = e2.prototype;
          return o2.evEl = By, o2.evWin = Fy, (i2 = t2.apply(this, arguments) || this).store = i2.manager.session.pointerEvents = [], i2;
        }
        return Tg(e2, t2), e2.prototype.handler = function(t3) {
          var e3 = this.store, i2 = false, o2 = t3.type.toLowerCase().replace("ms", ""), n2 = Dy[o2], r2 = Iy[t3.pointerType] || t3.pointerType, s2 = r2 === $g, a2 = Py(e3, t3.pointerId, "pointerId");
          n2 & Jg && (0 === t3.button || s2) ? a2 < 0 && (e3.push(t3), a2 = e3.length - 1) : n2 & (ty | ey) && (i2 = true), a2 < 0 || (e3[a2] = t3, this.callback(this.manager, n2, { pointers: e3, changedPointers: [t3], pointerType: r2, srcEvent: t3 }), i2 && e3.splice(a2, 1));
        }, e2;
      }(My);
      function Ny(t2) {
        return Array.prototype.slice.call(t2, 0);
      }
      function Ay(t2, e2, i2) {
        for (var o2 = [], n2 = [], r2 = 0; r2 < t2.length; ) {
          var s2 = e2 ? t2[r2][e2] : t2[r2];
          Py(n2, s2) < 0 && o2.push(t2[r2]), n2[r2] = s2, r2++;
        }
        return i2 && (o2 = e2 ? o2.sort(function(t3, i3) {
          return t3[e2] > i3[e2];
        }) : o2.sort()), o2;
      }
      var Ry = { touchstart: Jg, touchmove: 2, touchend: ty, touchcancel: ey }, jy = function(t2) {
        function e2() {
          var i2;
          return e2.prototype.evTarget = "touchstart touchmove touchend touchcancel", (i2 = t2.apply(this, arguments) || this).targetIds = {}, i2;
        }
        return Tg(e2, t2), e2.prototype.handler = function(t3) {
          var e3 = Ry[t3.type], i2 = Ly.call(this, t3, e3);
          i2 && this.callback(this.manager, e3, { pointers: i2[0], changedPointers: i2[1], pointerType: $g, srcEvent: t3 });
        }, e2;
      }(My);
      function Ly(t2, e2) {
        var i2, o2, n2 = Ny(t2.touches), r2 = this.targetIds;
        if (e2 & (2 | Jg) && 1 === n2.length) return r2[n2[0].identifier] = true, [n2, n2];
        var s2 = Ny(t2.changedTouches), a2 = [], h2 = this.target;
        if (o2 = n2.filter(function(t3) {
          return gy(t3.target, h2);
        }), e2 === Jg) for (i2 = 0; i2 < o2.length; ) r2[o2[i2].identifier] = true, i2++;
        for (i2 = 0; i2 < s2.length; ) r2[s2[i2].identifier] && a2.push(s2[i2]), e2 & (ty | ey) && delete r2[s2[i2].identifier], i2++;
        return a2.length ? [Ay(o2.concat(a2), "identifier", true), a2] : void 0;
      }
      var Hy = { mousedown: Jg, mousemove: 2, mouseup: ty }, Wy = function(t2) {
        function e2() {
          var i2, o2 = e2.prototype;
          return o2.evEl = "mousedown", o2.evWin = "mousemove mouseup", (i2 = t2.apply(this, arguments) || this).pressed = false, i2;
        }
        return Tg(e2, t2), e2.prototype.handler = function(t3) {
          var e3 = Hy[t3.type];
          e3 & Jg && 0 === t3.button && (this.pressed = true), 2 & e3 && 1 !== t3.which && (e3 = ty), this.pressed && (e3 & ty && (this.pressed = false), this.callback(this.manager, e3, { pointers: [t3], changedPointers: [t3], pointerType: Zg, srcEvent: t3 }));
        }, e2;
      }(My), Vy = 2500;
      function qy(t2) {
        var e2 = t2.changedPointers[0];
        if (e2.identifier === this.primaryTouch) {
          var i2 = { x: e2.clientX, y: e2.clientY }, o2 = this.lastTouches;
          this.lastTouches.push(i2);
          setTimeout(function() {
            var t3 = o2.indexOf(i2);
            t3 > -1 && o2.splice(t3, 1);
          }, Vy);
        }
      }
      function Uy(t2, e2) {
        t2 & Jg ? (this.primaryTouch = e2.changedPointers[0].identifier, qy.call(this, e2)) : t2 & (ty | ey) && qy.call(this, e2);
      }
      function Yy(t2) {
        for (var e2 = t2.srcEvent.clientX, i2 = t2.srcEvent.clientY, o2 = 0; o2 < this.lastTouches.length; o2++) {
          var n2 = this.lastTouches[o2], r2 = Math.abs(e2 - n2.x), s2 = Math.abs(i2 - n2.y);
          if (r2 <= 25 && s2 <= 25) return true;
        }
        return false;
      }
      var Xy = function() {
        return function(t2) {
          function e2(e3, i2) {
            var o2;
            return (o2 = t2.call(this, e3, i2) || this).handler = function(t3, e4, i3) {
              var n2 = i3.pointerType === $g, r2 = i3.pointerType === Zg;
              if (!(r2 && i3.sourceCapabilities && i3.sourceCapabilities.firesTouchEvents)) {
                if (n2) Uy.call(Mg(Mg(o2)), e4, i3);
                else if (r2 && Yy.call(Mg(Mg(o2)), i3)) return;
                o2.callback(t3, e4, i3);
              }
            }, o2.touch = new jy(o2.manager, o2.handler), o2.mouse = new Wy(o2.manager, o2.handler), o2.primaryTouch = null, o2.lastTouches = [], o2;
          }
          return Tg(e2, t2), e2.prototype.destroy = function() {
            this.touch.destroy(), this.mouse.destroy();
          }, e2;
        }(My);
      }();
      function Ky(t2, e2, i2) {
        return !!Array.isArray(t2) && (uy(t2, i2[e2], i2), true);
      }
      var Gy = 32, $y = 1;
      function Zy(t2, e2) {
        var i2 = e2.manager;
        return i2 ? i2.get(t2) : t2;
      }
      function Qy(t2) {
        return 16 & t2 ? "cancel" : 8 & t2 ? "end" : 4 & t2 ? "move" : 2 & t2 ? "start" : "";
      }
      var Jy = function() {
        function t2(t3) {
          void 0 === t3 && (t3 = {}), this.options = Sg({ enable: true }, t3), this.id = $y++, this.manager = null, this.state = 1, this.simultaneous = {}, this.requireFail = [];
        }
        var e2 = t2.prototype;
        return e2.set = function(t3) {
          return Dg(this.options, t3), this.manager && this.manager.touchAction.update(), this;
        }, e2.recognizeWith = function(t3) {
          if (Ky(t3, "recognizeWith", this)) return this;
          var e3 = this.simultaneous;
          return e3[(t3 = Zy(t3, this)).id] || (e3[t3.id] = t3, t3.recognizeWith(this)), this;
        }, e2.dropRecognizeWith = function(t3) {
          return Ky(t3, "dropRecognizeWith", this) || (t3 = Zy(t3, this), delete this.simultaneous[t3.id]), this;
        }, e2.requireFailure = function(t3) {
          if (Ky(t3, "requireFailure", this)) return this;
          var e3 = this.requireFail;
          return -1 === Py(e3, t3 = Zy(t3, this)) && (e3.push(t3), t3.requireFailure(this)), this;
        }, e2.dropRequireFailure = function(t3) {
          if (Ky(t3, "dropRequireFailure", this)) return this;
          t3 = Zy(t3, this);
          var e3 = Py(this.requireFail, t3);
          return e3 > -1 && this.requireFail.splice(e3, 1), this;
        }, e2.hasRequireFailures = function() {
          return this.requireFail.length > 0;
        }, e2.canRecognizeWith = function(t3) {
          return !!this.simultaneous[t3.id];
        }, e2.emit = function(t3) {
          var e3 = this, i2 = this.state;
          function o2(i3) {
            e3.manager.emit(i3, t3);
          }
          i2 < 8 && o2(e3.options.event + Qy(i2)), o2(e3.options.event), t3.additionalEvent && o2(t3.additionalEvent), i2 >= 8 && o2(e3.options.event + Qy(i2));
        }, e2.tryEmit = function(t3) {
          if (this.canEmit()) return this.emit(t3);
          this.state = Gy;
        }, e2.canEmit = function() {
          for (var t3 = 0; t3 < this.requireFail.length; ) {
            if (!(33 & this.requireFail[t3].state)) return false;
            t3++;
          }
          return true;
        }, e2.recognize = function(t3) {
          var e3 = Dg({}, t3);
          if (!fy(this.options.enable, [this, e3])) return this.reset(), void (this.state = Gy);
          56 & this.state && (this.state = 1), this.state = this.process(e3), 30 & this.state && this.tryEmit(e3);
        }, e2.process = function(t3) {
        }, e2.getTouchAction = function() {
        }, e2.reset = function() {
        }, t2;
      }(), tm = function(t2) {
        function e2(e3) {
          var i3;
          return void 0 === e3 && (e3 = {}), (i3 = t2.call(this, Sg({ event: "tap", pointers: 1, taps: 1, interval: 300, time: 250, threshold: 9, posThreshold: 10 }, e3)) || this).pTime = false, i3.pCenter = false, i3._timer = null, i3._input = null, i3.count = 0, i3;
        }
        Tg(e2, t2);
        var i2 = e2.prototype;
        return i2.getTouchAction = function() {
          return [Wg];
        }, i2.process = function(t3) {
          var e3 = this, i3 = this.options, o2 = t3.pointers.length === i3.pointers, n2 = t3.distance < i3.threshold, r2 = t3.deltaTime < i3.time;
          if (this.reset(), t3.eventType & Jg && 0 === this.count) return this.failTimeout();
          if (n2 && r2 && o2) {
            if (t3.eventType !== ty) return this.failTimeout();
            var s2 = !this.pTime || t3.timeStamp - this.pTime < i3.interval, a2 = !this.pCenter || by(this.pCenter, t3.center) < i3.posThreshold;
            if (this.pTime = t3.timeStamp, this.pCenter = t3.center, a2 && s2 ? this.count += 1 : this.count = 1, this._input = t3, 0 === this.count % i3.taps) return this.hasRequireFailures() ? (this._timer = setTimeout(function() {
              e3.state = 8, e3.tryEmit();
            }, i3.interval), 2) : 8;
          }
          return Gy;
        }, i2.failTimeout = function() {
          var t3 = this;
          return this._timer = setTimeout(function() {
            t3.state = Gy;
          }, this.options.interval), Gy;
        }, i2.reset = function() {
          clearTimeout(this._timer);
        }, i2.emit = function() {
          8 === this.state && (this._input.tapCount = this.count, this.manager.emit(this.options.event, this._input));
        }, e2;
      }(Jy), em = function(t2) {
        function e2(e3) {
          return void 0 === e3 && (e3 = {}), t2.call(this, Sg({ pointers: 1 }, e3)) || this;
        }
        Tg(e2, t2);
        var i2 = e2.prototype;
        return i2.attrTest = function(t3) {
          var e3 = this.options.pointers;
          return 0 === e3 || t3.pointers.length === e3;
        }, i2.process = function(t3) {
          var e3 = this.state, i3 = t3.eventType, o2 = 6 & e3, n2 = this.attrTest(t3);
          return o2 && (i3 & ey || !n2) ? 16 | e3 : o2 || n2 ? i3 & ty ? 8 | e3 : 2 & e3 ? 4 | e3 : 2 : Gy;
        }, e2;
      }(Jy);
      function im(t2) {
        return t2 === sy ? "down" : t2 === ry ? "up" : t2 === oy ? "left" : t2 === ny ? "right" : "";
      }
      var om = function(t2) {
        function e2(e3) {
          var i3;
          return void 0 === e3 && (e3 = {}), (i3 = t2.call(this, Sg({ event: "pan", threshold: 10, pointers: 1, direction: dy }, e3)) || this).pX = null, i3.pY = null, i3;
        }
        Tg(e2, t2);
        var i2 = e2.prototype;
        return i2.getTouchAction = function() {
          var t3 = this.options.direction, e3 = [];
          return t3 & ay && e3.push(Ug), t3 & hy && e3.push(qg), e3;
        }, i2.directionTest = function(t3) {
          var e3 = this.options, i3 = true, o2 = t3.distance, n2 = t3.direction, r2 = t3.deltaX, s2 = t3.deltaY;
          return n2 & e3.direction || (e3.direction & ay ? (n2 = 0 === r2 ? iy : r2 < 0 ? oy : ny, i3 = r2 !== this.pX, o2 = Math.abs(t3.deltaX)) : (n2 = 0 === s2 ? iy : s2 < 0 ? ry : sy, i3 = s2 !== this.pY, o2 = Math.abs(t3.deltaY))), t3.direction = n2, i3 && o2 > e3.threshold && n2 & e3.direction;
        }, i2.attrTest = function(t3) {
          return em.prototype.attrTest.call(this, t3) && (2 & this.state || !(2 & this.state) && this.directionTest(t3));
        }, i2.emit = function(e3) {
          this.pX = e3.deltaX, this.pY = e3.deltaY;
          var i3 = im(e3.direction);
          i3 && (e3.additionalEvent = this.options.event + i3), t2.prototype.emit.call(this, e3);
        }, e2;
      }(em), nm = function(t2) {
        function e2(e3) {
          return void 0 === e3 && (e3 = {}), t2.call(this, Sg({ event: "swipe", threshold: 10, velocity: 0.3, direction: ay | hy, pointers: 1 }, e3)) || this;
        }
        Tg(e2, t2);
        var i2 = e2.prototype;
        return i2.getTouchAction = function() {
          return om.prototype.getTouchAction.call(this);
        }, i2.attrTest = function(e3) {
          var i3, o2 = this.options.direction;
          return o2 & (ay | hy) ? i3 = e3.overallVelocity : o2 & ay ? i3 = e3.overallVelocityX : o2 & hy && (i3 = e3.overallVelocityY), t2.prototype.attrTest.call(this, e3) && o2 & e3.offsetDirection && e3.distance > this.options.threshold && e3.maxPointers === this.options.pointers && zg(i3) > this.options.velocity && e3.eventType & ty;
        }, i2.emit = function(t3) {
          var e3 = im(t3.offsetDirection);
          e3 && this.manager.emit(this.options.event + e3, t3), this.manager.emit(this.options.event, t3);
        }, e2;
      }(em), rm = function(t2) {
        function e2(e3) {
          return void 0 === e3 && (e3 = {}), t2.call(this, Sg({ event: "pinch", threshold: 0, pointers: 2 }, e3)) || this;
        }
        Tg(e2, t2);
        var i2 = e2.prototype;
        return i2.getTouchAction = function() {
          return [Vg];
        }, i2.attrTest = function(e3) {
          return t2.prototype.attrTest.call(this, e3) && (Math.abs(e3.scale - 1) > this.options.threshold || 2 & this.state);
        }, i2.emit = function(e3) {
          if (1 !== e3.scale) {
            var i3 = e3.scale < 1 ? "in" : "out";
            e3.additionalEvent = this.options.event + i3;
          }
          t2.prototype.emit.call(this, e3);
        }, e2;
      }(em), sm = function(t2) {
        function e2(e3) {
          return void 0 === e3 && (e3 = {}), t2.call(this, Sg({ event: "rotate", threshold: 0, pointers: 2 }, e3)) || this;
        }
        Tg(e2, t2);
        var i2 = e2.prototype;
        return i2.getTouchAction = function() {
          return [Vg];
        }, i2.attrTest = function(e3) {
          return t2.prototype.attrTest.call(this, e3) && (Math.abs(e3.rotation) > this.options.threshold || 2 & this.state);
        }, e2;
      }(em), am = function(t2) {
        function e2(e3) {
          var i3;
          return void 0 === e3 && (e3 = {}), (i3 = t2.call(this, Sg({ event: "press", pointers: 1, time: 251, threshold: 9 }, e3)) || this)._timer = null, i3._input = null, i3;
        }
        Tg(e2, t2);
        var i2 = e2.prototype;
        return i2.getTouchAction = function() {
          return [Hg];
        }, i2.process = function(t3) {
          var e3 = this, i3 = this.options, o2 = t3.pointers.length === i3.pointers, n2 = t3.distance < i3.threshold, r2 = t3.deltaTime > i3.time;
          if (this._input = t3, !n2 || !o2 || t3.eventType & (ty | ey) && !r2) this.reset();
          else if (t3.eventType & Jg) this.reset(), this._timer = setTimeout(function() {
            e3.state = 8, e3.tryEmit();
          }, i3.time);
          else if (t3.eventType & ty) return 8;
          return Gy;
        }, i2.reset = function() {
          clearTimeout(this._timer);
        }, i2.emit = function(t3) {
          8 === this.state && (t3 && t3.eventType & ty ? this.manager.emit(this.options.event + "up", t3) : (this._input.timeStamp = Ng(), this.manager.emit(this.options.event, this._input)));
        }, e2;
      }(Jy), hm = { domEvents: false, touchAction: Lg, enable: true, inputTarget: null, inputClass: null, cssProps: { userSelect: "none", touchSelect: "none", touchCallout: "none", contentZooming: "none", userDrag: "none", tapHighlightColor: "rgba(0,0,0,0)" } }, dm = [[sm, { enable: false }], [rm, { enable: false }, ["rotate"]], [nm, { direction: ay }], [om, { direction: ay }, ["swipe"]], [tm], [tm, { event: "doubletap", taps: 2 }, ["tap"]], [am]];
      function lm(t2, e2) {
        var i2, o2 = t2.element;
        o2.style && (uy(t2.options.cssProps, function(n2, r2) {
          i2 = Ag(o2.style, r2), e2 ? (t2.oldCssProps[i2] = o2.style[i2], o2.style[i2] = n2) : o2.style[i2] = t2.oldCssProps[i2] || "";
        }), e2 || (t2.oldCssProps = {}));
      }
      var cm = function() {
        function t2(t3, e3) {
          var i2, o2 = this;
          this.options = Dg({}, hm, e3 || {}), this.options.inputTarget = this.options.inputTarget || t3, this.handlers = {}, this.session = {}, this.recognizers = [], this.oldCssProps = {}, this.element = t3, this.input = new ((i2 = this).options.inputClass || (Kg ? zy : Gg ? jy : Xg ? Xy : Wy))(i2, Ey), this.touchAction = new vy(this, this.options.touchAction), lm(this, true), uy(this.options.recognizers, function(t4) {
            var e4 = o2.add(new t4[0](t4[1]));
            t4[2] && e4.recognizeWith(t4[2]), t4[3] && e4.requireFailure(t4[3]);
          }, this);
        }
        var e2 = t2.prototype;
        return e2.set = function(t3) {
          return Dg(this.options, t3), t3.touchAction && this.touchAction.update(), t3.inputTarget && (this.input.destroy(), this.input.target = t3.inputTarget, this.input.init()), this;
        }, e2.stop = function(t3) {
          this.session.stopped = t3 ? 2 : 1;
        }, e2.recognize = function(t3) {
          var e3 = this.session;
          if (!e3.stopped) {
            var i2;
            this.touchAction.preventDefaults(t3);
            var o2 = this.recognizers, n2 = e3.curRecognizer;
            (!n2 || n2 && 8 & n2.state) && (e3.curRecognizer = null, n2 = null);
            for (var r2 = 0; r2 < o2.length; ) i2 = o2[r2], 2 === e3.stopped || n2 && i2 !== n2 && !i2.canRecognizeWith(n2) ? i2.reset() : i2.recognize(t3), !n2 && 14 & i2.state && (e3.curRecognizer = i2, n2 = i2), r2++;
          }
        }, e2.get = function(t3) {
          if (t3 instanceof Jy) return t3;
          for (var e3 = this.recognizers, i2 = 0; i2 < e3.length; i2++) if (e3[i2].options.event === t3) return e3[i2];
          return null;
        }, e2.add = function(t3) {
          if (Ky(t3, "add", this)) return this;
          var e3 = this.get(t3.options.event);
          return e3 && this.remove(e3), this.recognizers.push(t3), t3.manager = this, this.touchAction.update(), t3;
        }, e2.remove = function(t3) {
          if (Ky(t3, "remove", this)) return this;
          var e3 = this.get(t3);
          if (t3) {
            var i2 = this.recognizers, o2 = Py(i2, e3);
            -1 !== o2 && (i2.splice(o2, 1), this.touchAction.update());
          }
          return this;
        }, e2.on = function(t3, e3) {
          if (void 0 === t3 || void 0 === e3) return this;
          var i2 = this.handlers;
          return uy(Oy(t3), function(t4) {
            i2[t4] = i2[t4] || [], i2[t4].push(e3);
          }), this;
        }, e2.off = function(t3, e3) {
          if (void 0 === t3) return this;
          var i2 = this.handlers;
          return uy(Oy(t3), function(t4) {
            e3 ? i2[t4] && i2[t4].splice(Py(i2[t4], e3), 1) : delete i2[t4];
          }), this;
        }, e2.emit = function(t3, e3) {
          this.options.domEvents && function(t4, e4) {
            var i3 = document.createEvent("Event");
            i3.initEvent(t4, true, true), i3.gesture = e4, e4.target.dispatchEvent(i3);
          }(t3, e3);
          var i2 = this.handlers[t3] && this.handlers[t3].slice();
          if (i2 && i2.length) {
            e3.type = t3, e3.preventDefault = function() {
              e3.srcEvent.preventDefault();
            };
            for (var o2 = 0; o2 < i2.length; ) i2[o2](e3), o2++;
          }
        }, e2.destroy = function() {
          this.element && lm(this, false), this.handlers = {}, this.session = {}, this.input.destroy(), this.element = null;
        }, t2;
      }(), um = { touchstart: Jg, touchmove: 2, touchend: ty, touchcancel: ey }, fm = function(t2) {
        function e2() {
          var i2, o2 = e2.prototype;
          return o2.evTarget = "touchstart", o2.evWin = "touchstart touchmove touchend touchcancel", (i2 = t2.apply(this, arguments) || this).started = false, i2;
        }
        return Tg(e2, t2), e2.prototype.handler = function(t3) {
          var e3 = um[t3.type];
          if (e3 === Jg && (this.started = true), this.started) {
            var i2 = pm.call(this, t3, e3);
            e3 & (ty | ey) && i2[0].length - i2[1].length == 0 && (this.started = false), this.callback(this.manager, e3, { pointers: i2[0], changedPointers: i2[1], pointerType: $g, srcEvent: t3 });
          }
        }, e2;
      }(My);
      function pm(t2, e2) {
        var i2 = Ny(t2.touches), o2 = Ny(t2.changedTouches);
        return e2 & (ty | ey) && (i2 = Ay(i2.concat(o2), "identifier", true)), [i2, o2];
      }
      function vm(t2, e2, i2) {
        var o2 = "DEPRECATED METHOD: " + e2 + "\n" + i2 + " AT \n";
        return function() {
          var e3 = new Error("get-stack-trace"), i3 = e3 && e3.stack ? e3.stack.replace(/^[^\(]+?[\n$]/gm, "").replace(/^\s+at\s+/gm, "").replace(/^Object.<anonymous>\s*\(/gm, "{anonymous}()@") : "Unknown Stack Trace", n2 = window.console && (window.console.warn || window.console.log);
          return n2 && n2.call(window.console, o2, i3), t2.apply(this, arguments);
        };
      }
      var gm = vm(function(t2, e2, i2) {
        for (var o2 = Object.keys(e2), n2 = 0; n2 < o2.length; ) (!i2 || i2 && void 0 === t2[o2[n2]]) && (t2[o2[n2]] = e2[o2[n2]]), n2++;
        return t2;
      }, "extend", "Use `assign`."), ym = vm(function(t2, e2) {
        return gm(t2, e2, true);
      }, "merge", "Use `assign`.");
      function mm(t2, e2, i2) {
        var o2, n2 = e2.prototype;
        (o2 = t2.prototype = Object.create(n2)).constructor = t2, o2._super = n2, i2 && Dg(o2, i2);
      }
      function bm(t2, e2) {
        return function() {
          return t2.apply(e2, arguments);
        };
      }
      var wm = function() {
        var t2 = function(t3, e2) {
          return void 0 === e2 && (e2 = {}), new cm(t3, Sg({ recognizers: dm.concat() }, e2));
        };
        return t2.VERSION = "2.0.17-rc", t2.DIRECTION_ALL = dy, t2.DIRECTION_DOWN = sy, t2.DIRECTION_LEFT = oy, t2.DIRECTION_RIGHT = ny, t2.DIRECTION_UP = ry, t2.DIRECTION_HORIZONTAL = ay, t2.DIRECTION_VERTICAL = hy, t2.DIRECTION_NONE = iy, t2.DIRECTION_DOWN = sy, t2.INPUT_START = Jg, t2.INPUT_MOVE = 2, t2.INPUT_END = ty, t2.INPUT_CANCEL = ey, t2.STATE_POSSIBLE = 1, t2.STATE_BEGAN = 2, t2.STATE_CHANGED = 4, t2.STATE_ENDED = 8, t2.STATE_RECOGNIZED = 8, t2.STATE_CANCELLED = 16, t2.STATE_FAILED = Gy, t2.Manager = cm, t2.Input = My, t2.TouchAction = vy, t2.TouchInput = jy, t2.MouseInput = Wy, t2.PointerEventInput = zy, t2.TouchMouseInput = Xy, t2.SingleTouchInput = fm, t2.Recognizer = Jy, t2.AttrRecognizer = em, t2.Tap = tm, t2.Pan = om, t2.Swipe = nm, t2.Pinch = rm, t2.Rotate = sm, t2.Press = am, t2.on = Cy, t2.off = Sy, t2.each = uy, t2.merge = ym, t2.extend = gm, t2.bindFn = bm, t2.assign = Dg, t2.inherit = mm, t2.bindFn = bm, t2.prefixed = Ag, t2.toArray = Ny, t2.inArray = Py, t2.uniqueArray = Ay, t2.splitStr = Oy, t2.boolOrFn = fy, t2.hasParent = gy, t2.addEventListeners = Cy, t2.removeEventListeners = Sy, t2.defaults = Dg({}, hm, { preset: dm }), t2;
      }();
      wm.defaults;
      var km = wm;
      function _m(t2, e2) {
        var i2 = void 0 !== cf && ph(t2) || t2["@@iterator"];
        if (!i2) {
          if (Of(t2) || (i2 = function(t3, e3) {
            var i3;
            if (!t3) return;
            if ("string" == typeof t3) return xm(t3, e3);
            var o3 = mf(i3 = Object.prototype.toString.call(t3)).call(i3, 8, -1);
            "Object" === o3 && t3.constructor && (o3 = t3.constructor.name);
            if ("Map" === o3 || "Set" === o3) return Xa(t3);
            if ("Arguments" === o3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3)) return xm(t3, e3);
          }(t2)) || e2 && t2 && "number" == typeof t2.length) {
            i2 && (t2 = i2);
            var o2 = 0, n2 = function() {
            };
            return { s: n2, n: function() {
              return o2 >= t2.length ? { done: true } : { done: false, value: t2[o2++] };
            }, e: function(t3) {
              throw t3;
            }, f: n2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var r2, s2 = true, a2 = false;
        return { s: function() {
          i2 = i2.call(t2);
        }, n: function() {
          var t3 = i2.next();
          return s2 = t3.done, t3;
        }, e: function(t3) {
          a2 = true, r2 = t3;
        }, f: function() {
          try {
            s2 || null == i2.return || i2.return();
          } finally {
            if (a2) throw r2;
          }
        } };
      }
      function xm(t2, e2) {
        (null == e2 || e2 > t2.length) && (e2 = t2.length);
        for (var i2 = 0, o2 = new Array(e2); i2 < e2; i2++) o2[i2] = t2[i2];
        return o2;
      }
      function Em() {
        for (var t2 = arguments.length, e2 = new Array(t2), i2 = 0; i2 < t2; i2++) e2[i2] = arguments[i2];
        return function(t3) {
          var e3 = function() {
            for (var t4 = /* @__PURE__ */ function() {
              var t5 = 4022871197;
              return function(e5) {
                for (var i5 = e5.toString(), o4 = 0; o4 < i5.length; o4++) {
                  var n4 = 0.02519603282416938 * (t5 += i5.charCodeAt(o4));
                  n4 -= t5 = n4 >>> 0, t5 = (n4 *= t5) >>> 0, t5 += 4294967296 * (n4 -= t5);
                }
                return 23283064365386963e-26 * (t5 >>> 0);
              };
            }(), e4 = t4(" "), i4 = t4(" "), o3 = t4(" "), n3 = 0; n3 < arguments.length; n3++) (e4 -= t4(n3 < 0 || arguments.length <= n3 ? void 0 : arguments[n3])) < 0 && (e4 += 1), (i4 -= t4(n3 < 0 || arguments.length <= n3 ? void 0 : arguments[n3])) < 0 && (i4 += 1), (o3 -= t4(n3 < 0 || arguments.length <= n3 ? void 0 : arguments[n3])) < 0 && (o3 += 1);
            return [e4, i4, o3];
          }(t3), i3 = df(e3, 3), o2 = i3[0], n2 = i3[1], r2 = i3[2], s2 = 1, a2 = function() {
            var t4 = 2091639 * o2 + 23283064365386963e-26 * s2;
            return o2 = n2, n2 = r2, r2 = t4 - (s2 = 0 | t4);
          };
          return a2.uint32 = function() {
            return 4294967296 * a2();
          }, a2.fract53 = function() {
            return a2() + 11102230246251565e-32 * (2097152 * a2() | 0);
          }, a2.algorithm = "Alea", a2.seed = t3, a2.version = "0.9", a2;
        }(e2.length ? e2 : [jf()]);
      }
      cf("DELETE");
      var Om = "undefined" != typeof window ? window.Hammer || km : function() {
        return /* @__PURE__ */ function() {
          var t2 = function() {
          };
          return { on: t2, off: t2, destroy: t2, emit: t2, get: function() {
            return { set: t2 };
          } };
        }();
      };
      function Cm(t2) {
        var e2, i2 = this;
        this._cleanupQueue = [], this.active = false, this._dom = { container: t2, overlay: document.createElement("div") }, this._dom.overlay.classList.add("vis-overlay"), this._dom.container.appendChild(this._dom.overlay), this._cleanupQueue.push(function() {
          i2._dom.overlay.parentNode.removeChild(i2._dom.overlay);
        });
        var o2 = Om(this._dom.overlay);
        o2.on("tap", Wo(e2 = this._onTapOverlay).call(e2, this)), this._cleanupQueue.push(function() {
          o2.destroy();
        });
        var n2 = ["tap", "doubletap", "press", "pinch", "pan", "panstart", "panmove", "panend"];
        Qf(n2).call(n2, function(t3) {
          o2.on(t3, function(t4) {
            t4.srcEvent.stopPropagation();
          });
        }), document && document.body && (this._onClick = function(e3) {
          (function(t3, e4) {
            for (; t3; ) {
              if (t3 === e4) return true;
              t3 = t3.parentNode;
            }
            return false;
          })(e3.target, t2) || i2.deactivate();
        }, document.body.addEventListener("click", this._onClick), this._cleanupQueue.push(function() {
          document.body.removeEventListener("click", i2._onClick);
        })), this._escListener = function(t3) {
          ("key" in t3 ? "Escape" === t3.key : 27 === t3.keyCode) && i2.deactivate();
        };
      }
      $o(Cm.prototype), Cm.current = null, Cm.prototype.destroy = function() {
        var t2, e2;
        this.deactivate();
        var i2, o2 = _m(hp(t2 = Pp(e2 = this._cleanupQueue).call(e2, 0)).call(t2));
        try {
          for (o2.s(); !(i2 = o2.n()).done; ) {
            (0, i2.value)();
          }
        } catch (t3) {
          o2.e(t3);
        } finally {
          o2.f();
        }
      }, Cm.prototype.activate = function() {
        Cm.current && Cm.current.deactivate(), Cm.current = this, this.active = true, this._dom.overlay.style.display = "none", this._dom.container.classList.add("vis-active"), this.emit("change"), this.emit("activate"), document.body.addEventListener("keydown", this._escListener);
      }, Cm.prototype.deactivate = function() {
        this.active = false, this._dom.overlay.style.display = "block", this._dom.container.classList.remove("vis-active"), document.body.removeEventListener("keydown", this._escListener), this.emit("change"), this.emit("deactivate");
      }, Cm.prototype._onTapOverlay = function(t2) {
        this.activate(), t2.srcEvent.stopPropagation();
      };
      var Sm = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i, Tm = /^#?([a-f\d])([a-f\d])([a-f\d])$/i, Mm = /^rgb\( *(1?\d{1,2}|2[0-4]\d|25[0-5]) *, *(1?\d{1,2}|2[0-4]\d|25[0-5]) *, *(1?\d{1,2}|2[0-4]\d|25[0-5]) *\)$/i, Pm = /^rgba\( *(1?\d{1,2}|2[0-4]\d|25[0-5]) *, *(1?\d{1,2}|2[0-4]\d|25[0-5]) *, *(1?\d{1,2}|2[0-4]\d|25[0-5]) *, *([01]|0?\.\d+) *\)$/i;
      function Dm(t2) {
        if (t2) for (; true === t2.hasChildNodes(); ) {
          var e2 = t2.firstChild;
          e2 && (Dm(e2), t2.removeChild(e2));
        }
      }
      function Im(t2) {
        return t2 instanceof String || "string" == typeof t2;
      }
      function Bm(t2) {
        return "object" === gu(t2) && null !== t2;
      }
      function Fm(t2, e2, i2, o2) {
        var n2 = false;
        true === o2 && (n2 = null === e2[i2] && void 0 !== t2[i2]), n2 ? delete t2[i2] : t2[i2] = e2[i2];
      }
      function zm(t2, e2) {
        var i2 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        for (var o2 in t2) if (void 0 !== e2[o2]) if (null === e2[o2] || "object" !== gu(e2[o2])) Fm(t2, e2, o2, i2);
        else {
          var n2 = t2[o2], r2 = e2[o2];
          Bm(n2) && Bm(r2) && zm(n2, r2, i2);
        }
      }
      function Nm(t2, e2, i2) {
        var o2 = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
        if (Of(i2)) throw new TypeError("Arrays are not supported by deepExtend");
        for (var n2 = 0; n2 < t2.length; n2++) {
          var r2 = t2[n2];
          if (Object.prototype.hasOwnProperty.call(i2, r2)) if (i2[r2] && i2[r2].constructor === Object) void 0 === e2[r2] && (e2[r2] = {}), e2[r2].constructor === Object ? Rm(e2[r2], i2[r2], false, o2) : Fm(e2, i2, r2, o2);
          else {
            if (Of(i2[r2])) throw new TypeError("Arrays are not supported by deepExtend");
            Fm(e2, i2, r2, o2);
          }
        }
        return e2;
      }
      function Am(t2, e2, i2) {
        var o2 = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
        if (Of(i2)) throw new TypeError("Arrays are not supported by deepExtend");
        for (var n2 in i2) if (Object.prototype.hasOwnProperty.call(i2, n2) && !Qp(t2).call(t2, n2)) if (i2[n2] && i2[n2].constructor === Object) void 0 === e2[n2] && (e2[n2] = {}), e2[n2].constructor === Object ? Rm(e2[n2], i2[n2]) : Fm(e2, i2, n2, o2);
        else if (Of(i2[n2])) {
          e2[n2] = [];
          for (var r2 = 0; r2 < i2[n2].length; r2++) e2[n2].push(i2[n2][r2]);
        } else Fm(e2, i2, n2, o2);
        return e2;
      }
      function Rm(t2, e2) {
        var i2 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], o2 = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
        for (var n2 in e2) if (Object.prototype.hasOwnProperty.call(e2, n2) || true === i2) if ("object" === gu(e2[n2]) && null !== e2[n2] && ov(e2[n2]) === Object.prototype) void 0 === t2[n2] ? t2[n2] = Rm({}, e2[n2], i2) : "object" === gu(t2[n2]) && null !== t2[n2] && ov(t2[n2]) === Object.prototype ? Rm(t2[n2], e2[n2], i2) : Fm(t2, e2, n2, o2);
        else if (Of(e2[n2])) {
          var r2;
          t2[n2] = mf(r2 = e2[n2]).call(r2);
        } else Fm(t2, e2, n2, o2);
        return t2;
      }
      function jm(t2, e2) {
        var i2;
        return yf(i2 = []).call(i2, lf(t2), [e2]);
      }
      function Lm(t2) {
        return t2.getBoundingClientRect().top;
      }
      function Hm(t2, e2) {
        if (Of(t2)) for (var i2 = t2.length, o2 = 0; o2 < i2; o2++) e2(t2[o2], o2, t2);
        else for (var n2 in t2) Object.prototype.hasOwnProperty.call(t2, n2) && e2(t2[n2], n2, t2);
      }
      function Wm(t2) {
        var e2;
        switch (t2.length) {
          case 3:
          case 4:
            return (e2 = Tm.exec(t2)) ? { r: Iv(e2[1] + e2[1], 16), g: Iv(e2[2] + e2[2], 16), b: Iv(e2[3] + e2[3], 16) } : null;
          case 6:
          case 7:
            return (e2 = Sm.exec(t2)) ? { r: Iv(e2[1], 16), g: Iv(e2[2], 16), b: Iv(e2[3], 16) } : null;
          default:
            return null;
        }
      }
      function Vm(t2, e2) {
        if (Qp(t2).call(t2, "rgba")) return t2;
        if (Qp(t2).call(t2, "rgb")) {
          var i2 = t2.substr(Vv(t2).call(t2, "(") + 1).replace(")", "").split(",");
          return "rgba(" + i2[0] + "," + i2[1] + "," + i2[2] + "," + e2 + ")";
        }
        var o2 = Wm(t2);
        return null == o2 ? t2 : "rgba(" + o2.r + "," + o2.g + "," + o2.b + "," + e2 + ")";
      }
      function qm(t2, e2, i2) {
        var o2;
        return "#" + mf(o2 = ((1 << 24) + (t2 << 16) + (e2 << 8) + i2).toString(16)).call(o2, 1);
      }
      function Um(t2, e2) {
        if (Im(t2)) {
          var i2 = t2;
          if ($m(i2)) {
            var o2, n2 = If(o2 = i2.substr(4).substr(0, i2.length - 5).split(",")).call(o2, function(t3) {
              return Iv(t3);
            });
            i2 = qm(n2[0], n2[1], n2[2]);
          }
          if (true === Gm(i2)) {
            var r2 = function(t3) {
              var e3 = Wm(t3);
              if (!e3) throw new TypeError("'".concat(t3, "' is not a valid color."));
              return Ym(e3.r, e3.g, e3.b);
            }(i2), s2 = { h: r2.h, s: 0.8 * r2.s, v: Math.min(1, 1.02 * r2.v) }, a2 = { h: r2.h, s: Math.min(1, 1.25 * r2.s), v: 0.8 * r2.v }, h2 = Km(a2.h, a2.s, a2.v), d2 = Km(s2.h, s2.s, s2.v);
            return { background: i2, border: h2, highlight: { background: d2, border: h2 }, hover: { background: d2, border: h2 } };
          }
          return { background: i2, border: i2, highlight: { background: i2, border: i2 }, hover: { background: i2, border: i2 } };
        }
        return e2 ? { background: t2.background || e2.background, border: t2.border || e2.border, highlight: Im(t2.highlight) ? { border: t2.highlight, background: t2.highlight } : { background: t2.highlight && t2.highlight.background || e2.highlight.background, border: t2.highlight && t2.highlight.border || e2.highlight.border }, hover: Im(t2.hover) ? { border: t2.hover, background: t2.hover } : { border: t2.hover && t2.hover.border || e2.hover.border, background: t2.hover && t2.hover.background || e2.hover.background } } : { background: t2.background || void 0, border: t2.border || void 0, highlight: Im(t2.highlight) ? { border: t2.highlight, background: t2.highlight } : { background: t2.highlight && t2.highlight.background || void 0, border: t2.highlight && t2.highlight.border || void 0 }, hover: Im(t2.hover) ? { border: t2.hover, background: t2.hover } : { border: t2.hover && t2.hover.border || void 0, background: t2.hover && t2.hover.background || void 0 } };
      }
      function Ym(t2, e2, i2) {
        t2 /= 255, e2 /= 255, i2 /= 255;
        var o2 = Math.min(t2, Math.min(e2, i2)), n2 = Math.max(t2, Math.max(e2, i2));
        return o2 === n2 ? { h: 0, s: 0, v: o2 } : { h: 60 * ((t2 === o2 ? 3 : i2 === o2 ? 1 : 5) - (t2 === o2 ? e2 - i2 : i2 === o2 ? t2 - e2 : i2 - t2) / (n2 - o2)) / 360, s: (n2 - o2) / n2, v: n2 };
      }
      function Xm(t2, e2, i2) {
        var o2, n2, r2, s2 = Math.floor(6 * t2), a2 = 6 * t2 - s2, h2 = i2 * (1 - e2), d2 = i2 * (1 - a2 * e2), l2 = i2 * (1 - (1 - a2) * e2);
        switch (s2 % 6) {
          case 0:
            o2 = i2, n2 = l2, r2 = h2;
            break;
          case 1:
            o2 = d2, n2 = i2, r2 = h2;
            break;
          case 2:
            o2 = h2, n2 = i2, r2 = l2;
            break;
          case 3:
            o2 = h2, n2 = d2, r2 = i2;
            break;
          case 4:
            o2 = l2, n2 = h2, r2 = i2;
            break;
          case 5:
            o2 = i2, n2 = h2, r2 = d2;
        }
        return { r: Math.floor(255 * o2), g: Math.floor(255 * n2), b: Math.floor(255 * r2) };
      }
      function Km(t2, e2, i2) {
        var o2 = Xm(t2, e2, i2);
        return qm(o2.r, o2.g, o2.b);
      }
      function Gm(t2) {
        return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(t2);
      }
      function $m(t2) {
        return Mm.test(t2);
      }
      function Zm(t2) {
        if (null === t2 || "object" !== gu(t2)) return null;
        if (t2 instanceof Element) return t2;
        var e2 = Yv(t2);
        for (var i2 in t2) Object.prototype.hasOwnProperty.call(t2, i2) && "object" == gu(t2[i2]) && (e2[i2] = Zm(t2[i2]));
        return e2;
      }
      function Qm(t2, e2, i2) {
        var o2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {}, n2 = function(t3) {
          return null != t3;
        }, r2 = function(t3) {
          return null !== t3 && "object" === gu(t3);
        };
        if (!r2(t2)) throw new Error("Parameter mergeTarget must be an object");
        if (!r2(e2)) throw new Error("Parameter options must be an object");
        if (!n2(i2)) throw new Error("Parameter option must have a value");
        if (!r2(o2)) throw new Error("Parameter globalOptions must be an object");
        var s2 = e2[i2], a2 = r2(o2) && !function(t3) {
          for (var e3 in t3) if (Object.prototype.hasOwnProperty.call(t3, e3)) return false;
          return true;
        }(o2) ? o2[i2] : void 0, h2 = a2 ? a2.enabled : void 0;
        if (void 0 !== s2) {
          if ("boolean" == typeof s2) return r2(t2[i2]) || (t2[i2] = {}), void (t2[i2].enabled = s2);
          if (null === s2 && !r2(t2[i2])) {
            if (!n2(a2)) return;
            t2[i2] = Yv(a2);
          }
          if (r2(s2)) {
            var d2 = true;
            void 0 !== s2.enabled ? d2 = s2.enabled : void 0 !== h2 && (d2 = a2.enabled), function(t3, e3, i3) {
              r2(t3[i3]) || (t3[i3] = {});
              var o3 = e3[i3], n3 = t3[i3];
              for (var s3 in o3) Object.prototype.hasOwnProperty.call(o3, s3) && (n3[s3] = o3[s3]);
            }(t2, e2, i2), t2[i2].enabled = d2;
          }
        }
      }
      var Jm = { linear: function(t2) {
        return t2;
      }, easeInQuad: function(t2) {
        return t2 * t2;
      }, easeOutQuad: function(t2) {
        return t2 * (2 - t2);
      }, easeInOutQuad: function(t2) {
        return t2 < 0.5 ? 2 * t2 * t2 : (4 - 2 * t2) * t2 - 1;
      }, easeInCubic: function(t2) {
        return t2 * t2 * t2;
      }, easeOutCubic: function(t2) {
        return --t2 * t2 * t2 + 1;
      }, easeInOutCubic: function(t2) {
        return t2 < 0.5 ? 4 * t2 * t2 * t2 : (t2 - 1) * (2 * t2 - 2) * (2 * t2 - 2) + 1;
      }, easeInQuart: function(t2) {
        return t2 * t2 * t2 * t2;
      }, easeOutQuart: function(t2) {
        return 1 - --t2 * t2 * t2 * t2;
      }, easeInOutQuart: function(t2) {
        return t2 < 0.5 ? 8 * t2 * t2 * t2 * t2 : 1 - 8 * --t2 * t2 * t2 * t2;
      }, easeInQuint: function(t2) {
        return t2 * t2 * t2 * t2 * t2;
      }, easeOutQuint: function(t2) {
        return 1 + --t2 * t2 * t2 * t2 * t2;
      }, easeInOutQuint: function(t2) {
        return t2 < 0.5 ? 16 * t2 * t2 * t2 * t2 * t2 : 1 + 16 * --t2 * t2 * t2 * t2 * t2;
      } };
      function tb(t2, e2) {
        var i2;
        Of(e2) || (e2 = [e2]);
        var o2, n2 = _m(t2);
        try {
          for (n2.s(); !(o2 = n2.n()).done; ) {
            var r2 = o2.value;
            if (r2) {
              i2 = r2[e2[0]];
              for (var s2 = 1; s2 < e2.length; s2++) i2 && (i2 = i2[e2[s2]]);
              if (void 0 !== i2) break;
            }
          }
        } catch (t3) {
          n2.e(t3);
        } finally {
          n2.f();
        }
        return i2;
      }
      var eb = { black: "#000000", navy: "#000080", darkblue: "#00008B", mediumblue: "#0000CD", blue: "#0000FF", darkgreen: "#006400", green: "#008000", teal: "#008080", darkcyan: "#008B8B", deepskyblue: "#00BFFF", darkturquoise: "#00CED1", mediumspringgreen: "#00FA9A", lime: "#00FF00", springgreen: "#00FF7F", aqua: "#00FFFF", cyan: "#00FFFF", midnightblue: "#191970", dodgerblue: "#1E90FF", lightseagreen: "#20B2AA", forestgreen: "#228B22", seagreen: "#2E8B57", darkslategray: "#2F4F4F", limegreen: "#32CD32", mediumseagreen: "#3CB371", turquoise: "#40E0D0", royalblue: "#4169E1", steelblue: "#4682B4", darkslateblue: "#483D8B", mediumturquoise: "#48D1CC", indigo: "#4B0082", darkolivegreen: "#556B2F", cadetblue: "#5F9EA0", cornflowerblue: "#6495ED", mediumaquamarine: "#66CDAA", dimgray: "#696969", slateblue: "#6A5ACD", olivedrab: "#6B8E23", slategray: "#708090", lightslategray: "#778899", mediumslateblue: "#7B68EE", lawngreen: "#7CFC00", chartreuse: "#7FFF00", aquamarine: "#7FFFD4", maroon: "#800000", purple: "#800080", olive: "#808000", gray: "#808080", skyblue: "#87CEEB", lightskyblue: "#87CEFA", blueviolet: "#8A2BE2", darkred: "#8B0000", darkmagenta: "#8B008B", saddlebrown: "#8B4513", darkseagreen: "#8FBC8F", lightgreen: "#90EE90", mediumpurple: "#9370D8", darkviolet: "#9400D3", palegreen: "#98FB98", darkorchid: "#9932CC", yellowgreen: "#9ACD32", sienna: "#A0522D", brown: "#A52A2A", darkgray: "#A9A9A9", lightblue: "#ADD8E6", greenyellow: "#ADFF2F", paleturquoise: "#AFEEEE", lightsteelblue: "#B0C4DE", powderblue: "#B0E0E6", firebrick: "#B22222", darkgoldenrod: "#B8860B", mediumorchid: "#BA55D3", rosybrown: "#BC8F8F", darkkhaki: "#BDB76B", silver: "#C0C0C0", mediumvioletred: "#C71585", indianred: "#CD5C5C", peru: "#CD853F", chocolate: "#D2691E", tan: "#D2B48C", lightgrey: "#D3D3D3", palevioletred: "#D87093", thistle: "#D8BFD8", orchid: "#DA70D6", goldenrod: "#DAA520", crimson: "#DC143C", gainsboro: "#DCDCDC", plum: "#DDA0DD", burlywood: "#DEB887", lightcyan: "#E0FFFF", lavender: "#E6E6FA", darksalmon: "#E9967A", violet: "#EE82EE", palegoldenrod: "#EEE8AA", lightcoral: "#F08080", khaki: "#F0E68C", aliceblue: "#F0F8FF", honeydew: "#F0FFF0", azure: "#F0FFFF", sandybrown: "#F4A460", wheat: "#F5DEB3", beige: "#F5F5DC", whitesmoke: "#F5F5F5", mintcream: "#F5FFFA", ghostwhite: "#F8F8FF", salmon: "#FA8072", antiquewhite: "#FAEBD7", linen: "#FAF0E6", lightgoldenrodyellow: "#FAFAD2", oldlace: "#FDF5E6", red: "#FF0000", fuchsia: "#FF00FF", magenta: "#FF00FF", deeppink: "#FF1493", orangered: "#FF4500", tomato: "#FF6347", hotpink: "#FF69B4", coral: "#FF7F50", darkorange: "#FF8C00", lightsalmon: "#FFA07A", orange: "#FFA500", lightpink: "#FFB6C1", pink: "#FFC0CB", gold: "#FFD700", peachpuff: "#FFDAB9", navajowhite: "#FFDEAD", moccasin: "#FFE4B5", bisque: "#FFE4C4", mistyrose: "#FFE4E1", blanchedalmond: "#FFEBCD", papayawhip: "#FFEFD5", lavenderblush: "#FFF0F5", seashell: "#FFF5EE", cornsilk: "#FFF8DC", lemonchiffon: "#FFFACD", floralwhite: "#FFFAF0", snow: "#FFFAFA", yellow: "#FFFF00", lightyellow: "#FFFFE0", ivory: "#FFFFF0", white: "#FFFFFF" }, ib = function() {
        function t2() {
          var e2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1;
          vh(this, t2), this.pixelRatio = e2, this.generated = false, this.centerCoordinates = { x: 144.5, y: 144.5 }, this.r = 289 * 0.49, this.color = { r: 255, g: 255, b: 255, a: 1 }, this.hueCircle = void 0, this.initialColor = { r: 255, g: 255, b: 255, a: 1 }, this.previousColor = void 0, this.applied = false, this.updateCallback = function() {
          }, this.closeCallback = function() {
          }, this._create();
        }
        return wu(t2, [{ key: "insertTo", value: function(t3) {
          void 0 !== this.hammer && (this.hammer.destroy(), this.hammer = void 0), this.container = t3, this.container.appendChild(this.frame), this._bindHammer(), this._setSize();
        } }, { key: "setUpdateCallback", value: function(t3) {
          if ("function" != typeof t3) throw new Error("Function attempted to set as colorPicker update callback is not a function.");
          this.updateCallback = t3;
        } }, { key: "setCloseCallback", value: function(t3) {
          if ("function" != typeof t3) throw new Error("Function attempted to set as colorPicker closing callback is not a function.");
          this.closeCallback = t3;
        } }, { key: "_isColorString", value: function(t3) {
          if ("string" == typeof t3) return eb[t3];
        } }, { key: "setColor", value: function(t3) {
          var e2 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
          if ("none" !== t3) {
            var i2, o2 = this._isColorString(t3);
            if (void 0 !== o2 && (t3 = o2), true === Im(t3)) {
              if (true === $m(t3)) {
                var n2 = t3.substr(4).substr(0, t3.length - 5).split(",");
                i2 = { r: n2[0], g: n2[1], b: n2[2], a: 1 };
              } else if (true === function(t4) {
                return Pm.test(t4);
              }(t3)) {
                var r2 = t3.substr(5).substr(0, t3.length - 6).split(",");
                i2 = { r: r2[0], g: r2[1], b: r2[2], a: r2[3] };
              } else if (true === Gm(t3)) {
                var s2 = Wm(t3);
                i2 = { r: s2.r, g: s2.g, b: s2.b, a: 1 };
              }
            } else if (t3 instanceof Object && void 0 !== t3.r && void 0 !== t3.g && void 0 !== t3.b) {
              var a2 = void 0 !== t3.a ? t3.a : "1.0";
              i2 = { r: t3.r, g: t3.g, b: t3.b, a: a2 };
            }
            if (void 0 === i2) throw new Error("Unknown color passed to the colorPicker. Supported are strings: rgb, hex, rgba. Object: rgb ({r:r,g:g,b:b,[a:a]}). Supplied: " + $v(t3));
            this._setColor(i2, e2);
          }
        } }, { key: "show", value: function() {
          void 0 !== this.closeCallback && (this.closeCallback(), this.closeCallback = void 0), this.applied = false, this.frame.style.display = "block", this._generateHueCircle();
        } }, { key: "_hide", value: function() {
          var t3 = this;
          true === (!(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0]) && (this.previousColor = wo({}, this.color)), true === this.applied && this.updateCallback(this.initialColor), this.frame.style.display = "none", vg(function() {
            void 0 !== t3.closeCallback && (t3.closeCallback(), t3.closeCallback = void 0);
          }, 0);
        } }, { key: "_save", value: function() {
          this.updateCallback(this.color), this.applied = false, this._hide();
        } }, { key: "_apply", value: function() {
          this.applied = true, this.updateCallback(this.color), this._updatePicker(this.color);
        } }, { key: "_loadLast", value: function() {
          void 0 !== this.previousColor ? this.setColor(this.previousColor, false) : alert("There is no last color to load...");
        } }, { key: "_setColor", value: function(t3) {
          true === (!(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1]) && (this.initialColor = wo({}, t3)), this.color = t3;
          var e2 = Ym(t3.r, t3.g, t3.b), i2 = 2 * Math.PI, o2 = this.r * e2.s, n2 = this.centerCoordinates.x + o2 * Math.sin(i2 * e2.h), r2 = this.centerCoordinates.y + o2 * Math.cos(i2 * e2.h);
          this.colorPickerSelector.style.left = n2 - 0.5 * this.colorPickerSelector.clientWidth + "px", this.colorPickerSelector.style.top = r2 - 0.5 * this.colorPickerSelector.clientHeight + "px", this._updatePicker(t3);
        } }, { key: "_setOpacity", value: function(t3) {
          this.color.a = t3 / 100, this._updatePicker(this.color);
        } }, { key: "_setBrightness", value: function(t3) {
          var e2 = Ym(this.color.r, this.color.g, this.color.b);
          e2.v = t3 / 100;
          var i2 = Xm(e2.h, e2.s, e2.v);
          i2.a = this.color.a, this.color = i2, this._updatePicker();
        } }, { key: "_updatePicker", value: function() {
          var t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.color, e2 = Ym(t3.r, t3.g, t3.b), i2 = this.colorPickerCanvas.getContext("2d");
          void 0 === this.pixelRation && (this.pixelRatio = (window.devicePixelRatio || 1) / (i2.webkitBackingStorePixelRatio || i2.mozBackingStorePixelRatio || i2.msBackingStorePixelRatio || i2.oBackingStorePixelRatio || i2.backingStorePixelRatio || 1)), i2.setTransform(this.pixelRatio, 0, 0, this.pixelRatio, 0, 0);
          var o2 = this.colorPickerCanvas.clientWidth, n2 = this.colorPickerCanvas.clientHeight;
          i2.clearRect(0, 0, o2, n2), i2.putImageData(this.hueCircle, 0, 0), i2.fillStyle = "rgba(0,0,0," + (1 - e2.v) + ")", i2.circle(this.centerCoordinates.x, this.centerCoordinates.y, this.r), Cg(i2).call(i2), this.brightnessRange.value = 100 * e2.v, this.opacityRange.value = 100 * t3.a, this.initialColorDiv.style.backgroundColor = "rgba(" + this.initialColor.r + "," + this.initialColor.g + "," + this.initialColor.b + "," + this.initialColor.a + ")", this.newColorDiv.style.backgroundColor = "rgba(" + this.color.r + "," + this.color.g + "," + this.color.b + "," + this.color.a + ")";
        } }, { key: "_setSize", value: function() {
          this.colorPickerCanvas.style.width = "100%", this.colorPickerCanvas.style.height = "100%", this.colorPickerCanvas.width = 289 * this.pixelRatio, this.colorPickerCanvas.height = 289 * this.pixelRatio;
        } }, { key: "_create", value: function() {
          var t3, e2, i2, o2;
          if (this.frame = document.createElement("div"), this.frame.className = "vis-color-picker", this.colorPickerDiv = document.createElement("div"), this.colorPickerSelector = document.createElement("div"), this.colorPickerSelector.className = "vis-selector", this.colorPickerDiv.appendChild(this.colorPickerSelector), this.colorPickerCanvas = document.createElement("canvas"), this.colorPickerDiv.appendChild(this.colorPickerCanvas), this.colorPickerCanvas.getContext) {
            var n2 = this.colorPickerCanvas.getContext("2d");
            this.pixelRatio = (window.devicePixelRatio || 1) / (n2.webkitBackingStorePixelRatio || n2.mozBackingStorePixelRatio || n2.msBackingStorePixelRatio || n2.oBackingStorePixelRatio || n2.backingStorePixelRatio || 1), this.colorPickerCanvas.getContext("2d").setTransform(this.pixelRatio, 0, 0, this.pixelRatio, 0, 0);
          } else {
            var r2 = document.createElement("DIV");
            r2.style.color = "red", r2.style.fontWeight = "bold", r2.style.padding = "10px", r2.innerText = "Error: your browser does not support HTML canvas", this.colorPickerCanvas.appendChild(r2);
          }
          this.colorPickerDiv.className = "vis-color", this.opacityDiv = document.createElement("div"), this.opacityDiv.className = "vis-opacity", this.brightnessDiv = document.createElement("div"), this.brightnessDiv.className = "vis-brightness", this.arrowDiv = document.createElement("div"), this.arrowDiv.className = "vis-arrow", this.opacityRange = document.createElement("input");
          try {
            this.opacityRange.type = "range", this.opacityRange.min = "0", this.opacityRange.max = "100";
          } catch (t4) {
          }
          this.opacityRange.value = "100", this.opacityRange.className = "vis-range", this.brightnessRange = document.createElement("input");
          try {
            this.brightnessRange.type = "range", this.brightnessRange.min = "0", this.brightnessRange.max = "100";
          } catch (t4) {
          }
          this.brightnessRange.value = "100", this.brightnessRange.className = "vis-range", this.opacityDiv.appendChild(this.opacityRange), this.brightnessDiv.appendChild(this.brightnessRange);
          var s2 = this;
          this.opacityRange.onchange = function() {
            s2._setOpacity(this.value);
          }, this.opacityRange.oninput = function() {
            s2._setOpacity(this.value);
          }, this.brightnessRange.onchange = function() {
            s2._setBrightness(this.value);
          }, this.brightnessRange.oninput = function() {
            s2._setBrightness(this.value);
          }, this.brightnessLabel = document.createElement("div"), this.brightnessLabel.className = "vis-label vis-brightness", this.brightnessLabel.innerText = "brightness:", this.opacityLabel = document.createElement("div"), this.opacityLabel.className = "vis-label vis-opacity", this.opacityLabel.innerText = "opacity:", this.newColorDiv = document.createElement("div"), this.newColorDiv.className = "vis-new-color", this.newColorDiv.innerText = "new", this.initialColorDiv = document.createElement("div"), this.initialColorDiv.className = "vis-initial-color", this.initialColorDiv.innerText = "initial", this.cancelButton = document.createElement("div"), this.cancelButton.className = "vis-button vis-cancel", this.cancelButton.innerText = "cancel", this.cancelButton.onclick = Wo(t3 = this._hide).call(t3, this, false), this.applyButton = document.createElement("div"), this.applyButton.className = "vis-button vis-apply", this.applyButton.innerText = "apply", this.applyButton.onclick = Wo(e2 = this._apply).call(e2, this), this.saveButton = document.createElement("div"), this.saveButton.className = "vis-button vis-save", this.saveButton.innerText = "save", this.saveButton.onclick = Wo(i2 = this._save).call(i2, this), this.loadButton = document.createElement("div"), this.loadButton.className = "vis-button vis-load", this.loadButton.innerText = "load last", this.loadButton.onclick = Wo(o2 = this._loadLast).call(o2, this), this.frame.appendChild(this.colorPickerDiv), this.frame.appendChild(this.arrowDiv), this.frame.appendChild(this.brightnessLabel), this.frame.appendChild(this.brightnessDiv), this.frame.appendChild(this.opacityLabel), this.frame.appendChild(this.opacityDiv), this.frame.appendChild(this.newColorDiv), this.frame.appendChild(this.initialColorDiv), this.frame.appendChild(this.cancelButton), this.frame.appendChild(this.applyButton), this.frame.appendChild(this.saveButton), this.frame.appendChild(this.loadButton);
        } }, { key: "_bindHammer", value: function() {
          var t3 = this;
          this.drag = {}, this.pinch = {}, this.hammer = new Om(this.colorPickerCanvas), this.hammer.get("pinch").set({ enable: true }), this.hammer.on("hammer.input", function(e2) {
            e2.isFirst && t3._moveSelector(e2);
          }), this.hammer.on("tap", function(e2) {
            t3._moveSelector(e2);
          }), this.hammer.on("panstart", function(e2) {
            t3._moveSelector(e2);
          }), this.hammer.on("panmove", function(e2) {
            t3._moveSelector(e2);
          }), this.hammer.on("panend", function(e2) {
            t3._moveSelector(e2);
          });
        } }, { key: "_generateHueCircle", value: function() {
          if (false === this.generated) {
            var t3 = this.colorPickerCanvas.getContext("2d");
            void 0 === this.pixelRation && (this.pixelRatio = (window.devicePixelRatio || 1) / (t3.webkitBackingStorePixelRatio || t3.mozBackingStorePixelRatio || t3.msBackingStorePixelRatio || t3.oBackingStorePixelRatio || t3.backingStorePixelRatio || 1)), t3.setTransform(this.pixelRatio, 0, 0, this.pixelRatio, 0, 0);
            var e2, i2, o2, n2, r2 = this.colorPickerCanvas.clientWidth, s2 = this.colorPickerCanvas.clientHeight;
            t3.clearRect(0, 0, r2, s2), this.centerCoordinates = { x: 0.5 * r2, y: 0.5 * s2 }, this.r = 0.49 * r2;
            var a2, h2 = 2 * Math.PI / 360, d2 = 1 / this.r;
            for (o2 = 0; o2 < 360; o2++) for (n2 = 0; n2 < this.r; n2++) e2 = this.centerCoordinates.x + n2 * Math.sin(h2 * o2), i2 = this.centerCoordinates.y + n2 * Math.cos(h2 * o2), a2 = Xm(0.002777777777777778 * o2, n2 * d2, 1), t3.fillStyle = "rgb(" + a2.r + "," + a2.g + "," + a2.b + ")", t3.fillRect(e2 - 0.5, i2 - 0.5, 2, 2);
            t3.strokeStyle = "rgba(0,0,0,1)", t3.circle(this.centerCoordinates.x, this.centerCoordinates.y, this.r), t3.stroke(), this.hueCircle = t3.getImageData(0, 0, r2, s2);
          }
          this.generated = true;
        } }, { key: "_moveSelector", value: function(t3) {
          var e2 = this.colorPickerDiv.getBoundingClientRect(), i2 = t3.center.x - e2.left, o2 = t3.center.y - e2.top, n2 = 0.5 * this.colorPickerDiv.clientHeight, r2 = 0.5 * this.colorPickerDiv.clientWidth, s2 = i2 - r2, a2 = o2 - n2, h2 = Math.atan2(s2, a2), d2 = 0.98 * Math.min(Math.sqrt(s2 * s2 + a2 * a2), r2), l2 = Math.cos(h2) * d2 + n2, c2 = Math.sin(h2) * d2 + r2;
          this.colorPickerSelector.style.top = l2 - 0.5 * this.colorPickerSelector.clientHeight + "px", this.colorPickerSelector.style.left = c2 - 0.5 * this.colorPickerSelector.clientWidth + "px";
          var u2 = h2 / (2 * Math.PI);
          u2 = u2 < 0 ? u2 + 1 : u2;
          var f2 = d2 / this.r, p2 = Ym(this.color.r, this.color.g, this.color.b);
          p2.h = u2, p2.s = f2;
          var v2 = Xm(p2.h, p2.s, p2.v);
          v2.a = this.color.a, this.color = v2, this.initialColorDiv.style.backgroundColor = "rgba(" + this.initialColor.r + "," + this.initialColor.g + "," + this.initialColor.b + "," + this.initialColor.a + ")", this.newColorDiv.style.backgroundColor = "rgba(" + this.color.r + "," + this.color.g + "," + this.color.b + "," + this.color.a + ")";
        } }]), t2;
      }();
      function ob() {
        for (var t2 = arguments.length, e2 = new Array(t2), i2 = 0; i2 < t2; i2++) e2[i2] = arguments[i2];
        if (e2.length < 1) throw new TypeError("Invalid arguments.");
        if (1 === e2.length) return document.createTextNode(e2[0]);
        var o2 = document.createElement(e2[0]);
        return o2.appendChild(ob.apply(void 0, lf(mf(e2).call(e2, 1)))), o2;
      }
      var nb, rb = function() {
        function t2(e2, i2, o2) {
          var n2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1, r2 = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : function() {
            return false;
          };
          vh(this, t2), this.parent = e2, this.changedOptions = [], this.container = i2, this.allowCreation = false, this.hideOption = r2, this.options = {}, this.initialized = false, this.popupCounter = 0, this.defaultOptions = { enabled: false, filter: true, container: void 0, showButton: true }, wo(this.options, this.defaultOptions), this.configureOptions = o2, this.moduleOptions = {}, this.domElements = [], this.popupDiv = {}, this.popupLimit = 5, this.popupHistory = {}, this.colorPicker = new ib(n2), this.wrapper = void 0;
        }
        return wu(t2, [{ key: "setOptions", value: function(t3) {
          if (void 0 !== t3) {
            this.popupHistory = {}, this._removePopup();
            var e2 = true;
            if ("string" == typeof t3) this.options.filter = t3;
            else if (Of(t3)) this.options.filter = t3.join();
            else if ("object" === gu(t3)) {
              if (null == t3) throw new TypeError("options cannot be null");
              void 0 !== t3.container && (this.options.container = t3.container), void 0 !== lv(t3) && (this.options.filter = lv(t3)), void 0 !== t3.showButton && (this.options.showButton = t3.showButton), void 0 !== t3.enabled && (e2 = t3.enabled);
            } else "boolean" == typeof t3 ? (this.options.filter = true, e2 = t3) : "function" == typeof t3 && (this.options.filter = t3, e2 = true);
            false === lv(this.options) && (e2 = false), this.options.enabled = e2;
          }
          this._clean();
        } }, { key: "setModuleOptions", value: function(t3) {
          this.moduleOptions = t3, true === this.options.enabled && (this._clean(), void 0 !== this.options.container && (this.container = this.options.container), this._create());
        } }, { key: "_create", value: function() {
          this._clean(), this.changedOptions = [];
          var t3 = lv(this.options), e2 = 0, i2 = false;
          for (var o2 in this.configureOptions) Object.prototype.hasOwnProperty.call(this.configureOptions, o2) && (this.allowCreation = false, i2 = false, "function" == typeof t3 ? i2 = (i2 = t3(o2, [])) || this._handleObject(this.configureOptions[o2], [o2], true) : true !== t3 && -1 === Vv(t3).call(t3, o2) || (i2 = true), false !== i2 && (this.allowCreation = true, e2 > 0 && this._makeItem([]), this._makeHeader(o2), this._handleObject(this.configureOptions[o2], [o2])), e2++);
          this._makeButton(), this._push();
        } }, { key: "_push", value: function() {
          this.wrapper = document.createElement("div"), this.wrapper.className = "vis-configuration-wrapper", this.container.appendChild(this.wrapper);
          for (var t3 = 0; t3 < this.domElements.length; t3++) this.wrapper.appendChild(this.domElements[t3]);
          this._showPopupIfNeeded();
        } }, { key: "_clean", value: function() {
          for (var t3 = 0; t3 < this.domElements.length; t3++) this.wrapper.removeChild(this.domElements[t3]);
          void 0 !== this.wrapper && (this.container.removeChild(this.wrapper), this.wrapper = void 0), this.domElements = [], this._removePopup();
        } }, { key: "_getValue", value: function(t3) {
          for (var e2 = this.moduleOptions, i2 = 0; i2 < t3.length; i2++) {
            if (void 0 === e2[t3[i2]]) {
              e2 = void 0;
              break;
            }
            e2 = e2[t3[i2]];
          }
          return e2;
        } }, { key: "_makeItem", value: function(t3) {
          if (true === this.allowCreation) {
            var e2 = document.createElement("div");
            e2.className = "vis-configuration vis-config-item vis-config-s" + t3.length;
            for (var i2 = arguments.length, o2 = new Array(i2 > 1 ? i2 - 1 : 0), n2 = 1; n2 < i2; n2++) o2[n2 - 1] = arguments[n2];
            return Qf(o2).call(o2, function(t4) {
              e2.appendChild(t4);
            }), this.domElements.push(e2), this.domElements.length;
          }
          return 0;
        } }, { key: "_makeHeader", value: function(t3) {
          var e2 = document.createElement("div");
          e2.className = "vis-configuration vis-config-header", e2.innerText = t3, this._makeItem([], e2);
        } }, { key: "_makeLabel", value: function(t3, e2) {
          var i2 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], o2 = document.createElement("div");
          if (o2.className = "vis-configuration vis-config-label vis-config-s" + e2.length, true === i2) {
            for (; o2.firstChild; ) o2.removeChild(o2.firstChild);
            o2.appendChild(ob("i", "b", t3));
          } else o2.innerText = t3 + ":";
          return o2;
        } }, { key: "_makeDropdown", value: function(t3, e2, i2) {
          var o2 = document.createElement("select");
          o2.className = "vis-configuration vis-config-select";
          var n2 = 0;
          void 0 !== e2 && -1 !== Vv(t3).call(t3, e2) && (n2 = Vv(t3).call(t3, e2));
          for (var r2 = 0; r2 < t3.length; r2++) {
            var s2 = document.createElement("option");
            s2.value = t3[r2], r2 === n2 && (s2.selected = "selected"), s2.innerText = t3[r2], o2.appendChild(s2);
          }
          var a2 = this;
          o2.onchange = function() {
            a2._update(this.value, i2);
          };
          var h2 = this._makeLabel(i2[i2.length - 1], i2);
          this._makeItem(i2, h2, o2);
        } }, { key: "_makeRange", value: function(t3, e2, i2) {
          var o2 = t3[0], n2 = t3[1], r2 = t3[2], s2 = t3[3], a2 = document.createElement("input");
          a2.className = "vis-configuration vis-config-range";
          try {
            a2.type = "range", a2.min = n2, a2.max = r2;
          } catch (t4) {
          }
          a2.step = s2;
          var h2 = "", d2 = 0;
          if (void 0 !== e2) {
            var l2 = 1.2;
            e2 < 0 && e2 * l2 < n2 ? (a2.min = Math.ceil(e2 * l2), d2 = a2.min, h2 = "range increased") : e2 / l2 < n2 && (a2.min = Math.ceil(e2 / l2), d2 = a2.min, h2 = "range increased"), e2 * l2 > r2 && 1 !== r2 && (a2.max = Math.ceil(e2 * l2), d2 = a2.max, h2 = "range increased"), a2.value = e2;
          } else a2.value = o2;
          var c2 = document.createElement("input");
          c2.className = "vis-configuration vis-config-rangeinput", c2.value = a2.value;
          var u2 = this;
          a2.onchange = function() {
            c2.value = this.value, u2._update(Number(this.value), i2);
          }, a2.oninput = function() {
            c2.value = this.value;
          };
          var f2 = this._makeLabel(i2[i2.length - 1], i2), p2 = this._makeItem(i2, f2, a2, c2);
          "" !== h2 && this.popupHistory[p2] !== d2 && (this.popupHistory[p2] = d2, this._setupPopup(h2, p2));
        } }, { key: "_makeButton", value: function() {
          var t3 = this;
          if (true === this.options.showButton) {
            var e2 = document.createElement("div");
            e2.className = "vis-configuration vis-config-button", e2.innerText = "generate options", e2.onclick = function() {
              t3._printOptions();
            }, e2.onmouseover = function() {
              e2.className = "vis-configuration vis-config-button hover";
            }, e2.onmouseout = function() {
              e2.className = "vis-configuration vis-config-button";
            }, this.optionsContainer = document.createElement("div"), this.optionsContainer.className = "vis-configuration vis-config-option-container", this.domElements.push(this.optionsContainer), this.domElements.push(e2);
          }
        } }, { key: "_setupPopup", value: function(t3, e2) {
          var i2 = this;
          if (true === this.initialized && true === this.allowCreation && this.popupCounter < this.popupLimit) {
            var o2 = document.createElement("div");
            o2.id = "vis-configuration-popup", o2.className = "vis-configuration-popup", o2.innerText = t3, o2.onclick = function() {
              i2._removePopup();
            }, this.popupCounter += 1, this.popupDiv = { html: o2, index: e2 };
          }
        } }, { key: "_removePopup", value: function() {
          void 0 !== this.popupDiv.html && (this.popupDiv.html.parentNode.removeChild(this.popupDiv.html), clearTimeout(this.popupDiv.hideTimeout), clearTimeout(this.popupDiv.deleteTimeout), this.popupDiv = {});
        } }, { key: "_showPopupIfNeeded", value: function() {
          var t3 = this;
          if (void 0 !== this.popupDiv.html) {
            var e2 = this.domElements[this.popupDiv.index].getBoundingClientRect();
            this.popupDiv.html.style.left = e2.left + "px", this.popupDiv.html.style.top = e2.top - 30 + "px", document.body.appendChild(this.popupDiv.html), this.popupDiv.hideTimeout = vg(function() {
              t3.popupDiv.html.style.opacity = 0;
            }, 1500), this.popupDiv.deleteTimeout = vg(function() {
              t3._removePopup();
            }, 1800);
          }
        } }, { key: "_makeCheckbox", value: function(t3, e2, i2) {
          var o2 = document.createElement("input");
          o2.type = "checkbox", o2.className = "vis-configuration vis-config-checkbox", o2.checked = t3, void 0 !== e2 && (o2.checked = e2, e2 !== t3 && ("object" === gu(t3) ? e2 !== t3.enabled && this.changedOptions.push({ path: i2, value: e2 }) : this.changedOptions.push({ path: i2, value: e2 })));
          var n2 = this;
          o2.onchange = function() {
            n2._update(this.checked, i2);
          };
          var r2 = this._makeLabel(i2[i2.length - 1], i2);
          this._makeItem(i2, r2, o2);
        } }, { key: "_makeTextInput", value: function(t3, e2, i2) {
          var o2 = document.createElement("input");
          o2.type = "text", o2.className = "vis-configuration vis-config-text", o2.value = e2, e2 !== t3 && this.changedOptions.push({ path: i2, value: e2 });
          var n2 = this;
          o2.onchange = function() {
            n2._update(this.value, i2);
          };
          var r2 = this._makeLabel(i2[i2.length - 1], i2);
          this._makeItem(i2, r2, o2);
        } }, { key: "_makeColorField", value: function(t3, e2, i2) {
          var o2 = this, n2 = t3[1], r2 = document.createElement("div");
          "none" !== (e2 = void 0 === e2 ? n2 : e2) ? (r2.className = "vis-configuration vis-config-colorBlock", r2.style.backgroundColor = e2) : r2.className = "vis-configuration vis-config-colorBlock none", e2 = void 0 === e2 ? n2 : e2, r2.onclick = function() {
            o2._showColorPicker(e2, r2, i2);
          };
          var s2 = this._makeLabel(i2[i2.length - 1], i2);
          this._makeItem(i2, s2, r2);
        } }, { key: "_showColorPicker", value: function(t3, e2, i2) {
          var o2 = this;
          e2.onclick = function() {
          }, this.colorPicker.insertTo(e2), this.colorPicker.show(), this.colorPicker.setColor(t3), this.colorPicker.setUpdateCallback(function(t4) {
            var n2 = "rgba(" + t4.r + "," + t4.g + "," + t4.b + "," + t4.a + ")";
            e2.style.backgroundColor = n2, o2._update(n2, i2);
          }), this.colorPicker.setCloseCallback(function() {
            e2.onclick = function() {
              o2._showColorPicker(t3, e2, i2);
            };
          });
        } }, { key: "_handleObject", value: function(t3) {
          var e2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [], i2 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], o2 = false, n2 = lv(this.options), r2 = false;
          for (var s2 in t3) if (Object.prototype.hasOwnProperty.call(t3, s2)) {
            o2 = true;
            var a2 = t3[s2], h2 = jm(e2, s2);
            if ("function" == typeof n2 && false === (o2 = n2(s2, e2)) && !Of(a2) && "string" != typeof a2 && "boolean" != typeof a2 && a2 instanceof Object && (this.allowCreation = false, o2 = this._handleObject(a2, h2, true), this.allowCreation = false === i2), false !== o2) {
              r2 = true;
              var d2 = this._getValue(h2);
              if (Of(a2)) this._handleArray(a2, d2, h2);
              else if ("string" == typeof a2) this._makeTextInput(a2, d2, h2);
              else if ("boolean" == typeof a2) this._makeCheckbox(a2, d2, h2);
              else if (a2 instanceof Object) {
                if (!this.hideOption(e2, s2, this.moduleOptions)) if (void 0 !== a2.enabled) {
                  var l2 = jm(h2, "enabled"), c2 = this._getValue(l2);
                  if (true === c2) {
                    var u2 = this._makeLabel(s2, h2, true);
                    this._makeItem(h2, u2), r2 = this._handleObject(a2, h2) || r2;
                  } else this._makeCheckbox(a2, c2, h2);
                } else {
                  var f2 = this._makeLabel(s2, h2, true);
                  this._makeItem(h2, f2), r2 = this._handleObject(a2, h2) || r2;
                }
              } else console.error("dont know how to handle", a2, s2, h2);
            }
          }
          return r2;
        } }, { key: "_handleArray", value: function(t3, e2, i2) {
          "string" == typeof t3[0] && "color" === t3[0] ? (this._makeColorField(t3, e2, i2), t3[1] !== e2 && this.changedOptions.push({ path: i2, value: e2 })) : "string" == typeof t3[0] ? (this._makeDropdown(t3, e2, i2), t3[0] !== e2 && this.changedOptions.push({ path: i2, value: e2 })) : "number" == typeof t3[0] && (this._makeRange(t3, e2, i2), t3[0] !== e2 && this.changedOptions.push({ path: i2, value: Number(e2) }));
        } }, { key: "_update", value: function(t3, e2) {
          var i2 = this._constructOptions(t3, e2);
          this.parent.body && this.parent.body.emitter && this.parent.body.emitter.emit && this.parent.body.emitter.emit("configChange", i2), this.initialized = true, this.parent.setOptions(i2);
        } }, { key: "_constructOptions", value: function(t3, e2) {
          var i2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, o2 = i2;
          t3 = "false" !== (t3 = "true" === t3 || t3) && t3;
          for (var n2 = 0; n2 < e2.length; n2++) "global" !== e2[n2] && (void 0 === o2[e2[n2]] && (o2[e2[n2]] = {}), n2 !== e2.length - 1 ? o2 = o2[e2[n2]] : o2[e2[n2]] = t3);
          return i2;
        } }, { key: "_printOptions", value: function() {
          for (var t3 = this.getOptions(); this.optionsContainer.firstChild; ) this.optionsContainer.removeChild(this.optionsContainer.firstChild);
          this.optionsContainer.appendChild(ob("pre", "const options = " + $v(t3, null, 2)));
        } }, { key: "getOptions", value: function() {
          for (var t3 = {}, e2 = 0; e2 < this.changedOptions.length; e2++) this._constructOptions(this.changedOptions[e2].value, this.changedOptions[e2].path, t3);
          return t3;
        } }]), t2;
      }(), sb = function() {
        function t2(e2, i2) {
          vh(this, t2), this.container = e2, this.overflowMethod = i2 || "cap", this.x = 0, this.y = 0, this.padding = 5, this.hidden = false, this.frame = document.createElement("div"), this.frame.className = "vis-tooltip", this.container.appendChild(this.frame);
        }
        return wu(t2, [{ key: "setPosition", value: function(t3, e2) {
          this.x = Iv(t3), this.y = Iv(e2);
        } }, { key: "setText", value: function(t3) {
          if (t3 instanceof Element) {
            for (; this.frame.firstChild; ) this.frame.removeChild(this.frame.firstChild);
            this.frame.appendChild(t3);
          } else this.frame.innerText = t3;
        } }, { key: "show", value: function(t3) {
          if (void 0 === t3 && (t3 = true), true === t3) {
            var e2 = this.frame.clientHeight, i2 = this.frame.clientWidth, o2 = this.frame.parentNode.clientHeight, n2 = this.frame.parentNode.clientWidth, r2 = 0, s2 = 0;
            if ("flip" == this.overflowMethod) {
              var a2 = false, h2 = true;
              this.y - e2 < this.padding && (h2 = false), this.x + i2 > n2 - this.padding && (a2 = true), r2 = a2 ? this.x - i2 : this.x, s2 = h2 ? this.y - e2 : this.y;
            } else (s2 = this.y - e2) + e2 + this.padding > o2 && (s2 = o2 - e2 - this.padding), s2 < this.padding && (s2 = this.padding), (r2 = this.x) + i2 + this.padding > n2 && (r2 = n2 - i2 - this.padding), r2 < this.padding && (r2 = this.padding);
            this.frame.style.left = r2 + "px", this.frame.style.top = s2 + "px", this.frame.style.visibility = "visible", this.hidden = false;
          } else this.hide();
        } }, { key: "hide", value: function() {
          this.hidden = true, this.frame.style.left = "0", this.frame.style.top = "0", this.frame.style.visibility = "hidden";
        } }, { key: "destroy", value: function() {
          this.frame.parentNode.removeChild(this.frame);
        } }]), t2;
      }(), ab = false, hb = "background: #FFeeee; color: #dd0000", db = function() {
        function t2() {
          vh(this, t2);
        }
        return wu(t2, null, [{ key: "validate", value: function(e2, i2, o2) {
          ab = false, nb = i2;
          var n2 = i2;
          return void 0 !== o2 && (n2 = i2[o2]), t2.parse(e2, n2, []), ab;
        } }, { key: "parse", value: function(e2, i2, o2) {
          for (var n2 in e2) Object.prototype.hasOwnProperty.call(e2, n2) && t2.check(n2, e2, i2, o2);
        } }, { key: "check", value: function(e2, i2, o2, n2) {
          if (void 0 !== o2[e2] || void 0 !== o2.__any__) {
            var r2 = e2, s2 = true;
            void 0 === o2[e2] && void 0 !== o2.__any__ && (r2 = "__any__", s2 = "object" === t2.getType(i2[e2]));
            var a2 = o2[r2];
            s2 && void 0 !== a2.__type__ && (a2 = a2.__type__), t2.checkFields(e2, i2, o2, r2, a2, n2);
          } else t2.getSuggestion(e2, o2, n2);
        } }, { key: "checkFields", value: function(e2, i2, o2, n2, r2, s2) {
          var a2 = function(i3) {
            console.error("%c" + i3 + t2.printLocation(s2, e2), hb);
          }, h2 = t2.getType(i2[e2]), d2 = r2[h2];
          void 0 !== d2 ? "array" === t2.getType(d2) && -1 === Vv(d2).call(d2, i2[e2]) ? (a2('Invalid option detected in "' + e2 + '". Allowed values are:' + t2.print(d2) + ' not "' + i2[e2] + '". '), ab = true) : "object" === h2 && "__any__" !== n2 && (s2 = jm(s2, e2), t2.parse(i2[e2], o2[n2], s2)) : void 0 === r2.any && (a2('Invalid type received for "' + e2 + '". Expected: ' + t2.print(zf(r2)) + ". Received [" + h2 + '] "' + i2[e2] + '"'), ab = true);
        } }, { key: "getType", value: function(t3) {
          var e2 = gu(t3);
          return "object" === e2 ? null === t3 ? "null" : t3 instanceof Boolean ? "boolean" : t3 instanceof Number ? "number" : t3 instanceof String ? "string" : Of(t3) ? "array" : t3 instanceof Date ? "date" : void 0 !== t3.nodeType ? "dom" : true === t3._isAMomentObject ? "moment" : "object" : "number" === e2 ? "number" : "boolean" === e2 ? "boolean" : "string" === e2 ? "string" : void 0 === e2 ? "undefined" : e2;
        } }, { key: "getSuggestion", value: function(e2, i2, o2) {
          var n2, r2 = t2.findInOptions(e2, i2, o2, false), s2 = t2.findInOptions(e2, nb, [], true);
          n2 = void 0 !== r2.indexMatch ? " in " + t2.printLocation(r2.path, e2, "") + 'Perhaps it was incomplete? Did you mean: "' + r2.indexMatch + '"?\n\n' : s2.distance <= 4 && r2.distance > s2.distance ? " in " + t2.printLocation(r2.path, e2, "") + "Perhaps it was misplaced? Matching option found at: " + t2.printLocation(s2.path, s2.closestMatch, "") : r2.distance <= 8 ? '. Did you mean "' + r2.closestMatch + '"?' + t2.printLocation(r2.path, e2) : ". Did you mean one of these: " + t2.print(zf(i2)) + t2.printLocation(o2, e2), console.error('%cUnknown option detected: "' + e2 + '"' + n2, hb), ab = true;
        } }, { key: "findInOptions", value: function(e2, i2, o2) {
          var n2, r2 = arguments.length > 3 && void 0 !== arguments[3] && arguments[3], s2 = 1e9, a2 = "", h2 = [], d2 = e2.toLowerCase(), l2 = void 0;
          for (var c2 in i2) {
            var u2 = void 0;
            if (void 0 !== i2[c2].__type__ && true === r2) {
              var f2 = t2.findInOptions(e2, i2[c2], jm(o2, c2));
              s2 > f2.distance && (a2 = f2.closestMatch, h2 = f2.path, s2 = f2.distance, l2 = f2.indexMatch);
            } else {
              var p2;
              -1 !== Vv(p2 = c2.toLowerCase()).call(p2, d2) && (l2 = c2), s2 > (u2 = t2.levenshteinDistance(e2, c2)) && (a2 = c2, h2 = mf(n2 = o2).call(n2), s2 = u2);
            }
          }
          return { closestMatch: a2, path: h2, distance: s2, indexMatch: l2 };
        } }, { key: "printLocation", value: function(t3, e2) {
          for (var i2 = "\n\n" + (arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "Problem value found at: \n") + "options = {\n", o2 = 0; o2 < t3.length; o2++) {
            for (var n2 = 0; n2 < o2 + 1; n2++) i2 += "  ";
            i2 += t3[o2] + ": {\n";
          }
          for (var r2 = 0; r2 < t3.length + 1; r2++) i2 += "  ";
          i2 += e2 + "\n";
          for (var s2 = 0; s2 < t3.length + 1; s2++) {
            for (var a2 = 0; a2 < t3.length - s2; a2++) i2 += "  ";
            i2 += "}\n";
          }
          return i2 + "\n\n";
        } }, { key: "print", value: function(t3) {
          return $v(t3).replace(/(")|(\[)|(\])|(,"__type__")/g, "").replace(/(,)/g, ", ");
        } }, { key: "levenshteinDistance", value: function(t3, e2) {
          if (0 === t3.length) return e2.length;
          if (0 === e2.length) return t3.length;
          var i2, o2, n2 = [];
          for (i2 = 0; i2 <= e2.length; i2++) n2[i2] = [i2];
          for (o2 = 0; o2 <= t3.length; o2++) n2[0][o2] = o2;
          for (i2 = 1; i2 <= e2.length; i2++) for (o2 = 1; o2 <= t3.length; o2++) e2.charAt(i2 - 1) == t3.charAt(o2 - 1) ? n2[i2][o2] = n2[i2 - 1][o2 - 1] : n2[i2][o2] = Math.min(n2[i2 - 1][o2 - 1] + 1, Math.min(n2[i2][o2 - 1] + 1, n2[i2 - 1][o2] + 1));
          return n2[e2.length][t3.length];
        } }]), t2;
      }(), lb = Cm, cb = rb, ub = Om, fb = sb, pb = hb, vb = db;
      function gb(t2) {
        return kb = t2, function() {
          var t3 = {};
          _b = 0, void (xb = kb.charAt(0)), Fb(), "strict" === Eb && (t3.strict = true, Fb());
          "graph" !== Eb && "digraph" !== Eb || (t3.type = Eb, Fb());
          Ob === bb.IDENTIFIER && (t3.id = Eb, Fb());
          if ("{" != Eb) throw Lb("Angle bracket { expected");
          if (Fb(), zb(t3), "}" != Eb) throw Lb("Angle bracket } expected");
          if (Fb(), "" !== Eb) throw Lb("End of file expected");
          return Fb(), delete t3.node, delete t3.edge, delete t3.graph, t3;
        }();
      }
      var yb = { fontsize: "font.size", fontcolor: "font.color", labelfontcolor: "font.color", fontname: "font.face", color: ["color.border", "color.background"], fillcolor: "color.background", tooltip: "title", labeltooltip: "title" }, mb = Yv(yb);
      mb.color = "color.color", mb.style = "dashes";
      var bb = { NULL: 0, DELIMITER: 1, IDENTIFIER: 2, UNKNOWN: 3 }, wb = { "{": true, "}": true, "[": true, "]": true, ";": true, "=": true, ",": true, "->": true, "--": true }, kb = "", _b = 0, xb = "", Eb = "", Ob = bb.NULL;
      function Cb() {
        _b++, xb = kb.charAt(_b);
      }
      function Sb() {
        return kb.charAt(_b + 1);
      }
      function Tb(t2) {
        var e2 = t2.charCodeAt(0);
        return e2 < 47 ? 35 === e2 || 46 === e2 : e2 < 59 ? e2 > 47 : e2 < 91 ? e2 > 64 : e2 < 96 ? 95 === e2 : e2 < 123 && e2 > 96;
      }
      function Mb(t2, e2) {
        if (t2 || (t2 = {}), e2) for (var i2 in e2) e2.hasOwnProperty(i2) && (t2[i2] = e2[i2]);
        return t2;
      }
      function Pb(t2, e2, i2) {
        for (var o2 = e2.split("."), n2 = t2; o2.length; ) {
          var r2 = o2.shift();
          o2.length ? (n2[r2] || (n2[r2] = {}), n2 = n2[r2]) : n2[r2] = i2;
        }
      }
      function Db(t2, e2) {
        for (var i2, o2, n2 = null, r2 = [t2], s2 = t2; s2.parent; ) r2.push(s2.parent), s2 = s2.parent;
        if (s2.nodes) {
          for (i2 = 0, o2 = s2.nodes.length; i2 < o2; i2++) if (e2.id === s2.nodes[i2].id) {
            n2 = s2.nodes[i2];
            break;
          }
        }
        for (n2 || (n2 = { id: e2.id }, t2.node && (n2.attr = Mb(n2.attr, t2.node))), i2 = r2.length - 1; i2 >= 0; i2--) {
          var a2, h2 = r2[i2];
          h2.nodes || (h2.nodes = []), -1 === Vv(a2 = h2.nodes).call(a2, n2) && h2.nodes.push(n2);
        }
        e2.attr && (n2.attr = Mb(n2.attr, e2.attr));
      }
      function Ib(t2, e2) {
        if (t2.edges || (t2.edges = []), t2.edges.push(e2), t2.edge) {
          var i2 = Mb({}, t2.edge);
          e2.attr = Mb(i2, e2.attr);
        }
      }
      function Bb(t2, e2, i2, o2, n2) {
        var r2 = { from: e2, to: i2, type: o2 };
        return t2.edge && (r2.attr = Mb({}, t2.edge)), r2.attr = Mb(r2.attr || {}, n2), null != n2 && n2.hasOwnProperty("arrows") && null != n2.arrows && (r2.arrows = { to: { enabled: true, type: n2.arrows.type } }, n2.arrows = null), r2;
      }
      function Fb() {
        for (Ob = bb.NULL, Eb = ""; " " === xb || "	" === xb || "\n" === xb || "\r" === xb; ) Cb();
        do {
          var t2 = false;
          if ("#" === xb) {
            for (var e2 = _b - 1; " " === kb.charAt(e2) || "	" === kb.charAt(e2); ) e2--;
            if ("\n" === kb.charAt(e2) || "" === kb.charAt(e2)) {
              for (; "" != xb && "\n" != xb; ) Cb();
              t2 = true;
            }
          }
          if ("/" === xb && "/" === Sb()) {
            for (; "" != xb && "\n" != xb; ) Cb();
            t2 = true;
          }
          if ("/" === xb && "*" === Sb()) {
            for (; "" != xb; ) {
              if ("*" === xb && "/" === Sb()) {
                Cb(), Cb();
                break;
              }
              Cb();
            }
            t2 = true;
          }
          for (; " " === xb || "	" === xb || "\n" === xb || "\r" === xb; ) Cb();
        } while (t2);
        if ("" !== xb) {
          var i2 = xb + Sb();
          if (wb[i2]) return Ob = bb.DELIMITER, Eb = i2, Cb(), void Cb();
          if (wb[xb]) return Ob = bb.DELIMITER, Eb = xb, void Cb();
          if (Tb(xb) || "-" === xb) {
            for (Eb += xb, Cb(); Tb(xb); ) Eb += xb, Cb();
            return "false" === Eb ? Eb = false : "true" === Eb ? Eb = true : isNaN(Number(Eb)) || (Eb = Number(Eb)), void (Ob = bb.IDENTIFIER);
          }
          if ('"' === xb) {
            for (Cb(); "" != xb && ('"' != xb || '"' === xb && '"' === Sb()); ) '"' === xb ? (Eb += xb, Cb()) : "\\" === xb && "n" === Sb() ? (Eb += "\n", Cb()) : Eb += xb, Cb();
            if ('"' != xb) throw Lb('End of string " expected');
            return Cb(), void (Ob = bb.IDENTIFIER);
          }
          for (Ob = bb.UNKNOWN; "" != xb; ) Eb += xb, Cb();
          throw new SyntaxError('Syntax error in part "' + Hb(Eb, 30) + '"');
        }
        Ob = bb.DELIMITER;
      }
      function zb(t2) {
        for (; "" !== Eb && "}" != Eb; ) Nb(t2), ";" === Eb && Fb();
      }
      function Nb(t2) {
        var e2 = Ab(t2);
        if (e2) Rb(t2, e2);
        else {
          var i2 = function(t3) {
            if ("node" === Eb) return Fb(), t3.node = jb(), "node";
            if ("edge" === Eb) return Fb(), t3.edge = jb(), "edge";
            if ("graph" === Eb) return Fb(), t3.graph = jb(), "graph";
            return null;
          }(t2);
          if (!i2) {
            if (Ob != bb.IDENTIFIER) throw Lb("Identifier expected");
            var o2 = Eb;
            if (Fb(), "=" === Eb) {
              if (Fb(), Ob != bb.IDENTIFIER) throw Lb("Identifier expected");
              t2[o2] = Eb, Fb();
            } else !function(t3, e3) {
              var i3 = { id: e3 }, o3 = jb();
              o3 && (i3.attr = o3);
              Db(t3, i3), Rb(t3, e3);
            }(t2, o2);
          }
        }
      }
      function Ab(t2) {
        var e2 = null;
        if ("subgraph" === Eb && ((e2 = {}).type = "subgraph", Fb(), Ob === bb.IDENTIFIER && (e2.id = Eb, Fb())), "{" === Eb) {
          if (Fb(), e2 || (e2 = {}), e2.parent = t2, e2.node = t2.node, e2.edge = t2.edge, e2.graph = t2.graph, zb(e2), "}" != Eb) throw Lb("Angle bracket } expected");
          Fb(), delete e2.node, delete e2.edge, delete e2.graph, delete e2.parent, t2.subgraphs || (t2.subgraphs = []), t2.subgraphs.push(e2);
        }
        return e2;
      }
      function Rb(t2, e2) {
        for (; "->" === Eb || "--" === Eb; ) {
          var i2, o2 = Eb;
          Fb();
          var n2 = Ab(t2);
          if (n2) i2 = n2;
          else {
            if (Ob != bb.IDENTIFIER) throw Lb("Identifier or subgraph expected");
            Db(t2, { id: i2 = Eb }), Fb();
          }
          Ib(t2, Bb(t2, e2, i2, o2, jb())), e2 = i2;
        }
      }
      function jb() {
        for (var t2, e2, i2 = null, o2 = { dashed: true, solid: false, dotted: [1, 5] }, n2 = { dot: "circle", box: "box", crow: "crow", curve: "curve", icurve: "inv_curve", normal: "triangle", inv: "inv_triangle", diamond: "diamond", tee: "bar", vee: "vee" }, r2 = new Array(), s2 = new Array(); "[" === Eb; ) {
          for (Fb(), i2 = {}; "" !== Eb && "]" != Eb; ) {
            if (Ob != bb.IDENTIFIER) throw Lb("Attribute name expected");
            var a2 = Eb;
            if (Fb(), "=" != Eb) throw Lb("Equal sign = expected");
            if (Fb(), Ob != bb.IDENTIFIER) throw Lb("Attribute value expected");
            var h2 = Eb;
            "style" === a2 && (h2 = o2[h2]), "arrowhead" === a2 && (a2 = "arrows", h2 = { to: { enabled: true, type: n2[h2] } }), "arrowtail" === a2 && (a2 = "arrows", h2 = { from: { enabled: true, type: n2[h2] } }), r2.push({ attr: i2, name: a2, value: h2 }), s2.push(a2), Fb(), "," == Eb && Fb();
          }
          if ("]" != Eb) throw Lb("Bracket ] expected");
          Fb();
        }
        if (Qp(s2).call(s2, "dir")) {
          var d2 = { arrows: {} };
          for (t2 = 0; t2 < r2.length; t2++) if ("arrows" === r2[t2].name) if (null != r2[t2].value.to) d2.arrows.to = t2;
          else {
            if (null == r2[t2].value.from) throw Lb("Invalid value of arrows");
            d2.arrows.from = t2;
          }
          else "dir" === r2[t2].name && (d2.dir = t2);
          var l2, c2, u2 = r2[d2.dir].value;
          if (!Qp(s2).call(s2, "arrows")) if ("both" === u2) r2.push({ attr: r2[d2.dir].attr, name: "arrows", value: { to: { enabled: true } } }), d2.arrows.to = r2.length - 1, r2.push({ attr: r2[d2.dir].attr, name: "arrows", value: { from: { enabled: true } } }), d2.arrows.from = r2.length - 1;
          else if ("forward" === u2) r2.push({ attr: r2[d2.dir].attr, name: "arrows", value: { to: { enabled: true } } }), d2.arrows.to = r2.length - 1;
          else if ("back" === u2) r2.push({ attr: r2[d2.dir].attr, name: "arrows", value: { from: { enabled: true } } }), d2.arrows.from = r2.length - 1;
          else {
            if ("none" !== u2) throw Lb('Invalid dir type "' + u2 + '"');
            r2.push({ attr: r2[d2.dir].attr, name: "arrows", value: "" }), d2.arrows.to = r2.length - 1;
          }
          if ("both" === u2) d2.arrows.to && d2.arrows.from ? (c2 = r2[d2.arrows.to].value.to.type, l2 = r2[d2.arrows.from].value.from.type, r2[d2.arrows.to] = { attr: r2[d2.arrows.to].attr, name: r2[d2.arrows.to].name, value: { to: { enabled: true, type: c2 }, from: { enabled: true, type: l2 } } }, Pp(r2).call(r2, d2.arrows.from, 1)) : d2.arrows.to ? (c2 = r2[d2.arrows.to].value.to.type, l2 = "arrow", r2[d2.arrows.to] = { attr: r2[d2.arrows.to].attr, name: r2[d2.arrows.to].name, value: { to: { enabled: true, type: c2 }, from: { enabled: true, type: l2 } } }) : d2.arrows.from && (c2 = "arrow", l2 = r2[d2.arrows.from].value.from.type, r2[d2.arrows.from] = { attr: r2[d2.arrows.from].attr, name: r2[d2.arrows.from].name, value: { to: { enabled: true, type: c2 }, from: { enabled: true, type: l2 } } });
          else if ("back" === u2) d2.arrows.to && d2.arrows.from ? (c2 = "", l2 = r2[d2.arrows.from].value.from.type, r2[d2.arrows.from] = { attr: r2[d2.arrows.from].attr, name: r2[d2.arrows.from].name, value: { to: { enabled: true, type: c2 }, from: { enabled: true, type: l2 } } }) : d2.arrows.to ? (c2 = "", l2 = "arrow", d2.arrows.from = d2.arrows.to, r2[d2.arrows.from] = { attr: r2[d2.arrows.from].attr, name: r2[d2.arrows.from].name, value: { to: { enabled: true, type: c2 }, from: { enabled: true, type: l2 } } }) : d2.arrows.from && (c2 = "", l2 = r2[d2.arrows.from].value.from.type, r2[d2.arrows.to] = { attr: r2[d2.arrows.from].attr, name: r2[d2.arrows.from].name, value: { to: { enabled: true, type: c2 }, from: { enabled: true, type: l2 } } }), r2[d2.arrows.from] = { attr: r2[d2.arrows.from].attr, name: r2[d2.arrows.from].name, value: { from: { enabled: true, type: r2[d2.arrows.from].value.from.type } } };
          else if ("none" === u2) {
            var f2;
            r2[f2 = d2.arrows.to ? d2.arrows.to : d2.arrows.from] = { attr: r2[f2].attr, name: r2[f2].name, value: "" };
          } else {
            if ("forward" !== u2) throw Lb('Invalid dir type "' + u2 + '"');
            d2.arrows.to && d2.arrows.from || d2.arrows.to ? (c2 = r2[d2.arrows.to].value.to.type, l2 = "", r2[d2.arrows.to] = { attr: r2[d2.arrows.to].attr, name: r2[d2.arrows.to].name, value: { to: { enabled: true, type: c2 }, from: { enabled: true, type: l2 } } }) : d2.arrows.from && (c2 = "arrow", l2 = "", d2.arrows.to = d2.arrows.from, r2[d2.arrows.to] = { attr: r2[d2.arrows.to].attr, name: r2[d2.arrows.to].name, value: { to: { enabled: true, type: c2 }, from: { enabled: true, type: l2 } } }), r2[d2.arrows.to] = { attr: r2[d2.arrows.to].attr, name: r2[d2.arrows.to].name, value: { to: { enabled: true, type: r2[d2.arrows.to].value.to.type } } };
          }
          Pp(r2).call(r2, d2.dir, 1);
        }
        if (Qp(s2).call(s2, "penwidth")) {
          var p2 = [];
          for (e2 = r2.length, t2 = 0; t2 < e2; t2++) "width" !== r2[t2].name && ("penwidth" === r2[t2].name && (r2[t2].name = "width"), p2.push(r2[t2]));
          r2 = p2;
        }
        for (e2 = r2.length, t2 = 0; t2 < e2; t2++) Pb(r2[t2].attr, r2[t2].name, r2[t2].value);
        return i2;
      }
      function Lb(t2) {
        return new SyntaxError(t2 + ', got "' + Hb(Eb, 30) + '" (char ' + _b + ")");
      }
      function Hb(t2, e2) {
        return t2.length <= e2 ? t2 : t2.substr(0, 27) + "...";
      }
      function Wb(t2, e2, i2) {
        for (var o2 = e2.split("."), n2 = o2.pop(), r2 = t2, s2 = 0; s2 < o2.length; s2++) {
          var a2 = o2[s2];
          a2 in r2 || (r2[a2] = {}), r2 = r2[a2];
        }
        return r2[n2] = i2, t2;
      }
      function Vb(t2, e2) {
        var i2 = {};
        for (var o2 in t2) if (t2.hasOwnProperty(o2)) {
          var n2 = e2[o2];
          Of(n2) ? Qf(n2).call(n2, function(e3) {
            Wb(i2, e3, t2[o2]);
          }) : Wb(i2, "string" == typeof n2 ? n2 : o2, t2[o2]);
        }
        return i2;
      }
      function qb(t2) {
        var e2, i2 = gb(t2), o2 = { nodes: [], edges: [], options: {} };
        i2.nodes && Qf(e2 = i2.nodes).call(e2, function(t3) {
          var e3 = { id: t3.id, label: String(t3.label || t3.id) };
          Mb(e3, Vb(t3.attr, yb)), e3.image && (e3.shape = "image"), o2.nodes.push(e3);
        });
        if (i2.edges) {
          var n2, r2 = function(t3) {
            var e3 = { from: t3.from, to: t3.to };
            return Mb(e3, Vb(t3.attr, mb)), null == e3.arrows && "->" === t3.type && (e3.arrows = "to"), e3;
          };
          Qf(n2 = i2.edges).call(n2, function(t3) {
            var e3, i3, n3, s2, a2, h2, d2;
            (e3 = t3.from instanceof Object ? t3.from.nodes : { id: t3.from }, i3 = t3.to instanceof Object ? t3.to.nodes : { id: t3.to }, t3.from instanceof Object && t3.from.edges) && Qf(n3 = t3.from.edges).call(n3, function(t4) {
              var e4 = r2(t4);
              o2.edges.push(e4);
            });
            (a2 = i3, h2 = function(e4, i4) {
              var n4 = Bb(o2, e4.id, i4.id, t3.type, t3.attr), s3 = r2(n4);
              o2.edges.push(s3);
            }, Of(s2 = e3) ? Qf(s2).call(s2, function(t4) {
              Of(a2) ? Qf(a2).call(a2, function(e4) {
                h2(t4, e4);
              }) : h2(t4, a2);
            }) : Of(a2) ? Qf(a2).call(a2, function(t4) {
              h2(s2, t4);
            }) : h2(s2, a2), t3.to instanceof Object && t3.to.edges) && Qf(d2 = t3.to.edges).call(d2, function(t4) {
              var e4 = r2(t4);
              o2.edges.push(e4);
            });
          });
        }
        return i2.attr && (o2.options = i2.attr), o2;
      }
      var Ub = Object.freeze({ __proto__: null, DOTToGraph: qb, parseDOT: gb });
      function Yb(t2, e2) {
        var i2, o2 = { edges: { inheritColor: false }, nodes: { fixed: false, parseColor: false } };
        null != e2 && (null != e2.fixed && (o2.nodes.fixed = e2.fixed), null != e2.parseColor && (o2.nodes.parseColor = e2.parseColor), null != e2.inheritColor && (o2.edges.inheritColor = e2.inheritColor));
        var n2 = t2.edges, r2 = If(n2).call(n2, function(t3) {
          var e3 = { from: t3.source, id: t3.id, to: t3.target };
          return null != t3.attributes && (e3.attributes = t3.attributes), null != t3.label && (e3.label = t3.label), null != t3.attributes && null != t3.attributes.title && (e3.title = t3.attributes.title), "Directed" === t3.type && (e3.arrows = "to"), t3.color && false === o2.edges.inheritColor && (e3.color = t3.color), e3;
        });
        return { nodes: If(i2 = t2.nodes).call(i2, function(t3) {
          var e3 = { id: t3.id, fixed: o2.nodes.fixed && null != t3.x && null != t3.y };
          return null != t3.attributes && (e3.attributes = t3.attributes), null != t3.label && (e3.label = t3.label), null != t3.size && (e3.size = t3.size), null != t3.attributes && null != t3.attributes.title && (e3.title = t3.attributes.title), null != t3.title && (e3.title = t3.title), null != t3.x && (e3.x = t3.x), null != t3.y && (e3.y = t3.y), null != t3.color && (true === o2.nodes.parseColor ? e3.color = t3.color : e3.color = { background: t3.color, border: t3.color, highlight: { background: t3.color, border: t3.color }, hover: { background: t3.color, border: t3.color } }), e3;
        }), edges: r2 };
      }
      var Xb = Object.freeze({ __proto__: null, parseGephi: Yb }), Kb = Object.freeze({ __proto__: null, cn: { addDescription: "单击空白处放置新节点。", addEdge: "添加连接线", addNode: "添加节点", back: "返回", close: "關閉", createEdgeError: "无法将连接线连接到群集。", del: "删除选定", deleteClusterError: "无法删除群集。", edgeDescription: "单击某个节点并将该连接线拖动到另一个节点以连接它们。", edit: "编辑", editClusterError: "无法编辑群集。", editEdge: "编辑连接线", editEdgeDescription: "单击控制节点并将它们拖到节点上连接。", editNode: "编辑节点" }, cs: { addDescription: "Kluknutím do prázdného prostoru můžete přidat nový vrchol.", addEdge: "Přidat hranu", addNode: "Přidat vrchol", back: "Zpět", close: "Zavřít", createEdgeError: "Nelze připojit hranu ke shluku.", del: "Smazat výběr", deleteClusterError: "Nelze mazat shluky.", edgeDescription: "Přetažením z jednoho vrcholu do druhého můžete spojit tyto vrcholy novou hranou.", edit: "Upravit", editClusterError: "Nelze upravovat shluky.", editEdge: "Upravit hranu", editEdgeDescription: "Přetažením kontrolního vrcholu hrany ji můžete připojit k jinému vrcholu.", editNode: "Upravit vrchol" }, de: { addDescription: "Klicke auf eine freie Stelle, um einen neuen Knoten zu plazieren.", addEdge: "Kante hinzufügen", addNode: "Knoten hinzufügen", back: "Zurück", close: "Schließen", createEdgeError: "Es ist nicht möglich, Kanten mit Clustern zu verbinden.", del: "Lösche Auswahl", deleteClusterError: "Cluster können nicht gelöscht werden.", edgeDescription: "Klicke auf einen Knoten und ziehe die Kante zu einem anderen Knoten, um diese zu verbinden.", edit: "Editieren", editClusterError: "Cluster können nicht editiert werden.", editEdge: "Kante editieren", editEdgeDescription: "Klicke auf die Verbindungspunkte und ziehe diese auf einen Knoten, um sie zu verbinden.", editNode: "Knoten editieren" }, en: { addDescription: "Click in an empty space to place a new node.", addEdge: "Add Edge", addNode: "Add Node", back: "Back", close: "Close", createEdgeError: "Cannot link edges to a cluster.", del: "Delete selected", deleteClusterError: "Clusters cannot be deleted.", edgeDescription: "Click on a node and drag the edge to another node to connect them.", edit: "Edit", editClusterError: "Clusters cannot be edited.", editEdge: "Edit Edge", editEdgeDescription: "Click on the control points and drag them to a node to connect to it.", editNode: "Edit Node" }, es: { addDescription: "Haga clic en un lugar vacío para colocar un nuevo nodo.", addEdge: "Añadir arista", addNode: "Añadir nodo", back: "Atrás", close: "Cerrar", createEdgeError: "No se puede conectar una arista a un grupo.", del: "Eliminar selección", deleteClusterError: "No es posible eliminar grupos.", edgeDescription: "Haga clic en un nodo y arrastre la arista hacia otro nodo para conectarlos.", edit: "Editar", editClusterError: "No es posible editar grupos.", editEdge: "Editar arista", editEdgeDescription: "Haga clic en un punto de control y arrastrelo a un nodo para conectarlo.", editNode: "Editar nodo" }, fr: { addDescription: "Cliquez dans un endroit vide pour placer un nœud.", addEdge: "Ajouter un lien", addNode: "Ajouter un nœud", back: "Retour", close: "Fermer", createEdgeError: "Impossible de créer un lien vers un cluster.", del: "Effacer la sélection", deleteClusterError: "Les clusters ne peuvent pas être effacés.", edgeDescription: "Cliquez sur un nœud et glissez le lien vers un autre nœud pour les connecter.", edit: "Éditer", editClusterError: "Les clusters ne peuvent pas être édités.", editEdge: "Éditer le lien", editEdgeDescription: "Cliquez sur les points de contrôle et glissez-les pour connecter un nœud.", editNode: "Éditer le nœud" }, it: { addDescription: "Clicca per aggiungere un nuovo nodo", addEdge: "Aggiungi un vertice", addNode: "Aggiungi un nodo", back: "Indietro", close: "Chiudere", createEdgeError: "Non si possono collegare vertici ad un cluster", del: "Cancella la selezione", deleteClusterError: "I cluster non possono essere cancellati", edgeDescription: "Clicca su un nodo e trascinalo ad un altro nodo per connetterli.", edit: "Modifica", editClusterError: "I clusters non possono essere modificati.", editEdge: "Modifica il vertice", editEdgeDescription: "Clicca sui Punti di controllo e trascinali ad un nodo per connetterli.", editNode: "Modifica il nodo" }, nl: { addDescription: "Klik op een leeg gebied om een nieuwe node te maken.", addEdge: "Link toevoegen", addNode: "Node toevoegen", back: "Terug", close: "Sluiten", createEdgeError: "Kan geen link maken naar een cluster.", del: "Selectie verwijderen", deleteClusterError: "Clusters kunnen niet worden verwijderd.", edgeDescription: "Klik op een node en sleep de link naar een andere node om ze te verbinden.", edit: "Wijzigen", editClusterError: "Clusters kunnen niet worden aangepast.", editEdge: "Link wijzigen", editEdgeDescription: "Klik op de verbindingspunten en sleep ze naar een node om daarmee te verbinden.", editNode: "Node wijzigen" }, pt: { addDescription: "Clique em um espaço em branco para adicionar um novo nó", addEdge: "Adicionar aresta", addNode: "Adicionar nó", back: "Voltar", close: "Fechar", createEdgeError: "Não foi possível linkar arestas a um cluster.", del: "Remover selecionado", deleteClusterError: "Clusters não puderam ser removidos.", edgeDescription: "Clique em um nó e arraste a aresta até outro nó para conectá-los", edit: "Editar", editClusterError: "Clusters não puderam ser editados.", editEdge: "Editar aresta", editEdgeDescription: "Clique nos pontos de controle e os arraste para um nó para conectá-los", editNode: "Editar nó" }, ru: { addDescription: "Кликните в свободное место, чтобы добавить новый узел.", addEdge: "Добавить ребро", addNode: "Добавить узел", back: "Назад", close: "Закрывать", createEdgeError: "Невозможно соединить ребра в кластер.", del: "Удалить выбранное", deleteClusterError: "Кластеры не могут быть удалены", edgeDescription: "Кликните на узел и протяните ребро к другому узлу, чтобы соединить их.", edit: "Редактировать", editClusterError: "Кластеры недоступны для редактирования.", editEdge: "Редактировать ребро", editEdgeDescription: "Кликните на контрольные точки и перетащите их в узел, чтобы подключиться к нему.", editNode: "Редактировать узел" }, uk: { addDescription: "Kлікніть на вільне місце, щоб додати новий вузол.", addEdge: "Додати край", addNode: "Додати вузол", back: "Назад", close: "Закрити", createEdgeError: "Не можливо об'єднати краї в групу.", del: "Видалити обране", deleteClusterError: "Групи не можуть бути видалені.", edgeDescription: "Клікніть на вузол і перетягніть край до іншого вузла, щоб їх з'єднати.", edit: "Редагувати", editClusterError: "Групи недоступні для редагування.", editEdge: "Редагувати край", editEdgeDescription: "Клікніть на контрольні точки і перетягніть їх у вузол, щоб підключитися до нього.", editNode: "Редагувати вузол" } });
      var Gb = function() {
        function t2() {
          vh(this, t2), this.NUM_ITERATIONS = 4, this.image = new Image(), this.canvas = document.createElement("canvas");
        }
        return wu(t2, [{ key: "init", value: function() {
          if (!this.initialized()) {
            this.src = this.image.src;
            var t3 = this.image.width, e2 = this.image.height;
            this.width = t3, this.height = e2;
            var i2 = Math.floor(e2 / 2), o2 = Math.floor(e2 / 4), n2 = Math.floor(e2 / 8), r2 = Math.floor(e2 / 16), s2 = Math.floor(t3 / 2), a2 = Math.floor(t3 / 4), h2 = Math.floor(t3 / 8), d2 = Math.floor(t3 / 16);
            this.canvas.width = 3 * a2, this.canvas.height = i2, this.coordinates = [[0, 0, s2, i2], [s2, 0, a2, o2], [s2, o2, h2, n2], [5 * h2, o2, d2, r2]], this._fillMipMap();
          }
        } }, { key: "initialized", value: function() {
          return void 0 !== this.coordinates;
        } }, { key: "_fillMipMap", value: function() {
          var t3 = this.canvas.getContext("2d"), e2 = this.coordinates[0];
          t3.drawImage(this.image, e2[0], e2[1], e2[2], e2[3]);
          for (var i2 = 1; i2 < this.NUM_ITERATIONS; i2++) {
            var o2 = this.coordinates[i2 - 1], n2 = this.coordinates[i2];
            t3.drawImage(this.canvas, o2[0], o2[1], o2[2], o2[3], n2[0], n2[1], n2[2], n2[3]);
          }
        } }, { key: "drawImageAtPosition", value: function(t3, e2, i2, o2, n2, r2) {
          if (this.initialized()) if (e2 > 2) {
            e2 *= 0.5;
            for (var s2 = 0; e2 > 2 && s2 < this.NUM_ITERATIONS; ) e2 *= 0.5, s2 += 1;
            s2 >= this.NUM_ITERATIONS && (s2 = this.NUM_ITERATIONS - 1);
            var a2 = this.coordinates[s2];
            t3.drawImage(this.canvas, a2[0], a2[1], a2[2], a2[3], i2, o2, n2, r2);
          } else t3.drawImage(this.image, i2, o2, n2, r2);
        } }]), t2;
      }(), $b = function() {
        function t2(e2) {
          vh(this, t2), this.images = {}, this.imageBroken = {}, this.callback = e2;
        }
        return wu(t2, [{ key: "_tryloadBrokenUrl", value: function(t3, e2, i2) {
          void 0 !== t3 && void 0 !== i2 && (void 0 !== e2 ? (i2.image.onerror = function() {
            console.error("Could not load brokenImage:", e2);
          }, i2.image.src = e2) : console.warn("No broken url image defined"));
        } }, { key: "_redrawWithImage", value: function(t3) {
          this.callback && this.callback(t3);
        } }, { key: "load", value: function(t3, e2) {
          var i2 = this, o2 = this.images[t3];
          if (o2) return o2;
          var n2 = new Gb();
          return this.images[t3] = n2, n2.image.onload = function() {
            i2._fixImageCoordinates(n2.image), n2.init(), i2._redrawWithImage(n2);
          }, n2.image.onerror = function() {
            console.error("Could not load image:", t3), i2._tryloadBrokenUrl(t3, e2, n2);
          }, n2.image.src = t3, n2;
        } }, { key: "_fixImageCoordinates", value: function(t3) {
          0 === t3.width && (document.body.appendChild(t3), t3.width = t3.offsetWidth, t3.height = t3.offsetHeight, document.body.removeChild(t3));
        } }]), t2;
      }(), Zb = { exports: {} }, Qb = s(function() {
        if ("function" == typeof ArrayBuffer) {
          var t2 = new ArrayBuffer(8);
          Object.isExtensible(t2) && Object.defineProperty(t2, "a", { value: 8 });
        }
      }), Jb = s, tw = et, ew = k, iw = Qb, ow = Object.isExtensible, nw = Jb(function() {
        ow(1);
      }) || iw ? function(t2) {
        return !!tw(t2) && ((!iw || "ArrayBuffer" !== ew(t2)) && (!ow || ow(t2)));
      } : ow, rw = !s(function() {
        return Object.isExtensible(Object.preventExtensions({}));
      }), sw = Mi, aw = y, hw = Xi, dw = et, lw = Jt, cw = Qe.f, uw = Jh, fw = id, pw = nw, vw = rw, gw = false, yw = ne("meta"), mw = 0, bw = function(t2) {
        cw(t2, yw, { value: { objectID: "O" + mw++, weakData: {} } });
      }, ww = Zb.exports = { enable: function() {
        ww.enable = function() {
        }, gw = true;
        var t2 = uw.f, e2 = aw([].splice), i2 = {};
        i2[yw] = 1, t2(i2).length && (uw.f = function(i3) {
          for (var o2 = t2(i3), n2 = 0, r2 = o2.length; n2 < r2; n2++) if (o2[n2] === yw) {
            e2(o2, n2, 1);
            break;
          }
          return o2;
        }, sw({ target: "Object", stat: true, forced: true }, { getOwnPropertyNames: fw.f }));
      }, fastKey: function(t2, e2) {
        if (!dw(t2)) return "symbol" == typeof t2 ? t2 : ("string" == typeof t2 ? "S" : "P") + t2;
        if (!lw(t2, yw)) {
          if (!pw(t2)) return "F";
          if (!e2) return "E";
          bw(t2);
        }
        return t2[yw].objectID;
      }, getWeakData: function(t2, e2) {
        if (!lw(t2, yw)) {
          if (!pw(t2)) return true;
          if (!e2) return false;
          bw(t2);
        }
        return t2[yw].weakData;
      }, onFreeze: function(t2) {
        return vw && gw && pw(t2) && !lw(t2, yw) && bw(t2), t2;
      } };
      hw[yw] = true;
      var kw = Zb.exports, _w = Ze, xw = B, Ew = oi, Ow = Tt, Cw = Xs, Sw = Hi, Tw = ht, Mw = Ta, Pw = ka, Dw = Hs, Iw = TypeError, Bw = function(t2, e2) {
        this.stopped = t2, this.result = e2;
      }, Fw = Bw.prototype, zw = function(t2, e2, i2) {
        var o2, n2, r2, s2, a2, h2, d2, l2 = i2 && i2.that, c2 = !(!i2 || !i2.AS_ENTRIES), u2 = !(!i2 || !i2.IS_RECORD), f2 = !(!i2 || !i2.IS_ITERATOR), p2 = !(!i2 || !i2.INTERRUPTED), v2 = _w(e2, l2), g2 = function(t3) {
          return o2 && Dw(o2, "normal", t3), new Bw(true, t3);
        }, y2 = function(t3) {
          return c2 ? (Ew(t3), p2 ? v2(t3[0], t3[1], g2) : v2(t3[0], t3[1])) : p2 ? v2(t3, g2) : v2(t3);
        };
        if (u2) o2 = t2.iterator;
        else if (f2) o2 = t2;
        else {
          if (!(n2 = Pw(t2))) throw new Iw(Ow(t2) + " is not iterable");
          if (Cw(n2)) {
            for (r2 = 0, s2 = Sw(t2); s2 > r2; r2++) if ((a2 = y2(t2[r2])) && Tw(Fw, a2)) return a2;
            return new Bw(false);
          }
          o2 = Mw(t2, n2);
        }
        for (h2 = u2 ? t2.next : o2.next; !(d2 = xw(h2, o2)).done; ) {
          try {
            a2 = y2(d2.value);
          } catch (t3) {
            Dw(o2, "throw", t3);
          }
          if ("object" == typeof a2 && a2 && Tw(Fw, a2)) return a2;
        }
        return new Bw(false);
      }, Nw = ht, Aw = TypeError, Rw = function(t2, e2) {
        if (Nw(e2, t2)) return t2;
        throw new Aw("Incorrect invocation");
      }, jw = Mi, Lw = r, Hw = kw, Ww = s, Vw = yi, qw = zw, Uw = Rw, Yw = T, Xw = et, Kw = Y, Gw = Gr, $w = Qe.f, Zw = zd.forEach, Qw = P, Jw = Hn.set, tk = Hn.getterFor, ek = function(t2, e2, i2) {
        var o2, n2 = -1 !== t2.indexOf("Map"), r2 = -1 !== t2.indexOf("Weak"), s2 = n2 ? "set" : "add", a2 = Lw[t2], h2 = a2 && a2.prototype, d2 = {};
        if (Qw && Yw(a2) && (r2 || h2.forEach && !Ww(function() {
          new a2().entries().next();
        }))) {
          var l2 = (o2 = e2(function(e3, i3) {
            Jw(Uw(e3, l2), { type: t2, collection: new a2() }), Kw(i3) || qw(i3, e3[s2], { that: e3, AS_ENTRIES: n2 });
          })).prototype, c2 = tk(t2);
          Zw(["add", "clear", "delete", "forEach", "get", "has", "set", "keys", "values", "entries"], function(t3) {
            var e3 = "add" === t3 || "set" === t3;
            !(t3 in h2) || r2 && "clear" === t3 || Vw(l2, t3, function(i3, o3) {
              var n3 = c2(this).collection;
              if (!e3 && r2 && !Xw(i3)) return "get" === t3 && void 0;
              var s3 = n3[t3](0 === i3 ? 0 : i3, o3);
              return e3 ? this : s3;
            });
          }), r2 || $w(l2, "size", { configurable: true, get: function() {
            return c2(this).collection.size;
          } });
        } else o2 = i2.getConstructor(e2, t2, n2, s2), Hw.enable();
        return Gw(o2, t2, false, true), d2[t2] = o2, jw({ global: true, forced: true }, d2), r2 || i2.setStrong(o2, t2, n2), o2;
      }, ik = Pr, ok = function(t2, e2, i2) {
        for (var o2 in e2) i2 && i2.unsafe && t2[o2] ? t2[o2] = e2[o2] : ik(t2, o2, e2[o2], i2);
        return t2;
      }, nk = at, rk = vd, sk = P, ak = fe("species"), hk = br, dk = vd, lk = ok, ck = Ze, uk = Rw, fk = Y, pk = zw, vk = Ts, gk = Ms, yk = function(t2) {
        var e2 = nk(t2);
        sk && e2 && !e2[ak] && rk(e2, ak, { configurable: true, get: function() {
          return this;
        } });
      }, mk = P, bk = kw.fastKey, wk = Hn.set, kk = Hn.getterFor, _k = { getConstructor: function(t2, e2, i2, o2) {
        var n2 = t2(function(t3, n3) {
          uk(t3, r2), wk(t3, { type: e2, index: hk(null), first: void 0, last: void 0, size: 0 }), mk || (t3.size = 0), fk(n3) || pk(n3, t3[o2], { that: t3, AS_ENTRIES: i2 });
        }), r2 = n2.prototype, s2 = kk(e2), a2 = function(t3, e3, i3) {
          var o3, n3, r3 = s2(t3), a3 = h2(t3, e3);
          return a3 ? a3.value = i3 : (r3.last = a3 = { index: n3 = bk(e3, true), key: e3, value: i3, previous: o3 = r3.last, next: void 0, removed: false }, r3.first || (r3.first = a3), o3 && (o3.next = a3), mk ? r3.size++ : t3.size++, "F" !== n3 && (r3.index[n3] = a3)), t3;
        }, h2 = function(t3, e3) {
          var i3, o3 = s2(t3), n3 = bk(e3);
          if ("F" !== n3) return o3.index[n3];
          for (i3 = o3.first; i3; i3 = i3.next) if (i3.key === e3) return i3;
        };
        return lk(r2, { clear: function() {
          for (var t3 = s2(this), e3 = t3.index, i3 = t3.first; i3; ) i3.removed = true, i3.previous && (i3.previous = i3.previous.next = void 0), delete e3[i3.index], i3 = i3.next;
          t3.first = t3.last = void 0, mk ? t3.size = 0 : this.size = 0;
        }, delete: function(t3) {
          var e3 = this, i3 = s2(e3), o3 = h2(e3, t3);
          if (o3) {
            var n3 = o3.next, r3 = o3.previous;
            delete i3.index[o3.index], o3.removed = true, r3 && (r3.next = n3), n3 && (n3.previous = r3), i3.first === o3 && (i3.first = n3), i3.last === o3 && (i3.last = r3), mk ? i3.size-- : e3.size--;
          }
          return !!o3;
        }, forEach: function(t3) {
          for (var e3, i3 = s2(this), o3 = ck(t3, arguments.length > 1 ? arguments[1] : void 0); e3 = e3 ? e3.next : i3.first; ) for (o3(e3.value, e3.key, this); e3 && e3.removed; ) e3 = e3.previous;
        }, has: function(t3) {
          return !!h2(this, t3);
        } }), lk(r2, i2 ? { get: function(t3) {
          var e3 = h2(this, t3);
          return e3 && e3.value;
        }, set: function(t3, e3) {
          return a2(this, 0 === t3 ? 0 : t3, e3);
        } } : { add: function(t3) {
          return a2(this, t3 = 0 === t3 ? 0 : t3, t3);
        } }), mk && dk(r2, "size", { configurable: true, get: function() {
          return s2(this).size;
        } }), n2;
      }, setStrong: function(t2, e2, i2) {
        var o2 = e2 + " Iterator", n2 = kk(e2), r2 = kk(o2);
        vk(t2, e2, function(t3, e3) {
          wk(this, { type: o2, target: t3, state: n2(t3), kind: e3, last: void 0 });
        }, function() {
          for (var t3 = r2(this), e3 = t3.kind, i3 = t3.last; i3 && i3.removed; ) i3 = i3.previous;
          return t3.target && (t3.last = i3 = i3 ? i3.next : t3.state.first) ? gk("keys" === e3 ? i3.key : "values" === e3 ? i3.value : [i3.key, i3.value], false) : (t3.target = void 0, gk(void 0, true));
        }, i2 ? "entries" : "values", !i2, true), yk(e2);
      } };
      ek("Map", function(t2) {
        return function() {
          return t2(this, arguments.length ? arguments[0] : void 0);
        };
      }, _k);
      var xk = o(it.Map), Ek = function() {
        function t2() {
          vh(this, t2), this.clear(), this._defaultIndex = 0, this._groupIndex = 0, this._defaultGroups = [{ border: "#2B7CE9", background: "#97C2FC", highlight: { border: "#2B7CE9", background: "#D2E5FF" }, hover: { border: "#2B7CE9", background: "#D2E5FF" } }, { border: "#FFA500", background: "#FFFF00", highlight: { border: "#FFA500", background: "#FFFFA3" }, hover: { border: "#FFA500", background: "#FFFFA3" } }, { border: "#FA0A10", background: "#FB7E81", highlight: { border: "#FA0A10", background: "#FFAFB1" }, hover: { border: "#FA0A10", background: "#FFAFB1" } }, { border: "#41A906", background: "#7BE141", highlight: { border: "#41A906", background: "#A1EC76" }, hover: { border: "#41A906", background: "#A1EC76" } }, { border: "#E129F0", background: "#EB7DF4", highlight: { border: "#E129F0", background: "#F0B3F5" }, hover: { border: "#E129F0", background: "#F0B3F5" } }, { border: "#7C29F0", background: "#AD85E4", highlight: { border: "#7C29F0", background: "#D3BDF0" }, hover: { border: "#7C29F0", background: "#D3BDF0" } }, { border: "#C37F00", background: "#FFA807", highlight: { border: "#C37F00", background: "#FFCA66" }, hover: { border: "#C37F00", background: "#FFCA66" } }, { border: "#4220FB", background: "#6E6EFD", highlight: { border: "#4220FB", background: "#9B9BFD" }, hover: { border: "#4220FB", background: "#9B9BFD" } }, { border: "#FD5A77", background: "#FFC0CB", highlight: { border: "#FD5A77", background: "#FFD1D9" }, hover: { border: "#FD5A77", background: "#FFD1D9" } }, { border: "#4AD63A", background: "#C2FABC", highlight: { border: "#4AD63A", background: "#E6FFE3" }, hover: { border: "#4AD63A", background: "#E6FFE3" } }, { border: "#990000", background: "#EE0000", highlight: { border: "#BB0000", background: "#FF3333" }, hover: { border: "#BB0000", background: "#FF3333" } }, { border: "#FF6000", background: "#FF6000", highlight: { border: "#FF6000", background: "#FF6000" }, hover: { border: "#FF6000", background: "#FF6000" } }, { border: "#97C2FC", background: "#2B7CE9", highlight: { border: "#D2E5FF", background: "#2B7CE9" }, hover: { border: "#D2E5FF", background: "#2B7CE9" } }, { border: "#399605", background: "#255C03", highlight: { border: "#399605", background: "#255C03" }, hover: { border: "#399605", background: "#255C03" } }, { border: "#B70054", background: "#FF007E", highlight: { border: "#B70054", background: "#FF007E" }, hover: { border: "#B70054", background: "#FF007E" } }, { border: "#AD85E4", background: "#7C29F0", highlight: { border: "#D3BDF0", background: "#7C29F0" }, hover: { border: "#D3BDF0", background: "#7C29F0" } }, { border: "#4557FA", background: "#000EA1", highlight: { border: "#6E6EFD", background: "#000EA1" }, hover: { border: "#6E6EFD", background: "#000EA1" } }, { border: "#FFC0CB", background: "#FD5A77", highlight: { border: "#FFD1D9", background: "#FD5A77" }, hover: { border: "#FFD1D9", background: "#FD5A77" } }, { border: "#C2FABC", background: "#74D66A", highlight: { border: "#E6FFE3", background: "#74D66A" }, hover: { border: "#E6FFE3", background: "#74D66A" } }, { border: "#EE0000", background: "#990000", highlight: { border: "#FF3333", background: "#BB0000" }, hover: { border: "#FF3333", background: "#BB0000" } }], this.options = {}, this.defaultOptions = { useDefaultGroups: true }, wo(this.options, this.defaultOptions);
        }
        return wu(t2, [{ key: "setOptions", value: function(t3) {
          var e2 = ["useDefaultGroups"];
          if (void 0 !== t3) {
            for (var i2 in t3) if (Object.prototype.hasOwnProperty.call(t3, i2) && -1 === Vv(e2).call(e2, i2)) {
              var o2 = t3[i2];
              this.add(i2, o2);
            }
          }
        } }, { key: "clear", value: function() {
          this._groups = new xk(), this._groupNames = [];
        } }, { key: "get", value: function(t3) {
          var e2 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], i2 = this._groups.get(t3);
          if (void 0 === i2 && e2) if (false === this.options.useDefaultGroups && this._groupNames.length > 0) {
            var o2 = this._groupIndex % this._groupNames.length;
            ++this._groupIndex, (i2 = {}).color = this._groups.get(this._groupNames[o2]), this._groups.set(t3, i2);
          } else {
            var n2 = this._defaultIndex % this._defaultGroups.length;
            this._defaultIndex++, (i2 = {}).color = this._defaultGroups[n2], this._groups.set(t3, i2);
          }
          return i2;
        } }, { key: "add", value: function(t3, e2) {
          return this._groups.has(t3) || this._groupNames.push(t3), this._groups.set(t3, e2), e2;
        } }]), t2;
      }();
      Mi({ target: "Number", stat: true }, { isNaN: function(t2) {
        return t2 != t2;
      } });
      var Ok = o(it.Number.isNaN), Ck = r.isFinite, Sk = Number.isFinite || function(t2) {
        return "number" == typeof t2 && Ck(t2);
      };
      Mi({ target: "Number", stat: true }, { isFinite: Sk });
      var Tk = o(it.Number.isFinite), Mk = zd.some;
      Mi({ target: "Array", proto: true, forced: !Hf("some") }, { some: function(t2) {
        return Mk(this, t2, arguments.length > 1 ? arguments[1] : void 0);
      } });
      var Pk = zo("Array").some, Dk = ht, Ik = Pk, Bk = Array.prototype, Fk = function(t2) {
        var e2 = t2.some;
        return t2 === Bk || Dk(Bk, t2) && e2 === Bk.some ? Ik : e2;
      }, zk = o(Fk), Nk = o(it.Object.getOwnPropertySymbols), Ak = { exports: {} }, Rk = Mi, jk = s, Lk = Q, Hk = M.f, Wk = P;
      Rk({ target: "Object", stat: true, forced: !Wk || jk(function() {
        Hk(1);
      }), sham: !Wk }, { getOwnPropertyDescriptor: function(t2, e2) {
        return Hk(Lk(t2), e2);
      } });
      var Vk = it.Object, qk = Ak.exports = function(t2, e2) {
        return Vk.getOwnPropertyDescriptor(t2, e2);
      };
      Vk.getOwnPropertyDescriptor.sham && (qk.sham = true);
      var Uk = Ak.exports, Yk = o(Uk), Xk = Ef, Kk = Q, Gk = M, $k = va;
      Mi({ target: "Object", stat: true, sham: !P }, { getOwnPropertyDescriptors: function(t2) {
        for (var e2, i2, o2 = Kk(t2), n2 = Gk.f, r2 = Xk(o2), s2 = {}, a2 = 0; r2.length > a2; ) void 0 !== (i2 = n2(o2, e2 = r2[a2++])) && $k(s2, e2, i2);
        return s2;
      } });
      var Zk = o(it.Object.getOwnPropertyDescriptors), Qk = { exports: {} }, Jk = Mi, t_ = P, e_ = Kn.f;
      Jk({ target: "Object", stat: true, forced: Object.defineProperties !== e_, sham: !t_ }, { defineProperties: e_ });
      var i_ = it.Object, o_ = Qk.exports = function(t2, e2) {
        return i_.defineProperties(t2, e2);
      };
      i_.defineProperties.sham && (o_.sham = true);
      var n_ = o(Qk.exports), r_ = o(_h);
      function s_(t2, e2, i2) {
        return (e2 = mu(e2)) in t2 ? xh(t2, e2, { value: i2, enumerable: true, configurable: true, writable: true }) : t2[e2] = i2, t2;
      }
      var a_ = r, h_ = s, d_ = un, l_ = bv.trim, c_ = cv, u_ = y("".charAt), f_ = a_.parseFloat, p_ = a_.Symbol, v_ = p_ && p_.iterator, g_ = 1 / f_(c_ + "-0") != -1 / 0 || v_ && !h_(function() {
        f_(Object(v_));
      }) ? function(t2) {
        var e2 = l_(d_(t2)), i2 = f_(e2);
        return 0 === i2 && "-" === u_(e2, 0) ? -0 : i2;
      } : f_;
      Mi({ global: true, forced: parseFloat !== g_ }, { parseFloat: g_ });
      var y_ = o(it.parseFloat), m_ = Mi, b_ = s, w_ = id.f;
      m_({ target: "Object", stat: true, forced: b_(function() {
        return !Object.getOwnPropertyNames(1);
      }) }, { getOwnPropertyNames: w_ });
      var k_ = it.Object, __ = function(t2) {
        return k_.getOwnPropertyNames(t2);
      }, x_ = o(__);
      function E_(t2, e2) {
        var i2 = ["node", "edge", "label"], o2 = true, n2 = tb(e2, "chosen");
        if ("boolean" == typeof n2) o2 = n2;
        else if ("object" === gu(n2)) {
          if (-1 === Vv(i2).call(i2, t2)) throw new Error("choosify: subOption '" + t2 + "' should be one of '" + i2.join("', '") + "'");
          var r2 = tb(e2, ["chosen", t2]);
          "boolean" != typeof r2 && "function" != typeof r2 || (o2 = r2);
        }
        return o2;
      }
      function O_(t2, e2, i2) {
        if (t2.width <= 0 || t2.height <= 0) return false;
        if (void 0 !== i2) {
          var o2 = { x: e2.x - i2.x, y: e2.y - i2.y };
          if (0 !== i2.angle) {
            var n2 = -i2.angle;
            e2 = { x: Math.cos(n2) * o2.x - Math.sin(n2) * o2.y, y: Math.sin(n2) * o2.x + Math.cos(n2) * o2.y };
          } else e2 = o2;
        }
        var r2 = t2.x + t2.width, s2 = t2.y + t2.width;
        return t2.left < e2.x && r2 > e2.x && t2.top < e2.y && s2 > e2.y;
      }
      function C_(t2) {
        return "string" == typeof t2 && "" !== t2;
      }
      function S_(t2, e2, i2, o2) {
        var n2 = o2.x, r2 = o2.y;
        if ("function" == typeof o2.distanceToBorder) {
          var s2 = o2.distanceToBorder(t2, e2), a2 = Math.sin(e2) * s2, h2 = Math.cos(e2) * s2;
          h2 === s2 ? (n2 += s2, r2 = o2.y) : a2 === s2 ? (n2 = o2.x, r2 -= s2) : (n2 += h2, r2 -= a2);
        } else o2.shape.width > o2.shape.height ? (n2 = o2.x + 0.5 * o2.shape.width, r2 = o2.y - i2) : (n2 = o2.x + i2, r2 = o2.y - 0.5 * o2.shape.height);
        return { x: n2, y: r2 };
      }
      var T_ = zo("Array").values, M_ = dn, P_ = Jt, D_ = ht, I_ = T_, B_ = Array.prototype, F_ = { DOMTokenList: true, NodeList: true }, z_ = function(t2) {
        var e2 = t2.values;
        return t2 === B_ || D_(B_, t2) && e2 === B_.values || P_(F_, M_(t2)) ? I_ : e2;
      }, N_ = o(z_), A_ = function() {
        function t2(e2) {
          vh(this, t2), this.measureText = e2, this.current = 0, this.width = 0, this.height = 0, this.lines = [];
        }
        return wu(t2, [{ key: "_add", value: function(t3, e2) {
          var i2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "normal";
          void 0 === this.lines[t3] && (this.lines[t3] = { width: 0, height: 0, blocks: [] });
          var o2 = e2;
          void 0 !== e2 && "" !== e2 || (o2 = " ");
          var n2 = this.measureText(o2, i2), r2 = wo({}, N_(n2));
          r2.text = e2, r2.width = n2.width, r2.mod = i2, void 0 !== e2 && "" !== e2 || (r2.width = 0), this.lines[t3].blocks.push(r2), this.lines[t3].width += r2.width;
        } }, { key: "curWidth", value: function() {
          var t3 = this.lines[this.current];
          return void 0 === t3 ? 0 : t3.width;
        } }, { key: "append", value: function(t3) {
          var e2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "normal";
          this._add(this.current, t3, e2);
        } }, { key: "newLine", value: function(t3) {
          var e2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "normal";
          this._add(this.current, t3, e2), this.current++;
        } }, { key: "determineLineHeights", value: function() {
          for (var t3 = 0; t3 < this.lines.length; t3++) {
            var e2 = this.lines[t3], i2 = 0;
            if (void 0 !== e2.blocks) for (var o2 = 0; o2 < e2.blocks.length; o2++) {
              var n2 = e2.blocks[o2];
              i2 < n2.height && (i2 = n2.height);
            }
            e2.height = i2;
          }
        } }, { key: "determineLabelSize", value: function() {
          for (var t3 = 0, e2 = 0, i2 = 0; i2 < this.lines.length; i2++) {
            var o2 = this.lines[i2];
            o2.width > t3 && (t3 = o2.width), e2 += o2.height;
          }
          this.width = t3, this.height = e2;
        } }, { key: "removeEmptyBlocks", value: function() {
          for (var t3 = [], e2 = 0; e2 < this.lines.length; e2++) {
            var i2 = this.lines[e2];
            if (0 !== i2.blocks.length && (e2 !== this.lines.length - 1 || 0 !== i2.width)) {
              var o2 = {};
              wo(o2, i2), o2.blocks = [];
              for (var n2 = void 0, r2 = [], s2 = 0; s2 < i2.blocks.length; s2++) {
                var a2 = i2.blocks[s2];
                0 !== a2.width ? r2.push(a2) : void 0 === n2 && (n2 = a2);
              }
              0 === r2.length && void 0 !== n2 && r2.push(n2), o2.blocks = r2, t3.push(o2);
            }
          }
          return t3;
        } }, { key: "finalize", value: function() {
          this.determineLineHeights(), this.determineLabelSize();
          var t3 = this.removeEmptyBlocks();
          return { width: this.width, height: this.height, lines: t3 };
        } }]), t2;
      }(), R_ = { "<b>": /<b>/, "<i>": /<i>/, "<code>": /<code>/, "</b>": /<\/b>/, "</i>": /<\/i>/, "</code>": /<\/code>/, "*": /\*/, _: /_/, "`": /`/, afterBold: /[^*]/, afterItal: /[^_]/, afterMono: /[^`]/ }, j_ = function() {
        function t2(e2) {
          vh(this, t2), this.text = e2, this.bold = false, this.ital = false, this.mono = false, this.spacing = false, this.position = 0, this.buffer = "", this.modStack = [], this.blocks = [];
        }
        return wu(t2, [{ key: "mod", value: function() {
          return 0 === this.modStack.length ? "normal" : this.modStack[0];
        } }, { key: "modName", value: function() {
          return 0 === this.modStack.length ? "normal" : "mono" === this.modStack[0] ? "mono" : this.bold && this.ital ? "boldital" : this.bold ? "bold" : this.ital ? "ital" : void 0;
        } }, { key: "emitBlock", value: function() {
          this.spacing && (this.add(" "), this.spacing = false), this.buffer.length > 0 && (this.blocks.push({ text: this.buffer, mod: this.modName() }), this.buffer = "");
        } }, { key: "add", value: function(t3) {
          " " === t3 && (this.spacing = true), this.spacing && (this.buffer += " ", this.spacing = false), " " != t3 && (this.buffer += t3);
        } }, { key: "parseWS", value: function(t3) {
          return !!/[ \t]/.test(t3) && (this.mono ? this.add(t3) : this.spacing = true, true);
        } }, { key: "setTag", value: function(t3) {
          this.emitBlock(), this[t3] = true, this.modStack.unshift(t3);
        } }, { key: "unsetTag", value: function(t3) {
          this.emitBlock(), this[t3] = false, this.modStack.shift();
        } }, { key: "parseStartTag", value: function(t3, e2) {
          return !(this.mono || this[t3] || !this.match(e2)) && (this.setTag(t3), true);
        } }, { key: "match", value: function(t3) {
          var e2 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], i2 = df(this.prepareRegExp(t3), 2), o2 = i2[0], n2 = i2[1], r2 = o2.test(this.text.substr(this.position, n2));
          return r2 && e2 && (this.position += n2 - 1), r2;
        } }, { key: "parseEndTag", value: function(t3, e2, i2) {
          var o2 = this.mod() === t3;
          return !(!(o2 = "mono" === t3 ? o2 && this.mono : o2 && !this.mono) || !this.match(e2)) && (void 0 !== i2 ? (this.position === this.text.length - 1 || this.match(i2, false)) && this.unsetTag(t3) : this.unsetTag(t3), true);
        } }, { key: "replace", value: function(t3, e2) {
          return !!this.match(t3) && (this.add(e2), this.position += length - 1, true);
        } }, { key: "prepareRegExp", value: function(t3) {
          var e2, i2;
          if (t3 instanceof RegExp) i2 = t3, e2 = 1;
          else {
            var o2 = R_[t3];
            i2 = void 0 !== o2 ? o2 : new RegExp(t3), e2 = t3.length;
          }
          return [i2, e2];
        } }]), t2;
      }(), L_ = function() {
        function t2(e2, i2, o2, n2) {
          var r2 = this;
          vh(this, t2), this.ctx = e2, this.parent = i2, this.selected = o2, this.hover = n2;
          this.lines = new A_(function(t3, i3) {
            if (void 0 === t3) return 0;
            var s2 = r2.parent.getFormattingValues(e2, o2, n2, i3), a2 = 0;
            "" !== t3 && (a2 = r2.ctx.measureText(t3).width);
            return { width: a2, values: s2 };
          });
        }
        return wu(t2, [{ key: "process", value: function(t3) {
          if (!C_(t3)) return this.lines.finalize();
          var e2 = this.parent.fontOptions;
          t3 = (t3 = t3.replace(/\r\n/g, "\n")).replace(/\r/g, "\n");
          var i2 = String(t3).split("\n"), o2 = i2.length;
          if (e2.multi) for (var n2 = 0; n2 < o2; n2++) {
            var r2 = this.splitBlocks(i2[n2], e2.multi);
            if (void 0 !== r2) if (0 !== r2.length) {
              if (e2.maxWdt > 0) for (var s2 = 0; s2 < r2.length; s2++) {
                var a2 = r2[s2].mod, h2 = r2[s2].text;
                this.splitStringIntoLines(h2, a2, true);
              }
              else for (var d2 = 0; d2 < r2.length; d2++) {
                var l2 = r2[d2].mod, c2 = r2[d2].text;
                this.lines.append(c2, l2);
              }
              this.lines.newLine();
            } else this.lines.newLine("");
          }
          else if (e2.maxWdt > 0) for (var u2 = 0; u2 < o2; u2++) this.splitStringIntoLines(i2[u2]);
          else for (var f2 = 0; f2 < o2; f2++) this.lines.newLine(i2[f2]);
          return this.lines.finalize();
        } }, { key: "decodeMarkupSystem", value: function(t3) {
          var e2 = "none";
          return "markdown" === t3 || "md" === t3 ? e2 = "markdown" : true !== t3 && "html" !== t3 || (e2 = "html"), e2;
        } }, { key: "splitHtmlBlocks", value: function(t3) {
          for (var e2 = new j_(t3), i2 = function(t4) {
            return !!/&/.test(t4) && (e2.replace(e2.text, "&lt;", "<") || e2.replace(e2.text, "&amp;", "&") || e2.add("&"), true);
          }; e2.position < e2.text.length; ) {
            var o2 = e2.text.charAt(e2.position);
            e2.parseWS(o2) || /</.test(o2) && (e2.parseStartTag("bold", "<b>") || e2.parseStartTag("ital", "<i>") || e2.parseStartTag("mono", "<code>") || e2.parseEndTag("bold", "</b>") || e2.parseEndTag("ital", "</i>") || e2.parseEndTag("mono", "</code>")) || i2(o2) || e2.add(o2), e2.position++;
          }
          return e2.emitBlock(), e2.blocks;
        } }, { key: "splitMarkdownBlocks", value: function(t3) {
          for (var e2 = this, i2 = new j_(t3), o2 = true, n2 = function(t4) {
            return !!/\\/.test(t4) && (i2.position < e2.text.length + 1 && (i2.position++, t4 = e2.text.charAt(i2.position), / \t/.test(t4) ? i2.spacing = true : (i2.add(t4), o2 = false)), true);
          }; i2.position < i2.text.length; ) {
            var r2 = i2.text.charAt(i2.position);
            i2.parseWS(r2) || n2(r2) || (o2 || i2.spacing) && (i2.parseStartTag("bold", "*") || i2.parseStartTag("ital", "_") || i2.parseStartTag("mono", "`")) || i2.parseEndTag("bold", "*", "afterBold") || i2.parseEndTag("ital", "_", "afterItal") || i2.parseEndTag("mono", "`", "afterMono") || (i2.add(r2), o2 = false), i2.position++;
          }
          return i2.emitBlock(), i2.blocks;
        } }, { key: "splitBlocks", value: function(t3, e2) {
          var i2 = this.decodeMarkupSystem(e2);
          return "none" === i2 ? [{ text: t3, mod: "normal" }] : "markdown" === i2 ? this.splitMarkdownBlocks(t3) : "html" === i2 ? this.splitHtmlBlocks(t3) : void 0;
        } }, { key: "overMaxWidth", value: function(t3) {
          var e2 = this.ctx.measureText(t3).width;
          return this.lines.curWidth() + e2 > this.parent.fontOptions.maxWdt;
        } }, { key: "getLongestFit", value: function(t3) {
          for (var e2 = "", i2 = 0; i2 < t3.length; ) {
            var o2 = e2 + ("" === e2 ? "" : " ") + t3[i2];
            if (this.overMaxWidth(o2)) break;
            e2 = o2, i2++;
          }
          return i2;
        } }, { key: "getLongestFitWord", value: function(t3) {
          for (var e2 = 0; e2 < t3.length && !this.overMaxWidth(mf(t3).call(t3, 0, e2)); ) e2++;
          return e2;
        } }, { key: "splitStringIntoLines", value: function(t3) {
          var e2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "normal", i2 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
          this.parent.getFormattingValues(this.ctx, this.selected, this.hover, e2);
          for (var o2 = (t3 = (t3 = t3.replace(/^( +)/g, "$1\r")).replace(/([^\r][^ ]*)( +)/g, "$1\r$2\r")).split("\r"); o2.length > 0; ) {
            var n2 = this.getLongestFit(o2);
            if (0 === n2) {
              var r2 = o2[0], s2 = this.getLongestFitWord(r2);
              this.lines.newLine(mf(r2).call(r2, 0, s2), e2), o2[0] = mf(r2).call(r2, s2);
            } else {
              var a2 = n2;
              " " === o2[n2 - 1] ? n2-- : " " === o2[a2] && a2++;
              var h2 = mf(o2).call(o2, 0, n2).join("");
              n2 == o2.length && i2 ? this.lines.append(h2, e2) : this.lines.newLine(h2, e2), o2 = mf(o2).call(o2, a2);
            }
          }
        } }]), t2;
      }(), H_ = ["bold", "ital", "boldital", "mono"], W_ = function() {
        function t2(e2, i2) {
          var o2 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
          vh(this, t2), this.body = e2, this.pointToSelf = false, this.baseSize = void 0, this.fontOptions = {}, this.setOptions(i2), this.size = { top: 0, left: 0, width: 0, height: 0, yLine: 0 }, this.isEdgeLabel = o2;
        }
        return wu(t2, [{ key: "setOptions", value: function(t3) {
          if (this.elementOptions = t3, this.initFontOptions(t3.font), C_(t3.label) ? this.labelDirty = true : t3.label = void 0, void 0 !== t3.font && null !== t3.font) {
            if ("string" == typeof t3.font) this.baseSize = this.fontOptions.size;
            else if ("object" === gu(t3.font)) {
              var e2 = t3.font.size;
              void 0 !== e2 && (this.baseSize = e2);
            }
          }
        } }, { key: "initFontOptions", value: function(e2) {
          var i2 = this;
          Hm(H_, function(t3) {
            i2.fontOptions[t3] = {};
          }), t2.parseFontString(this.fontOptions, e2) ? this.fontOptions.vadjust = 0 : Hm(e2, function(t3, e3) {
            null != t3 && "object" !== gu(t3) && (i2.fontOptions[e3] = t3);
          });
        } }, { key: "constrain", value: function(t3) {
          var e2 = { constrainWidth: false, maxWdt: -1, minWdt: -1, constrainHeight: false, minHgt: -1, valign: "middle" }, i2 = tb(t3, "widthConstraint");
          if ("number" == typeof i2) e2.maxWdt = Number(i2), e2.minWdt = Number(i2);
          else if ("object" === gu(i2)) {
            var o2 = tb(t3, ["widthConstraint", "maximum"]);
            "number" == typeof o2 && (e2.maxWdt = Number(o2));
            var n2 = tb(t3, ["widthConstraint", "minimum"]);
            "number" == typeof n2 && (e2.minWdt = Number(n2));
          }
          var r2 = tb(t3, "heightConstraint");
          if ("number" == typeof r2) e2.minHgt = Number(r2);
          else if ("object" === gu(r2)) {
            var s2 = tb(t3, ["heightConstraint", "minimum"]);
            "number" == typeof s2 && (e2.minHgt = Number(s2));
            var a2 = tb(t3, ["heightConstraint", "valign"]);
            "string" == typeof a2 && ("top" !== a2 && "bottom" !== a2 || (e2.valign = a2));
          }
          return e2;
        } }, { key: "update", value: function(t3, e2) {
          this.setOptions(t3, true), this.propagateFonts(e2), Rm(this.fontOptions, this.constrain(e2)), this.fontOptions.chooser = E_("label", e2);
        } }, { key: "adjustSizes", value: function(t3) {
          var e2 = t3 ? t3.right + t3.left : 0;
          this.fontOptions.constrainWidth && (this.fontOptions.maxWdt -= e2, this.fontOptions.minWdt -= e2);
          var i2 = t3 ? t3.top + t3.bottom : 0;
          this.fontOptions.constrainHeight && (this.fontOptions.minHgt -= i2);
        } }, { key: "addFontOptionsToPile", value: function(t3, e2) {
          for (var i2 = 0; i2 < e2.length; ++i2) this.addFontToPile(t3, e2[i2]);
        } }, { key: "addFontToPile", value: function(t3, e2) {
          if (void 0 !== e2 && void 0 !== e2.font && null !== e2.font) {
            var i2 = e2.font;
            t3.push(i2);
          }
        } }, { key: "getBasicOptions", value: function(e2) {
          for (var i2 = {}, o2 = 0; o2 < e2.length; ++o2) {
            var n2 = e2[o2], r2 = {};
            t2.parseFontString(r2, n2) && (n2 = r2), Hm(n2, function(t3, e3) {
              void 0 !== t3 && (Object.prototype.hasOwnProperty.call(i2, e3) || (-1 !== Vv(H_).call(H_, e3) ? i2[e3] = {} : i2[e3] = t3));
            });
          }
          return i2;
        } }, { key: "getFontOption", value: function(e2, i2, o2) {
          for (var n2, r2 = 0; r2 < e2.length; ++r2) {
            var s2 = e2[r2];
            if (Object.prototype.hasOwnProperty.call(s2, i2)) {
              if (null == (n2 = s2[i2])) continue;
              var a2 = {};
              if (t2.parseFontString(a2, n2) && (n2 = a2), Object.prototype.hasOwnProperty.call(n2, o2)) return n2[o2];
            }
          }
          if (Object.prototype.hasOwnProperty.call(this.fontOptions, o2)) return this.fontOptions[o2];
          throw new Error("Did not find value for multi-font for property: '" + o2 + "'");
        } }, { key: "getFontOptions", value: function(t3, e2) {
          for (var i2 = {}, o2 = ["color", "size", "face", "mod", "vadjust"], n2 = 0; n2 < o2.length; ++n2) {
            var r2 = o2[n2];
            i2[r2] = this.getFontOption(t3, e2, r2);
          }
          return i2;
        } }, { key: "propagateFonts", value: function(t3) {
          var e2 = this, i2 = [];
          this.addFontOptionsToPile(i2, t3), this.fontOptions = this.getBasicOptions(i2);
          for (var o2 = function() {
            var t4 = H_[n2], o3 = e2.fontOptions[t4];
            Hm(e2.getFontOptions(i2, t4), function(t5, e3) {
              o3[e3] = t5;
            }), o3.size = Number(o3.size), o3.vadjust = Number(o3.vadjust);
          }, n2 = 0; n2 < H_.length; ++n2) o2();
        } }, { key: "draw", value: function(t3, e2, i2, o2, n2) {
          var r2 = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "middle";
          if (void 0 !== this.elementOptions.label) {
            var s2 = this.fontOptions.size * this.body.view.scale;
            this.elementOptions.label && s2 < this.elementOptions.scaling.label.drawThreshold - 1 || (s2 >= this.elementOptions.scaling.label.maxVisible && (s2 = Number(this.elementOptions.scaling.label.maxVisible) / this.body.view.scale), this.calculateLabelSize(t3, o2, n2, e2, i2, r2), this._drawBackground(t3), this._drawText(t3, e2, this.size.yLine, r2, s2));
          }
        } }, { key: "_drawBackground", value: function(t3) {
          if (void 0 !== this.fontOptions.background && "none" !== this.fontOptions.background) {
            t3.fillStyle = this.fontOptions.background;
            var e2 = this.getSize();
            t3.fillRect(e2.left, e2.top, e2.width, e2.height);
          }
        } }, { key: "_drawText", value: function(t3, e2, i2) {
          var o2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "middle", n2 = arguments.length > 4 ? arguments[4] : void 0, r2 = df(this._setAlignment(t3, e2, i2, o2), 2);
          e2 = r2[0], i2 = r2[1], t3.textAlign = "left", e2 -= this.size.width / 2, this.fontOptions.valign && this.size.height > this.size.labelHeight && ("top" === this.fontOptions.valign && (i2 -= (this.size.height - this.size.labelHeight) / 2), "bottom" === this.fontOptions.valign && (i2 += (this.size.height - this.size.labelHeight) / 2));
          for (var s2 = 0; s2 < this.lineCount; s2++) {
            var a2 = this.lines[s2];
            if (a2 && a2.blocks) {
              var h2 = 0;
              this.isEdgeLabel || "center" === this.fontOptions.align ? h2 += (this.size.width - a2.width) / 2 : "right" === this.fontOptions.align && (h2 += this.size.width - a2.width);
              for (var d2 = 0; d2 < a2.blocks.length; d2++) {
                var l2 = a2.blocks[d2];
                t3.font = l2.font;
                var c2 = df(this._getColor(l2.color, n2, l2.strokeColor), 2), u2 = c2[0], f2 = c2[1];
                l2.strokeWidth > 0 && (t3.lineWidth = l2.strokeWidth, t3.strokeStyle = f2, t3.lineJoin = "round"), t3.fillStyle = u2, l2.strokeWidth > 0 && t3.strokeText(l2.text, e2 + h2, i2 + l2.vadjust), t3.fillText(l2.text, e2 + h2, i2 + l2.vadjust), h2 += l2.width;
              }
              i2 += a2.height;
            }
          }
        } }, { key: "_setAlignment", value: function(t3, e2, i2, o2) {
          if (this.isEdgeLabel && "horizontal" !== this.fontOptions.align && false === this.pointToSelf) {
            e2 = 0, i2 = 0;
            "top" === this.fontOptions.align ? (t3.textBaseline = "alphabetic", i2 -= 4) : "bottom" === this.fontOptions.align ? (t3.textBaseline = "hanging", i2 += 4) : t3.textBaseline = "middle";
          } else t3.textBaseline = o2;
          return [e2, i2];
        } }, { key: "_getColor", value: function(t3, e2, i2) {
          var o2 = t3 || "#000000", n2 = i2 || "#ffffff";
          if (e2 <= this.elementOptions.scaling.label.drawThreshold) {
            var r2 = Math.max(0, Math.min(1, 1 - (this.elementOptions.scaling.label.drawThreshold - e2)));
            o2 = Vm(o2, r2), n2 = Vm(n2, r2);
          }
          return [o2, n2];
        } }, { key: "getTextSize", value: function(t3) {
          var e2 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], i2 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
          return this._processLabel(t3, e2, i2), { width: this.size.width, height: this.size.height, lineCount: this.lineCount };
        } }, { key: "getSize", value: function() {
          var t3 = this.size.left, e2 = this.size.top - 1;
          if (this.isEdgeLabel) {
            var i2 = 0.5 * -this.size.width;
            switch (this.fontOptions.align) {
              case "middle":
                t3 = i2, e2 = 0.5 * -this.size.height;
                break;
              case "top":
                t3 = i2, e2 = -(this.size.height + 2);
                break;
              case "bottom":
                t3 = i2, e2 = 2;
            }
          }
          return { left: t3, top: e2, width: this.size.width, height: this.size.height };
        } }, { key: "calculateLabelSize", value: function(t3, e2, i2) {
          var o2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0, n2 = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0, r2 = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "middle";
          this._processLabel(t3, e2, i2), this.size.left = o2 - 0.5 * this.size.width, this.size.top = n2 - 0.5 * this.size.height, this.size.yLine = n2 + 0.5 * (1 - this.lineCount) * this.fontOptions.size, "hanging" === r2 && (this.size.top += 0.5 * this.fontOptions.size, this.size.top += 4, this.size.yLine += 4);
        } }, { key: "getFormattingValues", value: function(t3, e2, i2, o2) {
          var n2 = function(t4, e3, i3) {
            return "normal" === e3 ? "mod" === i3 ? "" : t4[i3] : void 0 !== t4[e3][i3] ? t4[e3][i3] : t4[i3];
          }, r2 = { color: n2(this.fontOptions, o2, "color"), size: n2(this.fontOptions, o2, "size"), face: n2(this.fontOptions, o2, "face"), mod: n2(this.fontOptions, o2, "mod"), vadjust: n2(this.fontOptions, o2, "vadjust"), strokeWidth: this.fontOptions.strokeWidth, strokeColor: this.fontOptions.strokeColor };
          (e2 || i2) && ("normal" === o2 && true === this.fontOptions.chooser && this.elementOptions.labelHighlightBold ? r2.mod = "bold" : "function" == typeof this.fontOptions.chooser && this.fontOptions.chooser(r2, this.elementOptions.id, e2, i2));
          var s2 = "";
          return void 0 !== r2.mod && "" !== r2.mod && (s2 += r2.mod + " "), s2 += r2.size + "px " + r2.face, t3.font = s2.replace(/"/g, ""), r2.font = t3.font, r2.height = r2.size, r2;
        } }, { key: "differentState", value: function(t3, e2) {
          return t3 !== this.selectedState || e2 !== this.hoverState;
        } }, { key: "_processLabelText", value: function(t3, e2, i2, o2) {
          return new L_(t3, this, e2, i2).process(o2);
        } }, { key: "_processLabel", value: function(t3, e2, i2) {
          if (false !== this.labelDirty || this.differentState(e2, i2)) {
            var o2 = this._processLabelText(t3, e2, i2, this.elementOptions.label);
            this.fontOptions.minWdt > 0 && o2.width < this.fontOptions.minWdt && (o2.width = this.fontOptions.minWdt), this.size.labelHeight = o2.height, this.fontOptions.minHgt > 0 && o2.height < this.fontOptions.minHgt && (o2.height = this.fontOptions.minHgt), this.lines = o2.lines, this.lineCount = o2.lines.length, this.size.width = o2.width, this.size.height = o2.height, this.selectedState = e2, this.hoverState = i2, this.labelDirty = false;
          }
        } }, { key: "visible", value: function() {
          return 0 !== this.size.width && 0 !== this.size.height && void 0 !== this.elementOptions.label && !(this.fontOptions.size * this.body.view.scale < this.elementOptions.scaling.label.drawThreshold - 1);
        } }], [{ key: "parseFontString", value: function(t3, e2) {
          if (!e2 || "string" != typeof e2) return false;
          var i2 = e2.split(" ");
          return t3.size = +i2[0].replace("px", ""), t3.face = i2[1], t3.color = i2[2], true;
        } }]), t2;
      }(), V_ = ca, q_ = Tt, U_ = TypeError, Y_ = Mi, X_ = u, K_ = Io, G_ = function(t2) {
        if (V_(t2)) return t2;
        throw new U_(q_(t2) + " is not a constructor");
      }, $_ = oi, Z_ = et, Q_ = br, J_ = s, tx = at("Reflect", "construct"), ex = Object.prototype, ix = [].push, ox = J_(function() {
        function t2() {
        }
        return !(tx(function() {
        }, [], t2) instanceof t2);
      }), nx = !J_(function() {
        tx(function() {
        });
      }), rx = ox || nx;
      Y_({ target: "Reflect", stat: true, forced: rx, sham: rx }, { construct: function(t2, e2) {
        G_(t2), $_(e2);
        var i2 = arguments.length < 3 ? t2 : G_(arguments[2]);
        if (nx && !ox) return tx(t2, e2, i2);
        if (t2 === i2) {
          switch (e2.length) {
            case 0:
              return new t2();
            case 1:
              return new t2(e2[0]);
            case 2:
              return new t2(e2[0], e2[1]);
            case 3:
              return new t2(e2[0], e2[1], e2[2]);
            case 4:
              return new t2(e2[0], e2[1], e2[2], e2[3]);
          }
          var o2 = [null];
          return X_(ix, o2, e2), new (X_(K_, t2, o2))();
        }
        var n2 = i2.prototype, r2 = Q_(Z_(n2) ? n2 : ex), s2 = X_(t2, r2, e2);
        return Z_(s2) ? s2 : r2;
      } });
      var sx = o(it.Reflect.construct), ax = o(Uv);
      Mi({ target: "Object", stat: true }, { setPrototypeOf: cs });
      var hx = o(it.Object.setPrototypeOf), dx = o(Ho);
      function lx(t2, e2) {
        var i2;
        return lx = hx ? dx(i2 = hx).call(i2) : function(t3, e3) {
          return t3.__proto__ = e3, t3;
        }, lx(t2, e2);
      }
      function cx(t2, e2) {
        if ("function" != typeof e2 && null !== e2) throw new TypeError("Super expression must either be null or a function");
        t2.prototype = ax(e2 && e2.prototype, { constructor: { value: t2, writable: true, configurable: true } }), xh(t2, "prototype", { writable: false }), e2 && lx(t2, e2);
      }
      function ux(t2, e2) {
        if (e2 && ("object" === gu(e2) || "function" == typeof e2)) return e2;
        if (void 0 !== e2) throw new TypeError("Derived constructors may only return object or undefined");
        return function(t3) {
          if (void 0 === t3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return t3;
        }(t2);
      }
      var fx = o(iv);
      function px(t2) {
        var e2;
        return px = hx ? dx(e2 = fx).call(e2) : function(t3) {
          return t3.__proto__ || fx(t3);
        }, px(t2);
      }
      var vx = function() {
        function t2(e2, i2, o2) {
          vh(this, t2), this.body = i2, this.labelModule = o2, this.setOptions(e2), this.top = void 0, this.left = void 0, this.height = void 0, this.width = void 0, this.radius = void 0, this.margin = void 0, this.refreshNeeded = true, this.boundingBox = { top: 0, left: 0, right: 0, bottom: 0 };
        }
        return wu(t2, [{ key: "setOptions", value: function(t3) {
          this.options = t3;
        } }, { key: "_setMargins", value: function(t3) {
          this.margin = {}, this.options.margin && ("object" == gu(this.options.margin) ? (this.margin.top = this.options.margin.top, this.margin.right = this.options.margin.right, this.margin.bottom = this.options.margin.bottom, this.margin.left = this.options.margin.left) : (this.margin.top = this.options.margin, this.margin.right = this.options.margin, this.margin.bottom = this.options.margin, this.margin.left = this.options.margin)), t3.adjustSizes(this.margin);
        } }, { key: "_distanceToBorder", value: function(t3, e2) {
          var i2 = this.options.borderWidth;
          return t3 && this.resize(t3), Math.min(Math.abs(this.width / 2 / Math.cos(e2)), Math.abs(this.height / 2 / Math.sin(e2))) + i2;
        } }, { key: "enableShadow", value: function(t3, e2) {
          e2.shadow && (t3.shadowColor = e2.shadowColor, t3.shadowBlur = e2.shadowSize, t3.shadowOffsetX = e2.shadowX, t3.shadowOffsetY = e2.shadowY);
        } }, { key: "disableShadow", value: function(t3, e2) {
          e2.shadow && (t3.shadowColor = "rgba(0,0,0,0)", t3.shadowBlur = 0, t3.shadowOffsetX = 0, t3.shadowOffsetY = 0);
        } }, { key: "enableBorderDashes", value: function(t3, e2) {
          if (false !== e2.borderDashes) if (void 0 !== t3.setLineDash) {
            var i2 = e2.borderDashes;
            true === i2 && (i2 = [5, 15]), t3.setLineDash(i2);
          } else console.warn("setLineDash is not supported in this browser. The dashed borders cannot be used."), this.options.shapeProperties.borderDashes = false, e2.borderDashes = false;
        } }, { key: "disableBorderDashes", value: function(t3, e2) {
          false !== e2.borderDashes && (void 0 !== t3.setLineDash ? t3.setLineDash([0]) : (console.warn("setLineDash is not supported in this browser. The dashed borders cannot be used."), this.options.shapeProperties.borderDashes = false, e2.borderDashes = false));
        } }, { key: "needsRefresh", value: function(t3, e2) {
          return true === this.refreshNeeded ? (this.refreshNeeded = false, true) : void 0 === this.width || this.labelModule.differentState(t3, e2);
        } }, { key: "initContextForDraw", value: function(t3, e2) {
          var i2 = e2.borderWidth / this.body.view.scale;
          t3.lineWidth = Math.min(this.width, i2), t3.strokeStyle = e2.borderColor, t3.fillStyle = e2.color;
        } }, { key: "performStroke", value: function(t3, e2) {
          var i2 = e2.borderWidth / this.body.view.scale;
          t3.save(), i2 > 0 && (this.enableBorderDashes(t3, e2), t3.stroke(), this.disableBorderDashes(t3, e2)), t3.restore();
        } }, { key: "performFill", value: function(t3, e2) {
          t3.save(), t3.fillStyle = e2.color, this.enableShadow(t3, e2), Cg(t3).call(t3), this.disableShadow(t3, e2), t3.restore(), this.performStroke(t3, e2);
        } }, { key: "_addBoundingBoxMargin", value: function(t3) {
          this.boundingBox.left -= t3, this.boundingBox.top -= t3, this.boundingBox.bottom += t3, this.boundingBox.right += t3;
        } }, { key: "_updateBoundingBox", value: function(t3, e2, i2, o2, n2) {
          void 0 !== i2 && this.resize(i2, o2, n2), this.left = t3 - this.width / 2, this.top = e2 - this.height / 2, this.boundingBox.left = this.left, this.boundingBox.top = this.top, this.boundingBox.bottom = this.top + this.height, this.boundingBox.right = this.left + this.width;
        } }, { key: "updateBoundingBox", value: function(t3, e2, i2, o2, n2) {
          this._updateBoundingBox(t3, e2, i2, o2, n2);
        } }, { key: "getDimensionsFromLabel", value: function(t3, e2, i2) {
          this.textSize = this.labelModule.getTextSize(t3, e2, i2);
          var o2 = this.textSize.width, n2 = this.textSize.height;
          return 0 === o2 && (o2 = 14, n2 = 14), { width: o2, height: n2 };
        } }]), t2;
      }();
      function gx(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !sx) return false;
          if (sx.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(sx(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var i2, o2 = px(t2);
          if (e2) {
            var n2 = px(this).constructor;
            i2 = sx(o2, arguments, n2);
          } else i2 = o2.apply(this, arguments);
          return ux(this, i2);
        };
      }
      var yx = function(t2) {
        cx(i2, t2);
        var e2 = gx(i2);
        function i2(t3, o2, n2) {
          var r2;
          return vh(this, i2), (r2 = e2.call(this, t3, o2, n2))._setMargins(n2), r2;
        }
        return wu(i2, [{ key: "resize", value: function(t3) {
          var e3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.selected, i3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.hover;
          if (this.needsRefresh(e3, i3)) {
            var o2 = this.getDimensionsFromLabel(t3, e3, i3);
            this.width = o2.width + this.margin.right + this.margin.left, this.height = o2.height + this.margin.top + this.margin.bottom, this.radius = this.width / 2;
          }
        } }, { key: "draw", value: function(t3, e3, i3, o2, n2, r2) {
          this.resize(t3, o2, n2), this.left = e3 - this.width / 2, this.top = i3 - this.height / 2, this.initContextForDraw(t3, r2), qo(t3, this.left, this.top, this.width, this.height, r2.borderRadius), this.performFill(t3, r2), this.updateBoundingBox(e3, i3, t3, o2, n2), this.labelModule.draw(t3, this.left + this.textSize.width / 2 + this.margin.left, this.top + this.textSize.height / 2 + this.margin.top, o2, n2);
        } }, { key: "updateBoundingBox", value: function(t3, e3, i3, o2, n2) {
          this._updateBoundingBox(t3, e3, i3, o2, n2);
          var r2 = this.options.shapeProperties.borderRadius;
          this._addBoundingBoxMargin(r2);
        } }, { key: "distanceToBorder", value: function(t3, e3) {
          t3 && this.resize(t3);
          var i3 = this.options.borderWidth;
          return Math.min(Math.abs(this.width / 2 / Math.cos(e3)), Math.abs(this.height / 2 / Math.sin(e3))) + i3;
        } }]), i2;
      }(vx);
      function mx(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !sx) return false;
          if (sx.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(sx(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var i2, o2 = px(t2);
          if (e2) {
            var n2 = px(this).constructor;
            i2 = sx(o2, arguments, n2);
          } else i2 = o2.apply(this, arguments);
          return ux(this, i2);
        };
      }
      var bx = function(t2) {
        cx(i2, t2);
        var e2 = mx(i2);
        function i2(t3, o2, n2) {
          var r2;
          return vh(this, i2), (r2 = e2.call(this, t3, o2, n2)).labelOffset = 0, r2.selected = false, r2;
        }
        return wu(i2, [{ key: "setOptions", value: function(t3, e3, i3) {
          this.options = t3, void 0 === e3 && void 0 === i3 || this.setImages(e3, i3);
        } }, { key: "setImages", value: function(t3, e3) {
          e3 && this.selected ? (this.imageObj = e3, this.imageObjAlt = t3) : (this.imageObj = t3, this.imageObjAlt = e3);
        } }, { key: "switchImages", value: function(t3) {
          var e3 = t3 && !this.selected || !t3 && this.selected;
          if (this.selected = t3, void 0 !== this.imageObjAlt && e3) {
            var i3 = this.imageObj;
            this.imageObj = this.imageObjAlt, this.imageObjAlt = i3;
          }
        } }, { key: "_getImagePadding", value: function() {
          var t3 = { top: 0, right: 0, bottom: 0, left: 0 };
          if (this.options.imagePadding) {
            var e3 = this.options.imagePadding;
            "object" == gu(e3) ? (t3.top = e3.top, t3.right = e3.right, t3.bottom = e3.bottom, t3.left = e3.left) : (t3.top = e3, t3.right = e3, t3.bottom = e3, t3.left = e3);
          }
          return t3;
        } }, { key: "_resizeImage", value: function() {
          var t3, e3;
          if (false === this.options.shapeProperties.useImageSize) {
            var i3 = 1, o2 = 1;
            this.imageObj.width && this.imageObj.height && (this.imageObj.width > this.imageObj.height ? i3 = this.imageObj.width / this.imageObj.height : o2 = this.imageObj.height / this.imageObj.width), t3 = 2 * this.options.size * i3, e3 = 2 * this.options.size * o2;
          } else {
            var n2 = this._getImagePadding();
            t3 = this.imageObj.width + n2.left + n2.right, e3 = this.imageObj.height + n2.top + n2.bottom;
          }
          this.width = t3, this.height = e3, this.radius = 0.5 * this.width;
        } }, { key: "_drawRawCircle", value: function(t3, e3, i3, o2) {
          this.initContextForDraw(t3, o2), Vo(t3, e3, i3, o2.size), this.performFill(t3, o2);
        } }, { key: "_drawImageAtPosition", value: function(t3, e3) {
          if (0 != this.imageObj.width) {
            t3.globalAlpha = void 0 !== e3.opacity ? e3.opacity : 1, this.enableShadow(t3, e3);
            var i3 = 1;
            true === this.options.shapeProperties.interpolation && (i3 = this.imageObj.width / this.width / this.body.view.scale);
            var o2 = this._getImagePadding(), n2 = this.left + o2.left, r2 = this.top + o2.top, s2 = this.width - o2.left - o2.right, a2 = this.height - o2.top - o2.bottom;
            this.imageObj.drawImageAtPosition(t3, i3, n2, r2, s2, a2), this.disableShadow(t3, e3);
          }
        } }, { key: "_drawImageLabel", value: function(t3, e3, i3, o2, n2) {
          var r2 = 0;
          if (void 0 !== this.height) {
            r2 = 0.5 * this.height;
            var s2 = this.labelModule.getTextSize(t3, o2, n2);
            s2.lineCount >= 1 && (r2 += s2.height / 2);
          }
          var a2 = i3 + r2;
          this.options.label && (this.labelOffset = r2), this.labelModule.draw(t3, e3, a2, o2, n2, "hanging");
        } }]), i2;
      }(vx);
      function wx(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !sx) return false;
          if (sx.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(sx(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var i2, o2 = px(t2);
          if (e2) {
            var n2 = px(this).constructor;
            i2 = sx(o2, arguments, n2);
          } else i2 = o2.apply(this, arguments);
          return ux(this, i2);
        };
      }
      var kx = function(t2) {
        cx(i2, t2);
        var e2 = wx(i2);
        function i2(t3, o2, n2) {
          var r2;
          return vh(this, i2), (r2 = e2.call(this, t3, o2, n2))._setMargins(n2), r2;
        }
        return wu(i2, [{ key: "resize", value: function(t3) {
          var e3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.selected, i3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.hover;
          if (this.needsRefresh(e3, i3)) {
            var o2 = this.getDimensionsFromLabel(t3, e3, i3), n2 = Math.max(o2.width + this.margin.right + this.margin.left, o2.height + this.margin.top + this.margin.bottom);
            this.options.size = n2 / 2, this.width = n2, this.height = n2, this.radius = this.width / 2;
          }
        } }, { key: "draw", value: function(t3, e3, i3, o2, n2, r2) {
          this.resize(t3, o2, n2), this.left = e3 - this.width / 2, this.top = i3 - this.height / 2, this._drawRawCircle(t3, e3, i3, r2), this.updateBoundingBox(e3, i3), this.labelModule.draw(t3, this.left + this.textSize.width / 2 + this.margin.left, i3, o2, n2);
        } }, { key: "updateBoundingBox", value: function(t3, e3) {
          this.boundingBox.top = e3 - this.options.size, this.boundingBox.left = t3 - this.options.size, this.boundingBox.right = t3 + this.options.size, this.boundingBox.bottom = e3 + this.options.size;
        } }, { key: "distanceToBorder", value: function(t3) {
          return t3 && this.resize(t3), 0.5 * this.width;
        } }]), i2;
      }(bx);
      function _x(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !sx) return false;
          if (sx.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(sx(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var i2, o2 = px(t2);
          if (e2) {
            var n2 = px(this).constructor;
            i2 = sx(o2, arguments, n2);
          } else i2 = o2.apply(this, arguments);
          return ux(this, i2);
        };
      }
      var xx = function(t2) {
        cx(i2, t2);
        var e2 = _x(i2);
        function i2(t3, o2, n2, r2, s2) {
          var a2;
          return vh(this, i2), (a2 = e2.call(this, t3, o2, n2)).setImages(r2, s2), a2;
        }
        return wu(i2, [{ key: "resize", value: function(t3) {
          var e3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.selected, i3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.hover;
          if (void 0 === this.imageObj.src || void 0 === this.imageObj.width || void 0 === this.imageObj.height) {
            var o2 = 2 * this.options.size;
            return this.width = o2, this.height = o2, void (this.radius = 0.5 * this.width);
          }
          this.needsRefresh(e3, i3) && this._resizeImage();
        } }, { key: "draw", value: function(t3, e3, i3, o2, n2, r2) {
          this.switchImages(o2), this.resize();
          var s2 = e3, a2 = i3;
          "top-left" === this.options.shapeProperties.coordinateOrigin ? (this.left = e3, this.top = i3, s2 += this.width / 2, a2 += this.height / 2) : (this.left = e3 - this.width / 2, this.top = i3 - this.height / 2), this._drawRawCircle(t3, s2, a2, r2), t3.save(), t3.clip(), this._drawImageAtPosition(t3, r2), t3.restore(), this._drawImageLabel(t3, s2, a2, o2, n2), this.updateBoundingBox(e3, i3);
        } }, { key: "updateBoundingBox", value: function(t3, e3) {
          "top-left" === this.options.shapeProperties.coordinateOrigin ? (this.boundingBox.top = e3, this.boundingBox.left = t3, this.boundingBox.right = t3 + 2 * this.options.size, this.boundingBox.bottom = e3 + 2 * this.options.size) : (this.boundingBox.top = e3 - this.options.size, this.boundingBox.left = t3 - this.options.size, this.boundingBox.right = t3 + this.options.size, this.boundingBox.bottom = e3 + this.options.size), this.boundingBox.left = Math.min(this.boundingBox.left, this.labelModule.size.left), this.boundingBox.right = Math.max(this.boundingBox.right, this.labelModule.size.left + this.labelModule.size.width), this.boundingBox.bottom = Math.max(this.boundingBox.bottom, this.boundingBox.bottom + this.labelOffset);
        } }, { key: "distanceToBorder", value: function(t3) {
          return t3 && this.resize(t3), 0.5 * this.width;
        } }]), i2;
      }(bx);
      function Ex(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !sx) return false;
          if (sx.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(sx(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var i2, o2 = px(t2);
          if (e2) {
            var n2 = px(this).constructor;
            i2 = sx(o2, arguments, n2);
          } else i2 = o2.apply(this, arguments);
          return ux(this, i2);
        };
      }
      var Ox = function(t2) {
        cx(i2, t2);
        var e2 = Ex(i2);
        function i2(t3, o2, n2) {
          return vh(this, i2), e2.call(this, t3, o2, n2);
        }
        return wu(i2, [{ key: "resize", value: function(t3) {
          var e3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.selected, i3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.hover, o2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : { size: this.options.size };
          if (this.needsRefresh(e3, i3)) {
            var n2, r2;
            this.labelModule.getTextSize(t3, e3, i3);
            var s2 = 2 * o2.size;
            this.width = null !== (n2 = this.customSizeWidth) && void 0 !== n2 ? n2 : s2, this.height = null !== (r2 = this.customSizeHeight) && void 0 !== r2 ? r2 : s2, this.radius = 0.5 * this.width;
          }
        } }, { key: "_drawShape", value: function(t3, e3, i3, o2, n2, r2, s2, a2) {
          var h2, d2 = this;
          return this.resize(t3, r2, s2, a2), this.left = o2 - this.width / 2, this.top = n2 - this.height / 2, this.initContextForDraw(t3, a2), (h2 = e3, Object.prototype.hasOwnProperty.call(Ko, h2) ? Ko[h2] : function(t4) {
            for (var e4 = arguments.length, i4 = new Array(e4 > 1 ? e4 - 1 : 0), o3 = 1; o3 < e4; o3++) i4[o3 - 1] = arguments[o3];
            CanvasRenderingContext2D.prototype[h2].call(t4, i4);
          })(t3, o2, n2, a2.size), this.performFill(t3, a2), void 0 !== this.options.icon && void 0 !== this.options.icon.code && (t3.font = (r2 ? "bold " : "") + this.height / 2 + "px " + (this.options.icon.face || "FontAwesome"), t3.fillStyle = this.options.icon.color || "black", t3.textAlign = "center", t3.textBaseline = "middle", t3.fillText(this.options.icon.code, o2, n2)), { drawExternalLabel: function() {
            if (void 0 !== d2.options.label) {
              d2.labelModule.calculateLabelSize(t3, r2, s2, o2, n2, "hanging");
              var e4 = n2 + 0.5 * d2.height + 0.5 * d2.labelModule.size.height;
              d2.labelModule.draw(t3, o2, e4, r2, s2, "hanging");
            }
            d2.updateBoundingBox(o2, n2);
          } };
        } }, { key: "updateBoundingBox", value: function(t3, e3) {
          this.boundingBox.top = e3 - this.options.size, this.boundingBox.left = t3 - this.options.size, this.boundingBox.right = t3 + this.options.size, this.boundingBox.bottom = e3 + this.options.size, void 0 !== this.options.label && this.labelModule.size.width > 0 && (this.boundingBox.left = Math.min(this.boundingBox.left, this.labelModule.size.left), this.boundingBox.right = Math.max(this.boundingBox.right, this.labelModule.size.left + this.labelModule.size.width), this.boundingBox.bottom = Math.max(this.boundingBox.bottom, this.boundingBox.bottom + this.labelModule.size.height));
        } }]), i2;
      }(vx);
      function Cx(t2, e2) {
        var i2 = zf(t2);
        if (Nk) {
          var o2 = Nk(t2);
          e2 && (o2 = lv(o2).call(o2, function(e3) {
            return Yk(t2, e3).enumerable;
          })), i2.push.apply(i2, o2);
        }
        return i2;
      }
      function Sx(t2) {
        for (var e2 = 1; e2 < arguments.length; e2++) {
          var i2, o2, n2 = null != arguments[e2] ? arguments[e2] : {};
          e2 % 2 ? Qf(i2 = Cx(Object(n2), true)).call(i2, function(e3) {
            s_(t2, e3, n2[e3]);
          }) : Zk ? n_(t2, Zk(n2)) : Qf(o2 = Cx(Object(n2))).call(o2, function(e3) {
            r_(t2, e3, Yk(n2, e3));
          });
        }
        return t2;
      }
      function Tx(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !sx) return false;
          if (sx.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(sx(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var i2, o2 = px(t2);
          if (e2) {
            var n2 = px(this).constructor;
            i2 = sx(o2, arguments, n2);
          } else i2 = o2.apply(this, arguments);
          return ux(this, i2);
        };
      }
      var Mx = function(t2) {
        cx(i2, t2);
        var e2 = Tx(i2);
        function i2(t3, o2, n2, r2) {
          var s2;
          return vh(this, i2), (s2 = e2.call(this, t3, o2, n2, r2)).ctxRenderer = r2, s2;
        }
        return wu(i2, [{ key: "draw", value: function(t3, e3, i3, o2, n2, r2) {
          this.resize(t3, o2, n2, r2), this.left = e3 - this.width / 2, this.top = i3 - this.height / 2, t3.save();
          var s2 = this.ctxRenderer({ ctx: t3, id: this.options.id, x: e3, y: i3, state: { selected: o2, hover: n2 }, style: Sx({}, r2), label: this.options.label });
          if (null != s2.drawNode && s2.drawNode(), t3.restore(), s2.drawExternalLabel) {
            var a2 = s2.drawExternalLabel;
            s2.drawExternalLabel = function() {
              t3.save(), a2(), t3.restore();
            };
          }
          return s2.nodeDimensions && (this.customSizeWidth = s2.nodeDimensions.width, this.customSizeHeight = s2.nodeDimensions.height), s2;
        } }, { key: "distanceToBorder", value: function(t3, e3) {
          return this._distanceToBorder(t3, e3);
        } }]), i2;
      }(Ox);
      function Px(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !sx) return false;
          if (sx.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(sx(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var i2, o2 = px(t2);
          if (e2) {
            var n2 = px(this).constructor;
            i2 = sx(o2, arguments, n2);
          } else i2 = o2.apply(this, arguments);
          return ux(this, i2);
        };
      }
      var Dx = function(t2) {
        cx(i2, t2);
        var e2 = Px(i2);
        function i2(t3, o2, n2) {
          var r2;
          return vh(this, i2), (r2 = e2.call(this, t3, o2, n2))._setMargins(n2), r2;
        }
        return wu(i2, [{ key: "resize", value: function(t3, e3, i3) {
          if (this.needsRefresh(e3, i3)) {
            var o2 = this.getDimensionsFromLabel(t3, e3, i3).width + this.margin.right + this.margin.left;
            this.width = o2, this.height = o2, this.radius = this.width / 2;
          }
        } }, { key: "draw", value: function(t3, e3, i3, o2, n2, r2) {
          this.resize(t3, o2, n2), this.left = e3 - this.width / 2, this.top = i3 - this.height / 2, this.initContextForDraw(t3, r2), Yo(t3, e3 - this.width / 2, i3 - this.height / 2, this.width, this.height), this.performFill(t3, r2), this.updateBoundingBox(e3, i3, t3, o2, n2), this.labelModule.draw(t3, this.left + this.textSize.width / 2 + this.margin.left, this.top + this.textSize.height / 2 + this.margin.top, o2, n2);
        } }, { key: "distanceToBorder", value: function(t3, e3) {
          return this._distanceToBorder(t3, e3);
        } }]), i2;
      }(vx);
      function Ix(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !sx) return false;
          if (sx.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(sx(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var i2, o2 = px(t2);
          if (e2) {
            var n2 = px(this).constructor;
            i2 = sx(o2, arguments, n2);
          } else i2 = o2.apply(this, arguments);
          return ux(this, i2);
        };
      }
      var Bx = function(t2) {
        cx(i2, t2);
        var e2 = Ix(i2);
        function i2(t3, o2, n2) {
          return vh(this, i2), e2.call(this, t3, o2, n2);
        }
        return wu(i2, [{ key: "draw", value: function(t3, e3, i3, o2, n2, r2) {
          return this._drawShape(t3, "diamond", 4, e3, i3, o2, n2, r2);
        } }, { key: "distanceToBorder", value: function(t3, e3) {
          return this._distanceToBorder(t3, e3);
        } }]), i2;
      }(Ox);
      function Fx(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !sx) return false;
          if (sx.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(sx(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var i2, o2 = px(t2);
          if (e2) {
            var n2 = px(this).constructor;
            i2 = sx(o2, arguments, n2);
          } else i2 = o2.apply(this, arguments);
          return ux(this, i2);
        };
      }
      var zx = function(t2) {
        cx(i2, t2);
        var e2 = Fx(i2);
        function i2(t3, o2, n2) {
          return vh(this, i2), e2.call(this, t3, o2, n2);
        }
        return wu(i2, [{ key: "draw", value: function(t3, e3, i3, o2, n2, r2) {
          return this._drawShape(t3, "circle", 2, e3, i3, o2, n2, r2);
        } }, { key: "distanceToBorder", value: function(t3) {
          return t3 && this.resize(t3), this.options.size;
        } }]), i2;
      }(Ox);
      function Nx(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !sx) return false;
          if (sx.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(sx(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var i2, o2 = px(t2);
          if (e2) {
            var n2 = px(this).constructor;
            i2 = sx(o2, arguments, n2);
          } else i2 = o2.apply(this, arguments);
          return ux(this, i2);
        };
      }
      var Ax = function(t2) {
        cx(i2, t2);
        var e2 = Nx(i2);
        function i2(t3, o2, n2) {
          return vh(this, i2), e2.call(this, t3, o2, n2);
        }
        return wu(i2, [{ key: "resize", value: function(t3) {
          var e3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.selected, i3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.hover;
          if (this.needsRefresh(e3, i3)) {
            var o2 = this.getDimensionsFromLabel(t3, e3, i3);
            this.height = 2 * o2.height, this.width = o2.width + o2.height, this.radius = 0.5 * this.width;
          }
        } }, { key: "draw", value: function(t3, e3, i3, o2, n2, r2) {
          this.resize(t3, o2, n2), this.left = e3 - 0.5 * this.width, this.top = i3 - 0.5 * this.height, this.initContextForDraw(t3, r2), Uo(t3, this.left, this.top, this.width, this.height), this.performFill(t3, r2), this.updateBoundingBox(e3, i3, t3, o2, n2), this.labelModule.draw(t3, e3, i3, o2, n2);
        } }, { key: "distanceToBorder", value: function(t3, e3) {
          t3 && this.resize(t3);
          var i3 = 0.5 * this.width, o2 = 0.5 * this.height, n2 = Math.sin(e3) * i3, r2 = Math.cos(e3) * o2;
          return i3 * o2 / Math.sqrt(n2 * n2 + r2 * r2);
        } }]), i2;
      }(vx);
      function Rx(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !sx) return false;
          if (sx.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(sx(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var i2, o2 = px(t2);
          if (e2) {
            var n2 = px(this).constructor;
            i2 = sx(o2, arguments, n2);
          } else i2 = o2.apply(this, arguments);
          return ux(this, i2);
        };
      }
      var jx = function(t2) {
        cx(i2, t2);
        var e2 = Rx(i2);
        function i2(t3, o2, n2) {
          var r2;
          return vh(this, i2), (r2 = e2.call(this, t3, o2, n2))._setMargins(n2), r2;
        }
        return wu(i2, [{ key: "resize", value: function(t3, e3, i3) {
          this.needsRefresh(e3, i3) && (this.iconSize = { width: Number(this.options.icon.size), height: Number(this.options.icon.size) }, this.width = this.iconSize.width + this.margin.right + this.margin.left, this.height = this.iconSize.height + this.margin.top + this.margin.bottom, this.radius = 0.5 * this.width);
        } }, { key: "draw", value: function(t3, e3, i3, o2, n2, r2) {
          var s2 = this;
          return this.resize(t3, o2, n2), this.options.icon.size = this.options.icon.size || 50, this.left = e3 - this.width / 2, this.top = i3 - this.height / 2, this._icon(t3, e3, i3, o2, n2, r2), { drawExternalLabel: function() {
            if (void 0 !== s2.options.label) {
              s2.labelModule.draw(t3, s2.left + s2.iconSize.width / 2 + s2.margin.left, i3 + s2.height / 2 + 5, o2);
            }
            s2.updateBoundingBox(e3, i3);
          } };
        } }, { key: "updateBoundingBox", value: function(t3, e3) {
          if (this.boundingBox.top = e3 - 0.5 * this.options.icon.size, this.boundingBox.left = t3 - 0.5 * this.options.icon.size, this.boundingBox.right = t3 + 0.5 * this.options.icon.size, this.boundingBox.bottom = e3 + 0.5 * this.options.icon.size, void 0 !== this.options.label && this.labelModule.size.width > 0) {
            this.boundingBox.left = Math.min(this.boundingBox.left, this.labelModule.size.left), this.boundingBox.right = Math.max(this.boundingBox.right, this.labelModule.size.left + this.labelModule.size.width), this.boundingBox.bottom = Math.max(this.boundingBox.bottom, this.boundingBox.bottom + this.labelModule.size.height + 5);
          }
        } }, { key: "_icon", value: function(t3, e3, i3, o2, n2, r2) {
          var s2 = Number(this.options.icon.size);
          void 0 !== this.options.icon.code ? (t3.font = [null != this.options.icon.weight ? this.options.icon.weight : o2 ? "bold" : "", (null != this.options.icon.weight && o2 ? 5 : 0) + s2 + "px", this.options.icon.face].join(" "), t3.fillStyle = this.options.icon.color || "black", t3.textAlign = "center", t3.textBaseline = "middle", this.enableShadow(t3, r2), t3.fillText(this.options.icon.code, e3, i3), this.disableShadow(t3, r2)) : console.error("When using the icon shape, you need to define the code in the icon options object. This can be done per node or globally.");
        } }, { key: "distanceToBorder", value: function(t3, e3) {
          return this._distanceToBorder(t3, e3);
        } }]), i2;
      }(vx);
      function Lx(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !sx) return false;
          if (sx.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(sx(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var i2, o2 = px(t2);
          if (e2) {
            var n2 = px(this).constructor;
            i2 = sx(o2, arguments, n2);
          } else i2 = o2.apply(this, arguments);
          return ux(this, i2);
        };
      }
      var Hx = function(t2) {
        cx(i2, t2);
        var e2 = Lx(i2);
        function i2(t3, o2, n2, r2, s2) {
          var a2;
          return vh(this, i2), (a2 = e2.call(this, t3, o2, n2)).setImages(r2, s2), a2;
        }
        return wu(i2, [{ key: "resize", value: function(t3) {
          var e3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.selected, i3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.hover;
          if (void 0 === this.imageObj.src || void 0 === this.imageObj.width || void 0 === this.imageObj.height) {
            var o2 = 2 * this.options.size;
            return this.width = o2, void (this.height = o2);
          }
          this.needsRefresh(e3, i3) && this._resizeImage();
        } }, { key: "draw", value: function(t3, e3, i3, o2, n2, r2) {
          t3.save(), this.switchImages(o2), this.resize();
          var s2 = e3, a2 = i3;
          if ("top-left" === this.options.shapeProperties.coordinateOrigin ? (this.left = e3, this.top = i3, s2 += this.width / 2, a2 += this.height / 2) : (this.left = e3 - this.width / 2, this.top = i3 - this.height / 2), true === this.options.shapeProperties.useBorderWithImage) {
            var h2 = this.options.borderWidth, d2 = this.options.borderWidthSelected || 2 * this.options.borderWidth, l2 = (o2 ? d2 : h2) / this.body.view.scale;
            t3.lineWidth = Math.min(this.width, l2), t3.beginPath();
            var c2 = o2 ? this.options.color.highlight.border : n2 ? this.options.color.hover.border : this.options.color.border, u2 = o2 ? this.options.color.highlight.background : n2 ? this.options.color.hover.background : this.options.color.background;
            void 0 !== r2.opacity && (c2 = Vm(c2, r2.opacity), u2 = Vm(u2, r2.opacity)), t3.strokeStyle = c2, t3.fillStyle = u2, t3.rect(this.left - 0.5 * t3.lineWidth, this.top - 0.5 * t3.lineWidth, this.width + t3.lineWidth, this.height + t3.lineWidth), Cg(t3).call(t3), this.performStroke(t3, r2), t3.closePath();
          }
          this._drawImageAtPosition(t3, r2), this._drawImageLabel(t3, s2, a2, o2, n2), this.updateBoundingBox(e3, i3), t3.restore();
        } }, { key: "updateBoundingBox", value: function(t3, e3) {
          this.resize(), "top-left" === this.options.shapeProperties.coordinateOrigin ? (this.left = t3, this.top = e3) : (this.left = t3 - this.width / 2, this.top = e3 - this.height / 2), this.boundingBox.left = this.left, this.boundingBox.top = this.top, this.boundingBox.bottom = this.top + this.height, this.boundingBox.right = this.left + this.width, void 0 !== this.options.label && this.labelModule.size.width > 0 && (this.boundingBox.left = Math.min(this.boundingBox.left, this.labelModule.size.left), this.boundingBox.right = Math.max(this.boundingBox.right, this.labelModule.size.left + this.labelModule.size.width), this.boundingBox.bottom = Math.max(this.boundingBox.bottom, this.boundingBox.bottom + this.labelOffset));
        } }, { key: "distanceToBorder", value: function(t3, e3) {
          return this._distanceToBorder(t3, e3);
        } }]), i2;
      }(bx);
      function Wx(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !sx) return false;
          if (sx.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(sx(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var i2, o2 = px(t2);
          if (e2) {
            var n2 = px(this).constructor;
            i2 = sx(o2, arguments, n2);
          } else i2 = o2.apply(this, arguments);
          return ux(this, i2);
        };
      }
      var Vx = function(t2) {
        cx(i2, t2);
        var e2 = Wx(i2);
        function i2(t3, o2, n2) {
          return vh(this, i2), e2.call(this, t3, o2, n2);
        }
        return wu(i2, [{ key: "draw", value: function(t3, e3, i3, o2, n2, r2) {
          return this._drawShape(t3, "square", 2, e3, i3, o2, n2, r2);
        } }, { key: "distanceToBorder", value: function(t3, e3) {
          return this._distanceToBorder(t3, e3);
        } }]), i2;
      }(Ox);
      function qx(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !sx) return false;
          if (sx.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(sx(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var i2, o2 = px(t2);
          if (e2) {
            var n2 = px(this).constructor;
            i2 = sx(o2, arguments, n2);
          } else i2 = o2.apply(this, arguments);
          return ux(this, i2);
        };
      }
      var Ux = function(t2) {
        cx(i2, t2);
        var e2 = qx(i2);
        function i2(t3, o2, n2) {
          return vh(this, i2), e2.call(this, t3, o2, n2);
        }
        return wu(i2, [{ key: "draw", value: function(t3, e3, i3, o2, n2, r2) {
          return this._drawShape(t3, "hexagon", 4, e3, i3, o2, n2, r2);
        } }, { key: "distanceToBorder", value: function(t3, e3) {
          return this._distanceToBorder(t3, e3);
        } }]), i2;
      }(Ox);
      function Yx(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !sx) return false;
          if (sx.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(sx(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var i2, o2 = px(t2);
          if (e2) {
            var n2 = px(this).constructor;
            i2 = sx(o2, arguments, n2);
          } else i2 = o2.apply(this, arguments);
          return ux(this, i2);
        };
      }
      var Xx = function(t2) {
        cx(i2, t2);
        var e2 = Yx(i2);
        function i2(t3, o2, n2) {
          return vh(this, i2), e2.call(this, t3, o2, n2);
        }
        return wu(i2, [{ key: "draw", value: function(t3, e3, i3, o2, n2, r2) {
          return this._drawShape(t3, "star", 4, e3, i3, o2, n2, r2);
        } }, { key: "distanceToBorder", value: function(t3, e3) {
          return this._distanceToBorder(t3, e3);
        } }]), i2;
      }(Ox);
      function Kx(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !sx) return false;
          if (sx.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(sx(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var i2, o2 = px(t2);
          if (e2) {
            var n2 = px(this).constructor;
            i2 = sx(o2, arguments, n2);
          } else i2 = o2.apply(this, arguments);
          return ux(this, i2);
        };
      }
      var Gx = function(t2) {
        cx(i2, t2);
        var e2 = Kx(i2);
        function i2(t3, o2, n2) {
          var r2;
          return vh(this, i2), (r2 = e2.call(this, t3, o2, n2))._setMargins(n2), r2;
        }
        return wu(i2, [{ key: "resize", value: function(t3, e3, i3) {
          this.needsRefresh(e3, i3) && (this.textSize = this.labelModule.getTextSize(t3, e3, i3), this.width = this.textSize.width + this.margin.right + this.margin.left, this.height = this.textSize.height + this.margin.top + this.margin.bottom, this.radius = 0.5 * this.width);
        } }, { key: "draw", value: function(t3, e3, i3, o2, n2, r2) {
          this.resize(t3, o2, n2), this.left = e3 - this.width / 2, this.top = i3 - this.height / 2, this.enableShadow(t3, r2), this.labelModule.draw(t3, this.left + this.textSize.width / 2 + this.margin.left, this.top + this.textSize.height / 2 + this.margin.top, o2, n2), this.disableShadow(t3, r2), this.updateBoundingBox(e3, i3, t3, o2, n2);
        } }, { key: "distanceToBorder", value: function(t3, e3) {
          return this._distanceToBorder(t3, e3);
        } }]), i2;
      }(vx);
      function $x(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !sx) return false;
          if (sx.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(sx(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var i2, o2 = px(t2);
          if (e2) {
            var n2 = px(this).constructor;
            i2 = sx(o2, arguments, n2);
          } else i2 = o2.apply(this, arguments);
          return ux(this, i2);
        };
      }
      var Zx = function(t2) {
        cx(i2, t2);
        var e2 = $x(i2);
        function i2(t3, o2, n2) {
          return vh(this, i2), e2.call(this, t3, o2, n2);
        }
        return wu(i2, [{ key: "draw", value: function(t3, e3, i3, o2, n2, r2) {
          return this._drawShape(t3, "triangle", 3, e3, i3, o2, n2, r2);
        } }, { key: "distanceToBorder", value: function(t3, e3) {
          return this._distanceToBorder(t3, e3);
        } }]), i2;
      }(Ox);
      function Qx(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !sx) return false;
          if (sx.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(sx(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var i2, o2 = px(t2);
          if (e2) {
            var n2 = px(this).constructor;
            i2 = sx(o2, arguments, n2);
          } else i2 = o2.apply(this, arguments);
          return ux(this, i2);
        };
      }
      var Jx = function(t2) {
        cx(i2, t2);
        var e2 = Qx(i2);
        function i2(t3, o2, n2) {
          return vh(this, i2), e2.call(this, t3, o2, n2);
        }
        return wu(i2, [{ key: "draw", value: function(t3, e3, i3, o2, n2, r2) {
          return this._drawShape(t3, "triangleDown", 3, e3, i3, o2, n2, r2);
        } }, { key: "distanceToBorder", value: function(t3, e3) {
          return this._distanceToBorder(t3, e3);
        } }]), i2;
      }(Ox);
      function tE(t2, e2) {
        var i2 = zf(t2);
        if (Nk) {
          var o2 = Nk(t2);
          e2 && (o2 = lv(o2).call(o2, function(e3) {
            return Yk(t2, e3).enumerable;
          })), i2.push.apply(i2, o2);
        }
        return i2;
      }
      function eE(t2) {
        for (var e2 = 1; e2 < arguments.length; e2++) {
          var i2, o2, n2 = null != arguments[e2] ? arguments[e2] : {};
          e2 % 2 ? Qf(i2 = tE(Object(n2), true)).call(i2, function(e3) {
            s_(t2, e3, n2[e3]);
          }) : Zk ? n_(t2, Zk(n2)) : Qf(o2 = tE(Object(n2))).call(o2, function(e3) {
            r_(t2, e3, Yk(n2, e3));
          });
        }
        return t2;
      }
      var iE = function() {
        function t2(e2, i2, o2, n2, r2, s2) {
          vh(this, t2), this.options = Zm(r2), this.globalOptions = r2, this.defaultOptions = s2, this.body = i2, this.edges = [], this.id = void 0, this.imagelist = o2, this.grouplist = n2, this.x = void 0, this.y = void 0, this.baseSize = this.options.size, this.baseFontSize = this.options.font.size, this.predefinedPosition = false, this.selected = false, this.hover = false, this.labelModule = new W_(this.body, this.options, false), this.setOptions(e2);
        }
        return wu(t2, [{ key: "attachEdge", value: function(t3) {
          var e2;
          -1 === Vv(e2 = this.edges).call(e2, t3) && this.edges.push(t3);
        } }, { key: "detachEdge", value: function(t3) {
          var e2, i2, o2 = Vv(e2 = this.edges).call(e2, t3);
          -1 != o2 && Pp(i2 = this.edges).call(i2, o2, 1);
        } }, { key: "setOptions", value: function(e2) {
          var i2 = this.options.shape;
          if (e2) {
            if (void 0 !== e2.color && (this._localColor = e2.color), void 0 !== e2.id && (this.id = e2.id), void 0 === this.id) throw new Error("Node must have an id");
            t2.checkMass(e2, this.id), void 0 !== e2.x && (null === e2.x ? (this.x = void 0, this.predefinedPosition = false) : (this.x = Iv(e2.x), this.predefinedPosition = true)), void 0 !== e2.y && (null === e2.y ? (this.y = void 0, this.predefinedPosition = false) : (this.y = Iv(e2.y), this.predefinedPosition = true)), void 0 !== e2.size && (this.baseSize = e2.size), void 0 !== e2.value && (e2.value = y_(e2.value)), t2.parseOptions(this.options, e2, true, this.globalOptions, this.grouplist);
            var o2 = [e2, this.options, this.defaultOptions];
            return this.chooser = E_("node", o2), this._load_images(), this.updateLabelModule(e2), void 0 !== e2.opacity && t2.checkOpacity(e2.opacity) && (this.options.opacity = e2.opacity), this.updateShape(i2), void 0 !== e2.hidden || void 0 !== e2.physics;
          }
        } }, { key: "_load_images", value: function() {
          if (("circularImage" === this.options.shape || "image" === this.options.shape) && void 0 === this.options.image) throw new Error("Option image must be defined for node type '" + this.options.shape + "'");
          if (void 0 !== this.options.image) {
            if (void 0 === this.imagelist) throw new Error("Internal Error: No images provided");
            if ("string" == typeof this.options.image) this.imageObj = this.imagelist.load(this.options.image, this.options.brokenImage, this.id);
            else {
              if (void 0 === this.options.image.unselected) throw new Error("No unselected image provided");
              this.imageObj = this.imagelist.load(this.options.image.unselected, this.options.brokenImage, this.id), void 0 !== this.options.image.selected ? this.imageObjAlt = this.imagelist.load(this.options.image.selected, this.options.brokenImage, this.id) : this.imageObjAlt = void 0;
            }
          }
        } }, { key: "getFormattingValues", value: function() {
          var t3 = { color: this.options.color.background, opacity: this.options.opacity, borderWidth: this.options.borderWidth, borderColor: this.options.color.border, size: this.options.size, borderDashes: this.options.shapeProperties.borderDashes, borderRadius: this.options.shapeProperties.borderRadius, shadow: this.options.shadow.enabled, shadowColor: this.options.shadow.color, shadowSize: this.options.shadow.size, shadowX: this.options.shadow.x, shadowY: this.options.shadow.y };
          if (this.selected || this.hover ? true === this.chooser ? this.selected ? (null != this.options.borderWidthSelected ? t3.borderWidth = this.options.borderWidthSelected : t3.borderWidth *= 2, t3.color = this.options.color.highlight.background, t3.borderColor = this.options.color.highlight.border, t3.shadow = this.options.shadow.enabled) : this.hover && (t3.color = this.options.color.hover.background, t3.borderColor = this.options.color.hover.border, t3.shadow = this.options.shadow.enabled) : "function" == typeof this.chooser && (this.chooser(t3, this.options.id, this.selected, this.hover), false === t3.shadow && (t3.shadowColor === this.options.shadow.color && t3.shadowSize === this.options.shadow.size && t3.shadowX === this.options.shadow.x && t3.shadowY === this.options.shadow.y || (t3.shadow = true))) : t3.shadow = this.options.shadow.enabled, void 0 !== this.options.opacity) {
            var e2 = this.options.opacity;
            t3.borderColor = Vm(t3.borderColor, e2), t3.color = Vm(t3.color, e2), t3.shadowColor = Vm(t3.shadowColor, e2);
          }
          return t3;
        } }, { key: "updateLabelModule", value: function(e2) {
          void 0 !== this.options.label && null !== this.options.label || (this.options.label = ""), t2.updateGroupOptions(this.options, eE(eE({}, e2), {}, { color: e2 && e2.color || this._localColor || void 0 }), this.grouplist);
          var i2 = this.grouplist.get(this.options.group, false), o2 = [e2, this.options, i2, this.globalOptions, this.defaultOptions];
          this.labelModule.update(this.options, o2), void 0 !== this.labelModule.baseSize && (this.baseFontSize = this.labelModule.baseSize);
        } }, { key: "updateShape", value: function(t3) {
          if (t3 === this.options.shape && this.shape) this.shape.setOptions(this.options, this.imageObj, this.imageObjAlt);
          else switch (this.options.shape) {
            case "box":
              this.shape = new yx(this.options, this.body, this.labelModule);
              break;
            case "circle":
              this.shape = new kx(this.options, this.body, this.labelModule);
              break;
            case "circularImage":
              this.shape = new xx(this.options, this.body, this.labelModule, this.imageObj, this.imageObjAlt);
              break;
            case "custom":
              this.shape = new Mx(this.options, this.body, this.labelModule, this.options.ctxRenderer);
              break;
            case "database":
              this.shape = new Dx(this.options, this.body, this.labelModule);
              break;
            case "diamond":
              this.shape = new Bx(this.options, this.body, this.labelModule);
              break;
            case "dot":
              this.shape = new zx(this.options, this.body, this.labelModule);
              break;
            case "ellipse":
            default:
              this.shape = new Ax(this.options, this.body, this.labelModule);
              break;
            case "icon":
              this.shape = new jx(this.options, this.body, this.labelModule);
              break;
            case "image":
              this.shape = new Hx(this.options, this.body, this.labelModule, this.imageObj, this.imageObjAlt);
              break;
            case "square":
              this.shape = new Vx(this.options, this.body, this.labelModule);
              break;
            case "hexagon":
              this.shape = new Ux(this.options, this.body, this.labelModule);
              break;
            case "star":
              this.shape = new Xx(this.options, this.body, this.labelModule);
              break;
            case "text":
              this.shape = new Gx(this.options, this.body, this.labelModule);
              break;
            case "triangle":
              this.shape = new Zx(this.options, this.body, this.labelModule);
              break;
            case "triangleDown":
              this.shape = new Jx(this.options, this.body, this.labelModule);
          }
          this.needsRefresh();
        } }, { key: "select", value: function() {
          this.selected = true, this.needsRefresh();
        } }, { key: "unselect", value: function() {
          this.selected = false, this.needsRefresh();
        } }, { key: "needsRefresh", value: function() {
          this.shape.refreshNeeded = true;
        } }, { key: "getTitle", value: function() {
          return this.options.title;
        } }, { key: "distanceToBorder", value: function(t3, e2) {
          return this.shape.distanceToBorder(t3, e2);
        } }, { key: "isFixed", value: function() {
          return this.options.fixed.x && this.options.fixed.y;
        } }, { key: "isSelected", value: function() {
          return this.selected;
        } }, { key: "getValue", value: function() {
          return this.options.value;
        } }, { key: "getLabelSize", value: function() {
          return this.labelModule.size();
        } }, { key: "setValueRange", value: function(t3, e2, i2) {
          if (void 0 !== this.options.value) {
            var o2 = this.options.scaling.customScalingFunction(t3, e2, i2, this.options.value), n2 = this.options.scaling.max - this.options.scaling.min;
            if (true === this.options.scaling.label.enabled) {
              var r2 = this.options.scaling.label.max - this.options.scaling.label.min;
              this.options.font.size = this.options.scaling.label.min + o2 * r2;
            }
            this.options.size = this.options.scaling.min + o2 * n2;
          } else this.options.size = this.baseSize, this.options.font.size = this.baseFontSize;
          this.updateLabelModule();
        } }, { key: "draw", value: function(t3) {
          var e2 = this.getFormattingValues();
          return this.shape.draw(t3, this.x, this.y, this.selected, this.hover, e2) || {};
        } }, { key: "updateBoundingBox", value: function(t3) {
          this.shape.updateBoundingBox(this.x, this.y, t3);
        } }, { key: "resize", value: function(t3) {
          var e2 = this.getFormattingValues();
          this.shape.resize(t3, this.selected, this.hover, e2);
        } }, { key: "getItemsOnPoint", value: function(t3) {
          var e2 = [];
          return this.labelModule.visible() && O_(this.labelModule.getSize(), t3) && e2.push({ nodeId: this.id, labelId: 0 }), O_(this.shape.boundingBox, t3) && e2.push({ nodeId: this.id }), e2;
        } }, { key: "isOverlappingWith", value: function(t3) {
          return this.shape.left < t3.right && this.shape.left + this.shape.width > t3.left && this.shape.top < t3.bottom && this.shape.top + this.shape.height > t3.top;
        } }, { key: "isBoundingBoxOverlappingWith", value: function(t3) {
          return this.shape.boundingBox.left < t3.right && this.shape.boundingBox.right > t3.left && this.shape.boundingBox.top < t3.bottom && this.shape.boundingBox.bottom > t3.top;
        } }], [{ key: "checkOpacity", value: function(t3) {
          return 0 <= t3 && t3 <= 1;
        } }, { key: "checkCoordinateOrigin", value: function(t3) {
          return void 0 === t3 || "center" === t3 || "top-left" === t3;
        } }, { key: "updateGroupOptions", value: function(e2, i2, o2) {
          var n2;
          if (void 0 !== o2) {
            var r2 = e2.group;
            if (void 0 !== i2 && void 0 !== i2.group && r2 !== i2.group) throw new Error("updateGroupOptions: group values in options don't match.");
            if ("number" == typeof r2 || "string" == typeof r2 && "" != r2) {
              var s2 = o2.get(r2);
              void 0 !== s2.opacity && void 0 === i2.opacity && (t2.checkOpacity(s2.opacity) || (console.error("Invalid option for node opacity. Value must be between 0 and 1, found: " + s2.opacity), s2.opacity = void 0));
              var a2 = lv(n2 = x_(i2)).call(n2, function(t3) {
                return null != i2[t3];
              });
              a2.push("font"), Am(a2, e2, s2), e2.color = Um(e2.color);
            }
          }
        } }, { key: "parseOptions", value: function(e2, i2) {
          var o2 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], n2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {}, r2 = arguments.length > 4 ? arguments[4] : void 0;
          if (Am(["color", "fixed", "shadow"], e2, i2, o2), t2.checkMass(i2), void 0 !== e2.opacity && (t2.checkOpacity(e2.opacity) || (console.error("Invalid option for node opacity. Value must be between 0 and 1, found: " + e2.opacity), e2.opacity = void 0)), void 0 !== i2.opacity && (t2.checkOpacity(i2.opacity) || (console.error("Invalid option for node opacity. Value must be between 0 and 1, found: " + i2.opacity), i2.opacity = void 0)), i2.shapeProperties && !t2.checkCoordinateOrigin(i2.shapeProperties.coordinateOrigin) && console.error("Invalid option for node coordinateOrigin, found: " + i2.shapeProperties.coordinateOrigin), Qm(e2, i2, "shadow", n2), void 0 !== i2.color && null !== i2.color) {
            var s2 = Um(i2.color);
            zm(e2.color, s2);
          } else true === o2 && null === i2.color && (e2.color = Zm(n2.color));
          void 0 !== i2.fixed && null !== i2.fixed && ("boolean" == typeof i2.fixed ? (e2.fixed.x = i2.fixed, e2.fixed.y = i2.fixed) : (void 0 !== i2.fixed.x && "boolean" == typeof i2.fixed.x && (e2.fixed.x = i2.fixed.x), void 0 !== i2.fixed.y && "boolean" == typeof i2.fixed.y && (e2.fixed.y = i2.fixed.y))), true === o2 && null === i2.font && (e2.font = Zm(n2.font)), t2.updateGroupOptions(e2, i2, r2), void 0 !== i2.scaling && Qm(e2.scaling, i2.scaling, "label", n2.scaling);
        } }, { key: "checkMass", value: function(t3, e2) {
          if (void 0 !== t3.mass && t3.mass <= 0) {
            var i2 = "";
            void 0 !== e2 && (i2 = " in node id: " + e2), console.error("%cNegative or zero mass disallowed" + i2 + ", setting mass to 1.", pb), t3.mass = 1;
          }
        } }]), t2;
      }();
      function oE(t2, e2) {
        var i2 = void 0 !== cf && ph(t2) || t2["@@iterator"];
        if (!i2) {
          if (Of(t2) || (i2 = function(t3, e3) {
            var i3;
            if (!t3) return;
            if ("string" == typeof t3) return nE(t3, e3);
            var o3 = mf(i3 = Object.prototype.toString.call(t3)).call(i3, 8, -1);
            "Object" === o3 && t3.constructor && (o3 = t3.constructor.name);
            if ("Map" === o3 || "Set" === o3) return Xa(t3);
            if ("Arguments" === o3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3)) return nE(t3, e3);
          }(t2)) || e2 && t2 && "number" == typeof t2.length) {
            i2 && (t2 = i2);
            var o2 = 0, n2 = function() {
            };
            return { s: n2, n: function() {
              return o2 >= t2.length ? { done: true } : { done: false, value: t2[o2++] };
            }, e: function(t3) {
              throw t3;
            }, f: n2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var r2, s2 = true, a2 = false;
        return { s: function() {
          i2 = i2.call(t2);
        }, n: function() {
          var t3 = i2.next();
          return s2 = t3.done, t3;
        }, e: function(t3) {
          a2 = true, r2 = t3;
        }, f: function() {
          try {
            s2 || null == i2.return || i2.return();
          } finally {
            if (a2) throw r2;
          }
        } };
      }
      function nE(t2, e2) {
        (null == e2 || e2 > t2.length) && (e2 = t2.length);
        for (var i2 = 0, o2 = new Array(e2); i2 < e2; i2++) o2[i2] = t2[i2];
        return o2;
      }
      var rE = function() {
        function t2(e2, i2, o2, n2) {
          var r2, s2 = this;
          if (vh(this, t2), this.body = e2, this.images = i2, this.groups = o2, this.layoutEngine = n2, this.body.functions.createNode = Wo(r2 = this.create).call(r2, this), this.nodesListeners = { add: function(t3, e3) {
            s2.add(e3.items);
          }, update: function(t3, e3) {
            s2.update(e3.items, e3.data, e3.oldData);
          }, remove: function(t3, e3) {
            s2.remove(e3.items);
          } }, this.defaultOptions = { borderWidth: 1, borderWidthSelected: void 0, brokenImage: void 0, color: { border: "#2B7CE9", background: "#97C2FC", highlight: { border: "#2B7CE9", background: "#D2E5FF" }, hover: { border: "#2B7CE9", background: "#D2E5FF" } }, opacity: void 0, fixed: { x: false, y: false }, font: { color: "#343434", size: 14, face: "arial", background: "none", strokeWidth: 0, strokeColor: "#ffffff", align: "center", vadjust: 0, multi: false, bold: { mod: "bold" }, boldital: { mod: "bold italic" }, ital: { mod: "italic" }, mono: { mod: "", size: 15, face: "monospace", vadjust: 2 } }, group: void 0, hidden: false, icon: { face: "FontAwesome", code: void 0, size: 50, color: "#2B7CE9" }, image: void 0, imagePadding: { top: 0, right: 0, bottom: 0, left: 0 }, label: void 0, labelHighlightBold: true, level: void 0, margin: { top: 5, right: 5, bottom: 5, left: 5 }, mass: 1, physics: true, scaling: { min: 10, max: 30, label: { enabled: false, min: 14, max: 30, maxVisible: 30, drawThreshold: 5 }, customScalingFunction: function(t3, e3, i3, o3) {
            if (e3 === t3) return 0.5;
            var n3 = 1 / (e3 - t3);
            return Math.max(0, (o3 - t3) * n3);
          } }, shadow: { enabled: false, color: "rgba(0,0,0,0.5)", size: 10, x: 5, y: 5 }, shape: "ellipse", shapeProperties: { borderDashes: false, borderRadius: 6, interpolation: true, useImageSize: false, useBorderWithImage: false, coordinateOrigin: "center" }, size: 25, title: void 0, value: void 0, x: void 0, y: void 0 }, this.defaultOptions.mass <= 0) throw "Internal error: mass in defaultOptions of NodesHandler may not be zero or negative";
          this.options = Zm(this.defaultOptions), this.bindEventListeners();
        }
        return wu(t2, [{ key: "bindEventListeners", value: function() {
          var t3, e2, i2 = this;
          this.body.emitter.on("refreshNodes", Wo(t3 = this.refresh).call(t3, this)), this.body.emitter.on("refresh", Wo(e2 = this.refresh).call(e2, this)), this.body.emitter.on("destroy", function() {
            Hm(i2.nodesListeners, function(t4, e3) {
              i2.body.data.nodes && i2.body.data.nodes.off(e3, t4);
            }), delete i2.body.functions.createNode, delete i2.nodesListeners.add, delete i2.nodesListeners.update, delete i2.nodesListeners.remove, delete i2.nodesListeners;
          });
        } }, { key: "setOptions", value: function(t3) {
          if (void 0 !== t3) {
            if (iE.parseOptions(this.options, t3), void 0 !== t3.opacity && (Ok(t3.opacity) || !Tk(t3.opacity) || t3.opacity < 0 || t3.opacity > 1 ? console.error("Invalid option for node opacity. Value must be between 0 and 1, found: " + t3.opacity) : this.options.opacity = t3.opacity), void 0 !== t3.shape) for (var e2 in this.body.nodes) Object.prototype.hasOwnProperty.call(this.body.nodes, e2) && this.body.nodes[e2].updateShape();
            if (void 0 !== t3.font || void 0 !== t3.widthConstraint || void 0 !== t3.heightConstraint) for (var i2 = 0, o2 = zf(this.body.nodes); i2 < o2.length; i2++) {
              var n2 = o2[i2];
              this.body.nodes[n2].updateLabelModule(), this.body.nodes[n2].needsRefresh();
            }
            if (void 0 !== t3.size) for (var r2 in this.body.nodes) Object.prototype.hasOwnProperty.call(this.body.nodes, r2) && this.body.nodes[r2].needsRefresh();
            void 0 === t3.hidden && void 0 === t3.physics || this.body.emitter.emit("_dataChanged");
          }
        } }, { key: "setData", value: function(t3) {
          var i2 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], o2 = this.body.data.nodes;
          if (e.isDataViewLike("id", t3)) this.body.data.nodes = t3;
          else if (Of(t3)) this.body.data.nodes = new e.DataSet(), this.body.data.nodes.add(t3);
          else {
            if (t3) throw new TypeError("Array or DataSet expected");
            this.body.data.nodes = new e.DataSet();
          }
          if (o2 && Hm(this.nodesListeners, function(t4, e2) {
            o2.off(e2, t4);
          }), this.body.nodes = {}, this.body.data.nodes) {
            var n2 = this;
            Hm(this.nodesListeners, function(t4, e2) {
              n2.body.data.nodes.on(e2, t4);
            });
            var r2 = this.body.data.nodes.getIds();
            this.add(r2, true);
          }
          false === i2 && this.body.emitter.emit("_dataChanged");
        } }, { key: "add", value: function(t3) {
          for (var e2, i2 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], o2 = [], n2 = 0; n2 < t3.length; n2++) {
            e2 = t3[n2];
            var r2 = this.body.data.nodes.get(e2), s2 = this.create(r2);
            o2.push(s2), this.body.nodes[e2] = s2;
          }
          this.layoutEngine.positionInitially(o2), false === i2 && this.body.emitter.emit("_dataChanged");
        } }, { key: "update", value: function(t3, e2, i2) {
          for (var o2 = this.body.nodes, n2 = false, r2 = 0; r2 < t3.length; r2++) {
            var s2 = t3[r2], a2 = o2[s2], h2 = e2[r2];
            void 0 !== a2 ? a2.setOptions(h2) && (n2 = true) : (n2 = true, a2 = this.create(h2), o2[s2] = a2);
          }
          n2 || void 0 === i2 || (n2 = zk(e2).call(e2, function(t4, e3) {
            var o3 = i2[e3];
            return o3 && o3.level !== t4.level;
          })), true === n2 ? this.body.emitter.emit("_dataChanged") : this.body.emitter.emit("_dataUpdated");
        } }, { key: "remove", value: function(t3) {
          for (var e2 = this.body.nodes, i2 = 0; i2 < t3.length; i2++) {
            delete e2[t3[i2]];
          }
          this.body.emitter.emit("_dataChanged");
        } }, { key: "create", value: function(t3) {
          return new (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : iE)(t3, this.body, this.images, this.groups, this.options, this.defaultOptions);
        } }, { key: "refresh", value: function() {
          var t3 = this, e2 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
          Hm(this.body.nodes, function(i2, o2) {
            var n2 = t3.body.data.nodes.get(o2);
            void 0 !== n2 && (true === e2 && i2.setOptions({ x: null, y: null }), i2.setOptions({ fixed: false }), i2.setOptions(n2));
          });
        } }, { key: "getPositions", value: function(t3) {
          var e2 = {};
          if (void 0 !== t3) {
            if (true === Of(t3)) {
              for (var i2 = 0; i2 < t3.length; i2++) if (void 0 !== this.body.nodes[t3[i2]]) {
                var o2 = this.body.nodes[t3[i2]];
                e2[t3[i2]] = { x: Math.round(o2.x), y: Math.round(o2.y) };
              }
            } else if (void 0 !== this.body.nodes[t3]) {
              var n2 = this.body.nodes[t3];
              e2[t3] = { x: Math.round(n2.x), y: Math.round(n2.y) };
            }
          } else for (var r2 = 0; r2 < this.body.nodeIndices.length; r2++) {
            var s2 = this.body.nodes[this.body.nodeIndices[r2]];
            e2[this.body.nodeIndices[r2]] = { x: Math.round(s2.x), y: Math.round(s2.y) };
          }
          return e2;
        } }, { key: "getPosition", value: function(t3) {
          if (null == t3) throw new TypeError("No id was specified for getPosition method.");
          if (null == this.body.nodes[t3]) throw new ReferenceError("NodeId provided for getPosition does not exist. Provided: ".concat(t3));
          return { x: Math.round(this.body.nodes[t3].x), y: Math.round(this.body.nodes[t3].y) };
        } }, { key: "storePositions", value: function() {
          var t3, e2 = [], i2 = this.body.data.nodes.getDataSet(), o2 = oE(i2.get());
          try {
            for (o2.s(); !(t3 = o2.n()).done; ) {
              var n2 = t3.value, r2 = n2.id, s2 = this.body.nodes[r2], a2 = Math.round(s2.x), h2 = Math.round(s2.y);
              n2.x === a2 && n2.y === h2 || e2.push({ id: r2, x: a2, y: h2 });
            }
          } catch (t4) {
            o2.e(t4);
          } finally {
            o2.f();
          }
          i2.update(e2);
        } }, { key: "getBoundingBox", value: function(t3) {
          if (void 0 !== this.body.nodes[t3]) return this.body.nodes[t3].shape.boundingBox;
        } }, { key: "getConnectedNodes", value: function(t3, e2) {
          var i2 = [];
          if (void 0 !== this.body.nodes[t3]) for (var o2 = this.body.nodes[t3], n2 = {}, r2 = 0; r2 < o2.edges.length; r2++) {
            var s2 = o2.edges[r2];
            "to" !== e2 && s2.toId == o2.id ? void 0 === n2[s2.fromId] && (i2.push(s2.fromId), n2[s2.fromId] = true) : "from" !== e2 && s2.fromId == o2.id && void 0 === n2[s2.toId] && (i2.push(s2.toId), n2[s2.toId] = true);
          }
          return i2;
        } }, { key: "getConnectedEdges", value: function(t3) {
          var e2 = [];
          if (void 0 !== this.body.nodes[t3]) for (var i2 = this.body.nodes[t3], o2 = 0; o2 < i2.edges.length; o2++) e2.push(i2.edges[o2].id);
          else console.error("NodeId provided for getConnectedEdges does not exist. Provided: ", t3);
          return e2;
        } }, { key: "moveNode", value: function(t3, e2, i2) {
          var o2 = this;
          void 0 !== this.body.nodes[t3] ? (this.body.nodes[t3].x = Number(e2), this.body.nodes[t3].y = Number(i2), vg(function() {
            o2.body.emitter.emit("startSimulation");
          }, 0)) : console.error("Node id supplied to moveNode does not exist. Provided: ", t3);
        } }]), t2;
      }(), sE = Jt, aE = B, hE = et, dE = oi, lE = function(t2) {
        return void 0 !== t2 && (sE(t2, "value") || sE(t2, "writable"));
      }, cE = M, uE = Tr;
      Mi({ target: "Reflect", stat: true }, { get: function t2(e2, i2) {
        var o2, n2, r2 = arguments.length < 3 ? e2 : arguments[2];
        return dE(e2) === r2 ? e2[i2] : (o2 = cE.f(e2, i2)) ? lE(o2) ? o2.value : void 0 === o2.get ? void 0 : aE(o2.get, r2) : hE(n2 = uE(e2)) ? t2(n2, i2, r2) : void 0;
      } });
      var fE = o(it.Reflect.get), pE = o(Uk);
      function vE() {
        var t2;
        "undefined" != typeof Reflect && fE ? vE = dx(t2 = fE).call(t2) : vE = function(t3, e2, i2) {
          var o2 = function(t4, e3) {
            for (; !Object.prototype.hasOwnProperty.call(t4, e3) && null !== (t4 = px(t4)); ) ;
            return t4;
          }(t3, e2);
          if (o2) {
            var n2 = pE(o2, e2);
            return n2.get ? n2.get.call(arguments.length < 3 ? t3 : i2) : n2.value;
          }
        };
        return vE.apply(this, arguments);
      }
      var gE = Mi, yE = Math.hypot, mE = Math.abs, bE = Math.sqrt;
      gE({ target: "Math", stat: true, arity: 2, forced: !!yE && yE(1 / 0, NaN) !== 1 / 0 }, { hypot: function(t2, e2) {
        for (var i2, o2, n2 = 0, r2 = 0, s2 = arguments.length, a2 = 0; r2 < s2; ) a2 < (i2 = mE(arguments[r2++])) ? (n2 = n2 * (o2 = a2 / i2) * o2 + 1, a2 = i2) : n2 += i2 > 0 ? (o2 = i2 / a2) * o2 : i2;
        return a2 === 1 / 0 ? 1 / 0 : a2 * bE(n2);
      } });
      var wE = o(it.Math.hypot);
      function kE(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !sx) return false;
          if (sx.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(sx(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var i2, o2 = px(t2);
          if (e2) {
            var n2 = px(this).constructor;
            i2 = sx(o2, arguments, n2);
          } else i2 = o2.apply(this, arguments);
          return ux(this, i2);
        };
      }
      var _E = function() {
        function t2() {
          vh(this, t2);
        }
        return wu(t2, null, [{ key: "transform", value: function(t3, e2) {
          Of(t3) || (t3 = [t3]);
          for (var i2 = e2.point.x, o2 = e2.point.y, n2 = e2.angle, r2 = e2.length, s2 = 0; s2 < t3.length; ++s2) {
            var a2 = t3[s2], h2 = a2.x * Math.cos(n2) - a2.y * Math.sin(n2), d2 = a2.x * Math.sin(n2) + a2.y * Math.cos(n2);
            a2.x = i2 + r2 * h2, a2.y = o2 + r2 * d2;
          }
        } }, { key: "drawPath", value: function(t3, e2) {
          t3.beginPath(), t3.moveTo(e2[0].x, e2[0].y);
          for (var i2 = 1; i2 < e2.length; ++i2) t3.lineTo(e2[i2].x, e2[i2].y);
          t3.closePath();
        } }]), t2;
      }(), xE = function(t2) {
        cx(i2, t2);
        var e2 = kE(i2);
        function i2() {
          return vh(this, i2), e2.apply(this, arguments);
        }
        return wu(i2, null, [{ key: "draw", value: function(t3, e3) {
          if (e3.image) {
            t3.save(), t3.translate(e3.point.x, e3.point.y), t3.rotate(Math.PI / 2 + e3.angle);
            var i3 = null != e3.imageWidth ? e3.imageWidth : e3.image.width, o2 = null != e3.imageHeight ? e3.imageHeight : e3.image.height;
            e3.image.drawImageAtPosition(t3, 1, -i3 / 2, 0, i3, o2), t3.restore();
          }
          return false;
        } }]), i2;
      }(_E), EE = function(t2) {
        cx(i2, t2);
        var e2 = kE(i2);
        function i2() {
          return vh(this, i2), e2.apply(this, arguments);
        }
        return wu(i2, null, [{ key: "draw", value: function(t3, e3) {
          var i3 = [{ x: 0, y: 0 }, { x: -1, y: 0.3 }, { x: -0.9, y: 0 }, { x: -1, y: -0.3 }];
          return _E.transform(i3, e3), _E.drawPath(t3, i3), true;
        } }]), i2;
      }(_E), OE = function() {
        function t2() {
          vh(this, t2);
        }
        return wu(t2, null, [{ key: "draw", value: function(t3, e2) {
          var i2 = [{ x: -1, y: 0 }, { x: 0, y: 0.3 }, { x: -0.4, y: 0 }, { x: 0, y: -0.3 }];
          return _E.transform(i2, e2), _E.drawPath(t3, i2), true;
        } }]), t2;
      }(), CE = function() {
        function t2() {
          vh(this, t2);
        }
        return wu(t2, null, [{ key: "draw", value: function(t3, e2) {
          var i2 = { x: -0.4, y: 0 };
          _E.transform(i2, e2), t3.strokeStyle = t3.fillStyle, t3.fillStyle = "rgba(0, 0, 0, 0)";
          var o2 = Math.PI, n2 = e2.angle - o2 / 2, r2 = e2.angle + o2 / 2;
          return t3.beginPath(), t3.arc(i2.x, i2.y, 0.4 * e2.length, n2, r2, false), t3.stroke(), true;
        } }]), t2;
      }(), SE = function() {
        function t2() {
          vh(this, t2);
        }
        return wu(t2, null, [{ key: "draw", value: function(t3, e2) {
          var i2 = { x: -0.3, y: 0 };
          _E.transform(i2, e2), t3.strokeStyle = t3.fillStyle, t3.fillStyle = "rgba(0, 0, 0, 0)";
          var o2 = Math.PI, n2 = e2.angle + o2 / 2, r2 = e2.angle + 3 * o2 / 2;
          return t3.beginPath(), t3.arc(i2.x, i2.y, 0.4 * e2.length, n2, r2, false), t3.stroke(), true;
        } }]), t2;
      }(), TE = function() {
        function t2() {
          vh(this, t2);
        }
        return wu(t2, null, [{ key: "draw", value: function(t3, e2) {
          var i2 = [{ x: 0.02, y: 0 }, { x: -1, y: 0.3 }, { x: -1, y: -0.3 }];
          return _E.transform(i2, e2), _E.drawPath(t3, i2), true;
        } }]), t2;
      }(), ME = function() {
        function t2() {
          vh(this, t2);
        }
        return wu(t2, null, [{ key: "draw", value: function(t3, e2) {
          var i2 = [{ x: 0, y: 0.3 }, { x: 0, y: -0.3 }, { x: -1, y: 0 }];
          return _E.transform(i2, e2), _E.drawPath(t3, i2), true;
        } }]), t2;
      }(), PE = function() {
        function t2() {
          vh(this, t2);
        }
        return wu(t2, null, [{ key: "draw", value: function(t3, e2) {
          var i2 = { x: -0.4, y: 0 };
          return _E.transform(i2, e2), Vo(t3, i2.x, i2.y, 0.4 * e2.length), true;
        } }]), t2;
      }(), DE = function() {
        function t2() {
          vh(this, t2);
        }
        return wu(t2, null, [{ key: "draw", value: function(t3, e2) {
          var i2 = [{ x: 0, y: 0.5 }, { x: 0, y: -0.5 }, { x: -0.15, y: -0.5 }, { x: -0.15, y: 0.5 }];
          return _E.transform(i2, e2), _E.drawPath(t3, i2), true;
        } }]), t2;
      }(), IE = function() {
        function t2() {
          vh(this, t2);
        }
        return wu(t2, null, [{ key: "draw", value: function(t3, e2) {
          var i2 = [{ x: 0, y: 0.3 }, { x: 0, y: -0.3 }, { x: -0.6, y: -0.3 }, { x: -0.6, y: 0.3 }];
          return _E.transform(i2, e2), _E.drawPath(t3, i2), true;
        } }]), t2;
      }(), BE = function() {
        function t2() {
          vh(this, t2);
        }
        return wu(t2, null, [{ key: "draw", value: function(t3, e2) {
          var i2 = [{ x: 0, y: 0 }, { x: -0.5, y: -0.3 }, { x: -1, y: 0 }, { x: -0.5, y: 0.3 }];
          return _E.transform(i2, e2), _E.drawPath(t3, i2), true;
        } }]), t2;
      }(), FE = function() {
        function t2() {
          vh(this, t2);
        }
        return wu(t2, null, [{ key: "draw", value: function(t3, e2) {
          var i2 = [{ x: -1, y: 0.3 }, { x: -0.5, y: 0 }, { x: -1, y: -0.3 }, { x: 0, y: 0 }];
          return _E.transform(i2, e2), _E.drawPath(t3, i2), true;
        } }]), t2;
      }(), zE = function() {
        function t2() {
          vh(this, t2);
        }
        return wu(t2, null, [{ key: "draw", value: function(t3, e2) {
          var i2;
          switch (e2.type && (i2 = e2.type.toLowerCase()), i2) {
            case "image":
              return xE.draw(t3, e2);
            case "circle":
              return PE.draw(t3, e2);
            case "box":
              return IE.draw(t3, e2);
            case "crow":
              return OE.draw(t3, e2);
            case "curve":
              return CE.draw(t3, e2);
            case "diamond":
              return BE.draw(t3, e2);
            case "inv_curve":
              return SE.draw(t3, e2);
            case "triangle":
              return TE.draw(t3, e2);
            case "inv_triangle":
              return ME.draw(t3, e2);
            case "bar":
              return DE.draw(t3, e2);
            case "vee":
              return FE.draw(t3, e2);
            default:
              return EE.draw(t3, e2);
          }
        } }]), t2;
      }();
      function NE(t2, e2) {
        var i2 = zf(t2);
        if (Nk) {
          var o2 = Nk(t2);
          e2 && (o2 = lv(o2).call(o2, function(e3) {
            return Yk(t2, e3).enumerable;
          })), i2.push.apply(i2, o2);
        }
        return i2;
      }
      function AE(t2) {
        for (var e2 = 1; e2 < arguments.length; e2++) {
          var i2, o2, n2 = null != arguments[e2] ? arguments[e2] : {};
          e2 % 2 ? Qf(i2 = NE(Object(n2), true)).call(i2, function(e3) {
            s_(t2, e3, n2[e3]);
          }) : Zk ? n_(t2, Zk(n2)) : Qf(o2 = NE(Object(n2))).call(o2, function(e3) {
            r_(t2, e3, Yk(n2, e3));
          });
        }
        return t2;
      }
      var RE = function() {
        function t2(e2, i2, o2) {
          vh(this, t2), this._body = i2, this._labelModule = o2, this.color = {}, this.colorDirty = true, this.hoverWidth = 1.5, this.selectionWidth = 2, this.setOptions(e2), this.fromPoint = this.from, this.toPoint = this.to;
        }
        return wu(t2, [{ key: "connect", value: function() {
          this.from = this._body.nodes[this.options.from], this.to = this._body.nodes[this.options.to];
        } }, { key: "cleanup", value: function() {
          return false;
        } }, { key: "setOptions", value: function(t3) {
          this.options = t3, this.from = this._body.nodes[this.options.from], this.to = this._body.nodes[this.options.to], this.id = this.options.id;
        } }, { key: "drawLine", value: function(t3, e2, i2, o2) {
          var n2 = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : this.getViaNode();
          t3.strokeStyle = this.getColor(t3, e2), t3.lineWidth = e2.width, false !== e2.dashes ? this._drawDashedLine(t3, e2, n2) : this._drawLine(t3, e2, n2);
        } }, { key: "_drawLine", value: function(t3, e2, i2, o2, n2) {
          if (this.from != this.to) this._line(t3, e2, i2, o2, n2);
          else {
            var r2 = df(this._getCircleData(t3), 3), s2 = r2[0], a2 = r2[1], h2 = r2[2];
            this._circle(t3, e2, s2, a2, h2);
          }
        } }, { key: "_drawDashedLine", value: function(t3, e2, i2, o2, n2) {
          t3.lineCap = "round";
          var r2 = Of(e2.dashes) ? e2.dashes : [5, 5];
          if (void 0 !== t3.setLineDash) {
            if (t3.save(), t3.setLineDash(r2), t3.lineDashOffset = 0, this.from != this.to) this._line(t3, e2, i2);
            else {
              var s2 = df(this._getCircleData(t3), 3), a2 = s2[0], h2 = s2[1], d2 = s2[2];
              this._circle(t3, e2, a2, h2, d2);
            }
            t3.setLineDash([0]), t3.lineDashOffset = 0, t3.restore();
          } else {
            if (this.from != this.to) Xo(t3, this.from.x, this.from.y, this.to.x, this.to.y, r2);
            else {
              var l2 = df(this._getCircleData(t3), 3), c2 = l2[0], u2 = l2[1], f2 = l2[2];
              this._circle(t3, e2, c2, u2, f2);
            }
            this.enableShadow(t3, e2), t3.stroke(), this.disableShadow(t3, e2);
          }
        } }, { key: "findBorderPosition", value: function(t3, e2, i2) {
          return this.from != this.to ? this._findBorderPosition(t3, e2, i2) : this._findBorderPositionCircle(t3, e2, i2);
        } }, { key: "findBorderPositions", value: function(t3) {
          if (this.from != this.to) return { from: this._findBorderPosition(this.from, t3), to: this._findBorderPosition(this.to, t3) };
          var e2, i2 = df(mf(e2 = this._getCircleData(t3)).call(e2, 0, 2), 2), o2 = i2[0], n2 = i2[1];
          return { from: this._findBorderPositionCircle(this.from, t3, { x: o2, y: n2, low: 0.25, high: 0.6, direction: -1 }), to: this._findBorderPositionCircle(this.from, t3, { x: o2, y: n2, low: 0.6, high: 0.8, direction: 1 }) };
        } }, { key: "_getCircleData", value: function(t3) {
          var e2 = this.options.selfReference.size;
          void 0 !== t3 && void 0 === this.from.shape.width && this.from.shape.resize(t3);
          var i2 = S_(t3, this.options.selfReference.angle, e2, this.from);
          return [i2.x, i2.y, e2];
        } }, { key: "_pointOnCircle", value: function(t3, e2, i2, o2) {
          var n2 = 2 * o2 * Math.PI;
          return { x: t3 + i2 * Math.cos(n2), y: e2 - i2 * Math.sin(n2) };
        } }, { key: "_findBorderPositionCircle", value: function(t3, e2, i2) {
          var o2, n2 = i2.x, r2 = i2.y, s2 = i2.low, a2 = i2.high, h2 = i2.direction, d2 = this.options.selfReference.size, l2 = 0.5 * (s2 + a2), c2 = 0;
          true === this.options.arrowStrikethrough && (-1 === h2 ? c2 = this.options.endPointOffset.from : 1 === h2 && (c2 = this.options.endPointOffset.to));
          var u2 = 0;
          do {
            l2 = 0.5 * (s2 + a2), o2 = this._pointOnCircle(n2, r2, d2, l2);
            var f2 = Math.atan2(t3.y - o2.y, t3.x - o2.x), p2 = t3.distanceToBorder(e2, f2) + c2 - Math.sqrt(Math.pow(o2.x - t3.x, 2) + Math.pow(o2.y - t3.y, 2));
            if (Math.abs(p2) < 0.05) break;
            p2 > 0 ? h2 > 0 ? s2 = l2 : a2 = l2 : h2 > 0 ? a2 = l2 : s2 = l2, ++u2;
          } while (s2 <= a2 && u2 < 10);
          return AE(AE({}, o2), {}, { t: l2 });
        } }, { key: "getLineWidth", value: function(t3, e2) {
          return true === t3 ? Math.max(this.selectionWidth, 0.3 / this._body.view.scale) : true === e2 ? Math.max(this.hoverWidth, 0.3 / this._body.view.scale) : Math.max(this.options.width, 0.3 / this._body.view.scale);
        } }, { key: "getColor", value: function(t3, e2) {
          if (false !== e2.inheritsColor) {
            if ("both" === e2.inheritsColor && this.from.id !== this.to.id) {
              var i2 = t3.createLinearGradient(this.from.x, this.from.y, this.to.x, this.to.y), o2 = this.from.options.color.highlight.border, n2 = this.to.options.color.highlight.border;
              return false === this.from.selected && false === this.to.selected ? (o2 = Vm(this.from.options.color.border, e2.opacity), n2 = Vm(this.to.options.color.border, e2.opacity)) : true === this.from.selected && false === this.to.selected ? n2 = this.to.options.color.border : false === this.from.selected && true === this.to.selected && (o2 = this.from.options.color.border), i2.addColorStop(0, o2), i2.addColorStop(1, n2), i2;
            }
            return "to" === e2.inheritsColor ? Vm(this.to.options.color.border, e2.opacity) : Vm(this.from.options.color.border, e2.opacity);
          }
          return Vm(e2.color, e2.opacity);
        } }, { key: "_circle", value: function(t3, e2, i2, o2, n2) {
          this.enableShadow(t3, e2);
          var r2 = 0, s2 = 2 * Math.PI;
          if (!this.options.selfReference.renderBehindTheNode) {
            var a2 = this.options.selfReference.angle, h2 = this.options.selfReference.angle + Math.PI, d2 = this._findBorderPositionCircle(this.from, t3, { x: i2, y: o2, low: a2, high: h2, direction: -1 }), l2 = this._findBorderPositionCircle(this.from, t3, { x: i2, y: o2, low: a2, high: h2, direction: 1 });
            r2 = Math.atan2(d2.y - o2, d2.x - i2), s2 = Math.atan2(l2.y - o2, l2.x - i2);
          }
          t3.beginPath(), t3.arc(i2, o2, n2, r2, s2, false), t3.stroke(), this.disableShadow(t3, e2);
        } }, { key: "getDistanceToEdge", value: function(t3, e2, i2, o2, n2, r2) {
          if (this.from != this.to) return this._getDistanceToEdge(t3, e2, i2, o2, n2, r2);
          var s2 = df(this._getCircleData(void 0), 3), a2 = s2[0], h2 = s2[1], d2 = s2[2], l2 = a2 - n2, c2 = h2 - r2;
          return Math.abs(Math.sqrt(l2 * l2 + c2 * c2) - d2);
        } }, { key: "_getDistanceToLine", value: function(t3, e2, i2, o2, n2, r2) {
          var s2 = i2 - t3, a2 = o2 - e2, h2 = ((n2 - t3) * s2 + (r2 - e2) * a2) / (s2 * s2 + a2 * a2);
          h2 > 1 ? h2 = 1 : h2 < 0 && (h2 = 0);
          var d2 = t3 + h2 * s2 - n2, l2 = e2 + h2 * a2 - r2;
          return Math.sqrt(d2 * d2 + l2 * l2);
        } }, { key: "getArrowData", value: function(t3, e2, i2, o2, n2, r2) {
          var s2, a2, h2, d2, l2, c2, u2, f2 = r2.width;
          "from" === e2 ? (h2 = this.from, d2 = this.to, l2 = r2.fromArrowScale < 0, c2 = Math.abs(r2.fromArrowScale), u2 = r2.fromArrowType) : "to" === e2 ? (h2 = this.to, d2 = this.from, l2 = r2.toArrowScale < 0, c2 = Math.abs(r2.toArrowScale), u2 = r2.toArrowType) : (h2 = this.to, d2 = this.from, l2 = r2.middleArrowScale < 0, c2 = Math.abs(r2.middleArrowScale), u2 = r2.middleArrowType);
          var p2 = 15 * c2 + 3 * f2;
          if (h2 != d2) {
            var v2 = p2 / wE(h2.x - d2.x, h2.y - d2.y);
            if ("middle" !== e2) if (true === this.options.smooth.enabled) {
              var g2 = this._findBorderPosition(h2, t3, { via: i2 }), y2 = this.getPoint(g2.t + v2 * ("from" === e2 ? 1 : -1), i2);
              s2 = Math.atan2(g2.y - y2.y, g2.x - y2.x), a2 = g2;
            } else s2 = Math.atan2(h2.y - d2.y, h2.x - d2.x), a2 = this._findBorderPosition(h2, t3);
            else {
              var m2 = (l2 ? -v2 : v2) / 2, b2 = this.getPoint(0.5 + m2, i2), w2 = this.getPoint(0.5 - m2, i2);
              s2 = Math.atan2(b2.y - w2.y, b2.x - w2.x), a2 = this.getPoint(0.5, i2);
            }
          } else {
            var k2 = df(this._getCircleData(t3), 3), _2 = k2[0], x2 = k2[1], E2 = k2[2];
            if ("from" === e2) {
              var O2 = this.options.selfReference.angle, C2 = this.options.selfReference.angle + Math.PI, S2 = this._findBorderPositionCircle(this.from, t3, { x: _2, y: x2, low: O2, high: C2, direction: -1 });
              s2 = -2 * S2.t * Math.PI + 1.5 * Math.PI + 0.1 * Math.PI, a2 = S2;
            } else if ("to" === e2) {
              var T2 = this.options.selfReference.angle, M2 = this.options.selfReference.angle + Math.PI, P2 = this._findBorderPositionCircle(this.from, t3, { x: _2, y: x2, low: T2, high: M2, direction: 1 });
              s2 = -2 * P2.t * Math.PI + 1.5 * Math.PI - 1.1 * Math.PI, a2 = P2;
            } else {
              var D2 = this.options.selfReference.angle / (2 * Math.PI);
              a2 = this._pointOnCircle(_2, x2, E2, D2), s2 = -2 * D2 * Math.PI + 1.5 * Math.PI + 0.1 * Math.PI;
            }
          }
          return { point: a2, core: { x: a2.x - 0.9 * p2 * Math.cos(s2), y: a2.y - 0.9 * p2 * Math.sin(s2) }, angle: s2, length: p2, type: u2 };
        } }, { key: "drawArrowHead", value: function(t3, e2, i2, o2, n2) {
          t3.strokeStyle = this.getColor(t3, e2), t3.fillStyle = t3.strokeStyle, t3.lineWidth = e2.width, zE.draw(t3, n2) && (this.enableShadow(t3, e2), Cg(t3).call(t3), this.disableShadow(t3, e2));
        } }, { key: "enableShadow", value: function(t3, e2) {
          true === e2.shadow && (t3.shadowColor = e2.shadowColor, t3.shadowBlur = e2.shadowSize, t3.shadowOffsetX = e2.shadowX, t3.shadowOffsetY = e2.shadowY);
        } }, { key: "disableShadow", value: function(t3, e2) {
          true === e2.shadow && (t3.shadowColor = "rgba(0,0,0,0)", t3.shadowBlur = 0, t3.shadowOffsetX = 0, t3.shadowOffsetY = 0);
        } }, { key: "drawBackground", value: function(t3, e2) {
          if (false !== e2.background) {
            var i2 = { strokeStyle: t3.strokeStyle, lineWidth: t3.lineWidth, dashes: t3.dashes };
            t3.strokeStyle = e2.backgroundColor, t3.lineWidth = e2.backgroundSize, this.setStrokeDashed(t3, e2.backgroundDashes), t3.stroke(), t3.strokeStyle = i2.strokeStyle, t3.lineWidth = i2.lineWidth, t3.dashes = i2.dashes, this.setStrokeDashed(t3, e2.dashes);
          }
        } }, { key: "setStrokeDashed", value: function(t3, e2) {
          if (false !== e2) if (void 0 !== t3.setLineDash) {
            var i2 = Of(e2) ? e2 : [5, 5];
            t3.setLineDash(i2);
          } else console.warn("setLineDash is not supported in this browser. The dashed stroke cannot be used.");
          else void 0 !== t3.setLineDash ? t3.setLineDash([]) : console.warn("setLineDash is not supported in this browser. The dashed stroke cannot be used.");
        } }]), t2;
      }();
      function jE(t2, e2) {
        var i2 = zf(t2);
        if (Nk) {
          var o2 = Nk(t2);
          e2 && (o2 = lv(o2).call(o2, function(e3) {
            return Yk(t2, e3).enumerable;
          })), i2.push.apply(i2, o2);
        }
        return i2;
      }
      function LE(t2) {
        for (var e2 = 1; e2 < arguments.length; e2++) {
          var i2, o2, n2 = null != arguments[e2] ? arguments[e2] : {};
          e2 % 2 ? Qf(i2 = jE(Object(n2), true)).call(i2, function(e3) {
            s_(t2, e3, n2[e3]);
          }) : Zk ? n_(t2, Zk(n2)) : Qf(o2 = jE(Object(n2))).call(o2, function(e3) {
            r_(t2, e3, Yk(n2, e3));
          });
        }
        return t2;
      }
      function HE(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !sx) return false;
          if (sx.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(sx(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var i2, o2 = px(t2);
          if (e2) {
            var n2 = px(this).constructor;
            i2 = sx(o2, arguments, n2);
          } else i2 = o2.apply(this, arguments);
          return ux(this, i2);
        };
      }
      var WE = function(t2) {
        cx(i2, t2);
        var e2 = HE(i2);
        function i2(t3, o2, n2) {
          return vh(this, i2), e2.call(this, t3, o2, n2);
        }
        return wu(i2, [{ key: "_findBorderPositionBezier", value: function(t3, e3) {
          var i3, o2, n2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this._getViaCoordinates(), r2 = false, s2 = 1, a2 = 0, h2 = this.to, d2 = this.options.endPointOffset ? this.options.endPointOffset.to : 0;
          t3.id === this.from.id && (h2 = this.from, r2 = true, d2 = this.options.endPointOffset ? this.options.endPointOffset.from : 0), false === this.options.arrowStrikethrough && (d2 = 0);
          var l2 = 0;
          do {
            o2 = 0.5 * (a2 + s2), i3 = this.getPoint(o2, n2);
            var c2 = Math.atan2(h2.y - i3.y, h2.x - i3.x), u2 = h2.distanceToBorder(e3, c2) + d2 - Math.sqrt(Math.pow(i3.x - h2.x, 2) + Math.pow(i3.y - h2.y, 2));
            if (Math.abs(u2) < 0.2) break;
            u2 < 0 ? false === r2 ? a2 = o2 : s2 = o2 : false === r2 ? s2 = o2 : a2 = o2, ++l2;
          } while (a2 <= s2 && l2 < 10);
          return LE(LE({}, i3), {}, { t: o2 });
        } }, { key: "_getDistanceToBezierEdge", value: function(t3, e3, i3, o2, n2, r2, s2) {
          var a2, h2, d2, l2, c2, u2 = 1e9, f2 = t3, p2 = e3;
          for (h2 = 1; h2 < 10; h2++) d2 = 0.1 * h2, l2 = Math.pow(1 - d2, 2) * t3 + 2 * d2 * (1 - d2) * s2.x + Math.pow(d2, 2) * i3, c2 = Math.pow(1 - d2, 2) * e3 + 2 * d2 * (1 - d2) * s2.y + Math.pow(d2, 2) * o2, h2 > 0 && (u2 = (a2 = this._getDistanceToLine(f2, p2, l2, c2, n2, r2)) < u2 ? a2 : u2), f2 = l2, p2 = c2;
          return u2;
        } }, { key: "_bezierCurve", value: function(t3, e3, i3, o2) {
          t3.beginPath(), t3.moveTo(this.fromPoint.x, this.fromPoint.y), null != i3 && null != i3.x ? null != o2 && null != o2.x ? t3.bezierCurveTo(i3.x, i3.y, o2.x, o2.y, this.toPoint.x, this.toPoint.y) : t3.quadraticCurveTo(i3.x, i3.y, this.toPoint.x, this.toPoint.y) : t3.lineTo(this.toPoint.x, this.toPoint.y), this.drawBackground(t3, e3), this.enableShadow(t3, e3), t3.stroke(), this.disableShadow(t3, e3);
        } }, { key: "getViaNode", value: function() {
          return this._getViaCoordinates();
        } }]), i2;
      }(RE);
      function VE(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !sx) return false;
          if (sx.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(sx(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var i2, o2 = px(t2);
          if (e2) {
            var n2 = px(this).constructor;
            i2 = sx(o2, arguments, n2);
          } else i2 = o2.apply(this, arguments);
          return ux(this, i2);
        };
      }
      var qE = function(t2) {
        cx(i2, t2);
        var e2 = VE(i2);
        function i2(t3, o2, n2) {
          var r2;
          return vh(this, i2), (r2 = e2.call(this, t3, o2, n2)).via = r2.via, r2._boundFunction = function() {
            r2.positionBezierNode();
          }, r2._body.emitter.on("_repositionBezierNodes", r2._boundFunction), r2;
        }
        return wu(i2, [{ key: "setOptions", value: function(t3) {
          vE(px(i2.prototype), "setOptions", this).call(this, t3);
          var e3 = false;
          this.options.physics !== t3.physics && (e3 = true), this.options = t3, this.id = this.options.id, this.from = this._body.nodes[this.options.from], this.to = this._body.nodes[this.options.to], this.setupSupportNode(), this.connect(), true === e3 && (this.via.setOptions({ physics: this.options.physics }), this.positionBezierNode());
        } }, { key: "connect", value: function() {
          this.from = this._body.nodes[this.options.from], this.to = this._body.nodes[this.options.to], void 0 === this.from || void 0 === this.to || false === this.options.physics || this.from.id === this.to.id ? this.via.setOptions({ physics: false }) : this.via.setOptions({ physics: true });
        } }, { key: "cleanup", value: function() {
          return this._body.emitter.off("_repositionBezierNodes", this._boundFunction), void 0 !== this.via && (delete this._body.nodes[this.via.id], this.via = void 0, true);
        } }, { key: "setupSupportNode", value: function() {
          if (void 0 === this.via) {
            var t3 = "edgeId:" + this.id, e3 = this._body.functions.createNode({ id: t3, shape: "circle", physics: true, hidden: true });
            this._body.nodes[t3] = e3, this.via = e3, this.via.parentEdgeId = this.id, this.positionBezierNode();
          }
        } }, { key: "positionBezierNode", value: function() {
          void 0 !== this.via && void 0 !== this.from && void 0 !== this.to ? (this.via.x = 0.5 * (this.from.x + this.to.x), this.via.y = 0.5 * (this.from.y + this.to.y)) : void 0 !== this.via && (this.via.x = 0, this.via.y = 0);
        } }, { key: "_line", value: function(t3, e3, i3) {
          this._bezierCurve(t3, e3, i3);
        } }, { key: "_getViaCoordinates", value: function() {
          return this.via;
        } }, { key: "getViaNode", value: function() {
          return this.via;
        } }, { key: "getPoint", value: function(t3) {
          var e3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.via;
          if (this.from === this.to) {
            var i3 = df(this._getCircleData(), 3), o2 = i3[0], n2 = i3[1], r2 = i3[2], s2 = 2 * Math.PI * (1 - t3);
            return { x: o2 + r2 * Math.sin(s2), y: n2 + r2 - r2 * (1 - Math.cos(s2)) };
          }
          return { x: Math.pow(1 - t3, 2) * this.fromPoint.x + 2 * t3 * (1 - t3) * e3.x + Math.pow(t3, 2) * this.toPoint.x, y: Math.pow(1 - t3, 2) * this.fromPoint.y + 2 * t3 * (1 - t3) * e3.y + Math.pow(t3, 2) * this.toPoint.y };
        } }, { key: "_findBorderPosition", value: function(t3, e3) {
          return this._findBorderPositionBezier(t3, e3, this.via);
        } }, { key: "_getDistanceToEdge", value: function(t3, e3, i3, o2, n2, r2) {
          return this._getDistanceToBezierEdge(t3, e3, i3, o2, n2, r2, this.via);
        } }]), i2;
      }(WE);
      function UE(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !sx) return false;
          if (sx.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(sx(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var i2, o2 = px(t2);
          if (e2) {
            var n2 = px(this).constructor;
            i2 = sx(o2, arguments, n2);
          } else i2 = o2.apply(this, arguments);
          return ux(this, i2);
        };
      }
      var YE = function(t2) {
        cx(i2, t2);
        var e2 = UE(i2);
        function i2(t3, o2, n2) {
          return vh(this, i2), e2.call(this, t3, o2, n2);
        }
        return wu(i2, [{ key: "_line", value: function(t3, e3, i3) {
          this._bezierCurve(t3, e3, i3);
        } }, { key: "getViaNode", value: function() {
          return this._getViaCoordinates();
        } }, { key: "_getViaCoordinates", value: function() {
          var t3, e3, i3 = this.options.smooth.roundness, o2 = this.options.smooth.type, n2 = Math.abs(this.from.x - this.to.x), r2 = Math.abs(this.from.y - this.to.y);
          if ("discrete" === o2 || "diagonalCross" === o2) {
            var s2, a2;
            s2 = a2 = n2 <= r2 ? i3 * r2 : i3 * n2, this.from.x > this.to.x && (s2 = -s2), this.from.y >= this.to.y && (a2 = -a2);
            var h2 = this.from.x + s2, d2 = this.from.y + a2;
            return "discrete" === o2 && (n2 <= r2 ? h2 = n2 < i3 * r2 ? this.from.x : h2 : d2 = r2 < i3 * n2 ? this.from.y : d2), { x: h2, y: d2 };
          }
          if ("straightCross" === o2) {
            var l2 = (1 - i3) * n2, c2 = (1 - i3) * r2;
            return n2 <= r2 ? (l2 = 0, this.from.y < this.to.y && (c2 = -c2)) : (this.from.x < this.to.x && (l2 = -l2), c2 = 0), { x: this.to.x + l2, y: this.to.y + c2 };
          }
          if ("horizontal" === o2) {
            var u2 = (1 - i3) * n2;
            return this.from.x < this.to.x && (u2 = -u2), { x: this.to.x + u2, y: this.from.y };
          }
          if ("vertical" === o2) {
            var f2 = (1 - i3) * r2;
            return this.from.y < this.to.y && (f2 = -f2), { x: this.from.x, y: this.to.y + f2 };
          }
          if ("curvedCW" === o2) {
            n2 = this.to.x - this.from.x, r2 = this.from.y - this.to.y;
            var p2 = Math.sqrt(n2 * n2 + r2 * r2), v2 = Math.PI, g2 = (Math.atan2(r2, n2) + (0.5 * i3 + 0.5) * v2) % (2 * v2);
            return { x: this.from.x + (0.5 * i3 + 0.5) * p2 * Math.sin(g2), y: this.from.y + (0.5 * i3 + 0.5) * p2 * Math.cos(g2) };
          }
          if ("curvedCCW" === o2) {
            n2 = this.to.x - this.from.x, r2 = this.from.y - this.to.y;
            var y2 = Math.sqrt(n2 * n2 + r2 * r2), m2 = Math.PI, b2 = (Math.atan2(r2, n2) + (0.5 * -i3 + 0.5) * m2) % (2 * m2);
            return { x: this.from.x + (0.5 * i3 + 0.5) * y2 * Math.sin(b2), y: this.from.y + (0.5 * i3 + 0.5) * y2 * Math.cos(b2) };
          }
          t3 = e3 = n2 <= r2 ? i3 * r2 : i3 * n2, this.from.x > this.to.x && (t3 = -t3), this.from.y >= this.to.y && (e3 = -e3);
          var w2 = this.from.x + t3, k2 = this.from.y + e3;
          return n2 <= r2 ? w2 = this.from.x <= this.to.x ? this.to.x < w2 ? this.to.x : w2 : this.to.x > w2 ? this.to.x : w2 : k2 = this.from.y >= this.to.y ? this.to.y > k2 ? this.to.y : k2 : this.to.y < k2 ? this.to.y : k2, { x: w2, y: k2 };
        } }, { key: "_findBorderPosition", value: function(t3, e3) {
          var i3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
          return this._findBorderPositionBezier(t3, e3, i3.via);
        } }, { key: "_getDistanceToEdge", value: function(t3, e3, i3, o2, n2, r2) {
          var s2 = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : this._getViaCoordinates();
          return this._getDistanceToBezierEdge(t3, e3, i3, o2, n2, r2, s2);
        } }, { key: "getPoint", value: function(t3) {
          var e3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this._getViaCoordinates(), i3 = t3;
          return { x: Math.pow(1 - i3, 2) * this.fromPoint.x + 2 * i3 * (1 - i3) * e3.x + Math.pow(i3, 2) * this.toPoint.x, y: Math.pow(1 - i3, 2) * this.fromPoint.y + 2 * i3 * (1 - i3) * e3.y + Math.pow(i3, 2) * this.toPoint.y };
        } }]), i2;
      }(WE);
      function XE(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !sx) return false;
          if (sx.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(sx(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var i2, o2 = px(t2);
          if (e2) {
            var n2 = px(this).constructor;
            i2 = sx(o2, arguments, n2);
          } else i2 = o2.apply(this, arguments);
          return ux(this, i2);
        };
      }
      var KE = function(t2) {
        cx(i2, t2);
        var e2 = XE(i2);
        function i2(t3, o2, n2) {
          return vh(this, i2), e2.call(this, t3, o2, n2);
        }
        return wu(i2, [{ key: "_getDistanceToBezierEdge2", value: function(t3, e3, i3, o2, n2, r2, s2, a2) {
          for (var h2 = 1e9, d2 = t3, l2 = e3, c2 = [0, 0, 0, 0], u2 = 1; u2 < 10; u2++) {
            var f2 = 0.1 * u2;
            c2[0] = Math.pow(1 - f2, 3), c2[1] = 3 * f2 * Math.pow(1 - f2, 2), c2[2] = 3 * Math.pow(f2, 2) * (1 - f2), c2[3] = Math.pow(f2, 3);
            var p2 = c2[0] * t3 + c2[1] * s2.x + c2[2] * a2.x + c2[3] * i3, v2 = c2[0] * e3 + c2[1] * s2.y + c2[2] * a2.y + c2[3] * o2;
            if (u2 > 0) {
              var g2 = this._getDistanceToLine(d2, l2, p2, v2, n2, r2);
              h2 = g2 < h2 ? g2 : h2;
            }
            d2 = p2, l2 = v2;
          }
          return h2;
        } }]), i2;
      }(WE);
      function GE(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !sx) return false;
          if (sx.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(sx(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var i2, o2 = px(t2);
          if (e2) {
            var n2 = px(this).constructor;
            i2 = sx(o2, arguments, n2);
          } else i2 = o2.apply(this, arguments);
          return ux(this, i2);
        };
      }
      var $E = function(t2) {
        cx(i2, t2);
        var e2 = GE(i2);
        function i2(t3, o2, n2) {
          return vh(this, i2), e2.call(this, t3, o2, n2);
        }
        return wu(i2, [{ key: "_line", value: function(t3, e3, i3) {
          var o2 = i3[0], n2 = i3[1];
          this._bezierCurve(t3, e3, o2, n2);
        } }, { key: "_getViaCoordinates", value: function() {
          var t3, e3, i3, o2, n2 = this.from.x - this.to.x, r2 = this.from.y - this.to.y, s2 = this.options.smooth.roundness;
          return (Math.abs(n2) > Math.abs(r2) || true === this.options.smooth.forceDirection || "horizontal" === this.options.smooth.forceDirection) && "vertical" !== this.options.smooth.forceDirection ? (e3 = this.from.y, o2 = this.to.y, t3 = this.from.x - s2 * n2, i3 = this.to.x + s2 * n2) : (e3 = this.from.y - s2 * r2, o2 = this.to.y + s2 * r2, t3 = this.from.x, i3 = this.to.x), [{ x: t3, y: e3 }, { x: i3, y: o2 }];
        } }, { key: "getViaNode", value: function() {
          return this._getViaCoordinates();
        } }, { key: "_findBorderPosition", value: function(t3, e3) {
          return this._findBorderPositionBezier(t3, e3);
        } }, { key: "_getDistanceToEdge", value: function(t3, e3, i3, o2, n2, r2) {
          var s2 = df(arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : this._getViaCoordinates(), 2), a2 = s2[0], h2 = s2[1];
          return this._getDistanceToBezierEdge2(t3, e3, i3, o2, n2, r2, a2, h2);
        } }, { key: "getPoint", value: function(t3) {
          var e3 = df(arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this._getViaCoordinates(), 2), i3 = e3[0], o2 = e3[1], n2 = t3, r2 = [Math.pow(1 - n2, 3), 3 * n2 * Math.pow(1 - n2, 2), 3 * Math.pow(n2, 2) * (1 - n2), Math.pow(n2, 3)];
          return { x: r2[0] * this.fromPoint.x + r2[1] * i3.x + r2[2] * o2.x + r2[3] * this.toPoint.x, y: r2[0] * this.fromPoint.y + r2[1] * i3.y + r2[2] * o2.y + r2[3] * this.toPoint.y };
        } }]), i2;
      }(KE);
      function ZE(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !sx) return false;
          if (sx.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(sx(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var i2, o2 = px(t2);
          if (e2) {
            var n2 = px(this).constructor;
            i2 = sx(o2, arguments, n2);
          } else i2 = o2.apply(this, arguments);
          return ux(this, i2);
        };
      }
      var QE = function(t2) {
        cx(i2, t2);
        var e2 = ZE(i2);
        function i2(t3, o2, n2) {
          return vh(this, i2), e2.call(this, t3, o2, n2);
        }
        return wu(i2, [{ key: "_line", value: function(t3, e3) {
          t3.beginPath(), t3.moveTo(this.fromPoint.x, this.fromPoint.y), t3.lineTo(this.toPoint.x, this.toPoint.y), this.enableShadow(t3, e3), t3.stroke(), this.disableShadow(t3, e3);
        } }, { key: "getViaNode", value: function() {
        } }, { key: "getPoint", value: function(t3) {
          return { x: (1 - t3) * this.fromPoint.x + t3 * this.toPoint.x, y: (1 - t3) * this.fromPoint.y + t3 * this.toPoint.y };
        } }, { key: "_findBorderPosition", value: function(t3, e3) {
          var i3 = this.to, o2 = this.from;
          t3.id === this.from.id && (i3 = this.from, o2 = this.to);
          var n2 = Math.atan2(i3.y - o2.y, i3.x - o2.x), r2 = i3.x - o2.x, s2 = i3.y - o2.y, a2 = Math.sqrt(r2 * r2 + s2 * s2), h2 = (a2 - t3.distanceToBorder(e3, n2)) / a2;
          return { x: (1 - h2) * o2.x + h2 * i3.x, y: (1 - h2) * o2.y + h2 * i3.y, t: 0 };
        } }, { key: "_getDistanceToEdge", value: function(t3, e3, i3, o2, n2, r2) {
          return this._getDistanceToLine(t3, e3, i3, o2, n2, r2);
        } }]), i2;
      }(RE), JE = function() {
        function t2(e2, i2, o2, n2, r2) {
          if (vh(this, t2), void 0 === i2) throw new Error("No body provided");
          this.options = Zm(n2), this.globalOptions = n2, this.defaultOptions = r2, this.body = i2, this.imagelist = o2, this.id = void 0, this.fromId = void 0, this.toId = void 0, this.selected = false, this.hover = false, this.labelDirty = true, this.baseWidth = this.options.width, this.baseFontSize = this.options.font.size, this.from = void 0, this.to = void 0, this.edgeType = void 0, this.connected = false, this.labelModule = new W_(this.body, this.options, true), this.setOptions(e2);
        }
        return wu(t2, [{ key: "setOptions", value: function(e2) {
          if (e2) {
            var i2 = void 0 !== e2.physics && this.options.physics !== e2.physics || void 0 !== e2.hidden && (this.options.hidden || false) !== (e2.hidden || false) || void 0 !== e2.from && this.options.from !== e2.from || void 0 !== e2.to && this.options.to !== e2.to;
            t2.parseOptions(this.options, e2, true, this.globalOptions), void 0 !== e2.id && (this.id = e2.id), void 0 !== e2.from && (this.fromId = e2.from), void 0 !== e2.to && (this.toId = e2.to), void 0 !== e2.title && (this.title = e2.title), void 0 !== e2.value && (e2.value = y_(e2.value));
            var o2 = [e2, this.options, this.defaultOptions];
            return this.chooser = E_("edge", o2), this.updateLabelModule(e2), i2 = this.updateEdgeType() || i2, this._setInteractionWidths(), this.connect(), i2;
          }
        } }, { key: "getFormattingValues", value: function() {
          var t3 = true === this.options.arrows.to || true === this.options.arrows.to.enabled, e2 = true === this.options.arrows.from || true === this.options.arrows.from.enabled, i2 = true === this.options.arrows.middle || true === this.options.arrows.middle.enabled, o2 = this.options.color.inherit, n2 = { toArrow: t3, toArrowScale: this.options.arrows.to.scaleFactor, toArrowType: this.options.arrows.to.type, toArrowSrc: this.options.arrows.to.src, toArrowImageWidth: this.options.arrows.to.imageWidth, toArrowImageHeight: this.options.arrows.to.imageHeight, middleArrow: i2, middleArrowScale: this.options.arrows.middle.scaleFactor, middleArrowType: this.options.arrows.middle.type, middleArrowSrc: this.options.arrows.middle.src, middleArrowImageWidth: this.options.arrows.middle.imageWidth, middleArrowImageHeight: this.options.arrows.middle.imageHeight, fromArrow: e2, fromArrowScale: this.options.arrows.from.scaleFactor, fromArrowType: this.options.arrows.from.type, fromArrowSrc: this.options.arrows.from.src, fromArrowImageWidth: this.options.arrows.from.imageWidth, fromArrowImageHeight: this.options.arrows.from.imageHeight, arrowStrikethrough: this.options.arrowStrikethrough, color: o2 ? void 0 : this.options.color.color, inheritsColor: o2, opacity: this.options.color.opacity, hidden: this.options.hidden, length: this.options.length, shadow: this.options.shadow.enabled, shadowColor: this.options.shadow.color, shadowSize: this.options.shadow.size, shadowX: this.options.shadow.x, shadowY: this.options.shadow.y, dashes: this.options.dashes, width: this.options.width, background: this.options.background.enabled, backgroundColor: this.options.background.color, backgroundSize: this.options.background.size, backgroundDashes: this.options.background.dashes };
          if (this.selected || this.hover) if (true === this.chooser) {
            if (this.selected) {
              var r2 = this.options.selectionWidth;
              "function" == typeof r2 ? n2.width = r2(n2.width) : "number" == typeof r2 && (n2.width += r2), n2.width = Math.max(n2.width, 0.3 / this.body.view.scale), n2.color = this.options.color.highlight, n2.shadow = this.options.shadow.enabled;
            } else if (this.hover) {
              var s2 = this.options.hoverWidth;
              "function" == typeof s2 ? n2.width = s2(n2.width) : "number" == typeof s2 && (n2.width += s2), n2.width = Math.max(n2.width, 0.3 / this.body.view.scale), n2.color = this.options.color.hover, n2.shadow = this.options.shadow.enabled;
            }
          } else "function" == typeof this.chooser && (this.chooser(n2, this.options.id, this.selected, this.hover), void 0 !== n2.color && (n2.inheritsColor = false), false === n2.shadow && (n2.shadowColor === this.options.shadow.color && n2.shadowSize === this.options.shadow.size && n2.shadowX === this.options.shadow.x && n2.shadowY === this.options.shadow.y || (n2.shadow = true)));
          else n2.shadow = this.options.shadow.enabled, n2.width = Math.max(n2.width, 0.3 / this.body.view.scale);
          return n2;
        } }, { key: "updateLabelModule", value: function(t3) {
          var e2 = [t3, this.options, this.globalOptions, this.defaultOptions];
          this.labelModule.update(this.options, e2), void 0 !== this.labelModule.baseSize && (this.baseFontSize = this.labelModule.baseSize);
        } }, { key: "updateEdgeType", value: function() {
          var t3 = this.options.smooth, e2 = false, i2 = true;
          return void 0 !== this.edgeType && ((this.edgeType instanceof qE && true === t3.enabled && "dynamic" === t3.type || this.edgeType instanceof $E && true === t3.enabled && "cubicBezier" === t3.type || this.edgeType instanceof YE && true === t3.enabled && "dynamic" !== t3.type && "cubicBezier" !== t3.type || this.edgeType instanceof QE && false === t3.type.enabled) && (i2 = false), true === i2 && (e2 = this.cleanup())), true === i2 ? true === t3.enabled ? "dynamic" === t3.type ? (e2 = true, this.edgeType = new qE(this.options, this.body, this.labelModule)) : "cubicBezier" === t3.type ? this.edgeType = new $E(this.options, this.body, this.labelModule) : this.edgeType = new YE(this.options, this.body, this.labelModule) : this.edgeType = new QE(this.options, this.body, this.labelModule) : this.edgeType.setOptions(this.options), e2;
        } }, { key: "connect", value: function() {
          this.disconnect(), this.from = this.body.nodes[this.fromId] || void 0, this.to = this.body.nodes[this.toId] || void 0, this.connected = void 0 !== this.from && void 0 !== this.to, true === this.connected ? (this.from.attachEdge(this), this.to.attachEdge(this)) : (this.from && this.from.detachEdge(this), this.to && this.to.detachEdge(this)), this.edgeType.connect();
        } }, { key: "disconnect", value: function() {
          this.from && (this.from.detachEdge(this), this.from = void 0), this.to && (this.to.detachEdge(this), this.to = void 0), this.connected = false;
        } }, { key: "getTitle", value: function() {
          return this.title;
        } }, { key: "isSelected", value: function() {
          return this.selected;
        } }, { key: "getValue", value: function() {
          return this.options.value;
        } }, { key: "setValueRange", value: function(t3, e2, i2) {
          if (void 0 !== this.options.value) {
            var o2 = this.options.scaling.customScalingFunction(t3, e2, i2, this.options.value), n2 = this.options.scaling.max - this.options.scaling.min;
            if (true === this.options.scaling.label.enabled) {
              var r2 = this.options.scaling.label.max - this.options.scaling.label.min;
              this.options.font.size = this.options.scaling.label.min + o2 * r2;
            }
            this.options.width = this.options.scaling.min + o2 * n2;
          } else this.options.width = this.baseWidth, this.options.font.size = this.baseFontSize;
          this._setInteractionWidths(), this.updateLabelModule();
        } }, { key: "_setInteractionWidths", value: function() {
          "function" == typeof this.options.hoverWidth ? this.edgeType.hoverWidth = this.options.hoverWidth(this.options.width) : this.edgeType.hoverWidth = this.options.hoverWidth + this.options.width, "function" == typeof this.options.selectionWidth ? this.edgeType.selectionWidth = this.options.selectionWidth(this.options.width) : this.edgeType.selectionWidth = this.options.selectionWidth + this.options.width;
        } }, { key: "draw", value: function(t3) {
          var e2 = this.getFormattingValues();
          if (!e2.hidden) {
            var i2 = this.edgeType.getViaNode();
            this.edgeType.drawLine(t3, e2, this.selected, this.hover, i2), this.drawLabel(t3, i2);
          }
        } }, { key: "drawArrows", value: function(t3) {
          var e2 = this.getFormattingValues();
          if (!e2.hidden) {
            var i2 = this.edgeType.getViaNode(), o2 = {};
            this.edgeType.fromPoint = this.edgeType.from, this.edgeType.toPoint = this.edgeType.to, e2.fromArrow && (o2.from = this.edgeType.getArrowData(t3, "from", i2, this.selected, this.hover, e2), false === e2.arrowStrikethrough && (this.edgeType.fromPoint = o2.from.core), e2.fromArrowSrc && (o2.from.image = this.imagelist.load(e2.fromArrowSrc)), e2.fromArrowImageWidth && (o2.from.imageWidth = e2.fromArrowImageWidth), e2.fromArrowImageHeight && (o2.from.imageHeight = e2.fromArrowImageHeight)), e2.toArrow && (o2.to = this.edgeType.getArrowData(t3, "to", i2, this.selected, this.hover, e2), false === e2.arrowStrikethrough && (this.edgeType.toPoint = o2.to.core), e2.toArrowSrc && (o2.to.image = this.imagelist.load(e2.toArrowSrc)), e2.toArrowImageWidth && (o2.to.imageWidth = e2.toArrowImageWidth), e2.toArrowImageHeight && (o2.to.imageHeight = e2.toArrowImageHeight)), e2.middleArrow && (o2.middle = this.edgeType.getArrowData(t3, "middle", i2, this.selected, this.hover, e2), e2.middleArrowSrc && (o2.middle.image = this.imagelist.load(e2.middleArrowSrc)), e2.middleArrowImageWidth && (o2.middle.imageWidth = e2.middleArrowImageWidth), e2.middleArrowImageHeight && (o2.middle.imageHeight = e2.middleArrowImageHeight)), e2.fromArrow && this.edgeType.drawArrowHead(t3, e2, this.selected, this.hover, o2.from), e2.middleArrow && this.edgeType.drawArrowHead(t3, e2, this.selected, this.hover, o2.middle), e2.toArrow && this.edgeType.drawArrowHead(t3, e2, this.selected, this.hover, o2.to);
          }
        } }, { key: "drawLabel", value: function(t3, e2) {
          if (void 0 !== this.options.label) {
            var i2, o2 = this.from, n2 = this.to;
            if (this.labelModule.differentState(this.selected, this.hover) && this.labelModule.getTextSize(t3, this.selected, this.hover), o2.id != n2.id) {
              this.labelModule.pointToSelf = false, i2 = this.edgeType.getPoint(0.5, e2), t3.save();
              var r2 = this._getRotation(t3);
              0 != r2.angle && (t3.translate(r2.x, r2.y), t3.rotate(r2.angle)), this.labelModule.draw(t3, i2.x, i2.y, this.selected, this.hover), t3.restore();
            } else {
              this.labelModule.pointToSelf = true;
              var s2 = S_(t3, this.options.selfReference.angle, this.options.selfReference.size, o2);
              i2 = this._pointOnCircle(s2.x, s2.y, this.options.selfReference.size, this.options.selfReference.angle), this.labelModule.draw(t3, i2.x, i2.y, this.selected, this.hover);
            }
          }
        } }, { key: "getItemsOnPoint", value: function(t3) {
          var e2 = [];
          if (this.labelModule.visible()) {
            var i2 = this._getRotation();
            O_(this.labelModule.getSize(), t3, i2) && e2.push({ edgeId: this.id, labelId: 0 });
          }
          var o2 = { left: t3.x, top: t3.y };
          return this.isOverlappingWith(o2) && e2.push({ edgeId: this.id }), e2;
        } }, { key: "isOverlappingWith", value: function(t3) {
          if (this.connected) {
            var e2 = this.from.x, i2 = this.from.y, o2 = this.to.x, n2 = this.to.y, r2 = t3.left, s2 = t3.top;
            return this.edgeType.getDistanceToEdge(e2, i2, o2, n2, r2, s2) < 10;
          }
          return false;
        } }, { key: "_getRotation", value: function(t3) {
          var e2 = this.edgeType.getViaNode(), i2 = this.edgeType.getPoint(0.5, e2);
          void 0 !== t3 && this.labelModule.calculateLabelSize(t3, this.selected, this.hover, i2.x, i2.y);
          var o2 = { x: i2.x, y: this.labelModule.size.yLine, angle: 0 };
          if (!this.labelModule.visible()) return o2;
          if ("horizontal" === this.options.font.align) return o2;
          var n2 = this.from.y - this.to.y, r2 = this.from.x - this.to.x, s2 = Math.atan2(n2, r2);
          return (s2 < -1 && r2 < 0 || s2 > 0 && r2 < 0) && (s2 += Math.PI), o2.angle = s2, o2;
        } }, { key: "_pointOnCircle", value: function(t3, e2, i2, o2) {
          return { x: t3 + i2 * Math.cos(o2), y: e2 - i2 * Math.sin(o2) };
        } }, { key: "select", value: function() {
          this.selected = true;
        } }, { key: "unselect", value: function() {
          this.selected = false;
        } }, { key: "cleanup", value: function() {
          return this.edgeType.cleanup();
        } }, { key: "remove", value: function() {
          this.cleanup(), this.disconnect(), delete this.body.edges[this.id];
        } }, { key: "endPointsValid", value: function() {
          return void 0 !== this.body.nodes[this.fromId] && void 0 !== this.body.nodes[this.toId];
        } }], [{ key: "parseOptions", value: function(t3, e2) {
          var i2 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], o2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {}, n2 = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
          if (Nm(["endPointOffset", "arrowStrikethrough", "id", "from", "hidden", "hoverWidth", "labelHighlightBold", "length", "line", "opacity", "physics", "scaling", "selectionWidth", "selfReferenceSize", "selfReference", "to", "title", "value", "width", "font", "chosen", "widthConstraint"], t3, e2, i2), void 0 !== e2.endPointOffset && void 0 !== e2.endPointOffset.from && (Tk(e2.endPointOffset.from) ? t3.endPointOffset.from = e2.endPointOffset.from : (t3.endPointOffset.from = void 0 !== o2.endPointOffset.from ? o2.endPointOffset.from : 0, console.error("endPointOffset.from is not a valid number"))), void 0 !== e2.endPointOffset && void 0 !== e2.endPointOffset.to && (Tk(e2.endPointOffset.to) ? t3.endPointOffset.to = e2.endPointOffset.to : (t3.endPointOffset.to = void 0 !== o2.endPointOffset.to ? o2.endPointOffset.to : 0, console.error("endPointOffset.to is not a valid number"))), C_(e2.label) ? t3.label = e2.label : C_(t3.label) || (t3.label = void 0), Qm(t3, e2, "smooth", o2), Qm(t3, e2, "shadow", o2), Qm(t3, e2, "background", o2), void 0 !== e2.dashes && null !== e2.dashes ? t3.dashes = e2.dashes : true === i2 && null === e2.dashes && (t3.dashes = Yv(o2.dashes)), void 0 !== e2.scaling && null !== e2.scaling ? (void 0 !== e2.scaling.min && (t3.scaling.min = e2.scaling.min), void 0 !== e2.scaling.max && (t3.scaling.max = e2.scaling.max), Qm(t3.scaling, e2.scaling, "label", o2.scaling)) : true === i2 && null === e2.scaling && (t3.scaling = Yv(o2.scaling)), void 0 !== e2.arrows && null !== e2.arrows) if ("string" == typeof e2.arrows) {
            var r2 = e2.arrows.toLowerCase();
            t3.arrows.to.enabled = -1 != Vv(r2).call(r2, "to"), t3.arrows.middle.enabled = -1 != Vv(r2).call(r2, "middle"), t3.arrows.from.enabled = -1 != Vv(r2).call(r2, "from");
          } else {
            if ("object" !== gu(e2.arrows)) throw new Error("The arrow newOptions can only be an object or a string. Refer to the documentation. You used:" + $v(e2.arrows));
            Qm(t3.arrows, e2.arrows, "to", o2.arrows), Qm(t3.arrows, e2.arrows, "middle", o2.arrows), Qm(t3.arrows, e2.arrows, "from", o2.arrows);
          }
          else true === i2 && null === e2.arrows && (t3.arrows = Yv(o2.arrows));
          if (void 0 !== e2.color && null !== e2.color) {
            var s2 = Im(e2.color) ? { color: e2.color, highlight: e2.color, hover: e2.color, inherit: false, opacity: 1 } : e2.color, a2 = t3.color;
            if (n2) Rm(a2, o2.color, false, i2);
            else for (var h2 in a2) Object.prototype.hasOwnProperty.call(a2, h2) && delete a2[h2];
            if (Im(a2)) a2.color = a2, a2.highlight = a2, a2.hover = a2, a2.inherit = false, void 0 === s2.opacity && (a2.opacity = 1);
            else {
              var d2 = false;
              void 0 !== s2.color && (a2.color = s2.color, d2 = true), void 0 !== s2.highlight && (a2.highlight = s2.highlight, d2 = true), void 0 !== s2.hover && (a2.hover = s2.hover, d2 = true), void 0 !== s2.inherit && (a2.inherit = s2.inherit), void 0 !== s2.opacity && (a2.opacity = Math.min(1, Math.max(0, s2.opacity))), true === d2 ? a2.inherit = false : void 0 === a2.inherit && (a2.inherit = "from");
            }
          } else true === i2 && null === e2.color && (t3.color = Zm(o2.color));
          true === i2 && null === e2.font && (t3.font = Zm(o2.font)), Object.prototype.hasOwnProperty.call(e2, "selfReferenceSize") && (console.warn("The selfReferenceSize property has been deprecated. Please use selfReference property instead. The selfReference can be set like thise selfReference:{size:30, angle:Math.PI / 4}"), t3.selfReference.size = e2.selfReferenceSize);
        } }]), t2;
      }(), tO = function() {
        function t2(e2, i2, o2) {
          var n2, r2 = this;
          vh(this, t2), this.body = e2, this.images = i2, this.groups = o2, this.body.functions.createEdge = Wo(n2 = this.create).call(n2, this), this.edgesListeners = { add: function(t3, e3) {
            r2.add(e3.items);
          }, update: function(t3, e3) {
            r2.update(e3.items);
          }, remove: function(t3, e3) {
            r2.remove(e3.items);
          } }, this.options = {}, this.defaultOptions = { arrows: { to: { enabled: false, scaleFactor: 1, type: "arrow" }, middle: { enabled: false, scaleFactor: 1, type: "arrow" }, from: { enabled: false, scaleFactor: 1, type: "arrow" } }, endPointOffset: { from: 0, to: 0 }, arrowStrikethrough: true, color: { color: "#848484", highlight: "#848484", hover: "#848484", inherit: "from", opacity: 1 }, dashes: false, font: { color: "#343434", size: 14, face: "arial", background: "none", strokeWidth: 2, strokeColor: "#ffffff", align: "horizontal", multi: false, vadjust: 0, bold: { mod: "bold" }, boldital: { mod: "bold italic" }, ital: { mod: "italic" }, mono: { mod: "", size: 15, face: "courier new", vadjust: 2 } }, hidden: false, hoverWidth: 1.5, label: void 0, labelHighlightBold: true, length: void 0, physics: true, scaling: { min: 1, max: 15, label: { enabled: true, min: 14, max: 30, maxVisible: 30, drawThreshold: 5 }, customScalingFunction: function(t3, e3, i3, o3) {
            if (e3 === t3) return 0.5;
            var n3 = 1 / (e3 - t3);
            return Math.max(0, (o3 - t3) * n3);
          } }, selectionWidth: 1.5, selfReference: { size: 20, angle: Math.PI / 4, renderBehindTheNode: true }, shadow: { enabled: false, color: "rgba(0,0,0,0.5)", size: 10, x: 5, y: 5 }, background: { enabled: false, color: "rgba(111,111,111,1)", size: 10, dashes: false }, smooth: { enabled: true, type: "dynamic", forceDirection: "none", roundness: 0.5 }, title: void 0, width: 1, value: void 0 }, Rm(this.options, this.defaultOptions), this.bindEventListeners();
        }
        return wu(t2, [{ key: "bindEventListeners", value: function() {
          var t3, e2, i2 = this;
          this.body.emitter.on("_forceDisableDynamicCurves", function(t4) {
            var e3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
            "dynamic" === t4 && (t4 = "continuous");
            var o2 = false;
            for (var n2 in i2.body.edges) if (Object.prototype.hasOwnProperty.call(i2.body.edges, n2)) {
              var r2 = i2.body.edges[n2], s2 = i2.body.data.edges.get(n2);
              if (null != s2) {
                var a2 = s2.smooth;
                void 0 !== a2 && true === a2.enabled && "dynamic" === a2.type && (void 0 === t4 ? r2.setOptions({ smooth: false }) : r2.setOptions({ smooth: { type: t4 } }), o2 = true);
              }
            }
            true === e3 && true === o2 && i2.body.emitter.emit("_dataChanged");
          }), this.body.emitter.on("_dataUpdated", function() {
            i2.reconnectEdges();
          }), this.body.emitter.on("refreshEdges", Wo(t3 = this.refresh).call(t3, this)), this.body.emitter.on("refresh", Wo(e2 = this.refresh).call(e2, this)), this.body.emitter.on("destroy", function() {
            Hm(i2.edgesListeners, function(t4, e3) {
              i2.body.data.edges && i2.body.data.edges.off(e3, t4);
            }), delete i2.body.functions.createEdge, delete i2.edgesListeners.add, delete i2.edgesListeners.update, delete i2.edgesListeners.remove, delete i2.edgesListeners;
          });
        } }, { key: "setOptions", value: function(t3) {
          if (void 0 !== t3) {
            JE.parseOptions(this.options, t3, true, this.defaultOptions, true);
            var e2 = false;
            if (void 0 !== t3.smooth) for (var i2 in this.body.edges) Object.prototype.hasOwnProperty.call(this.body.edges, i2) && (e2 = this.body.edges[i2].updateEdgeType() || e2);
            if (void 0 !== t3.font) for (var o2 in this.body.edges) Object.prototype.hasOwnProperty.call(this.body.edges, o2) && this.body.edges[o2].updateLabelModule();
            void 0 === t3.hidden && void 0 === t3.physics && true !== e2 || this.body.emitter.emit("_dataChanged");
          }
        } }, { key: "setData", value: function(t3) {
          var i2 = this, o2 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], n2 = this.body.data.edges;
          if (e.isDataViewLike("id", t3)) this.body.data.edges = t3;
          else if (Of(t3)) this.body.data.edges = new e.DataSet(), this.body.data.edges.add(t3);
          else {
            if (t3) throw new TypeError("Array or DataSet expected");
            this.body.data.edges = new e.DataSet();
          }
          if (n2 && Hm(this.edgesListeners, function(t4, e2) {
            n2.off(e2, t4);
          }), this.body.edges = {}, this.body.data.edges) {
            Hm(this.edgesListeners, function(t4, e2) {
              i2.body.data.edges.on(e2, t4);
            });
            var r2 = this.body.data.edges.getIds();
            this.add(r2, true);
          }
          this.body.emitter.emit("_adjustEdgesForHierarchicalLayout"), false === o2 && this.body.emitter.emit("_dataChanged");
        } }, { key: "add", value: function(t3) {
          for (var e2 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], i2 = this.body.edges, o2 = this.body.data.edges, n2 = 0; n2 < t3.length; n2++) {
            var r2 = t3[n2], s2 = i2[r2];
            s2 && s2.disconnect();
            var a2 = o2.get(r2, { showInternalIds: true });
            i2[r2] = this.create(a2);
          }
          this.body.emitter.emit("_adjustEdgesForHierarchicalLayout"), false === e2 && this.body.emitter.emit("_dataChanged");
        } }, { key: "update", value: function(t3) {
          for (var e2 = this.body.edges, i2 = this.body.data.edges, o2 = false, n2 = 0; n2 < t3.length; n2++) {
            var r2 = t3[n2], s2 = i2.get(r2), a2 = e2[r2];
            void 0 !== a2 ? (a2.disconnect(), o2 = a2.setOptions(s2) || o2, a2.connect()) : (this.body.edges[r2] = this.create(s2), o2 = true);
          }
          true === o2 ? (this.body.emitter.emit("_adjustEdgesForHierarchicalLayout"), this.body.emitter.emit("_dataChanged")) : this.body.emitter.emit("_dataUpdated");
        } }, { key: "remove", value: function(t3) {
          var e2 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
          if (0 !== t3.length) {
            var i2 = this.body.edges;
            Hm(t3, function(t4) {
              var e3 = i2[t4];
              void 0 !== e3 && e3.remove();
            }), e2 && this.body.emitter.emit("_dataChanged");
          }
        } }, { key: "refresh", value: function() {
          var t3 = this;
          Hm(this.body.edges, function(e2, i2) {
            var o2 = t3.body.data.edges.get(i2);
            void 0 !== o2 && e2.setOptions(o2);
          });
        } }, { key: "create", value: function(t3) {
          return new JE(t3, this.body, this.images, this.options, this.defaultOptions);
        } }, { key: "reconnectEdges", value: function() {
          var t3, e2 = this.body.nodes, i2 = this.body.edges;
          for (t3 in e2) Object.prototype.hasOwnProperty.call(e2, t3) && (e2[t3].edges = []);
          for (t3 in i2) if (Object.prototype.hasOwnProperty.call(i2, t3)) {
            var o2 = i2[t3];
            o2.from = null, o2.to = null, o2.connect();
          }
        } }, { key: "getConnectedNodes", value: function(t3) {
          var e2 = [];
          if (void 0 !== this.body.edges[t3]) {
            var i2 = this.body.edges[t3];
            void 0 !== i2.fromId && e2.push(i2.fromId), void 0 !== i2.toId && e2.push(i2.toId);
          }
          return e2;
        } }, { key: "_updateState", value: function() {
          this._addMissingEdges(), this._removeInvalidEdges();
        } }, { key: "_removeInvalidEdges", value: function() {
          var t3 = this, e2 = [];
          Hm(this.body.edges, function(i2, o2) {
            var n2 = t3.body.nodes[i2.toId], r2 = t3.body.nodes[i2.fromId];
            void 0 !== n2 && true === n2.isCluster || void 0 !== r2 && true === r2.isCluster || void 0 !== n2 && void 0 !== r2 || e2.push(o2);
          }), this.remove(e2, false);
        } }, { key: "_addMissingEdges", value: function() {
          var t3 = this.body.data.edges;
          if (null != t3) {
            var e2 = this.body.edges, i2 = [];
            Qf(t3).call(t3, function(t4, o2) {
              void 0 === e2[o2] && i2.push(o2);
            }), this.add(i2, true);
          }
        } }]), t2;
      }(), eO = function() {
        function t2(e2, i2, o2) {
          vh(this, t2), this.body = e2, this.physicsBody = i2, this.barnesHutTree, this.setOptions(o2), this._rng = Em("BARNES HUT SOLVER");
        }
        return wu(t2, [{ key: "setOptions", value: function(t3) {
          this.options = t3, this.thetaInversed = 1 / this.options.theta, this.overlapAvoidanceFactor = 1 - Math.max(0, Math.min(1, this.options.avoidOverlap));
        } }, { key: "solve", value: function() {
          if (0 !== this.options.gravitationalConstant && this.physicsBody.physicsNodeIndices.length > 0) {
            var t3, e2 = this.body.nodes, i2 = this.physicsBody.physicsNodeIndices, o2 = i2.length, n2 = this._formBarnesHutTree(e2, i2);
            this.barnesHutTree = n2;
            for (var r2 = 0; r2 < o2; r2++) (t3 = e2[i2[r2]]).options.mass > 0 && this._getForceContributions(n2.root, t3);
          }
        } }, { key: "_getForceContributions", value: function(t3, e2) {
          this._getForceContribution(t3.children.NW, e2), this._getForceContribution(t3.children.NE, e2), this._getForceContribution(t3.children.SW, e2), this._getForceContribution(t3.children.SE, e2);
        } }, { key: "_getForceContribution", value: function(t3, e2) {
          if (t3.childrenCount > 0) {
            var i2 = t3.centerOfMass.x - e2.x, o2 = t3.centerOfMass.y - e2.y, n2 = Math.sqrt(i2 * i2 + o2 * o2);
            n2 * t3.calcSize > this.thetaInversed ? this._calculateForces(n2, i2, o2, e2, t3) : 4 === t3.childrenCount ? this._getForceContributions(t3, e2) : t3.children.data.id != e2.id && this._calculateForces(n2, i2, o2, e2, t3);
          }
        } }, { key: "_calculateForces", value: function(t3, e2, i2, o2, n2) {
          0 === t3 && (e2 = t3 = 0.1), this.overlapAvoidanceFactor < 1 && o2.shape.radius && (t3 = Math.max(0.1 + this.overlapAvoidanceFactor * o2.shape.radius, t3 - o2.shape.radius));
          var r2 = this.options.gravitationalConstant * n2.mass * o2.options.mass / Math.pow(t3, 3), s2 = e2 * r2, a2 = i2 * r2;
          this.physicsBody.forces[o2.id].x += s2, this.physicsBody.forces[o2.id].y += a2;
        } }, { key: "_formBarnesHutTree", value: function(t3, e2) {
          for (var i2, o2 = e2.length, n2 = t3[e2[0]].x, r2 = t3[e2[0]].y, s2 = t3[e2[0]].x, a2 = t3[e2[0]].y, h2 = 1; h2 < o2; h2++) {
            var d2 = t3[e2[h2]], l2 = d2.x, c2 = d2.y;
            d2.options.mass > 0 && (l2 < n2 && (n2 = l2), l2 > s2 && (s2 = l2), c2 < r2 && (r2 = c2), c2 > a2 && (a2 = c2));
          }
          var u2 = Math.abs(s2 - n2) - Math.abs(a2 - r2);
          u2 > 0 ? (r2 -= 0.5 * u2, a2 += 0.5 * u2) : (n2 += 0.5 * u2, s2 -= 0.5 * u2);
          var f2 = Math.max(1e-5, Math.abs(s2 - n2)), p2 = 0.5 * f2, v2 = 0.5 * (n2 + s2), g2 = 0.5 * (r2 + a2), y2 = { root: { centerOfMass: { x: 0, y: 0 }, mass: 0, range: { minX: v2 - p2, maxX: v2 + p2, minY: g2 - p2, maxY: g2 + p2 }, size: f2, calcSize: 1 / f2, children: { data: null }, maxWidth: 0, level: 0, childrenCount: 4 } };
          this._splitBranch(y2.root);
          for (var m2 = 0; m2 < o2; m2++) (i2 = t3[e2[m2]]).options.mass > 0 && this._placeInTree(y2.root, i2);
          return y2;
        } }, { key: "_updateBranchMass", value: function(t3, e2) {
          var i2 = t3.centerOfMass, o2 = t3.mass + e2.options.mass, n2 = 1 / o2;
          i2.x = i2.x * t3.mass + e2.x * e2.options.mass, i2.x *= n2, i2.y = i2.y * t3.mass + e2.y * e2.options.mass, i2.y *= n2, t3.mass = o2;
          var r2 = Math.max(Math.max(e2.height, e2.radius), e2.width);
          t3.maxWidth = t3.maxWidth < r2 ? r2 : t3.maxWidth;
        } }, { key: "_placeInTree", value: function(t3, e2, i2) {
          1 == i2 && void 0 !== i2 || this._updateBranchMass(t3, e2);
          var o2, n2 = t3.children.NW.range;
          o2 = n2.maxX > e2.x ? n2.maxY > e2.y ? "NW" : "SW" : n2.maxY > e2.y ? "NE" : "SE", this._placeInRegion(t3, e2, o2);
        } }, { key: "_placeInRegion", value: function(t3, e2, i2) {
          var o2 = t3.children[i2];
          switch (o2.childrenCount) {
            case 0:
              o2.children.data = e2, o2.childrenCount = 1, this._updateBranchMass(o2, e2);
              break;
            case 1:
              o2.children.data.x === e2.x && o2.children.data.y === e2.y ? (e2.x += this._rng(), e2.y += this._rng()) : (this._splitBranch(o2), this._placeInTree(o2, e2));
              break;
            case 4:
              this._placeInTree(o2, e2);
          }
        } }, { key: "_splitBranch", value: function(t3) {
          var e2 = null;
          1 === t3.childrenCount && (e2 = t3.children.data, t3.mass = 0, t3.centerOfMass.x = 0, t3.centerOfMass.y = 0), t3.childrenCount = 4, t3.children.data = null, this._insertRegion(t3, "NW"), this._insertRegion(t3, "NE"), this._insertRegion(t3, "SW"), this._insertRegion(t3, "SE"), null != e2 && this._placeInTree(t3, e2);
        } }, { key: "_insertRegion", value: function(t3, e2) {
          var i2, o2, n2, r2, s2 = 0.5 * t3.size;
          switch (e2) {
            case "NW":
              i2 = t3.range.minX, o2 = t3.range.minX + s2, n2 = t3.range.minY, r2 = t3.range.minY + s2;
              break;
            case "NE":
              i2 = t3.range.minX + s2, o2 = t3.range.maxX, n2 = t3.range.minY, r2 = t3.range.minY + s2;
              break;
            case "SW":
              i2 = t3.range.minX, o2 = t3.range.minX + s2, n2 = t3.range.minY + s2, r2 = t3.range.maxY;
              break;
            case "SE":
              i2 = t3.range.minX + s2, o2 = t3.range.maxX, n2 = t3.range.minY + s2, r2 = t3.range.maxY;
          }
          t3.children[e2] = { centerOfMass: { x: 0, y: 0 }, mass: 0, range: { minX: i2, maxX: o2, minY: n2, maxY: r2 }, size: 0.5 * t3.size, calcSize: 2 * t3.calcSize, children: { data: null }, maxWidth: 0, level: t3.level + 1, childrenCount: 0 };
        } }, { key: "_debug", value: function(t3, e2) {
          void 0 !== this.barnesHutTree && (t3.lineWidth = 1, this._drawBranch(this.barnesHutTree.root, t3, e2));
        } }, { key: "_drawBranch", value: function(t3, e2, i2) {
          void 0 === i2 && (i2 = "#FF0000"), 4 === t3.childrenCount && (this._drawBranch(t3.children.NW, e2), this._drawBranch(t3.children.NE, e2), this._drawBranch(t3.children.SE, e2), this._drawBranch(t3.children.SW, e2)), e2.strokeStyle = i2, e2.beginPath(), e2.moveTo(t3.range.minX, t3.range.minY), e2.lineTo(t3.range.maxX, t3.range.minY), e2.stroke(), e2.beginPath(), e2.moveTo(t3.range.maxX, t3.range.minY), e2.lineTo(t3.range.maxX, t3.range.maxY), e2.stroke(), e2.beginPath(), e2.moveTo(t3.range.maxX, t3.range.maxY), e2.lineTo(t3.range.minX, t3.range.maxY), e2.stroke(), e2.beginPath(), e2.moveTo(t3.range.minX, t3.range.maxY), e2.lineTo(t3.range.minX, t3.range.minY), e2.stroke();
        } }]), t2;
      }(), iO = function() {
        function t2(e2, i2, o2) {
          vh(this, t2), this._rng = Em("REPULSION SOLVER"), this.body = e2, this.physicsBody = i2, this.setOptions(o2);
        }
        return wu(t2, [{ key: "setOptions", value: function(t3) {
          this.options = t3;
        } }, { key: "solve", value: function() {
          for (var t3, e2, i2, o2, n2, r2, s2, a2, h2 = this.body.nodes, d2 = this.physicsBody.physicsNodeIndices, l2 = this.physicsBody.forces, c2 = this.options.nodeDistance, u2 = -2 / 3 / c2, f2 = 0; f2 < d2.length - 1; f2++) {
            s2 = h2[d2[f2]];
            for (var p2 = f2 + 1; p2 < d2.length; p2++) t3 = (a2 = h2[d2[p2]]).x - s2.x, e2 = a2.y - s2.y, 0 === (i2 = Math.sqrt(t3 * t3 + e2 * e2)) && (t3 = i2 = 0.1 * this._rng()), i2 < 2 * c2 && (r2 = i2 < 0.5 * c2 ? 1 : u2 * i2 + 1.3333333333333333, o2 = t3 * (r2 /= i2), n2 = e2 * r2, l2[s2.id].x -= o2, l2[s2.id].y -= n2, l2[a2.id].x += o2, l2[a2.id].y += n2);
          }
        } }]), t2;
      }(), oO = function() {
        function t2(e2, i2, o2) {
          vh(this, t2), this.body = e2, this.physicsBody = i2, this.setOptions(o2);
        }
        return wu(t2, [{ key: "setOptions", value: function(t3) {
          this.options = t3, this.overlapAvoidanceFactor = Math.max(0, Math.min(1, this.options.avoidOverlap || 0));
        } }, { key: "solve", value: function() {
          for (var t3 = this.body.nodes, e2 = this.physicsBody.physicsNodeIndices, i2 = this.physicsBody.forces, o2 = this.options.nodeDistance, n2 = 0; n2 < e2.length - 1; n2++) for (var r2 = t3[e2[n2]], s2 = n2 + 1; s2 < e2.length; s2++) {
            var a2 = t3[e2[s2]];
            if (r2.level === a2.level) {
              var h2 = o2 + this.overlapAvoidanceFactor * ((r2.shape.radius || 0) / 2 + (a2.shape.radius || 0) / 2), d2 = a2.x - r2.x, l2 = a2.y - r2.y, c2 = Math.sqrt(d2 * d2 + l2 * l2), u2 = void 0;
              u2 = c2 < h2 ? -Math.pow(0.05 * c2, 2) + Math.pow(0.05 * h2, 2) : 0, 0 !== c2 && (u2 /= c2);
              var f2 = d2 * u2, p2 = l2 * u2;
              i2[r2.id].x -= f2, i2[r2.id].y -= p2, i2[a2.id].x += f2, i2[a2.id].y += p2;
            }
          }
        } }]), t2;
      }(), nO = function() {
        function t2(e2, i2, o2) {
          vh(this, t2), this.body = e2, this.physicsBody = i2, this.setOptions(o2);
        }
        return wu(t2, [{ key: "setOptions", value: function(t3) {
          this.options = t3;
        } }, { key: "solve", value: function() {
          for (var t3, e2, i2, o2, n2, r2 = this.physicsBody.physicsEdgeIndices, s2 = this.body.edges, a2 = 0; a2 < r2.length; a2++) true === (e2 = s2[r2[a2]]).connected && e2.toId !== e2.fromId && void 0 !== this.body.nodes[e2.toId] && void 0 !== this.body.nodes[e2.fromId] && (void 0 !== e2.edgeType.via ? (t3 = void 0 === e2.options.length ? this.options.springLength : e2.options.length, i2 = e2.to, o2 = e2.edgeType.via, n2 = e2.from, this._calculateSpringForce(i2, o2, 0.5 * t3), this._calculateSpringForce(o2, n2, 0.5 * t3)) : (t3 = void 0 === e2.options.length ? 1.5 * this.options.springLength : e2.options.length, this._calculateSpringForce(e2.from, e2.to, t3)));
        } }, { key: "_calculateSpringForce", value: function(t3, e2, i2) {
          var o2 = t3.x - e2.x, n2 = t3.y - e2.y, r2 = Math.max(Math.sqrt(o2 * o2 + n2 * n2), 0.01), s2 = this.options.springConstant * (i2 - r2) / r2, a2 = o2 * s2, h2 = n2 * s2;
          void 0 !== this.physicsBody.forces[t3.id] && (this.physicsBody.forces[t3.id].x += a2, this.physicsBody.forces[t3.id].y += h2), void 0 !== this.physicsBody.forces[e2.id] && (this.physicsBody.forces[e2.id].x -= a2, this.physicsBody.forces[e2.id].y -= h2);
        } }]), t2;
      }(), rO = function() {
        function t2(e2, i2, o2) {
          vh(this, t2), this.body = e2, this.physicsBody = i2, this.setOptions(o2);
        }
        return wu(t2, [{ key: "setOptions", value: function(t3) {
          this.options = t3;
        } }, { key: "solve", value: function() {
          for (var t3, e2, i2, o2, n2, r2, s2, a2, h2, d2, l2 = this.body.edges, c2 = 0.5, u2 = this.physicsBody.physicsEdgeIndices, f2 = this.physicsBody.physicsNodeIndices, p2 = this.physicsBody.forces, v2 = 0; v2 < f2.length; v2++) {
            var g2 = f2[v2];
            p2[g2].springFx = 0, p2[g2].springFy = 0;
          }
          for (var y2 = 0; y2 < u2.length; y2++) true === (e2 = l2[u2[y2]]).connected && (t3 = void 0 === e2.options.length ? this.options.springLength : e2.options.length, i2 = e2.from.x - e2.to.x, o2 = e2.from.y - e2.to.y, a2 = 0 === (a2 = Math.sqrt(i2 * i2 + o2 * o2)) ? 0.01 : a2, n2 = i2 * (s2 = this.options.springConstant * (t3 - a2) / a2), r2 = o2 * s2, e2.to.level != e2.from.level ? (void 0 !== p2[e2.toId] && (p2[e2.toId].springFx -= n2, p2[e2.toId].springFy -= r2), void 0 !== p2[e2.fromId] && (p2[e2.fromId].springFx += n2, p2[e2.fromId].springFy += r2)) : (void 0 !== p2[e2.toId] && (p2[e2.toId].x -= c2 * n2, p2[e2.toId].y -= c2 * r2), void 0 !== p2[e2.fromId] && (p2[e2.fromId].x += c2 * n2, p2[e2.fromId].y += c2 * r2)));
          s2 = 1;
          for (var m2 = 0; m2 < f2.length; m2++) {
            var b2 = f2[m2];
            h2 = Math.min(s2, Math.max(-s2, p2[b2].springFx)), d2 = Math.min(s2, Math.max(-s2, p2[b2].springFy)), p2[b2].x += h2, p2[b2].y += d2;
          }
          for (var w2 = 0, k2 = 0, _2 = 0; _2 < f2.length; _2++) {
            var x2 = f2[_2];
            w2 += p2[x2].x, k2 += p2[x2].y;
          }
          for (var E2 = w2 / f2.length, O2 = k2 / f2.length, C2 = 0; C2 < f2.length; C2++) {
            var S2 = f2[C2];
            p2[S2].x -= E2, p2[S2].y -= O2;
          }
        } }]), t2;
      }(), sO = function() {
        function t2(e2, i2, o2) {
          vh(this, t2), this.body = e2, this.physicsBody = i2, this.setOptions(o2);
        }
        return wu(t2, [{ key: "setOptions", value: function(t3) {
          this.options = t3;
        } }, { key: "solve", value: function() {
          for (var t3, e2, i2, o2, n2 = this.body.nodes, r2 = this.physicsBody.physicsNodeIndices, s2 = this.physicsBody.forces, a2 = 0; a2 < r2.length; a2++) {
            t3 = -(o2 = n2[r2[a2]]).x, e2 = -o2.y, i2 = Math.sqrt(t3 * t3 + e2 * e2), this._calculateForces(i2, t3, e2, s2, o2);
          }
        } }, { key: "_calculateForces", value: function(t3, e2, i2, o2, n2) {
          var r2 = 0 === t3 ? 0 : this.options.centralGravity / t3;
          o2[n2.id].x = e2 * r2, o2[n2.id].y = i2 * r2;
        } }]), t2;
      }();
      function aO(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !sx) return false;
          if (sx.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(sx(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var i2, o2 = px(t2);
          if (e2) {
            var n2 = px(this).constructor;
            i2 = sx(o2, arguments, n2);
          } else i2 = o2.apply(this, arguments);
          return ux(this, i2);
        };
      }
      var hO = function(t2) {
        cx(i2, t2);
        var e2 = aO(i2);
        function i2(t3, o2, n2) {
          var r2;
          return vh(this, i2), (r2 = e2.call(this, t3, o2, n2))._rng = Em("FORCE ATLAS 2 BASED REPULSION SOLVER"), r2;
        }
        return wu(i2, [{ key: "_calculateForces", value: function(t3, e3, i3, o2, n2) {
          0 === t3 && (e3 = t3 = 0.1 * this._rng()), this.overlapAvoidanceFactor < 1 && o2.shape.radius && (t3 = Math.max(0.1 + this.overlapAvoidanceFactor * o2.shape.radius, t3 - o2.shape.radius));
          var r2 = o2.edges.length + 1, s2 = this.options.gravitationalConstant * n2.mass * o2.options.mass * r2 / Math.pow(t3, 2), a2 = e3 * s2, h2 = i3 * s2;
          this.physicsBody.forces[o2.id].x += a2, this.physicsBody.forces[o2.id].y += h2;
        } }]), i2;
      }(eO);
      function dO(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !sx) return false;
          if (sx.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(sx(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var i2, o2 = px(t2);
          if (e2) {
            var n2 = px(this).constructor;
            i2 = sx(o2, arguments, n2);
          } else i2 = o2.apply(this, arguments);
          return ux(this, i2);
        };
      }
      var lO = function(t2) {
        cx(i2, t2);
        var e2 = dO(i2);
        function i2(t3, o2, n2) {
          return vh(this, i2), e2.call(this, t3, o2, n2);
        }
        return wu(i2, [{ key: "_calculateForces", value: function(t3, e3, i3, o2, n2) {
          if (t3 > 0) {
            var r2 = n2.edges.length + 1, s2 = this.options.centralGravity * r2 * n2.options.mass;
            o2[n2.id].x = e3 * s2, o2[n2.id].y = i3 * s2;
          }
        } }]), i2;
      }(sO), cO = function() {
        function t2(e2) {
          vh(this, t2), this.body = e2, this.physicsBody = { physicsNodeIndices: [], physicsEdgeIndices: [], forces: {}, velocities: {} }, this.physicsEnabled = true, this.simulationInterval = 1e3 / 60, this.requiresTimeout = true, this.previousStates = {}, this.referenceState = {}, this.freezeCache = {}, this.renderTimer = void 0, this.adaptiveTimestep = false, this.adaptiveTimestepEnabled = false, this.adaptiveCounter = 0, this.adaptiveInterval = 3, this.stabilized = false, this.startedStabilization = false, this.stabilizationIterations = 0, this.ready = false, this.options = {}, this.defaultOptions = { enabled: true, barnesHut: { theta: 0.5, gravitationalConstant: -2e3, centralGravity: 0.3, springLength: 95, springConstant: 0.04, damping: 0.09, avoidOverlap: 0 }, forceAtlas2Based: { theta: 0.5, gravitationalConstant: -50, centralGravity: 0.01, springConstant: 0.08, springLength: 100, damping: 0.4, avoidOverlap: 0 }, repulsion: { centralGravity: 0.2, springLength: 200, springConstant: 0.05, nodeDistance: 100, damping: 0.09, avoidOverlap: 0 }, hierarchicalRepulsion: { centralGravity: 0, springLength: 100, springConstant: 0.01, nodeDistance: 120, damping: 0.09 }, maxVelocity: 50, minVelocity: 0.75, solver: "barnesHut", stabilization: { enabled: true, iterations: 1e3, updateInterval: 50, onlyDynamicEdges: false, fit: true }, timestep: 0.5, adaptiveTimestep: true, wind: { x: 0, y: 0 } }, wo(this.options, this.defaultOptions), this.timestep = 0.5, this.layoutFailed = false, this.bindEventListeners();
        }
        return wu(t2, [{ key: "bindEventListeners", value: function() {
          var t3 = this;
          this.body.emitter.on("initPhysics", function() {
            t3.initPhysics();
          }), this.body.emitter.on("_layoutFailed", function() {
            t3.layoutFailed = true;
          }), this.body.emitter.on("resetPhysics", function() {
            t3.stopSimulation(), t3.ready = false;
          }), this.body.emitter.on("disablePhysics", function() {
            t3.physicsEnabled = false, t3.stopSimulation();
          }), this.body.emitter.on("restorePhysics", function() {
            t3.setOptions(t3.options), true === t3.ready && t3.startSimulation();
          }), this.body.emitter.on("startSimulation", function() {
            true === t3.ready && t3.startSimulation();
          }), this.body.emitter.on("stopSimulation", function() {
            t3.stopSimulation();
          }), this.body.emitter.on("destroy", function() {
            t3.stopSimulation(false), t3.body.emitter.off();
          }), this.body.emitter.on("_dataChanged", function() {
            t3.updatePhysicsData();
          });
        } }, { key: "setOptions", value: function(t3) {
          if (void 0 !== t3) if (false === t3) this.options.enabled = false, this.physicsEnabled = false, this.stopSimulation();
          else if (true === t3) this.options.enabled = true, this.physicsEnabled = true, this.startSimulation();
          else {
            this.physicsEnabled = true, Am(["stabilization"], this.options, t3), Qm(this.options, t3, "stabilization"), void 0 === t3.enabled && (this.options.enabled = true), false === this.options.enabled && (this.physicsEnabled = false, this.stopSimulation());
            var e2 = this.options.wind;
            e2 && (("number" != typeof e2.x || Ok(e2.x)) && (e2.x = 0), ("number" != typeof e2.y || Ok(e2.y)) && (e2.y = 0)), this.timestep = this.options.timestep;
          }
          this.init();
        } }, { key: "init", value: function() {
          var t3;
          "forceAtlas2Based" === this.options.solver ? (t3 = this.options.forceAtlas2Based, this.nodesSolver = new hO(this.body, this.physicsBody, t3), this.edgesSolver = new nO(this.body, this.physicsBody, t3), this.gravitySolver = new lO(this.body, this.physicsBody, t3)) : "repulsion" === this.options.solver ? (t3 = this.options.repulsion, this.nodesSolver = new iO(this.body, this.physicsBody, t3), this.edgesSolver = new nO(this.body, this.physicsBody, t3), this.gravitySolver = new sO(this.body, this.physicsBody, t3)) : "hierarchicalRepulsion" === this.options.solver ? (t3 = this.options.hierarchicalRepulsion, this.nodesSolver = new oO(this.body, this.physicsBody, t3), this.edgesSolver = new rO(this.body, this.physicsBody, t3), this.gravitySolver = new sO(this.body, this.physicsBody, t3)) : (t3 = this.options.barnesHut, this.nodesSolver = new eO(this.body, this.physicsBody, t3), this.edgesSolver = new nO(this.body, this.physicsBody, t3), this.gravitySolver = new sO(this.body, this.physicsBody, t3)), this.modelOptions = t3;
        } }, { key: "initPhysics", value: function() {
          true === this.physicsEnabled && true === this.options.enabled ? true === this.options.stabilization.enabled ? this.stabilize() : (this.stabilized = false, this.ready = true, this.body.emitter.emit("fit", {}, this.layoutFailed), this.startSimulation()) : (this.ready = true, this.body.emitter.emit("fit"));
        } }, { key: "startSimulation", value: function() {
          var t3;
          true === this.physicsEnabled && true === this.options.enabled ? (this.stabilized = false, this.adaptiveTimestep = false, this.body.emitter.emit("_resizeNodes"), void 0 === this.viewFunction && (this.viewFunction = Wo(t3 = this.simulationStep).call(t3, this), this.body.emitter.on("initRedraw", this.viewFunction), this.body.emitter.emit("_startRendering"))) : this.body.emitter.emit("_redraw");
        } }, { key: "stopSimulation", value: function() {
          var t3 = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
          this.stabilized = true, true === t3 && this._emitStabilized(), void 0 !== this.viewFunction && (this.body.emitter.off("initRedraw", this.viewFunction), this.viewFunction = void 0, true === t3 && this.body.emitter.emit("_stopRendering"));
        } }, { key: "simulationStep", value: function() {
          var t3 = jf();
          this.physicsTick(), (jf() - t3 < 0.4 * this.simulationInterval || true === this.runDoubleSpeed) && false === this.stabilized && (this.physicsTick(), this.runDoubleSpeed = true), true === this.stabilized && this.stopSimulation();
        } }, { key: "_emitStabilized", value: function() {
          var t3 = this, e2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.stabilizationIterations;
          (this.stabilizationIterations > 1 || true === this.startedStabilization) && vg(function() {
            t3.body.emitter.emit("stabilized", { iterations: e2 }), t3.startedStabilization = false, t3.stabilizationIterations = 0;
          }, 0);
        } }, { key: "physicsStep", value: function() {
          this.gravitySolver.solve(), this.nodesSolver.solve(), this.edgesSolver.solve(), this.moveNodes();
        } }, { key: "adjustTimeStep", value: function() {
          true === this._evaluateStepQuality() ? this.timestep = 1.2 * this.timestep : this.timestep / 1.2 < this.options.timestep ? this.timestep = this.options.timestep : (this.adaptiveCounter = -1, this.timestep = Math.max(this.options.timestep, this.timestep / 1.2));
        } }, { key: "physicsTick", value: function() {
          if (this._startStabilizing(), true !== this.stabilized) {
            if (true === this.adaptiveTimestep && true === this.adaptiveTimestepEnabled) this.adaptiveCounter % this.adaptiveInterval == 0 ? (this.timestep = 2 * this.timestep, this.physicsStep(), this.revert(), this.timestep = 0.5 * this.timestep, this.physicsStep(), this.physicsStep(), this.adjustTimeStep()) : this.physicsStep(), this.adaptiveCounter += 1;
            else this.timestep = this.options.timestep, this.physicsStep();
            true === this.stabilized && this.revert(), this.stabilizationIterations++;
          }
        } }, { key: "updatePhysicsData", value: function() {
          this.physicsBody.forces = {}, this.physicsBody.physicsNodeIndices = [], this.physicsBody.physicsEdgeIndices = [];
          var t3 = this.body.nodes, e2 = this.body.edges;
          for (var i2 in t3) Object.prototype.hasOwnProperty.call(t3, i2) && true === t3[i2].options.physics && this.physicsBody.physicsNodeIndices.push(t3[i2].id);
          for (var o2 in e2) Object.prototype.hasOwnProperty.call(e2, o2) && true === e2[o2].options.physics && this.physicsBody.physicsEdgeIndices.push(e2[o2].id);
          for (var n2 = 0; n2 < this.physicsBody.physicsNodeIndices.length; n2++) {
            var r2 = this.physicsBody.physicsNodeIndices[n2];
            this.physicsBody.forces[r2] = { x: 0, y: 0 }, void 0 === this.physicsBody.velocities[r2] && (this.physicsBody.velocities[r2] = { x: 0, y: 0 });
          }
          for (var s2 in this.physicsBody.velocities) void 0 === t3[s2] && delete this.physicsBody.velocities[s2];
        } }, { key: "revert", value: function() {
          var t3 = zf(this.previousStates), e2 = this.body.nodes, i2 = this.physicsBody.velocities;
          this.referenceState = {};
          for (var o2 = 0; o2 < t3.length; o2++) {
            var n2 = t3[o2];
            void 0 !== e2[n2] ? true === e2[n2].options.physics && (this.referenceState[n2] = { positions: { x: e2[n2].x, y: e2[n2].y } }, i2[n2].x = this.previousStates[n2].vx, i2[n2].y = this.previousStates[n2].vy, e2[n2].x = this.previousStates[n2].x, e2[n2].y = this.previousStates[n2].y) : delete this.previousStates[n2];
          }
        } }, { key: "_evaluateStepQuality", value: function() {
          var t3, e2, i2 = this.body.nodes, o2 = this.referenceState;
          for (var n2 in this.referenceState) if (Object.prototype.hasOwnProperty.call(this.referenceState, n2) && void 0 !== i2[n2] && (t3 = i2[n2].x - o2[n2].positions.x, e2 = i2[n2].y - o2[n2].positions.y, Math.sqrt(Math.pow(t3, 2) + Math.pow(e2, 2)) > 0.3)) return false;
          return true;
        } }, { key: "moveNodes", value: function() {
          for (var t3 = this.physicsBody.physicsNodeIndices, e2 = 0, i2 = 0, o2 = 0; o2 < t3.length; o2++) {
            var n2 = t3[o2], r2 = this._performStep(n2);
            e2 = Math.max(e2, r2), i2 += r2;
          }
          this.adaptiveTimestepEnabled = i2 / t3.length < 5, this.stabilized = e2 < this.options.minVelocity;
        } }, { key: "calculateComponentVelocity", value: function(t3, e2, i2) {
          t3 += (e2 - this.modelOptions.damping * t3) / i2 * this.timestep;
          var o2 = this.options.maxVelocity || 1e9;
          return Math.abs(t3) > o2 && (t3 = t3 > 0 ? o2 : -o2), t3;
        } }, { key: "_performStep", value: function(t3) {
          var e2 = this.body.nodes[t3], i2 = this.physicsBody.forces[t3];
          this.options.wind && (i2.x += this.options.wind.x, i2.y += this.options.wind.y);
          var o2 = this.physicsBody.velocities[t3];
          return this.previousStates[t3] = { x: e2.x, y: e2.y, vx: o2.x, vy: o2.y }, false === e2.options.fixed.x ? (o2.x = this.calculateComponentVelocity(o2.x, i2.x, e2.options.mass), e2.x += o2.x * this.timestep) : (i2.x = 0, o2.x = 0), false === e2.options.fixed.y ? (o2.y = this.calculateComponentVelocity(o2.y, i2.y, e2.options.mass), e2.y += o2.y * this.timestep) : (i2.y = 0, o2.y = 0), Math.sqrt(Math.pow(o2.x, 2) + Math.pow(o2.y, 2));
        } }, { key: "_freezeNodes", value: function() {
          var t3 = this.body.nodes;
          for (var e2 in t3) if (Object.prototype.hasOwnProperty.call(t3, e2) && t3[e2].x && t3[e2].y) {
            var i2 = t3[e2].options.fixed;
            this.freezeCache[e2] = { x: i2.x, y: i2.y }, i2.x = true, i2.y = true;
          }
        } }, { key: "_restoreFrozenNodes", value: function() {
          var t3 = this.body.nodes;
          for (var e2 in t3) Object.prototype.hasOwnProperty.call(t3, e2) && void 0 !== this.freezeCache[e2] && (t3[e2].options.fixed.x = this.freezeCache[e2].x, t3[e2].options.fixed.y = this.freezeCache[e2].y);
          this.freezeCache = {};
        } }, { key: "stabilize", value: function() {
          var t3 = this, e2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.options.stabilization.iterations;
          "number" != typeof e2 && (e2 = this.options.stabilization.iterations, console.error("The stabilize method needs a numeric amount of iterations. Switching to default: ", e2)), 0 !== this.physicsBody.physicsNodeIndices.length ? (this.adaptiveTimestep = this.options.adaptiveTimestep, this.body.emitter.emit("_resizeNodes"), this.stopSimulation(), this.stabilized = false, this.body.emitter.emit("_blockRedraw"), this.targetIterations = e2, true === this.options.stabilization.onlyDynamicEdges && this._freezeNodes(), this.stabilizationIterations = 0, vg(function() {
            return t3._stabilizationBatch();
          }, 0)) : this.ready = true;
        } }, { key: "_startStabilizing", value: function() {
          return true !== this.startedStabilization && (this.body.emitter.emit("startStabilizing"), this.startedStabilization = true, true);
        } }, { key: "_stabilizationBatch", value: function() {
          var t3 = this, e2 = function() {
            return false === t3.stabilized && t3.stabilizationIterations < t3.targetIterations;
          }, i2 = function() {
            t3.body.emitter.emit("stabilizationProgress", { iterations: t3.stabilizationIterations, total: t3.targetIterations });
          };
          this._startStabilizing() && i2();
          for (var o2, n2 = 0; e2() && n2 < this.options.stabilization.updateInterval; ) this.physicsTick(), n2++;
          (i2(), e2()) ? vg(Wo(o2 = this._stabilizationBatch).call(o2, this), 0) : this._finalizeStabilization();
        } }, { key: "_finalizeStabilization", value: function() {
          this.body.emitter.emit("_allowRedraw"), true === this.options.stabilization.fit && this.body.emitter.emit("fit"), true === this.options.stabilization.onlyDynamicEdges && this._restoreFrozenNodes(), this.body.emitter.emit("stabilizationIterationsDone"), this.body.emitter.emit("_requestRedraw"), true === this.stabilized ? this._emitStabilized() : this.startSimulation(), this.ready = true;
        } }, { key: "_drawForces", value: function(t3) {
          for (var e2 = 0; e2 < this.physicsBody.physicsNodeIndices.length; e2++) {
            var i2 = this.physicsBody.physicsNodeIndices[e2], o2 = this.body.nodes[i2], n2 = this.physicsBody.forces[i2], r2 = Math.sqrt(Math.pow(n2.x, 2) + Math.pow(n2.x, 2)), s2 = Math.min(Math.max(5, r2), 15), a2 = 3 * s2, h2 = Km((180 - 180 * Math.min(1, Math.max(0, 0.03 * r2))) / 360, 1, 1), d2 = { x: o2.x + 20 * n2.x, y: o2.y + 20 * n2.y };
            t3.lineWidth = s2, t3.strokeStyle = h2, t3.beginPath(), t3.moveTo(o2.x, o2.y), t3.lineTo(d2.x, d2.y), t3.stroke();
            var l2 = Math.atan2(n2.y, n2.x);
            t3.fillStyle = h2, zE.draw(t3, { type: "arrow", point: d2, angle: l2, length: a2 }), Cg(t3).call(t3);
          }
        } }]), t2;
      }();
      let uO;
      const fO = new Uint8Array(16);
      function pO() {
        if (!uO && (uO = "undefined" != typeof crypto && crypto.getRandomValues && crypto.getRandomValues.bind(crypto), !uO)) throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
        return uO(fO);
      }
      const vO = [];
      for (let t2 = 0; t2 < 256; ++t2) vO.push((t2 + 256).toString(16).slice(1));
      var gO = { randomUUID: "undefined" != typeof crypto && crypto.randomUUID && crypto.randomUUID.bind(crypto) };
      function yO(t2, e2, i2) {
        if (gO.randomUUID && !e2 && !t2) return gO.randomUUID();
        const o2 = (t2 = t2 || {}).random || (t2.rng || pO)();
        if (o2[6] = 15 & o2[6] | 64, o2[8] = 63 & o2[8] | 128, e2) {
          i2 = i2 || 0;
          for (let t3 = 0; t3 < 16; ++t3) e2[i2 + t3] = o2[t3];
          return e2;
        }
        return function(t3, e3 = 0) {
          return vO[t3[e3 + 0]] + vO[t3[e3 + 1]] + vO[t3[e3 + 2]] + vO[t3[e3 + 3]] + "-" + vO[t3[e3 + 4]] + vO[t3[e3 + 5]] + "-" + vO[t3[e3 + 6]] + vO[t3[e3 + 7]] + "-" + vO[t3[e3 + 8]] + vO[t3[e3 + 9]] + "-" + vO[t3[e3 + 10]] + vO[t3[e3 + 11]] + vO[t3[e3 + 12]] + vO[t3[e3 + 13]] + vO[t3[e3 + 14]] + vO[t3[e3 + 15]];
        }(o2);
      }
      var mO = function() {
        function t2() {
          vh(this, t2);
        }
        return wu(t2, null, [{ key: "getRange", value: function(t3) {
          var e2, i2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [], o2 = 1e9, n2 = -1e9, r2 = 1e9, s2 = -1e9;
          if (i2.length > 0) for (var a2 = 0; a2 < i2.length; a2++) r2 > (e2 = t3[i2[a2]]).shape.boundingBox.left && (r2 = e2.shape.boundingBox.left), s2 < e2.shape.boundingBox.right && (s2 = e2.shape.boundingBox.right), o2 > e2.shape.boundingBox.top && (o2 = e2.shape.boundingBox.top), n2 < e2.shape.boundingBox.bottom && (n2 = e2.shape.boundingBox.bottom);
          return 1e9 === r2 && -1e9 === s2 && 1e9 === o2 && -1e9 === n2 && (o2 = 0, n2 = 0, r2 = 0, s2 = 0), { minX: r2, maxX: s2, minY: o2, maxY: n2 };
        } }, { key: "getRangeCore", value: function(t3) {
          var e2, i2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [], o2 = 1e9, n2 = -1e9, r2 = 1e9, s2 = -1e9;
          if (i2.length > 0) for (var a2 = 0; a2 < i2.length; a2++) r2 > (e2 = t3[i2[a2]]).x && (r2 = e2.x), s2 < e2.x && (s2 = e2.x), o2 > e2.y && (o2 = e2.y), n2 < e2.y && (n2 = e2.y);
          return 1e9 === r2 && -1e9 === s2 && 1e9 === o2 && -1e9 === n2 && (o2 = 0, n2 = 0, r2 = 0, s2 = 0), { minX: r2, maxX: s2, minY: o2, maxY: n2 };
        } }, { key: "findCenter", value: function(t3) {
          return { x: 0.5 * (t3.maxX + t3.minX), y: 0.5 * (t3.maxY + t3.minY) };
        } }, { key: "cloneOptions", value: function(t3, e2) {
          var i2 = {};
          return void 0 === e2 || "node" === e2 ? (Rm(i2, t3.options, true), i2.x = t3.x, i2.y = t3.y, i2.amountOfConnections = t3.edges.length) : Rm(i2, t3.options, true), i2;
        } }]), t2;
      }();
      function bO(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !sx) return false;
          if (sx.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(sx(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var i2, o2 = px(t2);
          if (e2) {
            var n2 = px(this).constructor;
            i2 = sx(o2, arguments, n2);
          } else i2 = o2.apply(this, arguments);
          return ux(this, i2);
        };
      }
      var wO = function(t2) {
        cx(i2, t2);
        var e2 = bO(i2);
        function i2(t3, o2, n2, r2, s2, a2) {
          var h2;
          return vh(this, i2), (h2 = e2.call(this, t3, o2, n2, r2, s2, a2)).isCluster = true, h2.containedNodes = {}, h2.containedEdges = {}, h2;
        }
        return wu(i2, [{ key: "_openChildCluster", value: function(t3) {
          var e3 = this, i3 = this.body.nodes[t3];
          if (void 0 === this.containedNodes[t3]) throw new Error("node with id: " + t3 + " not in current cluster");
          if (!i3.isCluster) throw new Error("node with id: " + t3 + " is not a cluster");
          delete this.containedNodes[t3], Hm(i3.edges, function(t4) {
            delete e3.containedEdges[t4.id];
          }), Hm(i3.containedNodes, function(t4, i4) {
            e3.containedNodes[i4] = t4;
          }), i3.containedNodes = {}, Hm(i3.containedEdges, function(t4, i4) {
            e3.containedEdges[i4] = t4;
          }), i3.containedEdges = {}, Hm(i3.edges, function(t4) {
            Hm(e3.edges, function(i4) {
              var o2, n2, r2 = Vv(o2 = i4.clusteringEdgeReplacingIds).call(o2, t4.id);
              -1 !== r2 && (Hm(t4.clusteringEdgeReplacingIds, function(t5) {
                i4.clusteringEdgeReplacingIds.push(t5), e3.body.edges[t5].edgeReplacedById = i4.id;
              }), Pp(n2 = i4.clusteringEdgeReplacingIds).call(n2, r2, 1));
            });
          }), i3.edges = [];
        } }]), i2;
      }(iE), kO = function() {
        function t2(e2) {
          var i2 = this;
          vh(this, t2), this.body = e2, this.clusteredNodes = {}, this.clusteredEdges = {}, this.options = {}, this.defaultOptions = {}, wo(this.options, this.defaultOptions), this.body.emitter.on("_resetData", function() {
            i2.clusteredNodes = {}, i2.clusteredEdges = {};
          });
        }
        return wu(t2, [{ key: "clusterByHubsize", value: function(t3, e2) {
          void 0 === t3 ? t3 = this._getHubSize() : "object" === gu(t3) && (e2 = this._checkOptions(t3), t3 = this._getHubSize());
          for (var i2 = [], o2 = 0; o2 < this.body.nodeIndices.length; o2++) {
            var n2 = this.body.nodes[this.body.nodeIndices[o2]];
            n2.edges.length >= t3 && i2.push(n2.id);
          }
          for (var r2 = 0; r2 < i2.length; r2++) this.clusterByConnection(i2[r2], e2, true);
          this.body.emitter.emit("_dataChanged");
        } }, { key: "cluster", value: function() {
          var t3 = this, e2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, i2 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
          if (void 0 === e2.joinCondition) throw new Error("Cannot call clusterByNodeData without a joinCondition function in the options.");
          e2 = this._checkOptions(e2);
          var o2 = {}, n2 = {};
          Hm(this.body.nodes, function(i3, r2) {
            i3.options && true === e2.joinCondition(i3.options) && (o2[r2] = i3, Hm(i3.edges, function(e3) {
              void 0 === t3.clusteredEdges[e3.id] && (n2[e3.id] = e3);
            }));
          }), this._cluster(o2, n2, e2, i2);
        } }, { key: "clusterByEdgeCount", value: function(t3, e2) {
          var i2 = this, o2 = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
          e2 = this._checkOptions(e2);
          for (var n2, r2, s2, a2 = [], h2 = {}, d2 = function() {
            var o3 = {}, d3 = {}, c3 = i2.body.nodeIndices[l2], u2 = i2.body.nodes[c3];
            if (void 0 === h2[c3]) {
              s2 = 0, r2 = [];
              for (var f2 = 0; f2 < u2.edges.length; f2++) n2 = u2.edges[f2], void 0 === i2.clusteredEdges[n2.id] && (n2.toId !== n2.fromId && s2++, r2.push(n2));
              if (s2 === t3) {
                for (var p2 = function(t4) {
                  if (void 0 === e2.joinCondition || null === e2.joinCondition) return true;
                  var i3 = mO.cloneOptions(t4);
                  return e2.joinCondition(i3);
                }, v2 = true, g2 = 0; g2 < r2.length; g2++) {
                  n2 = r2[g2];
                  var y2 = i2._getConnectedId(n2, c3);
                  if (!p2(u2)) {
                    v2 = false;
                    break;
                  }
                  d3[n2.id] = n2, o3[c3] = u2, o3[y2] = i2.body.nodes[y2], h2[c3] = true;
                }
                if (zf(o3).length > 0 && zf(d3).length > 0 && true === v2) {
                  var m2 = function() {
                    for (var t4 = 0; t4 < a2.length; ++t4) for (var e3 in o3) if (void 0 !== a2[t4].nodes[e3]) return a2[t4];
                  }();
                  if (void 0 !== m2) {
                    for (var b2 in o3) void 0 === m2.nodes[b2] && (m2.nodes[b2] = o3[b2]);
                    for (var w2 in d3) void 0 === m2.edges[w2] && (m2.edges[w2] = d3[w2]);
                  } else a2.push({ nodes: o3, edges: d3 });
                }
              }
            }
          }, l2 = 0; l2 < this.body.nodeIndices.length; l2++) d2();
          for (var c2 = 0; c2 < a2.length; c2++) this._cluster(a2[c2].nodes, a2[c2].edges, e2, false);
          true === o2 && this.body.emitter.emit("_dataChanged");
        } }, { key: "clusterOutliers", value: function(t3) {
          var e2 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
          this.clusterByEdgeCount(1, t3, e2);
        } }, { key: "clusterBridges", value: function(t3) {
          var e2 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
          this.clusterByEdgeCount(2, t3, e2);
        } }, { key: "clusterByConnection", value: function(t3, e2) {
          var i2, o2 = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
          if (void 0 === t3) throw new Error("No nodeId supplied to clusterByConnection!");
          if (void 0 === this.body.nodes[t3]) throw new Error("The nodeId given to clusterByConnection does not exist!");
          var n2 = this.body.nodes[t3];
          void 0 === (e2 = this._checkOptions(e2, n2)).clusterNodeProperties.x && (e2.clusterNodeProperties.x = n2.x), void 0 === e2.clusterNodeProperties.y && (e2.clusterNodeProperties.y = n2.y), void 0 === e2.clusterNodeProperties.fixed && (e2.clusterNodeProperties.fixed = {}, e2.clusterNodeProperties.fixed.x = n2.options.fixed.x, e2.clusterNodeProperties.fixed.y = n2.options.fixed.y);
          var r2 = {}, s2 = {}, a2 = n2.id, h2 = mO.cloneOptions(n2);
          r2[a2] = n2;
          for (var d2 = 0; d2 < n2.edges.length; d2++) {
            var l2 = n2.edges[d2];
            if (void 0 === this.clusteredEdges[l2.id]) {
              var c2 = this._getConnectedId(l2, a2);
              if (void 0 === this.clusteredNodes[c2]) if (c2 !== a2) if (void 0 === e2.joinCondition) s2[l2.id] = l2, r2[c2] = this.body.nodes[c2];
              else {
                var u2 = mO.cloneOptions(this.body.nodes[c2]);
                true === e2.joinCondition(h2, u2) && (s2[l2.id] = l2, r2[c2] = this.body.nodes[c2]);
              }
              else s2[l2.id] = l2;
            }
          }
          var f2 = If(i2 = zf(r2)).call(i2, function(t4) {
            return r2[t4].id;
          });
          for (var p2 in r2) if (Object.prototype.hasOwnProperty.call(r2, p2)) for (var v2 = r2[p2], g2 = 0; g2 < v2.edges.length; g2++) {
            var y2 = v2.edges[g2];
            Vv(f2).call(f2, this._getConnectedId(y2, v2.id)) > -1 && (s2[y2.id] = y2);
          }
          this._cluster(r2, s2, e2, o2);
        } }, { key: "_createClusterEdges", value: function(t3, e2, i2, o2) {
          for (var n2, r2, s2, a2, h2, d2, l2 = zf(t3), c2 = [], u2 = 0; u2 < l2.length; u2++) {
            s2 = t3[r2 = l2[u2]];
            for (var f2 = 0; f2 < s2.edges.length; f2++) n2 = s2.edges[f2], void 0 === this.clusteredEdges[n2.id] && (n2.toId == n2.fromId ? e2[n2.id] = n2 : n2.toId == r2 ? (a2 = i2.id, d2 = h2 = n2.fromId) : (a2 = n2.toId, h2 = i2.id, d2 = a2), void 0 === t3[d2] && c2.push({ edge: n2, fromId: h2, toId: a2 }));
          }
          for (var p2 = [], v2 = function(t4) {
            for (var e3 = 0; e3 < p2.length; e3++) {
              var i3 = p2[e3], o3 = t4.fromId === i3.fromId && t4.toId === i3.toId, n3 = t4.fromId === i3.toId && t4.toId === i3.fromId;
              if (o3 || n3) return i3;
            }
            return null;
          }, g2 = 0; g2 < c2.length; g2++) {
            var y2 = c2[g2], m2 = y2.edge, b2 = v2(y2);
            null === b2 ? (b2 = this._createClusteredEdge(y2.fromId, y2.toId, m2, o2), p2.push(b2)) : b2.clusteringEdgeReplacingIds.push(m2.id), this.body.edges[m2.id].edgeReplacedById = b2.id, this._backupEdgeOptions(m2), m2.setOptions({ physics: false });
          }
        } }, { key: "_checkOptions", value: function() {
          var t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          return void 0 === t3.clusterEdgeProperties && (t3.clusterEdgeProperties = {}), void 0 === t3.clusterNodeProperties && (t3.clusterNodeProperties = {}), t3;
        } }, { key: "_cluster", value: function(t3, e2, i2) {
          var o2 = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3], n2 = [];
          for (var r2 in t3) Object.prototype.hasOwnProperty.call(t3, r2) && void 0 !== this.clusteredNodes[r2] && n2.push(r2);
          for (var s2 = 0; s2 < n2.length; ++s2) delete t3[n2[s2]];
          if (0 != zf(t3).length && (1 != zf(t3).length || 1 == i2.clusterNodeProperties.allowSingleNodeCluster)) {
            var a2 = Rm({}, i2.clusterNodeProperties);
            if (void 0 !== i2.processProperties) {
              var h2 = [];
              for (var d2 in t3) if (Object.prototype.hasOwnProperty.call(t3, d2)) {
                var l2 = mO.cloneOptions(t3[d2]);
                h2.push(l2);
              }
              var c2 = [];
              for (var u2 in e2) if (Object.prototype.hasOwnProperty.call(e2, u2) && "clusterEdge:" !== u2.substr(0, 12)) {
                var f2 = mO.cloneOptions(e2[u2], "edge");
                c2.push(f2);
              }
              if (!(a2 = i2.processProperties(a2, h2, c2))) throw new Error("The processProperties function does not return properties!");
            }
            void 0 === a2.id && (a2.id = "cluster:" + yO());
            var p2 = a2.id;
            void 0 === a2.label && (a2.label = "cluster");
            var v2 = void 0;
            void 0 === a2.x && (v2 = this._getClusterPosition(t3), a2.x = v2.x), void 0 === a2.y && (void 0 === v2 && (v2 = this._getClusterPosition(t3)), a2.y = v2.y), a2.id = p2;
            var g2 = this.body.functions.createNode(a2, wO);
            g2.containedNodes = t3, g2.containedEdges = e2, g2.clusterEdgeProperties = i2.clusterEdgeProperties, this.body.nodes[a2.id] = g2, this._clusterEdges(t3, e2, a2, i2.clusterEdgeProperties), a2.id = void 0, true === o2 && this.body.emitter.emit("_dataChanged");
          }
        } }, { key: "_backupEdgeOptions", value: function(t3) {
          void 0 === this.clusteredEdges[t3.id] && (this.clusteredEdges[t3.id] = { physics: t3.options.physics });
        } }, { key: "_restoreEdge", value: function(t3) {
          var e2 = this.clusteredEdges[t3.id];
          void 0 !== e2 && (t3.setOptions({ physics: e2.physics }), delete this.clusteredEdges[t3.id]);
        } }, { key: "isCluster", value: function(t3) {
          return void 0 !== this.body.nodes[t3] ? true === this.body.nodes[t3].isCluster : (console.error("Node does not exist."), false);
        } }, { key: "_getClusterPosition", value: function(t3) {
          for (var e2, i2 = zf(t3), o2 = t3[i2[0]].x, n2 = t3[i2[0]].x, r2 = t3[i2[0]].y, s2 = t3[i2[0]].y, a2 = 1; a2 < i2.length; a2++) o2 = (e2 = t3[i2[a2]]).x < o2 ? e2.x : o2, n2 = e2.x > n2 ? e2.x : n2, r2 = e2.y < r2 ? e2.y : r2, s2 = e2.y > s2 ? e2.y : s2;
          return { x: 0.5 * (o2 + n2), y: 0.5 * (r2 + s2) };
        } }, { key: "openCluster", value: function(t3, e2) {
          var i2 = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
          if (void 0 === t3) throw new Error("No clusterNodeId supplied to openCluster.");
          var o2 = this.body.nodes[t3];
          if (void 0 === o2) throw new Error("The clusterNodeId supplied to openCluster does not exist.");
          if (true !== o2.isCluster || void 0 === o2.containedNodes || void 0 === o2.containedEdges) throw new Error("The node:" + t3 + " is not a valid cluster.");
          var n2 = this.findNode(t3), r2 = Vv(n2).call(n2, t3) - 1;
          if (r2 >= 0) {
            var s2 = n2[r2];
            return this.body.nodes[s2]._openChildCluster(t3), delete this.body.nodes[t3], void (true === i2 && this.body.emitter.emit("_dataChanged"));
          }
          var a2 = o2.containedNodes, h2 = o2.containedEdges;
          if (void 0 !== e2 && void 0 !== e2.releaseFunction && "function" == typeof e2.releaseFunction) {
            var d2 = {}, l2 = { x: o2.x, y: o2.y };
            for (var c2 in a2) if (Object.prototype.hasOwnProperty.call(a2, c2)) {
              var u2 = this.body.nodes[c2];
              d2[c2] = { x: u2.x, y: u2.y };
            }
            var f2 = e2.releaseFunction(l2, d2);
            for (var p2 in a2) if (Object.prototype.hasOwnProperty.call(a2, p2)) {
              var v2 = this.body.nodes[p2];
              void 0 !== f2[p2] && (v2.x = void 0 === f2[p2].x ? o2.x : f2[p2].x, v2.y = void 0 === f2[p2].y ? o2.y : f2[p2].y);
            }
          } else Hm(a2, function(t4) {
            false === t4.options.fixed.x && (t4.x = o2.x), false === t4.options.fixed.y && (t4.y = o2.y);
          });
          for (var g2 in a2) if (Object.prototype.hasOwnProperty.call(a2, g2)) {
            var y2 = this.body.nodes[g2];
            y2.vx = o2.vx, y2.vy = o2.vy, y2.setOptions({ physics: true }), delete this.clusteredNodes[g2];
          }
          for (var m2 = [], b2 = 0; b2 < o2.edges.length; b2++) m2.push(o2.edges[b2]);
          for (var w2 = 0; w2 < m2.length; w2++) {
            for (var k2 = m2[w2], _2 = this._getConnectedId(k2, t3), x2 = this.clusteredNodes[_2], E2 = 0; E2 < k2.clusteringEdgeReplacingIds.length; E2++) {
              var O2 = k2.clusteringEdgeReplacingIds[E2], C2 = this.body.edges[O2];
              if (void 0 !== C2) if (void 0 !== x2) {
                var S2 = this.body.nodes[x2.clusterId];
                S2.containedEdges[C2.id] = C2, delete h2[C2.id];
                var T2 = C2.fromId, M2 = C2.toId;
                C2.toId == _2 ? M2 = x2.clusterId : T2 = x2.clusterId, this._createClusteredEdge(T2, M2, C2, S2.clusterEdgeProperties, { hidden: false, physics: true });
              } else this._restoreEdge(C2);
            }
            k2.remove();
          }
          for (var P2 in h2) Object.prototype.hasOwnProperty.call(h2, P2) && this._restoreEdge(h2[P2]);
          delete this.body.nodes[t3], true === i2 && this.body.emitter.emit("_dataChanged");
        } }, { key: "getNodesInCluster", value: function(t3) {
          var e2 = [];
          if (true === this.isCluster(t3)) {
            var i2 = this.body.nodes[t3].containedNodes;
            for (var o2 in i2) Object.prototype.hasOwnProperty.call(i2, o2) && e2.push(this.body.nodes[o2].id);
          }
          return e2;
        } }, { key: "findNode", value: function(t3) {
          for (var e2, i2 = [], o2 = 0; void 0 !== this.clusteredNodes[t3] && o2 < 100; ) {
            if (void 0 === (e2 = this.body.nodes[t3])) return [];
            i2.push(e2.id), t3 = this.clusteredNodes[t3].clusterId, o2++;
          }
          return void 0 === (e2 = this.body.nodes[t3]) ? [] : (i2.push(e2.id), hp(i2).call(i2), i2);
        } }, { key: "updateClusteredNode", value: function(t3, e2) {
          if (void 0 === t3) throw new Error("No clusteredNodeId supplied to updateClusteredNode.");
          if (void 0 === e2) throw new Error("No newOptions supplied to updateClusteredNode.");
          if (void 0 === this.body.nodes[t3]) throw new Error("The clusteredNodeId supplied to updateClusteredNode does not exist.");
          this.body.nodes[t3].setOptions(e2), this.body.emitter.emit("_dataChanged");
        } }, { key: "updateEdge", value: function(t3, e2) {
          if (void 0 === t3) throw new Error("No startEdgeId supplied to updateEdge.");
          if (void 0 === e2) throw new Error("No newOptions supplied to updateEdge.");
          if (void 0 === this.body.edges[t3]) throw new Error("The startEdgeId supplied to updateEdge does not exist.");
          for (var i2 = this.getClusteredEdges(t3), o2 = 0; o2 < i2.length; o2++) {
            this.body.edges[i2[o2]].setOptions(e2);
          }
          this.body.emitter.emit("_dataChanged");
        } }, { key: "getClusteredEdges", value: function(t3) {
          for (var e2 = [], i2 = 0; void 0 !== t3 && void 0 !== this.body.edges[t3] && i2 < 100; ) e2.push(this.body.edges[t3].id), t3 = this.body.edges[t3].edgeReplacedById, i2++;
          return hp(e2).call(e2), e2;
        } }, { key: "getBaseEdge", value: function(t3) {
          return this.getBaseEdges(t3)[0];
        } }, { key: "getBaseEdges", value: function(t3) {
          for (var e2 = [t3], i2 = [], o2 = [], n2 = 0; e2.length > 0 && n2 < 100; ) {
            var r2 = e2.pop();
            if (void 0 !== r2) {
              var s2 = this.body.edges[r2];
              if (void 0 !== s2) {
                n2++;
                var a2 = s2.clusteringEdgeReplacingIds;
                if (void 0 === a2) o2.push(r2);
                else for (var h2 = 0; h2 < a2.length; ++h2) {
                  var d2 = a2[h2];
                  -1 === Vv(e2).call(e2, a2) && -1 === Vv(i2).call(i2, a2) && e2.push(d2);
                }
                i2.push(r2);
              }
            }
          }
          return o2;
        } }, { key: "_getConnectedId", value: function(t3, e2) {
          return t3.toId != e2 ? t3.toId : (t3.fromId, t3.fromId);
        } }, { key: "_getHubSize", value: function() {
          for (var t3 = 0, e2 = 0, i2 = 0, o2 = 0, n2 = 0; n2 < this.body.nodeIndices.length; n2++) {
            var r2 = this.body.nodes[this.body.nodeIndices[n2]];
            r2.edges.length > o2 && (o2 = r2.edges.length), t3 += r2.edges.length, e2 += Math.pow(r2.edges.length, 2), i2 += 1;
          }
          t3 /= i2;
          var s2 = (e2 /= i2) - Math.pow(t3, 2), a2 = Math.sqrt(s2), h2 = Math.floor(t3 + 2 * a2);
          return h2 > o2 && (h2 = o2), h2;
        } }, { key: "_createClusteredEdge", value: function(t3, e2, i2, o2, n2) {
          var r2 = mO.cloneOptions(i2, "edge");
          Rm(r2, o2), r2.from = t3, r2.to = e2, r2.id = "clusterEdge:" + yO(), void 0 !== n2 && Rm(r2, n2);
          var s2 = this.body.functions.createEdge(r2);
          return s2.clusteringEdgeReplacingIds = [i2.id], s2.connect(), this.body.edges[s2.id] = s2, s2;
        } }, { key: "_clusterEdges", value: function(t3, e2, i2, o2) {
          if (e2 instanceof JE) {
            var n2 = e2, r2 = {};
            r2[n2.id] = n2, e2 = r2;
          }
          if (t3 instanceof iE) {
            var s2 = t3, a2 = {};
            a2[s2.id] = s2, t3 = a2;
          }
          if (null == i2) throw new Error("_clusterEdges: parameter clusterNode required");
          for (var h2 in void 0 === o2 && (o2 = i2.clusterEdgeProperties), this._createClusterEdges(t3, e2, i2, o2), e2) if (Object.prototype.hasOwnProperty.call(e2, h2) && void 0 !== this.body.edges[h2]) {
            var d2 = this.body.edges[h2];
            this._backupEdgeOptions(d2), d2.setOptions({ physics: false });
          }
          for (var l2 in t3) Object.prototype.hasOwnProperty.call(t3, l2) && (this.clusteredNodes[l2] = { clusterId: i2.id, node: this.body.nodes[l2] }, this.body.nodes[l2].setOptions({ physics: false }));
        } }, { key: "_getClusterNodeForNode", value: function(t3) {
          if (void 0 !== t3) {
            var e2 = this.clusteredNodes[t3];
            if (void 0 !== e2) {
              var i2 = e2.clusterId;
              if (void 0 !== i2) return this.body.nodes[i2];
            }
          }
        } }, { key: "_filter", value: function(t3, e2) {
          var i2 = [];
          return Hm(t3, function(t4) {
            e2(t4) && i2.push(t4);
          }), i2;
        } }, { key: "_updateState", value: function() {
          var t3, e2 = this, i2 = [], o2 = {}, n2 = function(t4) {
            Hm(e2.body.nodes, function(e3) {
              true === e3.isCluster && t4(e3);
            });
          };
          for (t3 in this.clusteredNodes) {
            if (Object.prototype.hasOwnProperty.call(this.clusteredNodes, t3)) void 0 === this.body.nodes[t3] && i2.push(t3);
          }
          n2(function(t4) {
            for (var e3 = 0; e3 < i2.length; e3++) delete t4.containedNodes[i2[e3]];
          });
          for (var r2 = 0; r2 < i2.length; r2++) delete this.clusteredNodes[i2[r2]];
          Hm(this.clusteredEdges, function(t4) {
            var i3 = e2.body.edges[t4];
            void 0 !== i3 && i3.endPointsValid() || (o2[t4] = t4);
          }), n2(function(t4) {
            Hm(t4.containedEdges, function(t5, e3) {
              t5.endPointsValid() || o2[e3] || (o2[e3] = e3);
            });
          }), Hm(this.body.edges, function(t4, i3) {
            var n3 = true, r3 = t4.clusteringEdgeReplacingIds;
            if (void 0 !== r3) {
              var s3 = 0;
              Hm(r3, function(t5) {
                var i4 = e2.body.edges[t5];
                void 0 !== i4 && i4.endPointsValid() && (s3 += 1);
              }), n3 = s3 > 0;
            }
            t4.endPointsValid() && n3 || (o2[i3] = i3);
          }), n2(function(t4) {
            Hm(o2, function(i3) {
              delete t4.containedEdges[i3], Hm(t4.edges, function(n3, r3) {
                n3.id !== i3 ? n3.clusteringEdgeReplacingIds = e2._filter(n3.clusteringEdgeReplacingIds, function(t5) {
                  return !o2[t5];
                }) : t4.edges[r3] = null;
              }), t4.edges = e2._filter(t4.edges, function(t5) {
                return null !== t5;
              });
            });
          }), Hm(o2, function(t4) {
            delete e2.clusteredEdges[t4];
          }), Hm(o2, function(t4) {
            delete e2.body.edges[t4];
          }), Hm(zf(this.body.edges), function(t4) {
            var i3 = e2.body.edges[t4], o3 = e2._isClusteredNode(i3.fromId) || e2._isClusteredNode(i3.toId);
            if (o3 !== e2._isClusteredEdge(i3.id)) if (o3) {
              var n3 = e2._getClusterNodeForNode(i3.fromId);
              void 0 !== n3 && e2._clusterEdges(e2.body.nodes[i3.fromId], i3, n3);
              var r3 = e2._getClusterNodeForNode(i3.toId);
              void 0 !== r3 && e2._clusterEdges(e2.body.nodes[i3.toId], i3, r3);
            } else delete e2._clusterEdges[t4], e2._restoreEdge(i3);
          });
          for (var s2 = false, a2 = true, h2 = function() {
            var t4 = [];
            n2(function(e3) {
              var i4 = zf(e3.containedNodes).length, o3 = true === e3.options.allowSingleNodeCluster;
              (o3 && i4 < 1 || !o3 && i4 < 2) && t4.push(e3.id);
            });
            for (var i3 = 0; i3 < t4.length; ++i3) e2.openCluster(t4[i3], {}, false);
            a2 = t4.length > 0, s2 = s2 || a2;
          }; a2; ) h2();
          s2 && this._updateState();
        } }, { key: "_isClusteredNode", value: function(t3) {
          return void 0 !== this.clusteredNodes[t3];
        } }, { key: "_isClusteredEdge", value: function(t3) {
          return void 0 !== this.clusteredEdges[t3];
        } }]), t2;
      }();
      var _O = function() {
        function t2(e2, i2) {
          var o2;
          vh(this, t2), void 0 !== window && (o2 = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame), window.requestAnimationFrame = void 0 === o2 ? function(t3) {
            t3();
          } : o2, this.body = e2, this.canvas = i2, this.redrawRequested = false, this.renderTimer = void 0, this.requiresTimeout = true, this.renderingActive = false, this.renderRequests = 0, this.allowRedraw = true, this.dragging = false, this.zooming = false, this.options = {}, this.defaultOptions = { hideEdgesOnDrag: false, hideEdgesOnZoom: false, hideNodesOnDrag: false }, wo(this.options, this.defaultOptions), this._determineBrowserMethod(), this.bindEventListeners();
        }
        return wu(t2, [{ key: "bindEventListeners", value: function() {
          var t3, e2 = this;
          this.body.emitter.on("dragStart", function() {
            e2.dragging = true;
          }), this.body.emitter.on("dragEnd", function() {
            e2.dragging = false;
          }), this.body.emitter.on("zoom", function() {
            e2.zooming = true, window.clearTimeout(e2.zoomTimeoutId), e2.zoomTimeoutId = vg(function() {
              var t4;
              e2.zooming = false, Wo(t4 = e2._requestRedraw).call(t4, e2)();
            }, 250);
          }), this.body.emitter.on("_resizeNodes", function() {
            e2._resizeNodes();
          }), this.body.emitter.on("_redraw", function() {
            false === e2.renderingActive && e2._redraw();
          }), this.body.emitter.on("_blockRedraw", function() {
            e2.allowRedraw = false;
          }), this.body.emitter.on("_allowRedraw", function() {
            e2.allowRedraw = true, e2.redrawRequested = false;
          }), this.body.emitter.on("_requestRedraw", Wo(t3 = this._requestRedraw).call(t3, this)), this.body.emitter.on("_startRendering", function() {
            e2.renderRequests += 1, e2.renderingActive = true, e2._startRendering();
          }), this.body.emitter.on("_stopRendering", function() {
            e2.renderRequests -= 1, e2.renderingActive = e2.renderRequests > 0, e2.renderTimer = void 0;
          }), this.body.emitter.on("destroy", function() {
            e2.renderRequests = 0, e2.allowRedraw = false, e2.renderingActive = false, true === e2.requiresTimeout ? clearTimeout(e2.renderTimer) : window.cancelAnimationFrame(e2.renderTimer), e2.body.emitter.off();
          });
        } }, { key: "setOptions", value: function(t3) {
          if (void 0 !== t3) {
            Nm(["hideEdgesOnDrag", "hideEdgesOnZoom", "hideNodesOnDrag"], this.options, t3);
          }
        } }, { key: "_requestNextFrame", value: function(t3, e2) {
          if ("undefined" != typeof window) {
            var i2, o2 = window;
            return true === this.requiresTimeout ? i2 = vg(t3, e2) : o2.requestAnimationFrame && (i2 = o2.requestAnimationFrame(t3)), i2;
          }
        } }, { key: "_startRendering", value: function() {
          var t3;
          true === this.renderingActive && (void 0 === this.renderTimer && (this.renderTimer = this._requestNextFrame(Wo(t3 = this._renderStep).call(t3, this), this.simulationInterval)));
        } }, { key: "_renderStep", value: function() {
          true === this.renderingActive && (this.renderTimer = void 0, true === this.requiresTimeout && this._startRendering(), this._redraw(), false === this.requiresTimeout && this._startRendering());
        } }, { key: "redraw", value: function() {
          this.body.emitter.emit("setSize"), this._redraw();
        } }, { key: "_requestRedraw", value: function() {
          var t3 = this;
          true !== this.redrawRequested && false === this.renderingActive && true === this.allowRedraw && (this.redrawRequested = true, this._requestNextFrame(function() {
            t3._redraw(false);
          }, 0));
        } }, { key: "_redraw", value: function() {
          var t3 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
          if (true === this.allowRedraw) {
            this.body.emitter.emit("initRedraw"), this.redrawRequested = false;
            var e2 = { drawExternalLabels: null };
            0 !== this.canvas.frame.canvas.width && 0 !== this.canvas.frame.canvas.height || this.canvas.setSize(), this.canvas.setTransform();
            var i2 = this.canvas.getContext(), o2 = this.canvas.frame.canvas.clientWidth, n2 = this.canvas.frame.canvas.clientHeight;
            if (i2.clearRect(0, 0, o2, n2), 0 === this.canvas.frame.clientWidth) return;
            if (i2.save(), i2.translate(this.body.view.translation.x, this.body.view.translation.y), i2.scale(this.body.view.scale, this.body.view.scale), i2.beginPath(), this.body.emitter.emit("beforeDrawing", i2), i2.closePath(), false === t3 && (false === this.dragging || true === this.dragging && false === this.options.hideEdgesOnDrag) && (false === this.zooming || true === this.zooming && false === this.options.hideEdgesOnZoom) && this._drawEdges(i2), false === this.dragging || true === this.dragging && false === this.options.hideNodesOnDrag) {
              var r2 = this._drawNodes(i2, t3).drawExternalLabels;
              e2.drawExternalLabels = r2;
            }
            false === t3 && (false === this.dragging || true === this.dragging && false === this.options.hideEdgesOnDrag) && (false === this.zooming || true === this.zooming && false === this.options.hideEdgesOnZoom) && this._drawArrows(i2), null != e2.drawExternalLabels && e2.drawExternalLabels(), false === t3 && this._drawSelectionBox(i2), i2.beginPath(), this.body.emitter.emit("afterDrawing", i2), i2.closePath(), i2.restore(), true === t3 && i2.clearRect(0, 0, o2, n2);
          }
        } }, { key: "_resizeNodes", value: function() {
          this.canvas.setTransform();
          var t3 = this.canvas.getContext();
          t3.save(), t3.translate(this.body.view.translation.x, this.body.view.translation.y), t3.scale(this.body.view.scale, this.body.view.scale);
          var e2, i2 = this.body.nodes;
          for (var o2 in i2) Object.prototype.hasOwnProperty.call(i2, o2) && ((e2 = i2[o2]).resize(t3), e2.updateBoundingBox(t3, e2.selected));
          t3.restore();
        } }, { key: "_drawNodes", value: function(t3) {
          for (var e2, i2, o2 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], n2 = this.body.nodes, r2 = this.body.nodeIndices, s2 = [], a2 = [], h2 = this.canvas.DOMtoCanvas({ x: -20, y: -20 }), d2 = this.canvas.DOMtoCanvas({ x: this.canvas.frame.canvas.clientWidth + 20, y: this.canvas.frame.canvas.clientHeight + 20 }), l2 = { top: h2.y, left: h2.x, bottom: d2.y, right: d2.x }, c2 = [], u2 = 0; u2 < r2.length; u2++) if ((e2 = n2[r2[u2]]).hover) a2.push(r2[u2]);
          else if (e2.isSelected()) s2.push(r2[u2]);
          else if (true === o2) {
            var f2 = e2.draw(t3);
            null != f2.drawExternalLabel && c2.push(f2.drawExternalLabel);
          } else if (true === e2.isBoundingBoxOverlappingWith(l2)) {
            var p2 = e2.draw(t3);
            null != p2.drawExternalLabel && c2.push(p2.drawExternalLabel);
          } else e2.updateBoundingBox(t3, e2.selected);
          var v2 = s2.length, g2 = a2.length;
          for (i2 = 0; i2 < v2; i2++) {
            var y2 = (e2 = n2[s2[i2]]).draw(t3);
            null != y2.drawExternalLabel && c2.push(y2.drawExternalLabel);
          }
          for (i2 = 0; i2 < g2; i2++) {
            var m2 = (e2 = n2[a2[i2]]).draw(t3);
            null != m2.drawExternalLabel && c2.push(m2.drawExternalLabel);
          }
          return { drawExternalLabels: function() {
            for (var t4 = 0, e3 = c2; t4 < e3.length; t4++) {
              (0, e3[t4])();
            }
          } };
        } }, { key: "_drawEdges", value: function(t3) {
          for (var e2 = this.body.edges, i2 = this.body.edgeIndices, o2 = 0; o2 < i2.length; o2++) {
            var n2 = e2[i2[o2]];
            true === n2.connected && n2.draw(t3);
          }
        } }, { key: "_drawArrows", value: function(t3) {
          for (var e2 = this.body.edges, i2 = this.body.edgeIndices, o2 = 0; o2 < i2.length; o2++) {
            var n2 = e2[i2[o2]];
            true === n2.connected && n2.drawArrows(t3);
          }
        } }, { key: "_determineBrowserMethod", value: function() {
          if ("undefined" != typeof window) {
            var t3 = navigator.userAgent.toLowerCase();
            this.requiresTimeout = false, (-1 != Vv(t3).call(t3, "msie 9.0") || -1 != Vv(t3).call(t3, "safari") && Vv(t3).call(t3, "chrome") <= -1) && (this.requiresTimeout = true);
          } else this.requiresTimeout = true;
        } }, { key: "_drawSelectionBox", value: function(t3) {
          if (this.body.selectionBox.show) {
            t3.beginPath();
            var e2 = this.body.selectionBox.position.end.x - this.body.selectionBox.position.start.x, i2 = this.body.selectionBox.position.end.y - this.body.selectionBox.position.start.y;
            t3.rect(this.body.selectionBox.position.start.x, this.body.selectionBox.position.start.y, e2, i2), t3.fillStyle = "rgba(151, 194, 252, 0.2)", t3.fillRect(this.body.selectionBox.position.start.x, this.body.selectionBox.position.start.y, e2, i2), t3.strokeStyle = "rgba(151, 194, 252, 1)", t3.stroke();
          } else t3.closePath();
        } }]), t2;
      }(), xO = o(it.setInterval);
      function EO(t2, e2) {
        e2.inputHandler = function(t3) {
          t3.isFirst && e2(t3);
        }, t2.on("hammer.input", e2.inputHandler);
      }
      function OO(t2, e2) {
        return e2.inputHandler = function(t3) {
          t3.isFinal && e2(t3);
        }, t2.on("hammer.input", e2.inputHandler);
      }
      var CO = function() {
        function t2(e2) {
          vh(this, t2), this.body = e2, this.pixelRatio = 1, this.cameraState = {}, this.initialized = false, this.canvasViewCenter = {}, this._cleanupCallbacks = [], this.options = {}, this.defaultOptions = { autoResize: true, height: "100%", width: "100%" }, wo(this.options, this.defaultOptions), this.bindEventListeners();
        }
        return wu(t2, [{ key: "bindEventListeners", value: function() {
          var t3, e2 = this;
          this.body.emitter.once("resize", function(t4) {
            0 !== t4.width && (e2.body.view.translation.x = 0.5 * t4.width), 0 !== t4.height && (e2.body.view.translation.y = 0.5 * t4.height);
          }), this.body.emitter.on("setSize", Wo(t3 = this.setSize).call(t3, this)), this.body.emitter.on("destroy", function() {
            e2.hammerFrame.destroy(), e2.hammer.destroy(), e2._cleanUp();
          });
        } }, { key: "setOptions", value: function(t3) {
          var e2 = this;
          if (void 0 !== t3) {
            Nm(["width", "height", "autoResize"], this.options, t3);
          }
          if (this._cleanUp(), true === this.options.autoResize) {
            var i2;
            if (window.ResizeObserver) {
              var o2 = new ResizeObserver(function() {
                true === e2.setSize() && e2.body.emitter.emit("_requestRedraw");
              }), n2 = this.frame;
              o2.observe(n2), this._cleanupCallbacks.push(function() {
                o2.unobserve(n2);
              });
            } else {
              var r2 = xO(function() {
                true === e2.setSize() && e2.body.emitter.emit("_requestRedraw");
              }, 1e3);
              this._cleanupCallbacks.push(function() {
                clearInterval(r2);
              });
            }
            var s2 = Wo(i2 = this._onResize).call(i2, this);
            window.addEventListener("resize", s2), this._cleanupCallbacks.push(function() {
              window.removeEventListener("resize", s2);
            });
          }
        } }, { key: "_cleanUp", value: function() {
          var t3, e2, i2;
          Qf(t3 = hp(e2 = Pp(i2 = this._cleanupCallbacks).call(i2, 0)).call(e2)).call(t3, function(t4) {
            try {
              t4();
            } catch (t5) {
              console.error(t5);
            }
          });
        } }, { key: "_onResize", value: function() {
          this.setSize(), this.body.emitter.emit("_redraw");
        } }, { key: "_getCameraState", value: function() {
          var t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.pixelRatio;
          true === this.initialized && (this.cameraState.previousWidth = this.frame.canvas.width / t3, this.cameraState.previousHeight = this.frame.canvas.height / t3, this.cameraState.scale = this.body.view.scale, this.cameraState.position = this.DOMtoCanvas({ x: 0.5 * this.frame.canvas.width / t3, y: 0.5 * this.frame.canvas.height / t3 }));
        } }, { key: "_setCameraState", value: function() {
          if (void 0 !== this.cameraState.scale && 0 !== this.frame.canvas.clientWidth && 0 !== this.frame.canvas.clientHeight && 0 !== this.pixelRatio && this.cameraState.previousWidth > 0 && this.cameraState.previousHeight > 0) {
            var t3 = this.frame.canvas.width / this.pixelRatio / this.cameraState.previousWidth, e2 = this.frame.canvas.height / this.pixelRatio / this.cameraState.previousHeight, i2 = this.cameraState.scale;
            1 != t3 && 1 != e2 ? i2 = 0.5 * this.cameraState.scale * (t3 + e2) : 1 != t3 ? i2 = this.cameraState.scale * t3 : 1 != e2 && (i2 = this.cameraState.scale * e2), this.body.view.scale = i2;
            var o2 = this.DOMtoCanvas({ x: 0.5 * this.frame.canvas.clientWidth, y: 0.5 * this.frame.canvas.clientHeight }), n2 = { x: o2.x - this.cameraState.position.x, y: o2.y - this.cameraState.position.y };
            this.body.view.translation.x += n2.x * this.body.view.scale, this.body.view.translation.y += n2.y * this.body.view.scale;
          }
        } }, { key: "_prepareValue", value: function(t3) {
          if ("number" == typeof t3) return t3 + "px";
          if ("string" == typeof t3) {
            if (-1 !== Vv(t3).call(t3, "%") || -1 !== Vv(t3).call(t3, "px")) return t3;
            if (-1 === Vv(t3).call(t3, "%")) return t3 + "px";
          }
          throw new Error("Could not use the value supplied for width or height:" + t3);
        } }, { key: "_create", value: function() {
          for (; this.body.container.hasChildNodes(); ) this.body.container.removeChild(this.body.container.firstChild);
          if (this.frame = document.createElement("div"), this.frame.className = "vis-network", this.frame.style.position = "relative", this.frame.style.overflow = "hidden", this.frame.tabIndex = 0, this.frame.canvas = document.createElement("canvas"), this.frame.canvas.style.position = "relative", this.frame.appendChild(this.frame.canvas), this.frame.canvas.getContext) this._setPixelRatio(), this.setTransform();
          else {
            var t3 = document.createElement("DIV");
            t3.style.color = "red", t3.style.fontWeight = "bold", t3.style.padding = "10px", t3.innerText = "Error: your browser does not support HTML canvas", this.frame.canvas.appendChild(t3);
          }
          this.body.container.appendChild(this.frame), this.body.view.scale = 1, this.body.view.translation = { x: 0.5 * this.frame.canvas.clientWidth, y: 0.5 * this.frame.canvas.clientHeight }, this._bindHammer();
        } }, { key: "_bindHammer", value: function() {
          var t3 = this;
          void 0 !== this.hammer && this.hammer.destroy(), this.drag = {}, this.pinch = {}, this.hammer = new ub(this.frame.canvas), this.hammer.get("pinch").set({ enable: true }), this.hammer.get("pan").set({ threshold: 5, direction: ub.DIRECTION_ALL }), EO(this.hammer, function(e2) {
            t3.body.eventListeners.onTouch(e2);
          }), this.hammer.on("tap", function(e2) {
            t3.body.eventListeners.onTap(e2);
          }), this.hammer.on("doubletap", function(e2) {
            t3.body.eventListeners.onDoubleTap(e2);
          }), this.hammer.on("press", function(e2) {
            t3.body.eventListeners.onHold(e2);
          }), this.hammer.on("panstart", function(e2) {
            t3.body.eventListeners.onDragStart(e2);
          }), this.hammer.on("panmove", function(e2) {
            t3.body.eventListeners.onDrag(e2);
          }), this.hammer.on("panend", function(e2) {
            t3.body.eventListeners.onDragEnd(e2);
          }), this.hammer.on("pinch", function(e2) {
            t3.body.eventListeners.onPinch(e2);
          }), this.frame.canvas.addEventListener("wheel", function(e2) {
            t3.body.eventListeners.onMouseWheel(e2);
          }), this.frame.canvas.addEventListener("mousemove", function(e2) {
            t3.body.eventListeners.onMouseMove(e2);
          }), this.frame.canvas.addEventListener("contextmenu", function(e2) {
            t3.body.eventListeners.onContext(e2);
          }), this.hammerFrame = new ub(this.frame), OO(this.hammerFrame, function(e2) {
            t3.body.eventListeners.onRelease(e2);
          });
        } }, { key: "setSize", value: function() {
          var t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.options.width, e2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.options.height;
          t3 = this._prepareValue(t3), e2 = this._prepareValue(e2);
          var i2 = false, o2 = this.frame.canvas.width, n2 = this.frame.canvas.height, r2 = this.pixelRatio;
          if (this._setPixelRatio(), t3 != this.options.width || e2 != this.options.height || this.frame.style.width != t3 || this.frame.style.height != e2) this._getCameraState(r2), this.frame.style.width = t3, this.frame.style.height = e2, this.frame.canvas.style.width = "100%", this.frame.canvas.style.height = "100%", this.frame.canvas.width = Math.round(this.frame.canvas.clientWidth * this.pixelRatio), this.frame.canvas.height = Math.round(this.frame.canvas.clientHeight * this.pixelRatio), this.options.width = t3, this.options.height = e2, this.canvasViewCenter = { x: 0.5 * this.frame.clientWidth, y: 0.5 * this.frame.clientHeight }, i2 = true;
          else {
            var s2 = Math.round(this.frame.canvas.clientWidth * this.pixelRatio), a2 = Math.round(this.frame.canvas.clientHeight * this.pixelRatio);
            this.frame.canvas.width === s2 && this.frame.canvas.height === a2 || this._getCameraState(r2), this.frame.canvas.width !== s2 && (this.frame.canvas.width = s2, i2 = true), this.frame.canvas.height !== a2 && (this.frame.canvas.height = a2, i2 = true);
          }
          return true === i2 && (this.body.emitter.emit("resize", { width: Math.round(this.frame.canvas.width / this.pixelRatio), height: Math.round(this.frame.canvas.height / this.pixelRatio), oldWidth: Math.round(o2 / this.pixelRatio), oldHeight: Math.round(n2 / this.pixelRatio) }), this._setCameraState()), this.initialized = true, i2;
        } }, { key: "getContext", value: function() {
          return this.frame.canvas.getContext("2d");
        } }, { key: "_determinePixelRatio", value: function() {
          var t3 = this.getContext();
          if (void 0 === t3) throw new Error("Could not get canvax context");
          var e2 = 1;
          return "undefined" != typeof window && (e2 = window.devicePixelRatio || 1), e2 / (t3.webkitBackingStorePixelRatio || t3.mozBackingStorePixelRatio || t3.msBackingStorePixelRatio || t3.oBackingStorePixelRatio || t3.backingStorePixelRatio || 1);
        } }, { key: "_setPixelRatio", value: function() {
          this.pixelRatio = this._determinePixelRatio();
        } }, { key: "setTransform", value: function() {
          var t3 = this.getContext();
          if (void 0 === t3) throw new Error("Could not get canvax context");
          t3.setTransform(this.pixelRatio, 0, 0, this.pixelRatio, 0, 0);
        } }, { key: "_XconvertDOMtoCanvas", value: function(t3) {
          return (t3 - this.body.view.translation.x) / this.body.view.scale;
        } }, { key: "_XconvertCanvasToDOM", value: function(t3) {
          return t3 * this.body.view.scale + this.body.view.translation.x;
        } }, { key: "_YconvertDOMtoCanvas", value: function(t3) {
          return (t3 - this.body.view.translation.y) / this.body.view.scale;
        } }, { key: "_YconvertCanvasToDOM", value: function(t3) {
          return t3 * this.body.view.scale + this.body.view.translation.y;
        } }, { key: "canvasToDOM", value: function(t3) {
          return { x: this._XconvertCanvasToDOM(t3.x), y: this._YconvertCanvasToDOM(t3.y) };
        } }, { key: "DOMtoCanvas", value: function(t3) {
          return { x: this._XconvertDOMtoCanvas(t3.x), y: this._YconvertDOMtoCanvas(t3.y) };
        } }]), t2;
      }();
      var SO = function() {
        function t2(e2, i2) {
          var o2, n2, r2 = this;
          vh(this, t2), this.body = e2, this.canvas = i2, this.animationSpeed = 1 / this.renderRefreshRate, this.animationEasingFunction = "easeInOutQuint", this.easingTime = 0, this.sourceScale = 0, this.targetScale = 0, this.sourceTranslation = 0, this.targetTranslation = 0, this.lockedOnNodeId = void 0, this.lockedOnNodeOffset = void 0, this.touchTime = 0, this.viewFunction = void 0, this.body.emitter.on("fit", Wo(o2 = this.fit).call(o2, this)), this.body.emitter.on("animationFinished", function() {
            r2.body.emitter.emit("_stopRendering");
          }), this.body.emitter.on("unlockNode", Wo(n2 = this.releaseNode).call(n2, this));
        }
        return wu(t2, [{ key: "setOptions", value: function() {
          var t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          this.options = t3;
        } }, { key: "fit", value: function(t3) {
          var e2 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
          t3 = function(t4, e3) {
            var i3 = wo({ nodes: e3, minZoomLevel: Number.MIN_VALUE, maxZoomLevel: 1 }, null != t4 ? t4 : {});
            if (!Of(i3.nodes)) throw new TypeError("Nodes has to be an array of ids.");
            if (0 === i3.nodes.length && (i3.nodes = e3), !("number" == typeof i3.minZoomLevel && i3.minZoomLevel > 0)) throw new TypeError("Min zoom level has to be a number higher than zero.");
            if (!("number" == typeof i3.maxZoomLevel && i3.minZoomLevel <= i3.maxZoomLevel)) throw new TypeError("Max zoom level has to be a number higher than min zoom level.");
            return i3;
          }(t3, this.body.nodeIndices);
          var i2, o2, n2 = this.canvas.frame.canvas.clientWidth, r2 = this.canvas.frame.canvas.clientHeight;
          if (0 === n2 || 0 === r2) o2 = 1, i2 = mO.getRange(this.body.nodes, t3.nodes);
          else if (true === e2) {
            var s2 = 0;
            for (var a2 in this.body.nodes) {
              if (Object.prototype.hasOwnProperty.call(this.body.nodes, a2)) true === this.body.nodes[a2].predefinedPosition && (s2 += 1);
            }
            if (s2 > 0.5 * this.body.nodeIndices.length) return void this.fit(t3, false);
            i2 = mO.getRange(this.body.nodes, t3.nodes), o2 = 12.662 / (this.body.nodeIndices.length + 7.4147) + 0.0964822, o2 *= Math.min(n2 / 600, r2 / 600);
          } else {
            this.body.emitter.emit("_resizeNodes"), i2 = mO.getRange(this.body.nodes, t3.nodes);
            var h2 = n2 / (1.1 * Math.abs(i2.maxX - i2.minX)), d2 = r2 / (1.1 * Math.abs(i2.maxY - i2.minY));
            o2 = h2 <= d2 ? h2 : d2;
          }
          o2 > t3.maxZoomLevel ? o2 = t3.maxZoomLevel : o2 < t3.minZoomLevel && (o2 = t3.minZoomLevel);
          var l2 = { position: mO.findCenter(i2), scale: o2, animation: t3.animation };
          this.moveTo(l2);
        } }, { key: "focus", value: function(t3) {
          var e2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          if (void 0 !== this.body.nodes[t3]) {
            var i2 = { x: this.body.nodes[t3].x, y: this.body.nodes[t3].y };
            e2.position = i2, e2.lockedOnNode = t3, this.moveTo(e2);
          } else console.error("Node: " + t3 + " cannot be found.");
        } }, { key: "moveTo", value: function(t3) {
          if (void 0 !== t3) {
            if (null != t3.offset) {
              if (null != t3.offset.x) {
                if (t3.offset.x = +t3.offset.x, !Tk(t3.offset.x)) throw new TypeError('The option "offset.x" has to be a finite number.');
              } else t3.offset.x = 0;
              if (null != t3.offset.y) {
                if (t3.offset.y = +t3.offset.y, !Tk(t3.offset.y)) throw new TypeError('The option "offset.y" has to be a finite number.');
              } else t3.offset.x = 0;
            } else t3.offset = { x: 0, y: 0 };
            if (null != t3.position) {
              if (null != t3.position.x) {
                if (t3.position.x = +t3.position.x, !Tk(t3.position.x)) throw new TypeError('The option "position.x" has to be a finite number.');
              } else t3.position.x = 0;
              if (null != t3.position.y) {
                if (t3.position.y = +t3.position.y, !Tk(t3.position.y)) throw new TypeError('The option "position.y" has to be a finite number.');
              } else t3.position.x = 0;
            } else t3.position = this.getViewPosition();
            if (null != t3.scale) {
              if (t3.scale = +t3.scale, !(t3.scale > 0)) throw new TypeError('The option "scale" has to be a number greater than zero.');
            } else t3.scale = this.body.view.scale;
            void 0 === t3.animation && (t3.animation = { duration: 0 }), false === t3.animation && (t3.animation = { duration: 0 }), true === t3.animation && (t3.animation = {}), void 0 === t3.animation.duration && (t3.animation.duration = 1e3), void 0 === t3.animation.easingFunction && (t3.animation.easingFunction = "easeInOutQuad"), this.animateView(t3);
          } else t3 = {};
        } }, { key: "animateView", value: function(t3) {
          if (void 0 !== t3) {
            this.animationEasingFunction = t3.animation.easingFunction, this.releaseNode(), true === t3.locked && (this.lockedOnNodeId = t3.lockedOnNode, this.lockedOnNodeOffset = t3.offset), 0 != this.easingTime && this._transitionRedraw(true), this.sourceScale = this.body.view.scale, this.sourceTranslation = this.body.view.translation, this.targetScale = t3.scale, this.body.view.scale = this.targetScale;
            var e2, i2, o2 = this.canvas.DOMtoCanvas({ x: 0.5 * this.canvas.frame.canvas.clientWidth, y: 0.5 * this.canvas.frame.canvas.clientHeight }), n2 = o2.x - t3.position.x, r2 = o2.y - t3.position.y;
            if (this.targetTranslation = { x: this.sourceTranslation.x + n2 * this.targetScale + t3.offset.x, y: this.sourceTranslation.y + r2 * this.targetScale + t3.offset.y }, 0 === t3.animation.duration) if (null != this.lockedOnNodeId) this.viewFunction = Wo(e2 = this._lockedRedraw).call(e2, this), this.body.emitter.on("initRedraw", this.viewFunction);
            else this.body.view.scale = this.targetScale, this.body.view.translation = this.targetTranslation, this.body.emitter.emit("_requestRedraw");
            else this.animationSpeed = 1 / (60 * t3.animation.duration * 1e-3) || 1 / 60, this.animationEasingFunction = t3.animation.easingFunction, this.viewFunction = Wo(i2 = this._transitionRedraw).call(i2, this), this.body.emitter.on("initRedraw", this.viewFunction), this.body.emitter.emit("_startRendering");
          }
        } }, { key: "_lockedRedraw", value: function() {
          var t3 = this.body.nodes[this.lockedOnNodeId].x, e2 = this.body.nodes[this.lockedOnNodeId].y, i2 = this.canvas.DOMtoCanvas({ x: 0.5 * this.canvas.frame.canvas.clientWidth, y: 0.5 * this.canvas.frame.canvas.clientHeight }), o2 = i2.x - t3, n2 = i2.y - e2, r2 = this.body.view.translation, s2 = { x: r2.x + o2 * this.body.view.scale + this.lockedOnNodeOffset.x, y: r2.y + n2 * this.body.view.scale + this.lockedOnNodeOffset.y };
          this.body.view.translation = s2;
        } }, { key: "releaseNode", value: function() {
          void 0 !== this.lockedOnNodeId && void 0 !== this.viewFunction && (this.body.emitter.off("initRedraw", this.viewFunction), this.lockedOnNodeId = void 0, this.lockedOnNodeOffset = void 0);
        } }, { key: "_transitionRedraw", value: function() {
          var t3 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
          this.easingTime += this.animationSpeed, this.easingTime = true === t3 ? 1 : this.easingTime;
          var e2 = Jm[this.animationEasingFunction](this.easingTime);
          if (this.body.view.scale = this.sourceScale + (this.targetScale - this.sourceScale) * e2, this.body.view.translation = { x: this.sourceTranslation.x + (this.targetTranslation.x - this.sourceTranslation.x) * e2, y: this.sourceTranslation.y + (this.targetTranslation.y - this.sourceTranslation.y) * e2 }, this.easingTime >= 1) {
            var i2;
            if (this.body.emitter.off("initRedraw", this.viewFunction), this.easingTime = 0, null != this.lockedOnNodeId) this.viewFunction = Wo(i2 = this._lockedRedraw).call(i2, this), this.body.emitter.on("initRedraw", this.viewFunction);
            this.body.emitter.emit("animationFinished");
          }
        } }, { key: "getScale", value: function() {
          return this.body.view.scale;
        } }, { key: "getViewPosition", value: function() {
          return this.canvas.DOMtoCanvas({ x: 0.5 * this.canvas.frame.canvas.clientWidth, y: 0.5 * this.canvas.frame.canvas.clientHeight });
        } }]), t2;
      }();
      function TO(t2) {
        var e2, i2 = t2 && t2.preventDefault || false, o2 = t2 && t2.container || window, n2 = {}, r2 = { keydown: {}, keyup: {} }, s2 = {};
        for (e2 = 97; e2 <= 122; e2++) s2[String.fromCharCode(e2)] = { code: e2 - 97 + 65, shift: false };
        for (e2 = 65; e2 <= 90; e2++) s2[String.fromCharCode(e2)] = { code: e2, shift: true };
        for (e2 = 0; e2 <= 9; e2++) s2["" + e2] = { code: 48 + e2, shift: false };
        for (e2 = 1; e2 <= 12; e2++) s2["F" + e2] = { code: 111 + e2, shift: false };
        for (e2 = 0; e2 <= 9; e2++) s2["num" + e2] = { code: 96 + e2, shift: false };
        s2["num*"] = { code: 106, shift: false }, s2["num+"] = { code: 107, shift: false }, s2["num-"] = { code: 109, shift: false }, s2["num/"] = { code: 111, shift: false }, s2["num."] = { code: 110, shift: false }, s2.left = { code: 37, shift: false }, s2.up = { code: 38, shift: false }, s2.right = { code: 39, shift: false }, s2.down = { code: 40, shift: false }, s2.space = { code: 32, shift: false }, s2.enter = { code: 13, shift: false }, s2.shift = { code: 16, shift: void 0 }, s2.esc = { code: 27, shift: false }, s2.backspace = { code: 8, shift: false }, s2.tab = { code: 9, shift: false }, s2.ctrl = { code: 17, shift: false }, s2.alt = { code: 18, shift: false }, s2.delete = { code: 46, shift: false }, s2.pageup = { code: 33, shift: false }, s2.pagedown = { code: 34, shift: false }, s2["="] = { code: 187, shift: false }, s2["-"] = { code: 189, shift: false }, s2["]"] = { code: 221, shift: false }, s2["["] = { code: 219, shift: false };
        var a2 = function(t3) {
          d2(t3, "keydown");
        }, h2 = function(t3) {
          d2(t3, "keyup");
        }, d2 = function(t3, e3) {
          if (void 0 !== r2[e3][t3.keyCode]) {
            for (var o3 = r2[e3][t3.keyCode], n3 = 0; n3 < o3.length; n3++) (void 0 === o3[n3].shift || 1 == o3[n3].shift && 1 == t3.shiftKey || 0 == o3[n3].shift && 0 == t3.shiftKey) && o3[n3].fn(t3);
            1 == i2 && t3.preventDefault();
          }
        };
        return n2.bind = function(t3, e3, i3) {
          if (void 0 === i3 && (i3 = "keydown"), void 0 === s2[t3]) throw new Error("unsupported key: " + t3);
          void 0 === r2[i3][s2[t3].code] && (r2[i3][s2[t3].code] = []), r2[i3][s2[t3].code].push({ fn: e3, shift: s2[t3].shift });
        }, n2.bindAll = function(t3, e3) {
          for (var i3 in void 0 === e3 && (e3 = "keydown"), s2) s2.hasOwnProperty(i3) && n2.bind(i3, t3, e3);
        }, n2.getKey = function(t3) {
          for (var e3 in s2) if (s2.hasOwnProperty(e3)) {
            if (1 == t3.shiftKey && 1 == s2[e3].shift && t3.keyCode == s2[e3].code) return e3;
            if (0 == t3.shiftKey && 0 == s2[e3].shift && t3.keyCode == s2[e3].code) return e3;
            if (t3.keyCode == s2[e3].code && "shift" == e3) return e3;
          }
          return "unknown key, currently not supported";
        }, n2.unbind = function(t3, e3, i3) {
          if (void 0 === i3 && (i3 = "keydown"), void 0 === s2[t3]) throw new Error("unsupported key: " + t3);
          if (void 0 !== e3) {
            var o3 = [], n3 = r2[i3][s2[t3].code];
            if (void 0 !== n3) for (var a3 = 0; a3 < n3.length; a3++) n3[a3].fn == e3 && n3[a3].shift == s2[t3].shift || o3.push(r2[i3][s2[t3].code][a3]);
            r2[i3][s2[t3].code] = o3;
          } else r2[i3][s2[t3].code] = [];
        }, n2.reset = function() {
          r2 = { keydown: {}, keyup: {} };
        }, n2.destroy = function() {
          r2 = { keydown: {}, keyup: {} }, o2.removeEventListener("keydown", a2, true), o2.removeEventListener("keyup", h2, true);
        }, o2.addEventListener("keydown", a2, true), o2.addEventListener("keyup", h2, true), n2;
      }
      var MO = function() {
        function t2(e2, i2) {
          var o2 = this;
          vh(this, t2), this.body = e2, this.canvas = i2, this.iconsCreated = false, this.navigationHammers = [], this.boundFunctions = {}, this.touchTime = 0, this.activated = false, this.body.emitter.on("activate", function() {
            o2.activated = true, o2.configureKeyboardBindings();
          }), this.body.emitter.on("deactivate", function() {
            o2.activated = false, o2.configureKeyboardBindings();
          }), this.body.emitter.on("destroy", function() {
            void 0 !== o2.keycharm && o2.keycharm.destroy();
          }), this.options = {};
        }
        return wu(t2, [{ key: "setOptions", value: function(t3) {
          void 0 !== t3 && (this.options = t3, this.create());
        } }, { key: "create", value: function() {
          true === this.options.navigationButtons ? false === this.iconsCreated && this.loadNavigationElements() : true === this.iconsCreated && this.cleanNavigation(), this.configureKeyboardBindings();
        } }, { key: "cleanNavigation", value: function() {
          if (0 != this.navigationHammers.length) {
            for (var t3 = 0; t3 < this.navigationHammers.length; t3++) this.navigationHammers[t3].destroy();
            this.navigationHammers = [];
          }
          this.navigationDOM && this.navigationDOM.wrapper && this.navigationDOM.wrapper.parentNode && this.navigationDOM.wrapper.parentNode.removeChild(this.navigationDOM.wrapper), this.iconsCreated = false;
        } }, { key: "loadNavigationElements", value: function() {
          var t3 = this;
          this.cleanNavigation(), this.navigationDOM = {};
          var e2 = ["up", "down", "left", "right", "zoomIn", "zoomOut", "zoomExtends"], i2 = ["_moveUp", "_moveDown", "_moveLeft", "_moveRight", "_zoomIn", "_zoomOut", "_fit"];
          this.navigationDOM.wrapper = document.createElement("div"), this.navigationDOM.wrapper.className = "vis-navigation", this.canvas.frame.appendChild(this.navigationDOM.wrapper);
          for (var o2 = 0; o2 < e2.length; o2++) {
            this.navigationDOM[e2[o2]] = document.createElement("div"), this.navigationDOM[e2[o2]].className = "vis-button vis-" + e2[o2], this.navigationDOM.wrapper.appendChild(this.navigationDOM[e2[o2]]);
            var n2, r2, s2 = new ub(this.navigationDOM[e2[o2]]);
            if ("_fit" === i2[o2]) EO(s2, Wo(n2 = this._fit).call(n2, this));
            else EO(s2, Wo(r2 = this.bindToRedraw).call(r2, this, i2[o2]));
            this.navigationHammers.push(s2);
          }
          var a2 = new ub(this.canvas.frame);
          OO(a2, function() {
            t3._stopMovement();
          }), this.navigationHammers.push(a2), this.iconsCreated = true;
        } }, { key: "bindToRedraw", value: function(t3) {
          var e2;
          void 0 === this.boundFunctions[t3] && (this.boundFunctions[t3] = Wo(e2 = this[t3]).call(e2, this), this.body.emitter.on("initRedraw", this.boundFunctions[t3]), this.body.emitter.emit("_startRendering"));
        } }, { key: "unbindFromRedraw", value: function(t3) {
          void 0 !== this.boundFunctions[t3] && (this.body.emitter.off("initRedraw", this.boundFunctions[t3]), this.body.emitter.emit("_stopRendering"), delete this.boundFunctions[t3]);
        } }, { key: "_fit", value: function() {
          (/* @__PURE__ */ new Date()).valueOf() - this.touchTime > 700 && (this.body.emitter.emit("fit", { duration: 700 }), this.touchTime = (/* @__PURE__ */ new Date()).valueOf());
        } }, { key: "_stopMovement", value: function() {
          for (var t3 in this.boundFunctions) Object.prototype.hasOwnProperty.call(this.boundFunctions, t3) && (this.body.emitter.off("initRedraw", this.boundFunctions[t3]), this.body.emitter.emit("_stopRendering"));
          this.boundFunctions = {};
        } }, { key: "_moveUp", value: function() {
          this.body.view.translation.y += this.options.keyboard.speed.y;
        } }, { key: "_moveDown", value: function() {
          this.body.view.translation.y -= this.options.keyboard.speed.y;
        } }, { key: "_moveLeft", value: function() {
          this.body.view.translation.x += this.options.keyboard.speed.x;
        } }, { key: "_moveRight", value: function() {
          this.body.view.translation.x -= this.options.keyboard.speed.x;
        } }, { key: "_zoomIn", value: function() {
          var t3 = this.body.view.scale, e2 = this.body.view.scale * (1 + this.options.keyboard.speed.zoom), i2 = this.body.view.translation, o2 = e2 / t3, n2 = (1 - o2) * this.canvas.canvasViewCenter.x + i2.x * o2, r2 = (1 - o2) * this.canvas.canvasViewCenter.y + i2.y * o2;
          this.body.view.scale = e2, this.body.view.translation = { x: n2, y: r2 }, this.body.emitter.emit("zoom", { direction: "+", scale: this.body.view.scale, pointer: null });
        } }, { key: "_zoomOut", value: function() {
          var t3 = this.body.view.scale, e2 = this.body.view.scale / (1 + this.options.keyboard.speed.zoom), i2 = this.body.view.translation, o2 = e2 / t3, n2 = (1 - o2) * this.canvas.canvasViewCenter.x + i2.x * o2, r2 = (1 - o2) * this.canvas.canvasViewCenter.y + i2.y * o2;
          this.body.view.scale = e2, this.body.view.translation = { x: n2, y: r2 }, this.body.emitter.emit("zoom", { direction: "-", scale: this.body.view.scale, pointer: null });
        } }, { key: "configureKeyboardBindings", value: function() {
          var t3, e2, i2, o2, n2, r2, s2, a2, h2, d2, l2, c2, u2, f2, p2, v2, g2, y2, m2, b2, w2, k2, _2, x2, E2 = this;
          (void 0 !== this.keycharm && this.keycharm.destroy(), true === this.options.keyboard.enabled) && (true === this.options.keyboard.bindToWindow ? this.keycharm = TO({ container: window, preventDefault: true }) : this.keycharm = TO({ container: this.canvas.frame, preventDefault: true }), this.keycharm.reset(), true === this.activated && (Wo(t3 = this.keycharm).call(t3, "up", function() {
            E2.bindToRedraw("_moveUp");
          }, "keydown"), Wo(e2 = this.keycharm).call(e2, "down", function() {
            E2.bindToRedraw("_moveDown");
          }, "keydown"), Wo(i2 = this.keycharm).call(i2, "left", function() {
            E2.bindToRedraw("_moveLeft");
          }, "keydown"), Wo(o2 = this.keycharm).call(o2, "right", function() {
            E2.bindToRedraw("_moveRight");
          }, "keydown"), Wo(n2 = this.keycharm).call(n2, "=", function() {
            E2.bindToRedraw("_zoomIn");
          }, "keydown"), Wo(r2 = this.keycharm).call(r2, "num+", function() {
            E2.bindToRedraw("_zoomIn");
          }, "keydown"), Wo(s2 = this.keycharm).call(s2, "num-", function() {
            E2.bindToRedraw("_zoomOut");
          }, "keydown"), Wo(a2 = this.keycharm).call(a2, "-", function() {
            E2.bindToRedraw("_zoomOut");
          }, "keydown"), Wo(h2 = this.keycharm).call(h2, "[", function() {
            E2.bindToRedraw("_zoomOut");
          }, "keydown"), Wo(d2 = this.keycharm).call(d2, "]", function() {
            E2.bindToRedraw("_zoomIn");
          }, "keydown"), Wo(l2 = this.keycharm).call(l2, "pageup", function() {
            E2.bindToRedraw("_zoomIn");
          }, "keydown"), Wo(c2 = this.keycharm).call(c2, "pagedown", function() {
            E2.bindToRedraw("_zoomOut");
          }, "keydown"), Wo(u2 = this.keycharm).call(u2, "up", function() {
            E2.unbindFromRedraw("_moveUp");
          }, "keyup"), Wo(f2 = this.keycharm).call(f2, "down", function() {
            E2.unbindFromRedraw("_moveDown");
          }, "keyup"), Wo(p2 = this.keycharm).call(p2, "left", function() {
            E2.unbindFromRedraw("_moveLeft");
          }, "keyup"), Wo(v2 = this.keycharm).call(v2, "right", function() {
            E2.unbindFromRedraw("_moveRight");
          }, "keyup"), Wo(g2 = this.keycharm).call(g2, "=", function() {
            E2.unbindFromRedraw("_zoomIn");
          }, "keyup"), Wo(y2 = this.keycharm).call(y2, "num+", function() {
            E2.unbindFromRedraw("_zoomIn");
          }, "keyup"), Wo(m2 = this.keycharm).call(m2, "num-", function() {
            E2.unbindFromRedraw("_zoomOut");
          }, "keyup"), Wo(b2 = this.keycharm).call(b2, "-", function() {
            E2.unbindFromRedraw("_zoomOut");
          }, "keyup"), Wo(w2 = this.keycharm).call(w2, "[", function() {
            E2.unbindFromRedraw("_zoomOut");
          }, "keyup"), Wo(k2 = this.keycharm).call(k2, "]", function() {
            E2.unbindFromRedraw("_zoomIn");
          }, "keyup"), Wo(_2 = this.keycharm).call(_2, "pageup", function() {
            E2.unbindFromRedraw("_zoomIn");
          }, "keyup"), Wo(x2 = this.keycharm).call(x2, "pagedown", function() {
            E2.unbindFromRedraw("_zoomOut");
          }, "keyup")));
        } }]), t2;
      }();
      function PO(t2, e2) {
        var i2 = void 0 !== cf && ph(t2) || t2["@@iterator"];
        if (!i2) {
          if (Of(t2) || (i2 = function(t3, e3) {
            var i3;
            if (!t3) return;
            if ("string" == typeof t3) return DO(t3, e3);
            var o3 = mf(i3 = Object.prototype.toString.call(t3)).call(i3, 8, -1);
            "Object" === o3 && t3.constructor && (o3 = t3.constructor.name);
            if ("Map" === o3 || "Set" === o3) return Xa(t3);
            if ("Arguments" === o3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3)) return DO(t3, e3);
          }(t2)) || e2 && t2 && "number" == typeof t2.length) {
            i2 && (t2 = i2);
            var o2 = 0, n2 = function() {
            };
            return { s: n2, n: function() {
              return o2 >= t2.length ? { done: true } : { done: false, value: t2[o2++] };
            }, e: function(t3) {
              throw t3;
            }, f: n2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var r2, s2 = true, a2 = false;
        return { s: function() {
          i2 = i2.call(t2);
        }, n: function() {
          var t3 = i2.next();
          return s2 = t3.done, t3;
        }, e: function(t3) {
          a2 = true, r2 = t3;
        }, f: function() {
          try {
            s2 || null == i2.return || i2.return();
          } finally {
            if (a2) throw r2;
          }
        } };
      }
      function DO(t2, e2) {
        (null == e2 || e2 > t2.length) && (e2 = t2.length);
        for (var i2 = 0, o2 = new Array(e2); i2 < e2; i2++) o2[i2] = t2[i2];
        return o2;
      }
      var IO = function() {
        function t2(e2, i2, o2) {
          var n2, r2, s2, a2, h2, d2, l2, c2, u2, f2, p2, v2, g2;
          vh(this, t2), this.body = e2, this.canvas = i2, this.selectionHandler = o2, this.navigationHandler = new MO(e2, i2), this.body.eventListeners.onTap = Wo(n2 = this.onTap).call(n2, this), this.body.eventListeners.onTouch = Wo(r2 = this.onTouch).call(r2, this), this.body.eventListeners.onDoubleTap = Wo(s2 = this.onDoubleTap).call(s2, this), this.body.eventListeners.onHold = Wo(a2 = this.onHold).call(a2, this), this.body.eventListeners.onDragStart = Wo(h2 = this.onDragStart).call(h2, this), this.body.eventListeners.onDrag = Wo(d2 = this.onDrag).call(d2, this), this.body.eventListeners.onDragEnd = Wo(l2 = this.onDragEnd).call(l2, this), this.body.eventListeners.onMouseWheel = Wo(c2 = this.onMouseWheel).call(c2, this), this.body.eventListeners.onPinch = Wo(u2 = this.onPinch).call(u2, this), this.body.eventListeners.onMouseMove = Wo(f2 = this.onMouseMove).call(f2, this), this.body.eventListeners.onRelease = Wo(p2 = this.onRelease).call(p2, this), this.body.eventListeners.onContext = Wo(v2 = this.onContext).call(v2, this), this.touchTime = 0, this.drag = {}, this.pinch = {}, this.popup = void 0, this.popupObj = void 0, this.popupTimer = void 0, this.body.functions.getPointer = Wo(g2 = this.getPointer).call(g2, this), this.options = {}, this.defaultOptions = { dragNodes: true, dragView: true, hover: false, keyboard: { enabled: false, speed: { x: 10, y: 10, zoom: 0.02 }, bindToWindow: true, autoFocus: true }, navigationButtons: false, tooltipDelay: 300, zoomView: true, zoomSpeed: 1 }, wo(this.options, this.defaultOptions), this.bindEventListeners();
        }
        return wu(t2, [{ key: "bindEventListeners", value: function() {
          var t3 = this;
          this.body.emitter.on("destroy", function() {
            clearTimeout(t3.popupTimer), delete t3.body.functions.getPointer;
          });
        } }, { key: "setOptions", value: function(t3) {
          if (void 0 !== t3) {
            Am(["hideEdgesOnDrag", "hideEdgesOnZoom", "hideNodesOnDrag", "keyboard", "multiselect", "selectable", "selectConnectedEdges"], this.options, t3), Qm(this.options, t3, "keyboard"), t3.tooltip && (wo(this.options.tooltip, t3.tooltip), t3.tooltip.color && (this.options.tooltip.color = Um(t3.tooltip.color)));
          }
          this.navigationHandler.setOptions(this.options);
        } }, { key: "getPointer", value: function(t3) {
          return { x: t3.x - (e2 = this.canvas.frame.canvas, e2.getBoundingClientRect().left), y: t3.y - Lm(this.canvas.frame.canvas) };
          var e2;
        } }, { key: "onTouch", value: function(t3) {
          (/* @__PURE__ */ new Date()).valueOf() - this.touchTime > 50 && (this.drag.pointer = this.getPointer(t3.center), this.drag.pinched = false, this.pinch.scale = this.body.view.scale, this.touchTime = (/* @__PURE__ */ new Date()).valueOf());
        } }, { key: "onTap", value: function(t3) {
          var e2 = this.getPointer(t3.center), i2 = this.selectionHandler.options.multiselect && (t3.changedPointers[0].ctrlKey || t3.changedPointers[0].metaKey);
          this.checkSelectionChanges(e2, i2), this.selectionHandler.commitAndEmit(e2, t3), this.selectionHandler.generateClickEvent("click", t3, e2);
        } }, { key: "onDoubleTap", value: function(t3) {
          var e2 = this.getPointer(t3.center);
          this.selectionHandler.generateClickEvent("doubleClick", t3, e2);
        } }, { key: "onHold", value: function(t3) {
          var e2 = this.getPointer(t3.center), i2 = this.selectionHandler.options.multiselect;
          this.checkSelectionChanges(e2, i2), this.selectionHandler.commitAndEmit(e2, t3), this.selectionHandler.generateClickEvent("click", t3, e2), this.selectionHandler.generateClickEvent("hold", t3, e2);
        } }, { key: "onRelease", value: function(t3) {
          if ((/* @__PURE__ */ new Date()).valueOf() - this.touchTime > 10) {
            var e2 = this.getPointer(t3.center);
            this.selectionHandler.generateClickEvent("release", t3, e2), this.touchTime = (/* @__PURE__ */ new Date()).valueOf();
          }
        } }, { key: "onContext", value: function(t3) {
          var e2 = this.getPointer({ x: t3.clientX, y: t3.clientY });
          this.selectionHandler.generateClickEvent("oncontext", t3, e2);
        } }, { key: "checkSelectionChanges", value: function(t3) {
          true === (arguments.length > 1 && void 0 !== arguments[1] && arguments[1]) ? this.selectionHandler.selectAdditionalOnPoint(t3) : this.selectionHandler.selectOnPoint(t3);
        } }, { key: "_determineDifference", value: function(t3, e2) {
          var i2 = function(t4, e3) {
            for (var i3 = [], o2 = 0; o2 < t4.length; o2++) {
              var n2 = t4[o2];
              -1 === Vv(e3).call(e3, n2) && i3.push(n2);
            }
            return i3;
          };
          return { nodes: i2(t3.nodes, e2.nodes), edges: i2(t3.edges, e2.edges) };
        } }, { key: "onDragStart", value: function(t3) {
          if (!this.drag.dragging) {
            void 0 === this.drag.pointer && this.onTouch(t3);
            var e2 = this.selectionHandler.getNodeAt(this.drag.pointer);
            if (this.drag.dragging = true, this.drag.selection = [], this.drag.translation = wo({}, this.body.view.translation), this.drag.nodeId = void 0, t3.srcEvent.shiftKey) {
              this.body.selectionBox.show = true;
              var i2 = this.getPointer(t3.center);
              this.body.selectionBox.position.start = { x: this.canvas._XconvertDOMtoCanvas(i2.x), y: this.canvas._YconvertDOMtoCanvas(i2.y) }, this.body.selectionBox.position.end = { x: this.canvas._XconvertDOMtoCanvas(i2.x), y: this.canvas._YconvertDOMtoCanvas(i2.y) };
            } else if (void 0 !== e2 && true === this.options.dragNodes) {
              this.drag.nodeId = e2.id, false === e2.isSelected() && this.selectionHandler.setSelection({ nodes: [e2.id] }), this.selectionHandler.generateClickEvent("dragStart", t3, this.drag.pointer);
              var o2, n2 = PO(this.selectionHandler.getSelectedNodes());
              try {
                for (n2.s(); !(o2 = n2.n()).done; ) {
                  var r2 = o2.value, s2 = { id: r2.id, node: r2, x: r2.x, y: r2.y, xFixed: r2.options.fixed.x, yFixed: r2.options.fixed.y };
                  r2.options.fixed.x = true, r2.options.fixed.y = true, this.drag.selection.push(s2);
                }
              } catch (t4) {
                n2.e(t4);
              } finally {
                n2.f();
              }
            } else this.selectionHandler.generateClickEvent("dragStart", t3, this.drag.pointer, void 0, true);
          }
        } }, { key: "onDrag", value: function(t3) {
          var e2 = this;
          if (true !== this.drag.pinched) {
            this.body.emitter.emit("unlockNode");
            var i2 = this.getPointer(t3.center), o2 = this.drag.selection;
            if (o2 && o2.length && true === this.options.dragNodes) {
              this.selectionHandler.generateClickEvent("dragging", t3, i2);
              var n2 = i2.x - this.drag.pointer.x, r2 = i2.y - this.drag.pointer.y;
              Qf(o2).call(o2, function(t4) {
                var i3 = t4.node;
                false === t4.xFixed && (i3.x = e2.canvas._XconvertDOMtoCanvas(e2.canvas._XconvertCanvasToDOM(t4.x) + n2)), false === t4.yFixed && (i3.y = e2.canvas._YconvertDOMtoCanvas(e2.canvas._YconvertCanvasToDOM(t4.y) + r2));
              }), this.body.emitter.emit("startSimulation");
            } else {
              if (t3.srcEvent.shiftKey) {
                if (this.selectionHandler.generateClickEvent("dragging", t3, i2, void 0, true), void 0 === this.drag.pointer) return void this.onDragStart(t3);
                this.body.selectionBox.position.end = { x: this.canvas._XconvertDOMtoCanvas(i2.x), y: this.canvas._YconvertDOMtoCanvas(i2.y) }, this.body.emitter.emit("_requestRedraw");
              }
              if (true === this.options.dragView && !t3.srcEvent.shiftKey) {
                if (this.selectionHandler.generateClickEvent("dragging", t3, i2, void 0, true), void 0 === this.drag.pointer) return void this.onDragStart(t3);
                var s2 = i2.x - this.drag.pointer.x, a2 = i2.y - this.drag.pointer.y;
                this.body.view.translation = { x: this.drag.translation.x + s2, y: this.drag.translation.y + a2 }, this.body.emitter.emit("_requestRedraw");
              }
            }
          }
        } }, { key: "onDragEnd", value: function(t3) {
          var e2 = this;
          if (this.drag.dragging = false, this.body.selectionBox.show) {
            var i2;
            this.body.selectionBox.show = false;
            var o2 = this.body.selectionBox.position, n2 = { minX: Math.min(o2.start.x, o2.end.x), minY: Math.min(o2.start.y, o2.end.y), maxX: Math.max(o2.start.x, o2.end.x), maxY: Math.max(o2.start.y, o2.end.y) }, r2 = lv(i2 = this.body.nodeIndices).call(i2, function(t4) {
              var i3 = e2.body.nodes[t4];
              return i3.x >= n2.minX && i3.x <= n2.maxX && i3.y >= n2.minY && i3.y <= n2.maxY;
            });
            Qf(r2).call(r2, function(t4) {
              return e2.selectionHandler.selectObject(e2.body.nodes[t4]);
            });
            var s2 = this.getPointer(t3.center);
            this.selectionHandler.commitAndEmit(s2, t3), this.selectionHandler.generateClickEvent("dragEnd", t3, this.getPointer(t3.center), void 0, true), this.body.emitter.emit("_requestRedraw");
          } else {
            var a2 = this.drag.selection;
            a2 && a2.length ? (Qf(a2).call(a2, function(t4) {
              t4.node.options.fixed.x = t4.xFixed, t4.node.options.fixed.y = t4.yFixed;
            }), this.selectionHandler.generateClickEvent("dragEnd", t3, this.getPointer(t3.center)), this.body.emitter.emit("startSimulation")) : (this.selectionHandler.generateClickEvent("dragEnd", t3, this.getPointer(t3.center), void 0, true), this.body.emitter.emit("_requestRedraw"));
          }
        } }, { key: "onPinch", value: function(t3) {
          var e2 = this.getPointer(t3.center);
          this.drag.pinched = true, void 0 === this.pinch.scale && (this.pinch.scale = 1);
          var i2 = this.pinch.scale * t3.scale;
          this.zoom(i2, e2);
        } }, { key: "zoom", value: function(t3, e2) {
          if (true === this.options.zoomView) {
            var i2 = this.body.view.scale;
            t3 < 1e-5 && (t3 = 1e-5), t3 > 10 && (t3 = 10);
            var o2 = void 0;
            void 0 !== this.drag && true === this.drag.dragging && (o2 = this.canvas.DOMtoCanvas(this.drag.pointer));
            var n2 = this.body.view.translation, r2 = t3 / i2, s2 = (1 - r2) * e2.x + n2.x * r2, a2 = (1 - r2) * e2.y + n2.y * r2;
            if (this.body.view.scale = t3, this.body.view.translation = { x: s2, y: a2 }, null != o2) {
              var h2 = this.canvas.canvasToDOM(o2);
              this.drag.pointer.x = h2.x, this.drag.pointer.y = h2.y;
            }
            this.body.emitter.emit("_requestRedraw"), i2 < t3 ? this.body.emitter.emit("zoom", { direction: "+", scale: this.body.view.scale, pointer: e2 }) : this.body.emitter.emit("zoom", { direction: "-", scale: this.body.view.scale, pointer: e2 });
          }
        } }, { key: "onMouseWheel", value: function(t3) {
          if (true === this.options.zoomView) {
            if (0 !== t3.deltaY) {
              var e2 = this.body.view.scale;
              e2 *= 1 + (t3.deltaY < 0 ? 1 : -1) * (0.1 * this.options.zoomSpeed);
              var i2 = this.getPointer({ x: t3.clientX, y: t3.clientY });
              this.zoom(e2, i2);
            }
            t3.preventDefault();
          }
        } }, { key: "onMouseMove", value: function(t3) {
          var e2 = this, i2 = this.getPointer({ x: t3.clientX, y: t3.clientY }), o2 = false;
          void 0 !== this.popup && (false === this.popup.hidden && this._checkHidePopup(i2), false === this.popup.hidden && (o2 = true, this.popup.setPosition(i2.x + 3, i2.y - 5), this.popup.show())), this.options.keyboard.autoFocus && false === this.options.keyboard.bindToWindow && true === this.options.keyboard.enabled && this.canvas.frame.focus(), false === o2 && (void 0 !== this.popupTimer && (clearInterval(this.popupTimer), this.popupTimer = void 0), this.drag.dragging || (this.popupTimer = vg(function() {
            return e2._checkShowPopup(i2);
          }, this.options.tooltipDelay))), true === this.options.hover && this.selectionHandler.hoverObject(t3, i2);
        } }, { key: "_checkShowPopup", value: function(t3) {
          var e2 = this.canvas._XconvertDOMtoCanvas(t3.x), i2 = this.canvas._YconvertDOMtoCanvas(t3.y), o2 = { left: e2, top: i2, right: e2, bottom: i2 }, n2 = void 0 === this.popupObj ? void 0 : this.popupObj.id, r2 = false, s2 = "node";
          if (void 0 === this.popupObj) {
            for (var a2, h2 = this.body.nodeIndices, d2 = this.body.nodes, l2 = [], c2 = 0; c2 < h2.length; c2++) true === (a2 = d2[h2[c2]]).isOverlappingWith(o2) && (r2 = true, void 0 !== a2.getTitle() && l2.push(h2[c2]));
            l2.length > 0 && (this.popupObj = d2[l2[l2.length - 1]], r2 = true);
          }
          if (void 0 === this.popupObj && false === r2) {
            for (var u2, f2 = this.body.edgeIndices, p2 = this.body.edges, v2 = [], g2 = 0; g2 < f2.length; g2++) true === (u2 = p2[f2[g2]]).isOverlappingWith(o2) && true === u2.connected && void 0 !== u2.getTitle() && v2.push(f2[g2]);
            v2.length > 0 && (this.popupObj = p2[v2[v2.length - 1]], s2 = "edge");
          }
          void 0 !== this.popupObj ? this.popupObj.id !== n2 && (void 0 === this.popup && (this.popup = new fb(this.canvas.frame)), this.popup.popupTargetType = s2, this.popup.popupTargetId = this.popupObj.id, this.popup.setPosition(t3.x + 3, t3.y - 5), this.popup.setText(this.popupObj.getTitle()), this.popup.show(), this.body.emitter.emit("showPopup", this.popupObj.id)) : void 0 !== this.popup && (this.popup.hide(), this.body.emitter.emit("hidePopup"));
        } }, { key: "_checkHidePopup", value: function(t3) {
          var e2 = this.selectionHandler._pointerToPositionObject(t3), i2 = false;
          if ("node" === this.popup.popupTargetType) {
            if (void 0 !== this.body.nodes[this.popup.popupTargetId] && true === (i2 = this.body.nodes[this.popup.popupTargetId].isOverlappingWith(e2))) {
              var o2 = this.selectionHandler.getNodeAt(t3);
              i2 = void 0 !== o2 && o2.id === this.popup.popupTargetId;
            }
          } else void 0 === this.selectionHandler.getNodeAt(t3) && void 0 !== this.body.edges[this.popup.popupTargetId] && (i2 = this.body.edges[this.popup.popupTargetId].isOverlappingWith(e2));
          false === i2 && (this.popupObj = void 0, this.popup.hide(), this.body.emitter.emit("hidePopup"));
        } }]), t2;
      }();
      ek("Set", function(t2) {
        return function() {
          return t2(this, arguments.length ? arguments[0] : void 0);
        };
      }, _k);
      var BO = o(it.Set), FO = y, zO = ok, NO = kw.getWeakData, AO = Rw, RO = oi, jO = Y, LO = et, HO = zw, WO = Jt, VO = Hn.set, qO = Hn.getterFor, UO = zd.find, YO = zd.findIndex, XO = FO([].splice), KO = 0, GO = function(t2) {
        return t2.frozen || (t2.frozen = new $O());
      }, $O = function() {
        this.entries = [];
      }, ZO = function(t2, e2) {
        return UO(t2.entries, function(t3) {
          return t3[0] === e2;
        });
      };
      $O.prototype = { get: function(t2) {
        var e2 = ZO(this, t2);
        if (e2) return e2[1];
      }, has: function(t2) {
        return !!ZO(this, t2);
      }, set: function(t2, e2) {
        var i2 = ZO(this, t2);
        i2 ? i2[1] = e2 : this.entries.push([t2, e2]);
      }, delete: function(t2) {
        var e2 = YO(this.entries, function(e3) {
          return e3[0] === t2;
        });
        return ~e2 && XO(this.entries, e2, 1), !!~e2;
      } };
      var QO, JO = { getConstructor: function(t2, e2, i2, o2) {
        var n2 = t2(function(t3, n3) {
          AO(t3, r2), VO(t3, { type: e2, id: KO++, frozen: void 0 }), jO(n3) || HO(n3, t3[o2], { that: t3, AS_ENTRIES: i2 });
        }), r2 = n2.prototype, s2 = qO(e2), a2 = function(t3, e3, i3) {
          var o3 = s2(t3), n3 = NO(RO(e3), true);
          return true === n3 ? GO(o3).set(e3, i3) : n3[o3.id] = i3, t3;
        };
        return zO(r2, { delete: function(t3) {
          var e3 = s2(this);
          if (!LO(t3)) return false;
          var i3 = NO(t3);
          return true === i3 ? GO(e3).delete(t3) : i3 && WO(i3, e3.id) && delete i3[e3.id];
        }, has: function(t3) {
          var e3 = s2(this);
          if (!LO(t3)) return false;
          var i3 = NO(t3);
          return true === i3 ? GO(e3).has(t3) : i3 && WO(i3, e3.id);
        } }), zO(r2, i2 ? { get: function(t3) {
          var e3 = s2(this);
          if (LO(t3)) {
            var i3 = NO(t3);
            return true === i3 ? GO(e3).get(t3) : i3 ? i3[e3.id] : void 0;
          }
        }, set: function(t3, e3) {
          return a2(this, t3, e3);
        } } : { add: function(t3) {
          return a2(this, t3, true);
        } }), n2;
      } }, tC = rw, eC = r, iC = y, oC = ok, nC = kw, rC = ek, sC = JO, aC = et, hC = Hn.enforce, dC = s, lC = En, cC = Object, uC = Array.isArray, fC = cC.isExtensible, pC = cC.isFrozen, vC = cC.isSealed, gC = cC.freeze, yC = cC.seal, mC = {}, bC = {}, wC = !eC.ActiveXObject && "ActiveXObject" in eC, kC = function(t2) {
        return function() {
          return t2(this, arguments.length ? arguments[0] : void 0);
        };
      }, _C = rC("WeakMap", kC, sC), xC = _C.prototype, EC = iC(xC.set);
      if (lC) if (wC) {
        QO = sC.getConstructor(kC, "WeakMap", true), nC.enable();
        var OC = iC(xC.delete), CC = iC(xC.has), SC = iC(xC.get);
        oC(xC, { delete: function(t2) {
          if (aC(t2) && !fC(t2)) {
            var e2 = hC(this);
            return e2.frozen || (e2.frozen = new QO()), OC(this, t2) || e2.frozen.delete(t2);
          }
          return OC(this, t2);
        }, has: function(t2) {
          if (aC(t2) && !fC(t2)) {
            var e2 = hC(this);
            return e2.frozen || (e2.frozen = new QO()), CC(this, t2) || e2.frozen.has(t2);
          }
          return CC(this, t2);
        }, get: function(t2) {
          if (aC(t2) && !fC(t2)) {
            var e2 = hC(this);
            return e2.frozen || (e2.frozen = new QO()), CC(this, t2) ? SC(this, t2) : e2.frozen.get(t2);
          }
          return SC(this, t2);
        }, set: function(t2, e2) {
          if (aC(t2) && !fC(t2)) {
            var i2 = hC(this);
            i2.frozen || (i2.frozen = new QO()), CC(this, t2) ? EC(this, t2, e2) : i2.frozen.set(t2, e2);
          } else EC(this, t2, e2);
          return this;
        } });
      } else tC && dC(function() {
        var t2 = gC([]);
        return EC(new _C(), t2, 1), !pC(t2);
      }) && oC(xC, { set: function(t2, e2) {
        var i2;
        return uC(t2) && (pC(t2) ? i2 = mC : vC(t2) && (i2 = bC)), EC(this, t2, e2), i2 === mC && gC(t2), i2 === bC && yC(t2), this;
      } });
      var TC, MC, PC, DC, IC, BC = o(it.WeakMap);
      function FC(t2, e2, i2, o2) {
        if ("a" === i2 && !o2) throw new TypeError("Private accessor was defined without a getter");
        if ("function" == typeof e2 ? t2 !== e2 || !o2 : !e2.has(t2)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return "m" === i2 ? o2 : "a" === i2 ? o2.call(t2) : o2 ? o2.value : e2.get(t2);
      }
      function zC(t2, e2, i2, o2, n2) {
        if ("m" === o2) throw new TypeError("Private method is not writable");
        if ("a" === o2 && !n2) throw new TypeError("Private accessor was defined without a setter");
        if ("function" == typeof e2 ? t2 !== e2 || !n2 : !e2.has(t2)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return "a" === o2 ? n2.call(t2, i2) : n2 ? n2.value = i2 : e2.set(t2, i2), i2;
      }
      function NC(t2, e2) {
        var i2 = void 0 !== cf && ph(t2) || t2["@@iterator"];
        if (!i2) {
          if (Of(t2) || (i2 = function(t3, e3) {
            var i3;
            if (!t3) return;
            if ("string" == typeof t3) return AC(t3, e3);
            var o3 = mf(i3 = Object.prototype.toString.call(t3)).call(i3, 8, -1);
            "Object" === o3 && t3.constructor && (o3 = t3.constructor.name);
            if ("Map" === o3 || "Set" === o3) return Xa(t3);
            if ("Arguments" === o3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3)) return AC(t3, e3);
          }(t2)) || e2 && t2 && "number" == typeof t2.length) {
            i2 && (t2 = i2);
            var o2 = 0, n2 = function() {
            };
            return { s: n2, n: function() {
              return o2 >= t2.length ? { done: true } : { done: false, value: t2[o2++] };
            }, e: function(t3) {
              throw t3;
            }, f: n2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var r2, s2 = true, a2 = false;
        return { s: function() {
          i2 = i2.call(t2);
        }, n: function() {
          var t3 = i2.next();
          return s2 = t3.done, t3;
        }, e: function(t3) {
          a2 = true, r2 = t3;
        }, f: function() {
          try {
            s2 || null == i2.return || i2.return();
          } finally {
            if (a2) throw r2;
          }
        } };
      }
      function AC(t2, e2) {
        (null == e2 || e2 > t2.length) && (e2 = t2.length);
        for (var i2 = 0, o2 = new Array(e2); i2 < e2; i2++) o2[i2] = t2[i2];
        return o2;
      }
      function RC(t2, e2) {
        var i2, o2 = new BO(), n2 = NC(e2);
        try {
          for (n2.s(); !(i2 = n2.n()).done; ) {
            var r2 = i2.value;
            t2.has(r2) || o2.add(r2);
          }
        } catch (t3) {
          n2.e(t3);
        } finally {
          n2.f();
        }
        return o2;
      }
      "function" == typeof SuppressedError && SuppressedError;
      var jC = function() {
        function t2() {
          vh(this, t2), TC.set(this, new BO()), MC.set(this, new BO());
        }
        return wu(t2, [{ key: "size", get: function() {
          return FC(this, MC, "f").size;
        } }, { key: "add", value: function() {
          for (var t3 = arguments.length, e2 = new Array(t3), i2 = 0; i2 < t3; i2++) e2[i2] = arguments[i2];
          for (var o2 = 0, n2 = e2; o2 < n2.length; o2++) {
            var r2 = n2[o2];
            FC(this, MC, "f").add(r2);
          }
        } }, { key: "delete", value: function() {
          for (var t3 = arguments.length, e2 = new Array(t3), i2 = 0; i2 < t3; i2++) e2[i2] = arguments[i2];
          for (var o2 = 0, n2 = e2; o2 < n2.length; o2++) {
            var r2 = n2[o2];
            FC(this, MC, "f").delete(r2);
          }
        } }, { key: "clear", value: function() {
          FC(this, MC, "f").clear();
        } }, { key: "getSelection", value: function() {
          return lf(FC(this, MC, "f"));
        } }, { key: "getChanges", value: function() {
          return { added: lf(RC(FC(this, TC, "f"), FC(this, MC, "f"))), deleted: lf(RC(FC(this, MC, "f"), FC(this, TC, "f"))), previous: lf(new BO(FC(this, TC, "f"))), current: lf(new BO(FC(this, MC, "f"))) };
        } }, { key: "commit", value: function() {
          var t3 = this.getChanges();
          zC(this, TC, FC(this, MC, "f"), "f"), zC(this, MC, new BO(FC(this, TC, "f")), "f");
          var e2, i2 = NC(t3.added);
          try {
            for (i2.s(); !(e2 = i2.n()).done; ) {
              e2.value.select();
            }
          } catch (t4) {
            i2.e(t4);
          } finally {
            i2.f();
          }
          var o2, n2 = NC(t3.deleted);
          try {
            for (n2.s(); !(o2 = n2.n()).done; ) {
              o2.value.unselect();
            }
          } catch (t4) {
            n2.e(t4);
          } finally {
            n2.f();
          }
          return t3;
        } }]), t2;
      }();
      TC = new BC(), MC = new BC();
      var LC = function() {
        function t2() {
          var e2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : function() {
          };
          vh(this, t2), PC.set(this, new jC()), DC.set(this, new jC()), IC.set(this, void 0), zC(this, IC, e2, "f");
        }
        return wu(t2, [{ key: "sizeNodes", get: function() {
          return FC(this, PC, "f").size;
        } }, { key: "sizeEdges", get: function() {
          return FC(this, DC, "f").size;
        } }, { key: "getNodes", value: function() {
          return FC(this, PC, "f").getSelection();
        } }, { key: "getEdges", value: function() {
          return FC(this, DC, "f").getSelection();
        } }, { key: "addNodes", value: function() {
          var t3;
          (t3 = FC(this, PC, "f")).add.apply(t3, arguments);
        } }, { key: "addEdges", value: function() {
          var t3;
          (t3 = FC(this, DC, "f")).add.apply(t3, arguments);
        } }, { key: "deleteNodes", value: function(t3) {
          FC(this, PC, "f").delete(t3);
        } }, { key: "deleteEdges", value: function(t3) {
          FC(this, DC, "f").delete(t3);
        } }, { key: "clear", value: function() {
          FC(this, PC, "f").clear(), FC(this, DC, "f").clear();
        } }, { key: "commit", value: function() {
          for (var t3, e2, i2 = { nodes: FC(this, PC, "f").commit(), edges: FC(this, DC, "f").commit() }, o2 = arguments.length, n2 = new Array(o2), r2 = 0; r2 < o2; r2++) n2[r2] = arguments[r2];
          return (t3 = FC(this, IC, "f")).call.apply(t3, yf(e2 = [this, i2]).call(e2, n2)), i2;
        } }]), t2;
      }();
      function HC(t2, e2) {
        var i2 = void 0 !== cf && ph(t2) || t2["@@iterator"];
        if (!i2) {
          if (Of(t2) || (i2 = function(t3, e3) {
            var i3;
            if (!t3) return;
            if ("string" == typeof t3) return WC(t3, e3);
            var o3 = mf(i3 = Object.prototype.toString.call(t3)).call(i3, 8, -1);
            "Object" === o3 && t3.constructor && (o3 = t3.constructor.name);
            if ("Map" === o3 || "Set" === o3) return Xa(t3);
            if ("Arguments" === o3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3)) return WC(t3, e3);
          }(t2)) || e2 && t2 && "number" == typeof t2.length) {
            i2 && (t2 = i2);
            var o2 = 0, n2 = function() {
            };
            return { s: n2, n: function() {
              return o2 >= t2.length ? { done: true } : { done: false, value: t2[o2++] };
            }, e: function(t3) {
              throw t3;
            }, f: n2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var r2, s2 = true, a2 = false;
        return { s: function() {
          i2 = i2.call(t2);
        }, n: function() {
          var t3 = i2.next();
          return s2 = t3.done, t3;
        }, e: function(t3) {
          a2 = true, r2 = t3;
        }, f: function() {
          try {
            s2 || null == i2.return || i2.return();
          } finally {
            if (a2) throw r2;
          }
        } };
      }
      function WC(t2, e2) {
        (null == e2 || e2 > t2.length) && (e2 = t2.length);
        for (var i2 = 0, o2 = new Array(e2); i2 < e2; i2++) o2[i2] = t2[i2];
        return o2;
      }
      PC = new BC(), DC = new BC(), IC = new BC();
      var VC = function() {
        function t2(e2, i2) {
          var o2 = this;
          vh(this, t2), this.body = e2, this.canvas = i2, this._selectionAccumulator = new LC(), this.hoverObj = { nodes: {}, edges: {} }, this.options = {}, this.defaultOptions = { multiselect: false, selectable: true, selectConnectedEdges: true, hoverConnectedEdges: true }, wo(this.options, this.defaultOptions), this.body.emitter.on("_dataChanged", function() {
            o2.updateSelection();
          });
        }
        return wu(t2, [{ key: "setOptions", value: function(t3) {
          if (void 0 !== t3) {
            Nm(["multiselect", "hoverConnectedEdges", "selectable", "selectConnectedEdges"], this.options, t3);
          }
        } }, { key: "selectOnPoint", value: function(t3) {
          var e2 = false;
          if (true === this.options.selectable) {
            var i2 = this.getNodeAt(t3) || this.getEdgeAt(t3);
            this.unselectAll(), void 0 !== i2 && (e2 = this.selectObject(i2)), this.body.emitter.emit("_requestRedraw");
          }
          return e2;
        } }, { key: "selectAdditionalOnPoint", value: function(t3) {
          var e2 = false;
          if (true === this.options.selectable) {
            var i2 = this.getNodeAt(t3) || this.getEdgeAt(t3);
            void 0 !== i2 && (e2 = true, true === i2.isSelected() ? this.deselectObject(i2) : this.selectObject(i2), this.body.emitter.emit("_requestRedraw"));
          }
          return e2;
        } }, { key: "_initBaseEvent", value: function(t3, e2) {
          var i2 = {};
          return i2.pointer = { DOM: { x: e2.x, y: e2.y }, canvas: this.canvas.DOMtoCanvas(e2) }, i2.event = t3, i2;
        } }, { key: "generateClickEvent", value: function(t3, e2, i2, o2) {
          var n2 = arguments.length > 4 && void 0 !== arguments[4] && arguments[4], r2 = this._initBaseEvent(e2, i2);
          if (true === n2) r2.nodes = [], r2.edges = [];
          else {
            var s2 = this.getSelection();
            r2.nodes = s2.nodes, r2.edges = s2.edges;
          }
          void 0 !== o2 && (r2.previousSelection = o2), "click" == t3 && (r2.items = this.getClickedItems(i2)), void 0 !== e2.controlEdge && (r2.controlEdge = e2.controlEdge), this.body.emitter.emit(t3, r2);
        } }, { key: "selectObject", value: function(t3) {
          var e2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.options.selectConnectedEdges;
          if (void 0 !== t3) {
            if (t3 instanceof iE) {
              var i2;
              if (true === e2) (i2 = this._selectionAccumulator).addEdges.apply(i2, lf(t3.edges));
              this._selectionAccumulator.addNodes(t3);
            } else this._selectionAccumulator.addEdges(t3);
            return true;
          }
          return false;
        } }, { key: "deselectObject", value: function(t3) {
          true === t3.isSelected() && (t3.selected = false, this._removeFromSelection(t3));
        } }, { key: "_getAllNodesOverlappingWith", value: function(t3) {
          for (var e2 = [], i2 = this.body.nodes, o2 = 0; o2 < this.body.nodeIndices.length; o2++) {
            var n2 = this.body.nodeIndices[o2];
            i2[n2].isOverlappingWith(t3) && e2.push(n2);
          }
          return e2;
        } }, { key: "_pointerToPositionObject", value: function(t3) {
          var e2 = this.canvas.DOMtoCanvas(t3);
          return { left: e2.x - 1, top: e2.y + 1, right: e2.x + 1, bottom: e2.y - 1 };
        } }, { key: "getNodeAt", value: function(t3) {
          var e2 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], i2 = this._pointerToPositionObject(t3), o2 = this._getAllNodesOverlappingWith(i2);
          return o2.length > 0 ? true === e2 ? this.body.nodes[o2[o2.length - 1]] : o2[o2.length - 1] : void 0;
        } }, { key: "_getEdgesOverlappingWith", value: function(t3, e2) {
          for (var i2 = this.body.edges, o2 = 0; o2 < this.body.edgeIndices.length; o2++) {
            var n2 = this.body.edgeIndices[o2];
            i2[n2].isOverlappingWith(t3) && e2.push(n2);
          }
        } }, { key: "_getAllEdgesOverlappingWith", value: function(t3) {
          var e2 = [];
          return this._getEdgesOverlappingWith(t3, e2), e2;
        } }, { key: "getEdgeAt", value: function(t3) {
          for (var e2 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], i2 = this.canvas.DOMtoCanvas(t3), o2 = 10, n2 = null, r2 = this.body.edges, s2 = 0; s2 < this.body.edgeIndices.length; s2++) {
            var a2 = this.body.edgeIndices[s2], h2 = r2[a2];
            if (h2.connected) {
              var d2 = h2.from.x, l2 = h2.from.y, c2 = h2.to.x, u2 = h2.to.y, f2 = h2.edgeType.getDistanceToEdge(d2, l2, c2, u2, i2.x, i2.y);
              f2 < o2 && (n2 = a2, o2 = f2);
            }
          }
          return null !== n2 ? true === e2 ? this.body.edges[n2] : n2 : void 0;
        } }, { key: "_addToHover", value: function(t3) {
          t3 instanceof iE ? this.hoverObj.nodes[t3.id] = t3 : this.hoverObj.edges[t3.id] = t3;
        } }, { key: "_removeFromSelection", value: function(t3) {
          var e2;
          t3 instanceof iE ? (this._selectionAccumulator.deleteNodes(t3), (e2 = this._selectionAccumulator).deleteEdges.apply(e2, lf(t3.edges))) : this._selectionAccumulator.deleteEdges(t3);
        } }, { key: "unselectAll", value: function() {
          this._selectionAccumulator.clear();
        } }, { key: "getSelectedNodeCount", value: function() {
          return this._selectionAccumulator.sizeNodes;
        } }, { key: "getSelectedEdgeCount", value: function() {
          return this._selectionAccumulator.sizeEdges;
        } }, { key: "_hoverConnectedEdges", value: function(t3) {
          for (var e2 = 0; e2 < t3.edges.length; e2++) {
            var i2 = t3.edges[e2];
            i2.hover = true, this._addToHover(i2);
          }
        } }, { key: "emitBlurEvent", value: function(t3, e2, i2) {
          var o2 = this._initBaseEvent(t3, e2);
          true === i2.hover && (i2.hover = false, i2 instanceof iE ? (o2.node = i2.id, this.body.emitter.emit("blurNode", o2)) : (o2.edge = i2.id, this.body.emitter.emit("blurEdge", o2)));
        } }, { key: "emitHoverEvent", value: function(t3, e2, i2) {
          var o2 = this._initBaseEvent(t3, e2), n2 = false;
          return false === i2.hover && (i2.hover = true, this._addToHover(i2), n2 = true, i2 instanceof iE ? (o2.node = i2.id, this.body.emitter.emit("hoverNode", o2)) : (o2.edge = i2.id, this.body.emitter.emit("hoverEdge", o2))), n2;
        } }, { key: "hoverObject", value: function(t3, e2) {
          var i2 = this.getNodeAt(e2);
          void 0 === i2 && (i2 = this.getEdgeAt(e2));
          var o2 = false;
          for (var n2 in this.hoverObj.nodes) Object.prototype.hasOwnProperty.call(this.hoverObj.nodes, n2) && (void 0 === i2 || i2 instanceof iE && i2.id != n2 || i2 instanceof JE) && (this.emitBlurEvent(t3, e2, this.hoverObj.nodes[n2]), delete this.hoverObj.nodes[n2], o2 = true);
          for (var r2 in this.hoverObj.edges) Object.prototype.hasOwnProperty.call(this.hoverObj.edges, r2) && (true === o2 ? (this.hoverObj.edges[r2].hover = false, delete this.hoverObj.edges[r2]) : (void 0 === i2 || i2 instanceof JE && i2.id != r2 || i2 instanceof iE && !i2.hover) && (this.emitBlurEvent(t3, e2, this.hoverObj.edges[r2]), delete this.hoverObj.edges[r2], o2 = true));
          if (void 0 !== i2) {
            var s2 = zf(this.hoverObj.edges).length, a2 = zf(this.hoverObj.nodes).length;
            (o2 || i2 instanceof JE && 0 === s2 && 0 === a2 || i2 instanceof iE && 0 === s2 && 0 === a2) && (o2 = this.emitHoverEvent(t3, e2, i2)), i2 instanceof iE && true === this.options.hoverConnectedEdges && this._hoverConnectedEdges(i2);
          }
          true === o2 && this.body.emitter.emit("_requestRedraw");
        } }, { key: "commitWithoutEmitting", value: function() {
          this._selectionAccumulator.commit();
        } }, { key: "commitAndEmit", value: function(t3, e2) {
          var i2 = false, o2 = this._selectionAccumulator.commit(), n2 = { nodes: o2.nodes.previous, edges: o2.edges.previous };
          o2.edges.deleted.length > 0 && (this.generateClickEvent("deselectEdge", e2, t3, n2), i2 = true), o2.nodes.deleted.length > 0 && (this.generateClickEvent("deselectNode", e2, t3, n2), i2 = true), o2.nodes.added.length > 0 && (this.generateClickEvent("selectNode", e2, t3), i2 = true), o2.edges.added.length > 0 && (this.generateClickEvent("selectEdge", e2, t3), i2 = true), true === i2 && this.generateClickEvent("select", e2, t3);
        } }, { key: "getSelection", value: function() {
          return { nodes: this.getSelectedNodeIds(), edges: this.getSelectedEdgeIds() };
        } }, { key: "getSelectedNodes", value: function() {
          return this._selectionAccumulator.getNodes();
        } }, { key: "getSelectedEdges", value: function() {
          return this._selectionAccumulator.getEdges();
        } }, { key: "getSelectedNodeIds", value: function() {
          var t3;
          return If(t3 = this._selectionAccumulator.getNodes()).call(t3, function(t4) {
            return t4.id;
          });
        } }, { key: "getSelectedEdgeIds", value: function() {
          var t3;
          return If(t3 = this._selectionAccumulator.getEdges()).call(t3, function(t4) {
            return t4.id;
          });
        } }, { key: "setSelection", value: function(t3) {
          var e2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          if (!t3 || !t3.nodes && !t3.edges) throw new TypeError("Selection must be an object with nodes and/or edges properties");
          if ((e2.unselectAll || void 0 === e2.unselectAll) && this.unselectAll(), t3.nodes) {
            var i2, o2 = HC(t3.nodes);
            try {
              for (o2.s(); !(i2 = o2.n()).done; ) {
                var n2 = i2.value, r2 = this.body.nodes[n2];
                if (!r2) throw new RangeError('Node with id "' + n2 + '" not found');
                this.selectObject(r2, e2.highlightEdges);
              }
            } catch (t4) {
              o2.e(t4);
            } finally {
              o2.f();
            }
          }
          if (t3.edges) {
            var s2, a2 = HC(t3.edges);
            try {
              for (a2.s(); !(s2 = a2.n()).done; ) {
                var h2 = s2.value, d2 = this.body.edges[h2];
                if (!d2) throw new RangeError('Edge with id "' + h2 + '" not found');
                this.selectObject(d2);
              }
            } catch (t4) {
              a2.e(t4);
            } finally {
              a2.f();
            }
          }
          this.body.emitter.emit("_requestRedraw"), this._selectionAccumulator.commit();
        } }, { key: "selectNodes", value: function(t3) {
          var e2 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
          if (!t3 || void 0 === t3.length) throw "Selection must be an array with ids";
          this.setSelection({ nodes: t3 }, { highlightEdges: e2 });
        } }, { key: "selectEdges", value: function(t3) {
          if (!t3 || void 0 === t3.length) throw "Selection must be an array with ids";
          this.setSelection({ edges: t3 });
        } }, { key: "updateSelection", value: function() {
          for (var t3 in this._selectionAccumulator.getNodes()) Object.prototype.hasOwnProperty.call(this.body.nodes, t3.id) || this._selectionAccumulator.deleteNodes(t3);
          for (var e2 in this._selectionAccumulator.getEdges()) Object.prototype.hasOwnProperty.call(this.body.edges, e2.id) || this._selectionAccumulator.deleteEdges(e2);
        } }, { key: "getClickedItems", value: function(t3) {
          for (var e2 = this.canvas.DOMtoCanvas(t3), i2 = [], o2 = this.body.nodeIndices, n2 = this.body.nodes, r2 = o2.length - 1; r2 >= 0; r2--) {
            var s2 = n2[o2[r2]].getItemsOnPoint(e2);
            i2.push.apply(i2, s2);
          }
          for (var a2 = this.body.edgeIndices, h2 = this.body.edges, d2 = a2.length - 1; d2 >= 0; d2--) {
            var l2 = h2[a2[d2]].getItemsOnPoint(e2);
            i2.push.apply(i2, l2);
          }
          return i2;
        } }]), t2;
      }(), qC = hd, UC = Math.floor, YC = function(t2, e2) {
        var i2 = t2.length, o2 = UC(i2 / 2);
        return i2 < 8 ? XC(t2, e2) : KC(t2, YC(qC(t2, 0, o2), e2), YC(qC(t2, o2), e2), e2);
      }, XC = function(t2, e2) {
        for (var i2, o2, n2 = t2.length, r2 = 1; r2 < n2; ) {
          for (o2 = r2, i2 = t2[r2]; o2 && e2(t2[o2 - 1], i2) > 0; ) t2[o2] = t2[--o2];
          o2 !== r2++ && (t2[o2] = i2);
        }
        return t2;
      }, KC = function(t2, e2, i2, o2) {
        for (var n2 = e2.length, r2 = i2.length, s2 = 0, a2 = 0; s2 < n2 || a2 < r2; ) t2[s2 + a2] = s2 < n2 && a2 < r2 ? o2(e2[s2], i2[a2]) <= 0 ? e2[s2++] : i2[a2++] : s2 < n2 ? e2[s2++] : i2[a2++];
        return t2;
      }, GC = YC, $C = dt.match(/firefox\/(\d+)/i), ZC = !!$C && +$C[1], QC = /MSIE|Trident/.test(dt), JC = dt.match(/AppleWebKit\/(\d+)\./), tS = !!JC && +JC[1], eS = Mi, iS = y, oS = It, nS = $t, rS = Hi, sS = cp, aS = un, hS = s, dS = GC, lS = Hf, cS = ZC, uS = QC, fS = gt, pS = tS, vS = [], gS = iS(vS.sort), yS = iS(vS.push), mS = hS(function() {
        vS.sort(void 0);
      }), bS = hS(function() {
        vS.sort(null);
      }), wS = lS("sort"), kS = !hS(function() {
        if (fS) return fS < 70;
        if (!(cS && cS > 3)) {
          if (uS) return true;
          if (pS) return pS < 603;
          var t2, e2, i2, o2, n2 = "";
          for (t2 = 65; t2 < 76; t2++) {
            switch (e2 = String.fromCharCode(t2), t2) {
              case 66:
              case 69:
              case 70:
              case 72:
                i2 = 3;
                break;
              case 68:
              case 71:
                i2 = 4;
                break;
              default:
                i2 = 2;
            }
            for (o2 = 0; o2 < 47; o2++) vS.push({ k: e2 + o2, v: i2 });
          }
          for (vS.sort(function(t3, e3) {
            return e3.v - t3.v;
          }), o2 = 0; o2 < vS.length; o2++) e2 = vS[o2].k.charAt(0), n2.charAt(n2.length - 1) !== e2 && (n2 += e2);
          return "DGBEFHACIJK" !== n2;
        }
      });
      eS({ target: "Array", proto: true, forced: mS || !bS || !wS || !kS }, { sort: function(t2) {
        void 0 !== t2 && oS(t2);
        var e2 = nS(this);
        if (kS) return void 0 === t2 ? gS(e2) : gS(e2, t2);
        var i2, o2, n2 = [], r2 = rS(e2);
        for (o2 = 0; o2 < r2; o2++) o2 in e2 && yS(n2, e2[o2]);
        for (dS(n2, /* @__PURE__ */ function(t3) {
          return function(e3, i3) {
            return void 0 === i3 ? -1 : void 0 === e3 ? 1 : void 0 !== t3 ? +t3(e3, i3) || 0 : aS(e3) > aS(i3) ? 1 : -1;
          };
        }(t2)), i2 = rS(n2), o2 = 0; o2 < i2; ) e2[o2] = n2[o2++];
        for (; o2 < r2; ) sS(e2, o2++);
        return e2;
      } });
      var _S = zo("Array").sort, xS = ht, ES = _S, OS = Array.prototype, CS = function(t2) {
        var e2 = t2.sort;
        return t2 === OS || xS(OS, t2) && e2 === OS.sort ? ES : e2;
      }, SS = o(CS), TS = It, MS = $t, PS = U, DS = Hi, IS = TypeError, BS = function(t2) {
        return function(e2, i2, o2, n2) {
          TS(i2);
          var r2 = MS(e2), s2 = PS(r2), a2 = DS(r2), h2 = t2 ? a2 - 1 : 0, d2 = t2 ? -1 : 1;
          if (o2 < 2) for (; ; ) {
            if (h2 in s2) {
              n2 = s2[h2], h2 += d2;
              break;
            }
            if (h2 += d2, t2 ? h2 < 0 : a2 <= h2) throw new IS("Reduce of empty array with no initial value");
          }
          for (; t2 ? h2 >= 0 : a2 > h2; h2 += d2) h2 in s2 && (n2 = i2(n2, s2[h2], h2, r2));
          return n2;
        };
      }, FS = { left: BS(false), right: BS(true) }, zS = "process" === k(r.process), NS = FS.left;
      Mi({ target: "Array", proto: true, forced: !zS && gt > 79 && gt < 83 || !Hf("reduce") }, { reduce: function(t2) {
        var e2 = arguments.length;
        return NS(this, t2, e2, e2 > 1 ? arguments[1] : void 0);
      } });
      var AS = zo("Array").reduce, RS = ht, jS = AS, LS = Array.prototype, HS = function(t2) {
        var e2 = t2.reduce;
        return t2 === LS || RS(LS, t2) && e2 === LS.reduce ? jS : e2;
      }, WS = o(HS);
      function VS(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !sx) return false;
          if (sx.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(sx(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var i2, o2 = px(t2);
          if (e2) {
            var n2 = px(this).constructor;
            i2 = sx(o2, arguments, n2);
          } else i2 = o2.apply(this, arguments);
          return ux(this, i2);
        };
      }
      var qS = function() {
        function t2() {
          vh(this, t2);
        }
        return wu(t2, [{ key: "abstract", value: function() {
          throw new Error("Can't instantiate abstract class!");
        } }, { key: "fake_use", value: function() {
        } }, { key: "curveType", value: function() {
          return this.abstract();
        } }, { key: "getPosition", value: function(t3) {
          return this.fake_use(t3), this.abstract();
        } }, { key: "setPosition", value: function(t3, e2) {
          var i2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0;
          this.fake_use(t3, e2, i2), this.abstract();
        } }, { key: "getTreeSize", value: function(t3) {
          return this.fake_use(t3), this.abstract();
        } }, { key: "sort", value: function(t3) {
          this.fake_use(t3), this.abstract();
        } }, { key: "fix", value: function(t3, e2) {
          this.fake_use(t3, e2), this.abstract();
        } }, { key: "shift", value: function(t3, e2) {
          this.fake_use(t3, e2), this.abstract();
        } }]), t2;
      }(), US = function(t2) {
        cx(i2, t2);
        var e2 = VS(i2);
        function i2(t3) {
          var o2;
          return vh(this, i2), (o2 = e2.call(this)).layout = t3, o2;
        }
        return wu(i2, [{ key: "curveType", value: function() {
          return "horizontal";
        } }, { key: "getPosition", value: function(t3) {
          return t3.x;
        } }, { key: "setPosition", value: function(t3, e3) {
          var i3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0;
          void 0 !== i3 && this.layout.hierarchical.addToOrdering(t3, i3), t3.x = e3;
        } }, { key: "getTreeSize", value: function(t3) {
          var e3 = this.layout.hierarchical.getTreeSize(this.layout.body.nodes, t3);
          return { min: e3.min_x, max: e3.max_x };
        } }, { key: "sort", value: function(t3) {
          SS(t3).call(t3, function(t4, e3) {
            return t4.x - e3.x;
          });
        } }, { key: "fix", value: function(t3, e3) {
          t3.y = this.layout.options.hierarchical.levelSeparation * e3, t3.options.fixed.y = true;
        } }, { key: "shift", value: function(t3, e3) {
          this.layout.body.nodes[t3].x += e3;
        } }]), i2;
      }(qS), YS = function(t2) {
        cx(i2, t2);
        var e2 = VS(i2);
        function i2(t3) {
          var o2;
          return vh(this, i2), (o2 = e2.call(this)).layout = t3, o2;
        }
        return wu(i2, [{ key: "curveType", value: function() {
          return "vertical";
        } }, { key: "getPosition", value: function(t3) {
          return t3.y;
        } }, { key: "setPosition", value: function(t3, e3) {
          var i3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0;
          void 0 !== i3 && this.layout.hierarchical.addToOrdering(t3, i3), t3.y = e3;
        } }, { key: "getTreeSize", value: function(t3) {
          var e3 = this.layout.hierarchical.getTreeSize(this.layout.body.nodes, t3);
          return { min: e3.min_y, max: e3.max_y };
        } }, { key: "sort", value: function(t3) {
          SS(t3).call(t3, function(t4, e3) {
            return t4.y - e3.y;
          });
        } }, { key: "fix", value: function(t3, e3) {
          t3.x = this.layout.options.hierarchical.levelSeparation * e3, t3.options.fixed.x = true;
        } }, { key: "shift", value: function(t3, e3) {
          this.layout.body.nodes[t3].y += e3;
        } }]), i2;
      }(qS), XS = zd.every;
      Mi({ target: "Array", proto: true, forced: !Hf("every") }, { every: function(t2) {
        return XS(this, t2, arguments.length > 1 ? arguments[1] : void 0);
      } });
      var KS = zo("Array").every, GS = ht, $S = KS, ZS = Array.prototype, QS = function(t2) {
        var e2 = t2.every;
        return t2 === ZS || GS(ZS, t2) && e2 === ZS.every ? $S : e2;
      }, JS = o(QS);
      function tT(t2, e2) {
        var i2 = void 0 !== cf && ph(t2) || t2["@@iterator"];
        if (!i2) {
          if (Of(t2) || (i2 = function(t3, e3) {
            var i3;
            if (!t3) return;
            if ("string" == typeof t3) return eT(t3, e3);
            var o3 = mf(i3 = Object.prototype.toString.call(t3)).call(i3, 8, -1);
            "Object" === o3 && t3.constructor && (o3 = t3.constructor.name);
            if ("Map" === o3 || "Set" === o3) return Xa(t3);
            if ("Arguments" === o3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3)) return eT(t3, e3);
          }(t2)) || e2 && t2 && "number" == typeof t2.length) {
            i2 && (t2 = i2);
            var o2 = 0, n2 = function() {
            };
            return { s: n2, n: function() {
              return o2 >= t2.length ? { done: true } : { done: false, value: t2[o2++] };
            }, e: function(t3) {
              throw t3;
            }, f: n2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var r2, s2 = true, a2 = false;
        return { s: function() {
          i2 = i2.call(t2);
        }, n: function() {
          var t3 = i2.next();
          return s2 = t3.done, t3;
        }, e: function(t3) {
          a2 = true, r2 = t3;
        }, f: function() {
          try {
            s2 || null == i2.return || i2.return();
          } finally {
            if (a2) throw r2;
          }
        } };
      }
      function eT(t2, e2) {
        (null == e2 || e2 > t2.length) && (e2 = t2.length);
        for (var i2 = 0, o2 = new Array(e2); i2 < e2; i2++) o2[i2] = t2[i2];
        return o2;
      }
      function iT(t2, e2) {
        var i2 = new BO();
        return Qf(t2).call(t2, function(t3) {
          var e3;
          Qf(e3 = t3.edges).call(e3, function(t4) {
            t4.connected && i2.add(t4);
          });
        }), Qf(i2).call(i2, function(t3) {
          var i3 = t3.from.id, o2 = t3.to.id;
          null == e2[i3] && (e2[i3] = 0), (null == e2[o2] || e2[i3] >= e2[o2]) && (e2[o2] = e2[i3] + 1);
        }), e2;
      }
      function oT(t2, e2, i2, o2) {
        var n2, r2, s2 = Yv(null), a2 = WS(n2 = lf(N_(o2).call(o2))).call(n2, function(t3, e3) {
          return t3 + 1 + e3.edges.length;
        }, 0), h2 = i2 + "Id", d2 = "to" === i2 ? 1 : -1, l2 = tT(o2);
        try {
          var c2, u2 = function() {
            var n3 = df(r2.value, 2), l3 = n3[0], c3 = n3[1];
            if (!o2.has(l3) || !t2(c3)) return 0;
            s2[l3] = 0;
            for (var u3, f2, p2 = [c3], v2 = 0, g2 = function() {
              var t3, n4;
              if (!o2.has(l3)) return 0;
              var r3 = s2[u3.id] + d2;
              if (Qf(t3 = lv(n4 = u3.edges).call(n4, function(t4) {
                return t4.connected && t4.to !== t4.from && t4[i2] !== u3 && o2.has(t4.toId) && o2.has(t4.fromId);
              })).call(t3, function(t4) {
                var o3 = t4[h2], n5 = s2[o3];
                (null == n5 || e2(r3, n5)) && (s2[o3] = r3, p2.push(t4[i2]));
              }), v2 > a2) return { v: { v: iT(o2, s2) } };
              ++v2;
            }; u3 = p2.pop(); ) if (0 !== (f2 = g2()) && f2) return f2.v;
          };
          for (l2.s(); !(r2 = l2.n()).done; ) if (0 !== (c2 = u2()) && c2) return c2.v;
        } catch (t3) {
          l2.e(t3);
        } finally {
          l2.f();
        }
        return s2;
      }
      var nT = function() {
        function t2() {
          vh(this, t2), this.childrenReference = {}, this.parentReference = {}, this.trees = {}, this.distributionOrdering = {}, this.levels = {}, this.distributionIndex = {}, this.isTree = false, this.treeIndex = -1;
        }
        return wu(t2, [{ key: "addRelation", value: function(t3, e2) {
          void 0 === this.childrenReference[t3] && (this.childrenReference[t3] = []), this.childrenReference[t3].push(e2), void 0 === this.parentReference[e2] && (this.parentReference[e2] = []), this.parentReference[e2].push(t3);
        } }, { key: "checkIfTree", value: function() {
          for (var t3 in this.parentReference) if (this.parentReference[t3].length > 1) return void (this.isTree = false);
          this.isTree = true;
        } }, { key: "numTrees", value: function() {
          return this.treeIndex + 1;
        } }, { key: "setTreeIndex", value: function(t3, e2) {
          void 0 !== e2 && void 0 === this.trees[t3.id] && (this.trees[t3.id] = e2, this.treeIndex = Math.max(e2, this.treeIndex));
        } }, { key: "ensureLevel", value: function(t3) {
          void 0 === this.levels[t3] && (this.levels[t3] = 0);
        } }, { key: "getMaxLevel", value: function(t3) {
          var e2 = this, i2 = {};
          return function t4(o2) {
            if (void 0 !== i2[o2]) return i2[o2];
            var n2 = e2.levels[o2];
            if (e2.childrenReference[o2]) {
              var r2 = e2.childrenReference[o2];
              if (r2.length > 0) for (var s2 = 0; s2 < r2.length; s2++) n2 = Math.max(n2, t4(r2[s2]));
            }
            return i2[o2] = n2, n2;
          }(t3);
        } }, { key: "levelDownstream", value: function(t3, e2) {
          void 0 === this.levels[e2.id] && (void 0 === this.levels[t3.id] && (this.levels[t3.id] = 0), this.levels[e2.id] = this.levels[t3.id] + 1);
        } }, { key: "setMinLevelToZero", value: function(t3) {
          var e2 = 1e9;
          for (var i2 in t3) Object.prototype.hasOwnProperty.call(t3, i2) && void 0 !== this.levels[i2] && (e2 = Math.min(this.levels[i2], e2));
          for (var o2 in t3) Object.prototype.hasOwnProperty.call(t3, o2) && void 0 !== this.levels[o2] && (this.levels[o2] -= e2);
        } }, { key: "getTreeSize", value: function(t3, e2) {
          var i2 = 1e9, o2 = -1e9, n2 = 1e9, r2 = -1e9;
          for (var s2 in this.trees) if (Object.prototype.hasOwnProperty.call(this.trees, s2) && this.trees[s2] === e2) {
            var a2 = t3[s2];
            i2 = Math.min(a2.x, i2), o2 = Math.max(a2.x, o2), n2 = Math.min(a2.y, n2), r2 = Math.max(a2.y, r2);
          }
          return { min_x: i2, max_x: o2, min_y: n2, max_y: r2 };
        } }, { key: "hasSameParent", value: function(t3, e2) {
          var i2 = this.parentReference[t3.id], o2 = this.parentReference[e2.id];
          if (void 0 === i2 || void 0 === o2) return false;
          for (var n2 = 0; n2 < i2.length; n2++) for (var r2 = 0; r2 < o2.length; r2++) if (i2[n2] == o2[r2]) return true;
          return false;
        } }, { key: "inSameSubNetwork", value: function(t3, e2) {
          return this.trees[t3.id] === this.trees[e2.id];
        } }, { key: "getLevels", value: function() {
          return zf(this.distributionOrdering);
        } }, { key: "addToOrdering", value: function(t3, e2) {
          void 0 === this.distributionOrdering[e2] && (this.distributionOrdering[e2] = []);
          var i2 = false, o2 = this.distributionOrdering[e2];
          for (var n2 in o2) if (o2[n2] === t3) {
            i2 = true;
            break;
          }
          i2 || (this.distributionOrdering[e2].push(t3), this.distributionIndex[t3.id] = this.distributionOrdering[e2].length - 1);
        } }]), t2;
      }(), rT = function() {
        function t2(e2) {
          vh(this, t2), this.body = e2, this._resetRNG(Math.random() + ":" + jf()), this.setPhysics = false, this.options = {}, this.optionsBackup = { physics: {} }, this.defaultOptions = { randomSeed: void 0, improvedLayout: true, clusterThreshold: 150, hierarchical: { enabled: false, levelSeparation: 150, nodeSpacing: 100, treeSpacing: 200, blockShifting: true, edgeMinimization: true, parentCentralization: true, direction: "UD", sortMethod: "hubsize" } }, wo(this.options, this.defaultOptions), this.bindEventListeners();
        }
        return wu(t2, [{ key: "bindEventListeners", value: function() {
          var t3 = this;
          this.body.emitter.on("_dataChanged", function() {
            t3.setupHierarchicalLayout();
          }), this.body.emitter.on("_dataLoaded", function() {
            t3.layoutNetwork();
          }), this.body.emitter.on("_resetHierarchicalLayout", function() {
            t3.setupHierarchicalLayout();
          }), this.body.emitter.on("_adjustEdgesForHierarchicalLayout", function() {
            if (true === t3.options.hierarchical.enabled) {
              var e2 = t3.direction.curveType();
              t3.body.emitter.emit("_forceDisableDynamicCurves", e2, false);
            }
          });
        } }, { key: "setOptions", value: function(t3, e2) {
          if (void 0 !== t3) {
            var i2 = this.options.hierarchical, o2 = i2.enabled;
            if (Nm(["randomSeed", "improvedLayout", "clusterThreshold"], this.options, t3), Qm(this.options, t3, "hierarchical"), void 0 !== t3.randomSeed && this._resetRNG(t3.randomSeed), true === i2.enabled) return true === o2 && this.body.emitter.emit("refresh", true), "RL" === i2.direction || "DU" === i2.direction ? i2.levelSeparation > 0 && (i2.levelSeparation *= -1) : i2.levelSeparation < 0 && (i2.levelSeparation *= -1), this.setDirectionStrategy(), this.body.emitter.emit("_resetHierarchicalLayout"), this.adaptAllOptionsForHierarchicalLayout(e2);
            if (true === o2) return this.body.emitter.emit("refresh"), Rm(e2, this.optionsBackup);
          }
          return e2;
        } }, { key: "_resetRNG", value: function(t3) {
          this.initialRandomSeed = t3, this._rng = Em(this.initialRandomSeed);
        } }, { key: "adaptAllOptionsForHierarchicalLayout", value: function(t3) {
          if (true === this.options.hierarchical.enabled) {
            var e2 = this.optionsBackup.physics;
            void 0 === t3.physics || true === t3.physics ? (t3.physics = { enabled: void 0 === e2.enabled || e2.enabled, solver: "hierarchicalRepulsion" }, e2.enabled = void 0 === e2.enabled || e2.enabled, e2.solver = e2.solver || "barnesHut") : "object" === gu(t3.physics) ? (e2.enabled = void 0 === t3.physics.enabled || t3.physics.enabled, e2.solver = t3.physics.solver || "barnesHut", t3.physics.solver = "hierarchicalRepulsion") : false !== t3.physics && (e2.solver = "barnesHut", t3.physics = { solver: "hierarchicalRepulsion" });
            var i2 = this.direction.curveType();
            if (void 0 === t3.edges) this.optionsBackup.edges = { smooth: { enabled: true, type: "dynamic" } }, t3.edges = { smooth: false };
            else if (void 0 === t3.edges.smooth) this.optionsBackup.edges = { smooth: { enabled: true, type: "dynamic" } }, t3.edges.smooth = false;
            else if ("boolean" == typeof t3.edges.smooth) this.optionsBackup.edges = { smooth: t3.edges.smooth }, t3.edges.smooth = { enabled: t3.edges.smooth, type: i2 };
            else {
              var o2 = t3.edges.smooth;
              void 0 !== o2.type && "dynamic" !== o2.type && (i2 = o2.type), this.optionsBackup.edges = { smooth: { enabled: void 0 === o2.enabled || o2.enabled, type: void 0 === o2.type ? "dynamic" : o2.type, roundness: void 0 === o2.roundness ? 0.5 : o2.roundness, forceDirection: void 0 !== o2.forceDirection && o2.forceDirection } }, t3.edges.smooth = { enabled: void 0 === o2.enabled || o2.enabled, type: i2, roundness: void 0 === o2.roundness ? 0.5 : o2.roundness, forceDirection: void 0 !== o2.forceDirection && o2.forceDirection };
            }
            this.body.emitter.emit("_forceDisableDynamicCurves", i2);
          }
          return t3;
        } }, { key: "positionInitially", value: function(t3) {
          if (true !== this.options.hierarchical.enabled) {
            this._resetRNG(this.initialRandomSeed);
            for (var e2 = t3.length + 50, i2 = 0; i2 < t3.length; i2++) {
              var o2 = t3[i2], n2 = 2 * Math.PI * this._rng();
              void 0 === o2.x && (o2.x = e2 * Math.cos(n2)), void 0 === o2.y && (o2.y = e2 * Math.sin(n2));
            }
          }
        } }, { key: "layoutNetwork", value: function() {
          if (true !== this.options.hierarchical.enabled && true === this.options.improvedLayout) {
            for (var t3 = this.body.nodeIndices, e2 = 0, i2 = 0; i2 < t3.length; i2++) {
              true === this.body.nodes[t3[i2]].predefinedPosition && (e2 += 1);
            }
            if (e2 < 0.5 * t3.length) {
              var o2 = 0, n2 = this.options.clusterThreshold, r2 = { clusterNodeProperties: { shape: "ellipse", label: "", group: "", font: { multi: false } }, clusterEdgeProperties: { label: "", font: { multi: false }, smooth: { enabled: false } } };
              if (t3.length > n2) {
                for (var s2 = t3.length; t3.length > n2 && o2 <= 10; ) {
                  o2 += 1;
                  var a2 = t3.length;
                  if (o2 % 3 == 0 ? this.body.modules.clustering.clusterBridges(r2) : this.body.modules.clustering.clusterOutliers(r2), a2 == t3.length && o2 % 3 != 0) return this._declusterAll(), this.body.emitter.emit("_layoutFailed"), void console.info("This network could not be positioned by this version of the improved layout algorithm. Please disable improvedLayout for better performance.");
                }
                this.body.modules.kamadaKawai.setOptions({ springLength: Math.max(150, 2 * s2) });
              }
              o2 > 10 && console.info("The clustering didn't succeed within the amount of interations allowed, progressing with partial result."), this.body.modules.kamadaKawai.solve(t3, this.body.edgeIndices, true), this._shiftToCenter();
              for (var h2 = 0; h2 < t3.length; h2++) {
                var d2 = this.body.nodes[t3[h2]];
                false === d2.predefinedPosition && (d2.x += 70 * (0.5 - this._rng()), d2.y += 70 * (0.5 - this._rng()));
              }
              this._declusterAll(), this.body.emitter.emit("_repositionBezierNodes");
            }
          }
        } }, { key: "_shiftToCenter", value: function() {
          for (var t3 = mO.getRangeCore(this.body.nodes, this.body.nodeIndices), e2 = mO.findCenter(t3), i2 = 0; i2 < this.body.nodeIndices.length; i2++) {
            var o2 = this.body.nodes[this.body.nodeIndices[i2]];
            o2.x -= e2.x, o2.y -= e2.y;
          }
        } }, { key: "_declusterAll", value: function() {
          for (var t3 = true; true === t3; ) {
            t3 = false;
            for (var e2 = 0; e2 < this.body.nodeIndices.length; e2++) true === this.body.nodes[this.body.nodeIndices[e2]].isCluster && (t3 = true, this.body.modules.clustering.openCluster(this.body.nodeIndices[e2], {}, false));
            true === t3 && this.body.emitter.emit("_dataChanged");
          }
        } }, { key: "getSeed", value: function() {
          return this.initialRandomSeed;
        } }, { key: "setupHierarchicalLayout", value: function() {
          if (true === this.options.hierarchical.enabled && this.body.nodeIndices.length > 0) {
            var t3, e2, i2 = false, o2 = false;
            for (e2 in this.lastNodeOnLevel = {}, this.hierarchical = new nT(), this.body.nodes) Object.prototype.hasOwnProperty.call(this.body.nodes, e2) && (void 0 !== (t3 = this.body.nodes[e2]).options.level ? (i2 = true, this.hierarchical.levels[e2] = t3.options.level) : o2 = true);
            if (true === o2 && true === i2) throw new Error("To use the hierarchical layout, nodes require either no predefined levels or levels have to be defined for all nodes.");
            if (true === o2) {
              var n2 = this.options.hierarchical.sortMethod;
              "hubsize" === n2 ? this._determineLevelsByHubsize() : "directed" === n2 ? this._determineLevelsDirected() : "custom" === n2 && this._determineLevelsCustomCallback();
            }
            for (var r2 in this.body.nodes) Object.prototype.hasOwnProperty.call(this.body.nodes, r2) && this.hierarchical.ensureLevel(r2);
            var s2 = this._getDistribution();
            this._generateMap(), this._placeNodesByHierarchy(s2), this._condenseHierarchy(), this._shiftToCenter();
          }
        } }, { key: "_condenseHierarchy", value: function() {
          var t3 = this, e2 = false, i2 = {}, o2 = function(e3, i3) {
            var o3 = t3.hierarchical.trees;
            for (var n3 in o3) Object.prototype.hasOwnProperty.call(o3, n3) && o3[n3] === e3 && t3.direction.shift(n3, i3);
          }, n2 = function() {
            for (var e3 = [], i3 = 0; i3 < t3.hierarchical.numTrees(); i3++) e3.push(t3.direction.getTreeSize(i3));
            return e3;
          }, r2 = function e3(i3, o3) {
            if (!o3[i3.id] && (o3[i3.id] = true, t3.hierarchical.childrenReference[i3.id])) {
              var n3 = t3.hierarchical.childrenReference[i3.id];
              if (n3.length > 0) for (var r3 = 0; r3 < n3.length; r3++) e3(t3.body.nodes[n3[r3]], o3);
            }
          }, s2 = function(e3) {
            var i3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1e9, o3 = 1e9, n3 = 1e9, r3 = 1e9, s3 = -1e9;
            for (var a3 in e3) if (Object.prototype.hasOwnProperty.call(e3, a3)) {
              var h3 = t3.body.nodes[a3], d3 = t3.hierarchical.levels[h3.id], l2 = t3.direction.getPosition(h3), c2 = df(t3._getSpaceAroundNode(h3, e3), 2), u2 = c2[0], f2 = c2[1];
              o3 = Math.min(u2, o3), n3 = Math.min(f2, n3), d3 <= i3 && (r3 = Math.min(l2, r3), s3 = Math.max(l2, s3));
            }
            return [r3, s3, o3, n3];
          }, a2 = function(e3, i3, o3) {
            for (var n3 = t3.hierarchical, r3 = 0; r3 < i3.length; r3++) {
              var s3 = i3[r3], a3 = n3.distributionOrdering[s3];
              if (a3.length > 1) for (var h3 = 0; h3 < a3.length - 1; h3++) {
                var d3 = a3[h3], l2 = a3[h3 + 1];
                n3.hasSameParent(d3, l2) && n3.inSameSubNetwork(d3, l2) && e3(d3, l2, o3);
              }
            }
          }, h2 = function(i3, o3) {
            var n3 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], a3 = t3.direction.getPosition(i3), h3 = t3.direction.getPosition(o3), d3 = Math.abs(h3 - a3), l2 = t3.options.hierarchical.nodeSpacing;
            if (d3 > l2) {
              var c2 = {}, u2 = {};
              r2(i3, c2), r2(o3, u2);
              var f2 = function(e3, i4) {
                var o4 = t3.hierarchical.getMaxLevel(e3.id), n4 = t3.hierarchical.getMaxLevel(i4.id);
                return Math.min(o4, n4);
              }(i3, o3), p2 = s2(c2, f2), v2 = s2(u2, f2), g2 = p2[1], y2 = v2[0], m2 = v2[2];
              if (Math.abs(g2 - y2) > l2) {
                var b2 = g2 - y2 + l2;
                b2 < -m2 + l2 && (b2 = -m2 + l2), b2 < 0 && (t3._shiftBlock(o3.id, b2), e2 = true, true === n3 && t3._centerParent(o3));
              }
            }
          }, d2 = function(o3, n3) {
            for (var a3 = n3.id, h3 = n3.edges, d3 = t3.hierarchical.levels[n3.id], l2 = t3.options.hierarchical.levelSeparation * t3.options.hierarchical.levelSeparation, c2 = {}, u2 = [], f2 = 0; f2 < h3.length; f2++) {
              var p2 = h3[f2];
              if (p2.toId != p2.fromId) {
                var v2 = p2.toId == a3 ? p2.from : p2.to;
                c2[h3[f2].id] = v2, t3.hierarchical.levels[v2.id] < d3 && u2.push(p2);
              }
            }
            var g2 = function(e3, i3) {
              for (var o4 = 0, n4 = 0; n4 < i3.length; n4++) if (void 0 !== c2[i3[n4].id]) {
                var r3 = t3.direction.getPosition(c2[i3[n4].id]) - e3;
                o4 += r3 / Math.sqrt(r3 * r3 + l2);
              }
              return o4;
            }, y2 = function(e3, i3) {
              for (var o4 = 0, n4 = 0; n4 < i3.length; n4++) if (void 0 !== c2[i3[n4].id]) {
                var r3 = t3.direction.getPosition(c2[i3[n4].id]) - e3;
                o4 -= l2 * Math.pow(r3 * r3 + l2, -1.5);
              }
              return o4;
            }, m2 = function(e3, i3) {
              for (var o4 = t3.direction.getPosition(n3), r3 = {}, s3 = 0; s3 < e3; s3++) {
                var a4 = g2(o4, i3), h4 = y2(o4, i3);
                if (void 0 !== r3[o4 -= Math.max(-40, Math.min(40, Math.round(a4 / h4)))]) break;
                r3[o4] = s3;
              }
              return o4;
            }, b2 = m2(o3, u2);
            !function(o4) {
              var a4 = t3.direction.getPosition(n3);
              if (void 0 === i2[n3.id]) {
                var h4 = {};
                r2(n3, h4), i2[n3.id] = h4;
              }
              var d4 = s2(i2[n3.id]), l3 = d4[2], c3 = d4[3], u3 = o4 - a4, f3 = 0;
              u3 > 0 ? f3 = Math.min(u3, c3 - t3.options.hierarchical.nodeSpacing) : u3 < 0 && (f3 = -Math.min(-u3, l3 - t3.options.hierarchical.nodeSpacing)), 0 != f3 && (t3._shiftBlock(n3.id, f3), e2 = true);
            }(b2), function(i3) {
              var o4 = t3.direction.getPosition(n3), r3 = df(t3._getSpaceAroundNode(n3), 2), s3 = r3[0], a4 = r3[1], h4 = i3 - o4, d4 = o4;
              h4 > 0 ? d4 = Math.min(o4 + (a4 - t3.options.hierarchical.nodeSpacing), i3) : h4 < 0 && (d4 = Math.max(o4 - (s3 - t3.options.hierarchical.nodeSpacing), i3)), d4 !== o4 && (t3.direction.setPosition(n3, d4), e2 = true);
            }(b2 = m2(o3, h3));
          };
          true === this.options.hierarchical.blockShifting && (function(i3) {
            var o3 = t3.hierarchical.getLevels();
            o3 = hp(o3).call(o3);
            for (var n3 = 0; n3 < i3 && (e2 = false, a2(h2, o3, true), true === e2); n3++) ;
          }(5), function() {
            for (var e3 in t3.body.nodes) Object.prototype.hasOwnProperty.call(t3.body.nodes, e3) && t3._centerParent(t3.body.nodes[e3]);
          }()), true === this.options.hierarchical.edgeMinimization && function(i3) {
            var o3 = t3.hierarchical.getLevels();
            o3 = hp(o3).call(o3);
            for (var n3 = 0; n3 < i3; n3++) {
              e2 = false;
              for (var r3 = 0; r3 < o3.length; r3++) for (var s3 = o3[r3], a3 = t3.hierarchical.distributionOrdering[s3], h3 = 0; h3 < a3.length; h3++) d2(1e3, a3[h3]);
              if (true !== e2) break;
            }
          }(20), true === this.options.hierarchical.parentCentralization && function() {
            var e3 = t3.hierarchical.getLevels();
            e3 = hp(e3).call(e3);
            for (var i3 = 0; i3 < e3.length; i3++) for (var o3 = e3[i3], n3 = t3.hierarchical.distributionOrdering[o3], r3 = 0; r3 < n3.length; r3++) t3._centerParent(n3[r3]);
          }(), function() {
            for (var e3 = n2(), i3 = 0, r3 = 0; r3 < e3.length - 1; r3++) {
              i3 += e3[r3].max - e3[r3 + 1].min + t3.options.hierarchical.treeSpacing, o2(r3 + 1, i3);
            }
          }();
        } }, { key: "_getSpaceAroundNode", value: function(t3, e2) {
          var i2 = true;
          void 0 === e2 && (i2 = false);
          var o2 = this.hierarchical.levels[t3.id];
          if (void 0 !== o2) {
            var n2 = this.hierarchical.distributionIndex[t3.id], r2 = this.direction.getPosition(t3), s2 = this.hierarchical.distributionOrdering[o2], a2 = 1e9, h2 = 1e9;
            if (0 !== n2) {
              var d2 = s2[n2 - 1];
              if (true === i2 && void 0 === e2[d2.id] || false === i2) a2 = r2 - this.direction.getPosition(d2);
            }
            if (n2 != s2.length - 1) {
              var l2 = s2[n2 + 1];
              if (true === i2 && void 0 === e2[l2.id] || false === i2) {
                var c2 = this.direction.getPosition(l2);
                h2 = Math.min(h2, c2 - r2);
              }
            }
            return [a2, h2];
          }
          return [0, 0];
        } }, { key: "_centerParent", value: function(t3) {
          if (this.hierarchical.parentReference[t3.id]) for (var e2 = this.hierarchical.parentReference[t3.id], i2 = 0; i2 < e2.length; i2++) {
            var o2 = e2[i2], n2 = this.body.nodes[o2], r2 = this.hierarchical.childrenReference[o2];
            if (void 0 !== r2) {
              var s2 = this._getCenterPosition(r2), a2 = this.direction.getPosition(n2), h2 = df(this._getSpaceAroundNode(n2), 2), d2 = h2[0], l2 = h2[1], c2 = a2 - s2;
              (c2 < 0 && Math.abs(c2) < l2 - this.options.hierarchical.nodeSpacing || c2 > 0 && Math.abs(c2) < d2 - this.options.hierarchical.nodeSpacing) && this.direction.setPosition(n2, s2);
            }
          }
        } }, { key: "_placeNodesByHierarchy", value: function(t3) {
          for (var e2 in this.positionedNodes = {}, t3) if (Object.prototype.hasOwnProperty.call(t3, e2)) {
            var i2, o2 = zf(t3[e2]);
            o2 = this._indexArrayToNodes(o2), SS(i2 = this.direction).call(i2, o2);
            for (var n2 = 0, r2 = 0; r2 < o2.length; r2++) {
              var s2 = o2[r2];
              if (void 0 === this.positionedNodes[s2.id]) {
                var a2 = this.options.hierarchical.nodeSpacing, h2 = a2 * n2;
                n2 > 0 && (h2 = this.direction.getPosition(o2[r2 - 1]) + a2), this.direction.setPosition(s2, h2, e2), this._validatePositionAndContinue(s2, e2, h2), n2++;
              }
            }
          }
        } }, { key: "_placeBranchNodes", value: function(t3, e2) {
          var i2, o2 = this.hierarchical.childrenReference[t3];
          if (void 0 !== o2) {
            for (var n2 = [], r2 = 0; r2 < o2.length; r2++) n2.push(this.body.nodes[o2[r2]]);
            SS(i2 = this.direction).call(i2, n2);
            for (var s2 = 0; s2 < n2.length; s2++) {
              var a2 = n2[s2], h2 = this.hierarchical.levels[a2.id];
              if (!(h2 > e2 && void 0 === this.positionedNodes[a2.id])) return;
              var d2 = this.options.hierarchical.nodeSpacing, l2 = void 0;
              l2 = 0 === s2 ? this.direction.getPosition(this.body.nodes[t3]) : this.direction.getPosition(n2[s2 - 1]) + d2, this.direction.setPosition(a2, l2, h2), this._validatePositionAndContinue(a2, h2, l2);
            }
            var c2 = this._getCenterPosition(n2);
            this.direction.setPosition(this.body.nodes[t3], c2, e2);
          }
        } }, { key: "_validatePositionAndContinue", value: function(t3, e2, i2) {
          if (this.hierarchical.isTree) {
            if (void 0 !== this.lastNodeOnLevel[e2]) {
              var o2 = this.direction.getPosition(this.body.nodes[this.lastNodeOnLevel[e2]]);
              if (i2 - o2 < this.options.hierarchical.nodeSpacing) {
                var n2 = o2 + this.options.hierarchical.nodeSpacing - i2, r2 = this._findCommonParent(this.lastNodeOnLevel[e2], t3.id);
                this._shiftBlock(r2.withChild, n2);
              }
            }
            this.lastNodeOnLevel[e2] = t3.id, this.positionedNodes[t3.id] = true, this._placeBranchNodes(t3.id, e2);
          }
        } }, { key: "_indexArrayToNodes", value: function(t3) {
          for (var e2 = [], i2 = 0; i2 < t3.length; i2++) e2.push(this.body.nodes[t3[i2]]);
          return e2;
        } }, { key: "_getDistribution", value: function() {
          var t3, e2, i2 = {};
          for (t3 in this.body.nodes) if (Object.prototype.hasOwnProperty.call(this.body.nodes, t3)) {
            e2 = this.body.nodes[t3];
            var o2 = void 0 === this.hierarchical.levels[t3] ? 0 : this.hierarchical.levels[t3];
            this.direction.fix(e2, o2), void 0 === i2[o2] && (i2[o2] = {}), i2[o2][t3] = e2;
          }
          return i2;
        } }, { key: "_getActiveEdges", value: function(t3) {
          var e2 = this, i2 = [];
          return Hm(t3.edges, function(t4) {
            var o2;
            -1 !== Vv(o2 = e2.body.edgeIndices).call(o2, t4.id) && i2.push(t4);
          }), i2;
        } }, { key: "_getHubSizes", value: function() {
          var t3 = this, e2 = {};
          Hm(this.body.nodeIndices, function(i3) {
            var o2 = t3.body.nodes[i3], n2 = t3._getActiveEdges(o2).length;
            e2[n2] = true;
          });
          var i2 = [];
          return Hm(e2, function(t4) {
            i2.push(Number(t4));
          }), SS(i2).call(i2, function(t4, e3) {
            return e3 - t4;
          }), i2;
        } }, { key: "_determineLevelsByHubsize", value: function() {
          for (var t3 = this, e2 = function(e3, i3) {
            t3.hierarchical.levelDownstream(e3, i3);
          }, i2 = this._getHubSizes(), o2 = function() {
            var o3 = i2[n2];
            if (0 === o3) return 1;
            Hm(t3.body.nodeIndices, function(i3) {
              var n3 = t3.body.nodes[i3];
              o3 === t3._getActiveEdges(n3).length && t3._crawlNetwork(e2, i3);
            });
          }, n2 = 0; n2 < i2.length && !o2(); ++n2) ;
        } }, { key: "_determineLevelsCustomCallback", value: function() {
          var t3 = this;
          this._crawlNetwork(function(e2, i2, o2) {
            var n2 = t3.hierarchical.levels[e2.id];
            void 0 === n2 && (n2 = t3.hierarchical.levels[e2.id] = 1e5);
            var r2 = (mO.cloneOptions(e2, "node"), mO.cloneOptions(i2, "node"), void mO.cloneOptions(o2, "edge"));
            t3.hierarchical.levels[i2.id] = n2 + r2;
          }), this.hierarchical.setMinLevelToZero(this.body.nodes);
        } }, { key: "_determineLevelsDirected", value: function() {
          var t3, e2 = this, i2 = WS(t3 = this.body.nodeIndices).call(t3, function(t4, i3) {
            return t4.set(i3, e2.body.nodes[i3]), t4;
          }, new xk());
          "roots" === this.options.hierarchical.shakeTowards ? this.hierarchical.levels = function(t4) {
            return oT(function(e3) {
              var i3, o2;
              return JS(i3 = lv(o2 = e3.edges).call(o2, function(e4) {
                return t4.has(e4.toId);
              })).call(i3, function(t5) {
                return t5.from === e3;
              });
            }, function(t5, e3) {
              return e3 < t5;
            }, "to", t4);
          }(i2) : this.hierarchical.levels = function(t4) {
            return oT(function(e3) {
              var i3, o2;
              return JS(i3 = lv(o2 = e3.edges).call(o2, function(e4) {
                return t4.has(e4.toId);
              })).call(i3, function(t5) {
                return t5.to === e3;
              });
            }, function(t5, e3) {
              return e3 > t5;
            }, "from", t4);
          }(i2), this.hierarchical.setMinLevelToZero(this.body.nodes);
        } }, { key: "_generateMap", value: function() {
          var t3 = this;
          this._crawlNetwork(function(e2, i2) {
            t3.hierarchical.levels[i2.id] > t3.hierarchical.levels[e2.id] && t3.hierarchical.addRelation(e2.id, i2.id);
          }), this.hierarchical.checkIfTree();
        } }, { key: "_crawlNetwork", value: function() {
          var t3 = this, e2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : function() {
          }, i2 = arguments.length > 1 ? arguments[1] : void 0, o2 = {}, n2 = function i3(n3, r3) {
            if (void 0 === o2[n3.id]) {
              var s3;
              t3.hierarchical.setTreeIndex(n3, r3), o2[n3.id] = true;
              for (var a3 = t3._getActiveEdges(n3), h3 = 0; h3 < a3.length; h3++) {
                var d2 = a3[h3];
                true === d2.connected && (s3 = d2.toId == n3.id ? d2.from : d2.to, n3.id != s3.id && (e2(n3, s3, d2), i3(s3, r3)));
              }
            }
          };
          if (void 0 === i2) for (var r2 = 0, s2 = 0; s2 < this.body.nodeIndices.length; s2++) {
            var a2 = this.body.nodeIndices[s2];
            if (void 0 === o2[a2]) n2(this.body.nodes[a2], r2), r2 += 1;
          }
          else {
            var h2 = this.body.nodes[i2];
            if (void 0 === h2) return void console.error("Node not found:", i2);
            n2(h2);
          }
        } }, { key: "_shiftBlock", value: function(t3, e2) {
          var i2 = this, o2 = {};
          !function t4(n2) {
            if (!o2[n2]) {
              o2[n2] = true, i2.direction.shift(n2, e2);
              var r2 = i2.hierarchical.childrenReference[n2];
              if (void 0 !== r2) for (var s2 = 0; s2 < r2.length; s2++) t4(r2[s2]);
            }
          }(t3);
        } }, { key: "_findCommonParent", value: function(t3, e2) {
          var i2 = this, o2 = {};
          return function t4(e3, o3) {
            var n2 = i2.hierarchical.parentReference[o3];
            if (void 0 !== n2) for (var r2 = 0; r2 < n2.length; r2++) {
              var s2 = n2[r2];
              e3[s2] = true, t4(e3, s2);
            }
          }(o2, t3), function t4(e3, o3) {
            var n2 = i2.hierarchical.parentReference[o3];
            if (void 0 !== n2) for (var r2 = 0; r2 < n2.length; r2++) {
              var s2 = n2[r2];
              if (void 0 !== e3[s2]) return { foundParent: s2, withChild: o3 };
              var a2 = t4(e3, s2);
              if (null !== a2.foundParent) return a2;
            }
            return { foundParent: null, withChild: o3 };
          }(o2, e2);
        } }, { key: "setDirectionStrategy", value: function() {
          var t3 = "UD" === this.options.hierarchical.direction || "DU" === this.options.hierarchical.direction;
          this.direction = t3 ? new US(this) : new YS(this);
        } }, { key: "_getCenterPosition", value: function(t3) {
          for (var e2 = 1e9, i2 = -1e9, o2 = 0; o2 < t3.length; o2++) {
            var n2 = void 0;
            if (void 0 !== t3[o2].id) n2 = t3[o2];
            else {
              var r2 = t3[o2];
              n2 = this.body.nodes[r2];
            }
            var s2 = this.direction.getPosition(n2);
            e2 = Math.min(e2, s2), i2 = Math.max(i2, s2);
          }
          return 0.5 * (e2 + i2);
        } }]), t2;
      }();
      function sT(t2, e2) {
        var i2 = void 0 !== cf && ph(t2) || t2["@@iterator"];
        if (!i2) {
          if (Of(t2) || (i2 = function(t3, e3) {
            var i3;
            if (!t3) return;
            if ("string" == typeof t3) return aT(t3, e3);
            var o3 = mf(i3 = Object.prototype.toString.call(t3)).call(i3, 8, -1);
            "Object" === o3 && t3.constructor && (o3 = t3.constructor.name);
            if ("Map" === o3 || "Set" === o3) return Xa(t3);
            if ("Arguments" === o3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3)) return aT(t3, e3);
          }(t2)) || e2 && t2 && "number" == typeof t2.length) {
            i2 && (t2 = i2);
            var o2 = 0, n2 = function() {
            };
            return { s: n2, n: function() {
              return o2 >= t2.length ? { done: true } : { done: false, value: t2[o2++] };
            }, e: function(t3) {
              throw t3;
            }, f: n2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var r2, s2 = true, a2 = false;
        return { s: function() {
          i2 = i2.call(t2);
        }, n: function() {
          var t3 = i2.next();
          return s2 = t3.done, t3;
        }, e: function(t3) {
          a2 = true, r2 = t3;
        }, f: function() {
          try {
            s2 || null == i2.return || i2.return();
          } finally {
            if (a2) throw r2;
          }
        } };
      }
      function aT(t2, e2) {
        (null == e2 || e2 > t2.length) && (e2 = t2.length);
        for (var i2 = 0, o2 = new Array(e2); i2 < e2; i2++) o2[i2] = t2[i2];
        return o2;
      }
      var hT = function() {
        function t2(e2, i2, o2, n2) {
          var r2, s2, a2 = this;
          vh(this, t2), this.body = e2, this.canvas = i2, this.selectionHandler = o2, this.interactionHandler = n2, this.editMode = false, this.manipulationDiv = void 0, this.editModeDiv = void 0, this.closeDiv = void 0, this._domEventListenerCleanupQueue = [], this.temporaryUIFunctions = {}, this.temporaryEventFunctions = [], this.touchTime = 0, this.temporaryIds = { nodes: [], edges: [] }, this.guiEnabled = false, this.inMode = false, this.selectedControlNode = void 0, this.options = {}, this.defaultOptions = { enabled: false, initiallyActive: false, addNode: true, addEdge: true, editNode: void 0, editEdge: true, deleteNode: true, deleteEdge: true, controlNodeStyle: { shape: "dot", size: 6, color: { background: "#ff0000", border: "#3c3c3c", highlight: { background: "#07f968", border: "#3c3c3c" } }, borderWidth: 2, borderWidthSelected: 2 } }, wo(this.options, this.defaultOptions), this.body.emitter.on("destroy", function() {
            a2._clean();
          }), this.body.emitter.on("_dataChanged", Wo(r2 = this._restore).call(r2, this)), this.body.emitter.on("_resetData", Wo(s2 = this._restore).call(s2, this));
        }
        return wu(t2, [{ key: "_restore", value: function() {
          false !== this.inMode && (true === this.options.initiallyActive ? this.enableEditMode() : this.disableEditMode());
        } }, { key: "setOptions", value: function(t3, e2, i2) {
          void 0 !== e2 && (void 0 !== e2.locale ? this.options.locale = e2.locale : this.options.locale = i2.locale, void 0 !== e2.locales ? this.options.locales = e2.locales : this.options.locales = i2.locales), void 0 !== t3 && ("boolean" == typeof t3 ? this.options.enabled = t3 : (this.options.enabled = true, Rm(this.options, t3)), true === this.options.initiallyActive && (this.editMode = true), this._setup());
        } }, { key: "toggleEditMode", value: function() {
          true === this.editMode ? this.disableEditMode() : this.enableEditMode();
        } }, { key: "enableEditMode", value: function() {
          this.editMode = true, this._clean(), true === this.guiEnabled && (this.manipulationDiv.style.display = "block", this.closeDiv.style.display = "block", this.editModeDiv.style.display = "none", this.showManipulatorToolbar());
        } }, { key: "disableEditMode", value: function() {
          this.editMode = false, this._clean(), true === this.guiEnabled && (this.manipulationDiv.style.display = "none", this.closeDiv.style.display = "none", this.editModeDiv.style.display = "block", this._createEditButton());
        } }, { key: "showManipulatorToolbar", value: function() {
          if (this._clean(), this.manipulationDOM = {}, true === this.guiEnabled) {
            var t3, e2;
            this.editMode = true, this.manipulationDiv.style.display = "block", this.closeDiv.style.display = "block";
            var i2 = this.selectionHandler.getSelectedNodeCount(), o2 = this.selectionHandler.getSelectedEdgeCount(), n2 = i2 + o2, r2 = this.options.locales[this.options.locale], s2 = false;
            false !== this.options.addNode && (this._createAddNodeButton(r2), s2 = true), false !== this.options.addEdge && (true === s2 ? this._createSeperator(1) : s2 = true, this._createAddEdgeButton(r2)), 1 === i2 && "function" == typeof this.options.editNode ? (true === s2 ? this._createSeperator(2) : s2 = true, this._createEditNodeButton(r2)) : 1 === o2 && 0 === i2 && false !== this.options.editEdge && (true === s2 ? this._createSeperator(3) : s2 = true, this._createEditEdgeButton(r2)), 0 !== n2 && (i2 > 0 && false !== this.options.deleteNode || 0 === i2 && false !== this.options.deleteEdge) && (true === s2 && this._createSeperator(4), this._createDeleteButton(r2)), this._bindElementEvents(this.closeDiv, Wo(t3 = this.toggleEditMode).call(t3, this)), this._temporaryBindEvent("select", Wo(e2 = this.showManipulatorToolbar).call(e2, this));
          }
          this.body.emitter.emit("_redraw");
        } }, { key: "addNodeMode", value: function() {
          var t3;
          if (true !== this.editMode && this.enableEditMode(), this._clean(), this.inMode = "addNode", true === this.guiEnabled) {
            var e2, i2 = this.options.locales[this.options.locale];
            this.manipulationDOM = {}, this._createBackButton(i2), this._createSeperator(), this._createDescription(i2.addDescription || this.options.locales.en.addDescription), this._bindElementEvents(this.closeDiv, Wo(e2 = this.toggleEditMode).call(e2, this));
          }
          this._temporaryBindEvent("click", Wo(t3 = this._performAddNode).call(t3, this));
        } }, { key: "editNode", value: function() {
          var t3 = this;
          true !== this.editMode && this.enableEditMode(), this._clean();
          var e2 = this.selectionHandler.getSelectedNodes()[0];
          if (void 0 !== e2) {
            if (this.inMode = "editNode", "function" != typeof this.options.editNode) throw new Error("No function has been configured to handle the editing of nodes.");
            if (true !== e2.isCluster) {
              var i2 = Rm({}, e2.options, false);
              if (i2.x = e2.x, i2.y = e2.y, 2 !== this.options.editNode.length) throw new Error("The function for edit does not support two arguments (data, callback)");
              this.options.editNode(i2, function(e3) {
                null != e3 && "editNode" === t3.inMode && t3.body.data.nodes.getDataSet().update(e3), t3.showManipulatorToolbar();
              });
            } else alert(this.options.locales[this.options.locale].editClusterError || this.options.locales.en.editClusterError);
          } else this.showManipulatorToolbar();
        } }, { key: "addEdgeMode", value: function() {
          var t3, e2, i2, o2, n2;
          if (true !== this.editMode && this.enableEditMode(), this._clean(), this.inMode = "addEdge", true === this.guiEnabled) {
            var r2, s2 = this.options.locales[this.options.locale];
            this.manipulationDOM = {}, this._createBackButton(s2), this._createSeperator(), this._createDescription(s2.edgeDescription || this.options.locales.en.edgeDescription), this._bindElementEvents(this.closeDiv, Wo(r2 = this.toggleEditMode).call(r2, this));
          }
          this._temporaryBindUI("onTouch", Wo(t3 = this._handleConnect).call(t3, this)), this._temporaryBindUI("onDragEnd", Wo(e2 = this._finishConnect).call(e2, this)), this._temporaryBindUI("onDrag", Wo(i2 = this._dragControlNode).call(i2, this)), this._temporaryBindUI("onRelease", Wo(o2 = this._finishConnect).call(o2, this)), this._temporaryBindUI("onDragStart", Wo(n2 = this._dragStartEdge).call(n2, this)), this._temporaryBindUI("onHold", function() {
          });
        } }, { key: "editEdgeMode", value: function() {
          if (true !== this.editMode && this.enableEditMode(), this._clean(), this.inMode = "editEdge", "object" !== gu(this.options.editEdge) || "function" != typeof this.options.editEdge.editWithoutDrag || (this.edgeBeingEditedId = this.selectionHandler.getSelectedEdgeIds()[0], void 0 === this.edgeBeingEditedId)) {
            if (true === this.guiEnabled) {
              var t3, e2 = this.options.locales[this.options.locale];
              this.manipulationDOM = {}, this._createBackButton(e2), this._createSeperator(), this._createDescription(e2.editEdgeDescription || this.options.locales.en.editEdgeDescription), this._bindElementEvents(this.closeDiv, Wo(t3 = this.toggleEditMode).call(t3, this));
            }
            if (this.edgeBeingEditedId = this.selectionHandler.getSelectedEdgeIds()[0], void 0 !== this.edgeBeingEditedId) {
              var i2, o2, n2, r2, s2 = this.body.edges[this.edgeBeingEditedId], a2 = this._getNewTargetNode(s2.from.x, s2.from.y), h2 = this._getNewTargetNode(s2.to.x, s2.to.y);
              this.temporaryIds.nodes.push(a2.id), this.temporaryIds.nodes.push(h2.id), this.body.nodes[a2.id] = a2, this.body.nodeIndices.push(a2.id), this.body.nodes[h2.id] = h2, this.body.nodeIndices.push(h2.id), this._temporaryBindUI("onTouch", Wo(i2 = this._controlNodeTouch).call(i2, this)), this._temporaryBindUI("onTap", function() {
              }), this._temporaryBindUI("onHold", function() {
              }), this._temporaryBindUI("onDragStart", Wo(o2 = this._controlNodeDragStart).call(o2, this)), this._temporaryBindUI("onDrag", Wo(n2 = this._controlNodeDrag).call(n2, this)), this._temporaryBindUI("onDragEnd", Wo(r2 = this._controlNodeDragEnd).call(r2, this)), this._temporaryBindUI("onMouseMove", function() {
              }), this._temporaryBindEvent("beforeDrawing", function(t4) {
                var e3 = s2.edgeType.findBorderPositions(t4);
                false === a2.selected && (a2.x = e3.from.x, a2.y = e3.from.y), false === h2.selected && (h2.x = e3.to.x, h2.y = e3.to.y);
              }), this.body.emitter.emit("_redraw");
            } else this.showManipulatorToolbar();
          } else {
            var d2 = this.body.edges[this.edgeBeingEditedId];
            this._performEditEdge(d2.from.id, d2.to.id);
          }
        } }, { key: "deleteSelected", value: function() {
          var t3 = this;
          true !== this.editMode && this.enableEditMode(), this._clean(), this.inMode = "delete";
          var e2 = this.selectionHandler.getSelectedNodeIds(), i2 = this.selectionHandler.getSelectedEdgeIds(), o2 = void 0;
          if (e2.length > 0) {
            for (var n2 = 0; n2 < e2.length; n2++) if (true === this.body.nodes[e2[n2]].isCluster) return void alert(this.options.locales[this.options.locale].deleteClusterError || this.options.locales.en.deleteClusterError);
            "function" == typeof this.options.deleteNode && (o2 = this.options.deleteNode);
          } else i2.length > 0 && "function" == typeof this.options.deleteEdge && (o2 = this.options.deleteEdge);
          if ("function" == typeof o2) {
            var r2 = { nodes: e2, edges: i2 };
            if (2 !== o2.length) throw new Error("The function for delete does not support two arguments (data, callback)");
            o2(r2, function(e3) {
              null != e3 && "delete" === t3.inMode ? (t3.body.data.edges.getDataSet().remove(e3.edges), t3.body.data.nodes.getDataSet().remove(e3.nodes), t3.body.emitter.emit("startSimulation"), t3.showManipulatorToolbar()) : (t3.body.emitter.emit("startSimulation"), t3.showManipulatorToolbar());
            });
          } else this.body.data.edges.getDataSet().remove(i2), this.body.data.nodes.getDataSet().remove(e2), this.body.emitter.emit("startSimulation"), this.showManipulatorToolbar();
        } }, { key: "_setup", value: function() {
          true === this.options.enabled ? (this.guiEnabled = true, this._createWrappers(), false === this.editMode ? this._createEditButton() : this.showManipulatorToolbar()) : (this._removeManipulationDOM(), this.guiEnabled = false);
        } }, { key: "_createWrappers", value: function() {
          var t3, e2;
          (void 0 === this.manipulationDiv && (this.manipulationDiv = document.createElement("div"), this.manipulationDiv.className = "vis-manipulation", true === this.editMode ? this.manipulationDiv.style.display = "block" : this.manipulationDiv.style.display = "none", this.canvas.frame.appendChild(this.manipulationDiv)), void 0 === this.editModeDiv && (this.editModeDiv = document.createElement("div"), this.editModeDiv.className = "vis-edit-mode", true === this.editMode ? this.editModeDiv.style.display = "none" : this.editModeDiv.style.display = "block", this.canvas.frame.appendChild(this.editModeDiv)), void 0 === this.closeDiv) && (this.closeDiv = document.createElement("button"), this.closeDiv.className = "vis-close", this.closeDiv.setAttribute("aria-label", null !== (t3 = null === (e2 = this.options.locales[this.options.locale]) || void 0 === e2 ? void 0 : e2.close) && void 0 !== t3 ? t3 : this.options.locales.en.close), this.closeDiv.style.display = this.manipulationDiv.style.display, this.canvas.frame.appendChild(this.closeDiv));
        } }, { key: "_getNewTargetNode", value: function(t3, e2) {
          var i2 = Rm({}, this.options.controlNodeStyle);
          i2.id = "targetNode" + yO(), i2.hidden = false, i2.physics = false, i2.x = t3, i2.y = e2;
          var o2 = this.body.functions.createNode(i2);
          return o2.shape.boundingBox = { left: t3, right: t3, top: e2, bottom: e2 }, o2;
        } }, { key: "_createEditButton", value: function() {
          var t3;
          this._clean(), this.manipulationDOM = {}, Dm(this.editModeDiv);
          var e2 = this.options.locales[this.options.locale], i2 = this._createButton("editMode", "vis-edit vis-edit-mode", e2.edit || this.options.locales.en.edit);
          this.editModeDiv.appendChild(i2), this._bindElementEvents(i2, Wo(t3 = this.toggleEditMode).call(t3, this));
        } }, { key: "_clean", value: function() {
          this.inMode = false, true === this.guiEnabled && (Dm(this.editModeDiv), Dm(this.manipulationDiv), this._cleanupDOMEventListeners()), this._cleanupTemporaryNodesAndEdges(), this._unbindTemporaryUIs(), this._unbindTemporaryEvents(), this.body.emitter.emit("restorePhysics");
        } }, { key: "_cleanupDOMEventListeners", value: function() {
          var t3, e2, i2 = sT(Pp(t3 = this._domEventListenerCleanupQueue).call(t3, 0));
          try {
            for (i2.s(); !(e2 = i2.n()).done; ) {
              (0, e2.value)();
            }
          } catch (t4) {
            i2.e(t4);
          } finally {
            i2.f();
          }
        } }, { key: "_removeManipulationDOM", value: function() {
          this._clean(), Dm(this.manipulationDiv), Dm(this.editModeDiv), Dm(this.closeDiv), this.manipulationDiv && this.canvas.frame.removeChild(this.manipulationDiv), this.editModeDiv && this.canvas.frame.removeChild(this.editModeDiv), this.closeDiv && this.canvas.frame.removeChild(this.closeDiv), this.manipulationDiv = void 0, this.editModeDiv = void 0, this.closeDiv = void 0;
        } }, { key: "_createSeperator", value: function() {
          var t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1;
          this.manipulationDOM["seperatorLineDiv" + t3] = document.createElement("div"), this.manipulationDOM["seperatorLineDiv" + t3].className = "vis-separator-line", this.manipulationDiv.appendChild(this.manipulationDOM["seperatorLineDiv" + t3]);
        } }, { key: "_createAddNodeButton", value: function(t3) {
          var e2, i2 = this._createButton("addNode", "vis-add", t3.addNode || this.options.locales.en.addNode);
          this.manipulationDiv.appendChild(i2), this._bindElementEvents(i2, Wo(e2 = this.addNodeMode).call(e2, this));
        } }, { key: "_createAddEdgeButton", value: function(t3) {
          var e2, i2 = this._createButton("addEdge", "vis-connect", t3.addEdge || this.options.locales.en.addEdge);
          this.manipulationDiv.appendChild(i2), this._bindElementEvents(i2, Wo(e2 = this.addEdgeMode).call(e2, this));
        } }, { key: "_createEditNodeButton", value: function(t3) {
          var e2, i2 = this._createButton("editNode", "vis-edit", t3.editNode || this.options.locales.en.editNode);
          this.manipulationDiv.appendChild(i2), this._bindElementEvents(i2, Wo(e2 = this.editNode).call(e2, this));
        } }, { key: "_createEditEdgeButton", value: function(t3) {
          var e2, i2 = this._createButton("editEdge", "vis-edit", t3.editEdge || this.options.locales.en.editEdge);
          this.manipulationDiv.appendChild(i2), this._bindElementEvents(i2, Wo(e2 = this.editEdgeMode).call(e2, this));
        } }, { key: "_createDeleteButton", value: function(t3) {
          var e2, i2;
          i2 = this.options.rtl ? "vis-delete-rtl" : "vis-delete";
          var o2 = this._createButton("delete", i2, t3.del || this.options.locales.en.del);
          this.manipulationDiv.appendChild(o2), this._bindElementEvents(o2, Wo(e2 = this.deleteSelected).call(e2, this));
        } }, { key: "_createBackButton", value: function(t3) {
          var e2, i2 = this._createButton("back", "vis-back", t3.back || this.options.locales.en.back);
          this.manipulationDiv.appendChild(i2), this._bindElementEvents(i2, Wo(e2 = this.showManipulatorToolbar).call(e2, this));
        } }, { key: "_createButton", value: function(t3, e2, i2) {
          var o2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "vis-label";
          return this.manipulationDOM[t3 + "Div"] = document.createElement("button"), this.manipulationDOM[t3 + "Div"].className = "vis-button " + e2, this.manipulationDOM[t3 + "Label"] = document.createElement("div"), this.manipulationDOM[t3 + "Label"].className = o2, this.manipulationDOM[t3 + "Label"].innerText = i2, this.manipulationDOM[t3 + "Div"].appendChild(this.manipulationDOM[t3 + "Label"]), this.manipulationDOM[t3 + "Div"];
        } }, { key: "_createDescription", value: function(t3) {
          this.manipulationDOM.descriptionLabel = document.createElement("div"), this.manipulationDOM.descriptionLabel.className = "vis-none", this.manipulationDOM.descriptionLabel.innerText = t3, this.manipulationDiv.appendChild(this.manipulationDOM.descriptionLabel);
        } }, { key: "_temporaryBindEvent", value: function(t3, e2) {
          this.temporaryEventFunctions.push({ event: t3, boundFunction: e2 }), this.body.emitter.on(t3, e2);
        } }, { key: "_temporaryBindUI", value: function(t3, e2) {
          if (void 0 === this.body.eventListeners[t3]) throw new Error("This UI function does not exist. Typo? You tried: " + t3 + " possible are: " + $v(zf(this.body.eventListeners)));
          this.temporaryUIFunctions[t3] = this.body.eventListeners[t3], this.body.eventListeners[t3] = e2;
        } }, { key: "_unbindTemporaryUIs", value: function() {
          for (var t3 in this.temporaryUIFunctions) Object.prototype.hasOwnProperty.call(this.temporaryUIFunctions, t3) && (this.body.eventListeners[t3] = this.temporaryUIFunctions[t3], delete this.temporaryUIFunctions[t3]);
          this.temporaryUIFunctions = {};
        } }, { key: "_unbindTemporaryEvents", value: function() {
          for (var t3 = 0; t3 < this.temporaryEventFunctions.length; t3++) {
            var e2 = this.temporaryEventFunctions[t3].event, i2 = this.temporaryEventFunctions[t3].boundFunction;
            this.body.emitter.off(e2, i2);
          }
          this.temporaryEventFunctions = [];
        } }, { key: "_bindElementEvents", value: function(t3, e2) {
          var i2 = new ub(t3, {});
          EO(i2, e2), this._domEventListenerCleanupQueue.push(function() {
            i2.destroy();
          });
          var o2 = function(t4) {
            var i3 = t4.keyCode, o3 = t4.key;
            "Enter" !== o3 && " " !== o3 && 13 !== i3 && 32 !== i3 || e2();
          };
          t3.addEventListener("keyup", o2, false), this._domEventListenerCleanupQueue.push(function() {
            t3.removeEventListener("keyup", o2, false);
          });
        } }, { key: "_cleanupTemporaryNodesAndEdges", value: function() {
          for (var t3 = 0; t3 < this.temporaryIds.edges.length; t3++) {
            var e2;
            this.body.edges[this.temporaryIds.edges[t3]].disconnect(), delete this.body.edges[this.temporaryIds.edges[t3]];
            var i2, o2 = Vv(e2 = this.body.edgeIndices).call(e2, this.temporaryIds.edges[t3]);
            if (-1 !== o2) Pp(i2 = this.body.edgeIndices).call(i2, o2, 1);
          }
          for (var n2 = 0; n2 < this.temporaryIds.nodes.length; n2++) {
            var r2;
            delete this.body.nodes[this.temporaryIds.nodes[n2]];
            var s2, a2 = Vv(r2 = this.body.nodeIndices).call(r2, this.temporaryIds.nodes[n2]);
            if (-1 !== a2) Pp(s2 = this.body.nodeIndices).call(s2, a2, 1);
          }
          this.temporaryIds = { nodes: [], edges: [] };
        } }, { key: "_controlNodeTouch", value: function(t3) {
          this.selectionHandler.unselectAll(), this.lastTouch = this.body.functions.getPointer(t3.center), this.lastTouch.translation = wo({}, this.body.view.translation);
        } }, { key: "_controlNodeDragStart", value: function() {
          var t3 = this.lastTouch, e2 = this.selectionHandler._pointerToPositionObject(t3), i2 = this.body.nodes[this.temporaryIds.nodes[0]], o2 = this.body.nodes[this.temporaryIds.nodes[1]], n2 = this.body.edges[this.edgeBeingEditedId];
          this.selectedControlNode = void 0;
          var r2 = i2.isOverlappingWith(e2), s2 = o2.isOverlappingWith(e2);
          true === r2 ? (this.selectedControlNode = i2, n2.edgeType.from = i2) : true === s2 && (this.selectedControlNode = o2, n2.edgeType.to = o2), void 0 !== this.selectedControlNode && this.selectionHandler.selectObject(this.selectedControlNode), this.body.emitter.emit("_redraw");
        } }, { key: "_controlNodeDrag", value: function(t3) {
          this.body.emitter.emit("disablePhysics");
          var e2 = this.body.functions.getPointer(t3.center), i2 = this.canvas.DOMtoCanvas(e2);
          void 0 !== this.selectedControlNode ? (this.selectedControlNode.x = i2.x, this.selectedControlNode.y = i2.y) : this.interactionHandler.onDrag(t3), this.body.emitter.emit("_redraw");
        } }, { key: "_controlNodeDragEnd", value: function(t3) {
          var e2 = this.body.functions.getPointer(t3.center), i2 = this.selectionHandler._pointerToPositionObject(e2), o2 = this.body.edges[this.edgeBeingEditedId];
          if (void 0 !== this.selectedControlNode) {
            this.selectionHandler.unselectAll();
            for (var n2 = this.selectionHandler._getAllNodesOverlappingWith(i2), r2 = void 0, s2 = n2.length - 1; s2 >= 0; s2--) if (n2[s2] !== this.selectedControlNode.id) {
              r2 = this.body.nodes[n2[s2]];
              break;
            }
            if (void 0 !== r2 && void 0 !== this.selectedControlNode) if (true === r2.isCluster) alert(this.options.locales[this.options.locale].createEdgeError || this.options.locales.en.createEdgeError);
            else {
              var a2 = this.body.nodes[this.temporaryIds.nodes[0]];
              this.selectedControlNode.id === a2.id ? this._performEditEdge(r2.id, o2.to.id) : this._performEditEdge(o2.from.id, r2.id);
            }
            else o2.updateEdgeType(), this.body.emitter.emit("restorePhysics");
            this.body.emitter.emit("_redraw");
          }
        } }, { key: "_handleConnect", value: function(t3) {
          if ((/* @__PURE__ */ new Date()).valueOf() - this.touchTime > 100) {
            this.lastTouch = this.body.functions.getPointer(t3.center), this.lastTouch.translation = wo({}, this.body.view.translation), this.interactionHandler.drag.pointer = this.lastTouch, this.interactionHandler.drag.translation = this.lastTouch.translation;
            var e2 = this.lastTouch, i2 = this.selectionHandler.getNodeAt(e2);
            if (void 0 !== i2) if (true === i2.isCluster) alert(this.options.locales[this.options.locale].createEdgeError || this.options.locales.en.createEdgeError);
            else {
              var o2 = this._getNewTargetNode(i2.x, i2.y);
              this.body.nodes[o2.id] = o2, this.body.nodeIndices.push(o2.id);
              var n2 = this.body.functions.createEdge({ id: "connectionEdge" + yO(), from: i2.id, to: o2.id, physics: false, smooth: { enabled: true, type: "continuous", roundness: 0.5 } });
              this.body.edges[n2.id] = n2, this.body.edgeIndices.push(n2.id), this.temporaryIds.nodes.push(o2.id), this.temporaryIds.edges.push(n2.id);
            }
            this.touchTime = (/* @__PURE__ */ new Date()).valueOf();
          }
        } }, { key: "_dragControlNode", value: function(t3) {
          var e2 = this.body.functions.getPointer(t3.center), i2 = this.selectionHandler._pointerToPositionObject(e2), o2 = void 0;
          void 0 !== this.temporaryIds.edges[0] && (o2 = this.body.edges[this.temporaryIds.edges[0]].fromId);
          for (var n2 = this.selectionHandler._getAllNodesOverlappingWith(i2), r2 = void 0, s2 = n2.length - 1; s2 >= 0; s2--) {
            var a2;
            if (-1 === Vv(a2 = this.temporaryIds.nodes).call(a2, n2[s2])) {
              r2 = this.body.nodes[n2[s2]];
              break;
            }
          }
          if (t3.controlEdge = { from: o2, to: r2 ? r2.id : void 0 }, this.selectionHandler.generateClickEvent("controlNodeDragging", t3, e2), void 0 !== this.temporaryIds.nodes[0]) {
            var h2 = this.body.nodes[this.temporaryIds.nodes[0]];
            h2.x = this.canvas._XconvertDOMtoCanvas(e2.x), h2.y = this.canvas._YconvertDOMtoCanvas(e2.y), this.body.emitter.emit("_redraw");
          } else this.interactionHandler.onDrag(t3);
        } }, { key: "_finishConnect", value: function(t3) {
          var e2 = this.body.functions.getPointer(t3.center), i2 = this.selectionHandler._pointerToPositionObject(e2), o2 = void 0;
          void 0 !== this.temporaryIds.edges[0] && (o2 = this.body.edges[this.temporaryIds.edges[0]].fromId);
          for (var n2 = this.selectionHandler._getAllNodesOverlappingWith(i2), r2 = void 0, s2 = n2.length - 1; s2 >= 0; s2--) {
            var a2;
            if (-1 === Vv(a2 = this.temporaryIds.nodes).call(a2, n2[s2])) {
              r2 = this.body.nodes[n2[s2]];
              break;
            }
          }
          this._cleanupTemporaryNodesAndEdges(), void 0 !== r2 && (true === r2.isCluster ? alert(this.options.locales[this.options.locale].createEdgeError || this.options.locales.en.createEdgeError) : void 0 !== this.body.nodes[o2] && void 0 !== this.body.nodes[r2.id] && this._performAddEdge(o2, r2.id)), t3.controlEdge = { from: o2, to: r2 ? r2.id : void 0 }, this.selectionHandler.generateClickEvent("controlNodeDragEnd", t3, e2), this.body.emitter.emit("_redraw");
        } }, { key: "_dragStartEdge", value: function(t3) {
          var e2 = this.lastTouch;
          this.selectionHandler.generateClickEvent("dragStart", t3, e2, void 0, true);
        } }, { key: "_performAddNode", value: function(t3) {
          var e2 = this, i2 = { id: yO(), x: t3.pointer.canvas.x, y: t3.pointer.canvas.y, label: "new" };
          if ("function" == typeof this.options.addNode) {
            if (2 !== this.options.addNode.length) throw this.showManipulatorToolbar(), new Error("The function for add does not support two arguments (data,callback)");
            this.options.addNode(i2, function(t4) {
              null != t4 && "addNode" === e2.inMode && e2.body.data.nodes.getDataSet().add(t4), e2.showManipulatorToolbar();
            });
          } else this.body.data.nodes.getDataSet().add(i2), this.showManipulatorToolbar();
        } }, { key: "_performAddEdge", value: function(t3, e2) {
          var i2 = this, o2 = { from: t3, to: e2 };
          if ("function" == typeof this.options.addEdge) {
            if (2 !== this.options.addEdge.length) throw new Error("The function for connect does not support two arguments (data,callback)");
            this.options.addEdge(o2, function(t4) {
              null != t4 && "addEdge" === i2.inMode && (i2.body.data.edges.getDataSet().add(t4), i2.selectionHandler.unselectAll(), i2.showManipulatorToolbar());
            });
          } else this.body.data.edges.getDataSet().add(o2), this.selectionHandler.unselectAll(), this.showManipulatorToolbar();
        } }, { key: "_performEditEdge", value: function(t3, e2) {
          var i2 = this, o2 = { id: this.edgeBeingEditedId, from: t3, to: e2, label: this.body.data.edges.get(this.edgeBeingEditedId).label }, n2 = this.options.editEdge;
          if ("object" === gu(n2) && (n2 = n2.editWithoutDrag), "function" == typeof n2) {
            if (2 !== n2.length) throw new Error("The function for edit does not support two arguments (data, callback)");
            n2(o2, function(t4) {
              null == t4 || "editEdge" !== i2.inMode ? (i2.body.edges[o2.id].updateEdgeType(), i2.body.emitter.emit("_redraw"), i2.showManipulatorToolbar()) : (i2.body.data.edges.getDataSet().update(t4), i2.selectionHandler.unselectAll(), i2.showManipulatorToolbar());
            });
          } else this.body.data.edges.getDataSet().update(o2), this.selectionHandler.unselectAll(), this.showManipulatorToolbar();
        } }]), t2;
      }(), dT = "string", lT = "boolean", cT = "number", uT = "array", fT = "object", pT = ["arrow", "bar", "box", "circle", "crow", "curve", "diamond", "image", "inv_curve", "inv_triangle", "triangle", "vee"], vT = { borderWidth: { number: cT }, borderWidthSelected: { number: cT, undefined: "undefined" }, brokenImage: { string: dT, undefined: "undefined" }, chosen: { label: { boolean: lT, function: "function" }, node: { boolean: lT, function: "function" }, __type__: { object: fT, boolean: lT } }, color: { border: { string: dT }, background: { string: dT }, highlight: { border: { string: dT }, background: { string: dT }, __type__: { object: fT, string: dT } }, hover: { border: { string: dT }, background: { string: dT }, __type__: { object: fT, string: dT } }, __type__: { object: fT, string: dT } }, opacity: { number: cT, undefined: "undefined" }, fixed: { x: { boolean: lT }, y: { boolean: lT }, __type__: { object: fT, boolean: lT } }, font: { align: { string: dT }, color: { string: dT }, size: { number: cT }, face: { string: dT }, background: { string: dT }, strokeWidth: { number: cT }, strokeColor: { string: dT }, vadjust: { number: cT }, multi: { boolean: lT, string: dT }, bold: { color: { string: dT }, size: { number: cT }, face: { string: dT }, mod: { string: dT }, vadjust: { number: cT }, __type__: { object: fT, string: dT } }, boldital: { color: { string: dT }, size: { number: cT }, face: { string: dT }, mod: { string: dT }, vadjust: { number: cT }, __type__: { object: fT, string: dT } }, ital: { color: { string: dT }, size: { number: cT }, face: { string: dT }, mod: { string: dT }, vadjust: { number: cT }, __type__: { object: fT, string: dT } }, mono: { color: { string: dT }, size: { number: cT }, face: { string: dT }, mod: { string: dT }, vadjust: { number: cT }, __type__: { object: fT, string: dT } }, __type__: { object: fT, string: dT } }, group: { string: dT, number: cT, undefined: "undefined" }, heightConstraint: { minimum: { number: cT }, valign: { string: dT }, __type__: { object: fT, boolean: lT, number: cT } }, hidden: { boolean: lT }, icon: { face: { string: dT }, code: { string: dT }, size: { number: cT }, color: { string: dT }, weight: { string: dT, number: cT }, __type__: { object: fT } }, id: { string: dT, number: cT }, image: { selected: { string: dT, undefined: "undefined" }, unselected: { string: dT, undefined: "undefined" }, __type__: { object: fT, string: dT } }, imagePadding: { top: { number: cT }, right: { number: cT }, bottom: { number: cT }, left: { number: cT }, __type__: { object: fT, number: cT } }, label: { string: dT, undefined: "undefined" }, labelHighlightBold: { boolean: lT }, level: { number: cT, undefined: "undefined" }, margin: { top: { number: cT }, right: { number: cT }, bottom: { number: cT }, left: { number: cT }, __type__: { object: fT, number: cT } }, mass: { number: cT }, physics: { boolean: lT }, scaling: { min: { number: cT }, max: { number: cT }, label: { enabled: { boolean: lT }, min: { number: cT }, max: { number: cT }, maxVisible: { number: cT }, drawThreshold: { number: cT }, __type__: { object: fT, boolean: lT } }, customScalingFunction: { function: "function" }, __type__: { object: fT } }, shadow: { enabled: { boolean: lT }, color: { string: dT }, size: { number: cT }, x: { number: cT }, y: { number: cT }, __type__: { object: fT, boolean: lT } }, shape: { string: ["custom", "ellipse", "circle", "database", "box", "text", "image", "circularImage", "diamond", "dot", "star", "triangle", "triangleDown", "square", "icon", "hexagon"] }, ctxRenderer: { function: "function" }, shapeProperties: { borderDashes: { boolean: lT, array: uT }, borderRadius: { number: cT }, interpolation: { boolean: lT }, useImageSize: { boolean: lT }, useBorderWithImage: { boolean: lT }, coordinateOrigin: { string: ["center", "top-left"] }, __type__: { object: fT } }, size: { number: cT }, title: { string: dT, dom: "dom", undefined: "undefined" }, value: { number: cT, undefined: "undefined" }, widthConstraint: { minimum: { number: cT }, maximum: { number: cT }, __type__: { object: fT, boolean: lT, number: cT } }, x: { number: cT }, y: { number: cT }, __type__: { object: fT } }, gT = { configure: { enabled: { boolean: lT }, filter: { boolean: lT, string: dT, array: uT, function: "function" }, container: { dom: "dom" }, showButton: { boolean: lT }, __type__: { object: fT, boolean: lT, string: dT, array: uT, function: "function" } }, edges: { arrows: { to: { enabled: { boolean: lT }, scaleFactor: { number: cT }, type: { string: pT }, imageHeight: { number: cT }, imageWidth: { number: cT }, src: { string: dT }, __type__: { object: fT, boolean: lT } }, middle: { enabled: { boolean: lT }, scaleFactor: { number: cT }, type: { string: pT }, imageWidth: { number: cT }, imageHeight: { number: cT }, src: { string: dT }, __type__: { object: fT, boolean: lT } }, from: { enabled: { boolean: lT }, scaleFactor: { number: cT }, type: { string: pT }, imageWidth: { number: cT }, imageHeight: { number: cT }, src: { string: dT }, __type__: { object: fT, boolean: lT } }, __type__: { string: ["from", "to", "middle"], object: fT } }, endPointOffset: { from: { number: cT }, to: { number: cT }, __type__: { object: fT, number: cT } }, arrowStrikethrough: { boolean: lT }, background: { enabled: { boolean: lT }, color: { string: dT }, size: { number: cT }, dashes: { boolean: lT, array: uT }, __type__: { object: fT, boolean: lT } }, chosen: { label: { boolean: lT, function: "function" }, edge: { boolean: lT, function: "function" }, __type__: { object: fT, boolean: lT } }, color: { color: { string: dT }, highlight: { string: dT }, hover: { string: dT }, inherit: { string: ["from", "to", "both"], boolean: lT }, opacity: { number: cT }, __type__: { object: fT, string: dT } }, dashes: { boolean: lT, array: uT }, font: { color: { string: dT }, size: { number: cT }, face: { string: dT }, background: { string: dT }, strokeWidth: { number: cT }, strokeColor: { string: dT }, align: { string: ["horizontal", "top", "middle", "bottom"] }, vadjust: { number: cT }, multi: { boolean: lT, string: dT }, bold: { color: { string: dT }, size: { number: cT }, face: { string: dT }, mod: { string: dT }, vadjust: { number: cT }, __type__: { object: fT, string: dT } }, boldital: { color: { string: dT }, size: { number: cT }, face: { string: dT }, mod: { string: dT }, vadjust: { number: cT }, __type__: { object: fT, string: dT } }, ital: { color: { string: dT }, size: { number: cT }, face: { string: dT }, mod: { string: dT }, vadjust: { number: cT }, __type__: { object: fT, string: dT } }, mono: { color: { string: dT }, size: { number: cT }, face: { string: dT }, mod: { string: dT }, vadjust: { number: cT }, __type__: { object: fT, string: dT } }, __type__: { object: fT, string: dT } }, hidden: { boolean: lT }, hoverWidth: { function: "function", number: cT }, label: { string: dT, undefined: "undefined" }, labelHighlightBold: { boolean: lT }, length: { number: cT, undefined: "undefined" }, physics: { boolean: lT }, scaling: { min: { number: cT }, max: { number: cT }, label: { enabled: { boolean: lT }, min: { number: cT }, max: { number: cT }, maxVisible: { number: cT }, drawThreshold: { number: cT }, __type__: { object: fT, boolean: lT } }, customScalingFunction: { function: "function" }, __type__: { object: fT } }, selectionWidth: { function: "function", number: cT }, selfReferenceSize: { number: cT }, selfReference: { size: { number: cT }, angle: { number: cT }, renderBehindTheNode: { boolean: lT }, __type__: { object: fT } }, shadow: { enabled: { boolean: lT }, color: { string: dT }, size: { number: cT }, x: { number: cT }, y: { number: cT }, __type__: { object: fT, boolean: lT } }, smooth: { enabled: { boolean: lT }, type: { string: ["dynamic", "continuous", "discrete", "diagonalCross", "straightCross", "horizontal", "vertical", "curvedCW", "curvedCCW", "cubicBezier"] }, roundness: { number: cT }, forceDirection: { string: ["horizontal", "vertical", "none"], boolean: lT }, __type__: { object: fT, boolean: lT } }, title: { string: dT, undefined: "undefined" }, width: { number: cT }, widthConstraint: { maximum: { number: cT }, __type__: { object: fT, boolean: lT, number: cT } }, value: { number: cT, undefined: "undefined" }, __type__: { object: fT } }, groups: { useDefaultGroups: { boolean: lT }, __any__: vT, __type__: { object: fT } }, interaction: { dragNodes: { boolean: lT }, dragView: { boolean: lT }, hideEdgesOnDrag: { boolean: lT }, hideEdgesOnZoom: { boolean: lT }, hideNodesOnDrag: { boolean: lT }, hover: { boolean: lT }, keyboard: { enabled: { boolean: lT }, speed: { x: { number: cT }, y: { number: cT }, zoom: { number: cT }, __type__: { object: fT } }, bindToWindow: { boolean: lT }, autoFocus: { boolean: lT }, __type__: { object: fT, boolean: lT } }, multiselect: { boolean: lT }, navigationButtons: { boolean: lT }, selectable: { boolean: lT }, selectConnectedEdges: { boolean: lT }, hoverConnectedEdges: { boolean: lT }, tooltipDelay: { number: cT }, zoomView: { boolean: lT }, zoomSpeed: { number: cT }, __type__: { object: fT } }, layout: { randomSeed: { undefined: "undefined", number: cT, string: dT }, improvedLayout: { boolean: lT }, clusterThreshold: { number: cT }, hierarchical: { enabled: { boolean: lT }, levelSeparation: { number: cT }, nodeSpacing: { number: cT }, treeSpacing: { number: cT }, blockShifting: { boolean: lT }, edgeMinimization: { boolean: lT }, parentCentralization: { boolean: lT }, direction: { string: ["UD", "DU", "LR", "RL"] }, sortMethod: { string: ["hubsize", "directed"] }, shakeTowards: { string: ["leaves", "roots"] }, __type__: { object: fT, boolean: lT } }, __type__: { object: fT } }, manipulation: { enabled: { boolean: lT }, initiallyActive: { boolean: lT }, addNode: { boolean: lT, function: "function" }, addEdge: { boolean: lT, function: "function" }, editNode: { function: "function" }, editEdge: { editWithoutDrag: { function: "function" }, __type__: { object: fT, boolean: lT, function: "function" } }, deleteNode: { boolean: lT, function: "function" }, deleteEdge: { boolean: lT, function: "function" }, controlNodeStyle: vT, __type__: { object: fT, boolean: lT } }, nodes: vT, physics: { enabled: { boolean: lT }, barnesHut: { theta: { number: cT }, gravitationalConstant: { number: cT }, centralGravity: { number: cT }, springLength: { number: cT }, springConstant: { number: cT }, damping: { number: cT }, avoidOverlap: { number: cT }, __type__: { object: fT } }, forceAtlas2Based: { theta: { number: cT }, gravitationalConstant: { number: cT }, centralGravity: { number: cT }, springLength: { number: cT }, springConstant: { number: cT }, damping: { number: cT }, avoidOverlap: { number: cT }, __type__: { object: fT } }, repulsion: { centralGravity: { number: cT }, springLength: { number: cT }, springConstant: { number: cT }, nodeDistance: { number: cT }, damping: { number: cT }, __type__: { object: fT } }, hierarchicalRepulsion: { centralGravity: { number: cT }, springLength: { number: cT }, springConstant: { number: cT }, nodeDistance: { number: cT }, damping: { number: cT }, avoidOverlap: { number: cT }, __type__: { object: fT } }, maxVelocity: { number: cT }, minVelocity: { number: cT }, solver: { string: ["barnesHut", "repulsion", "hierarchicalRepulsion", "forceAtlas2Based"] }, stabilization: { enabled: { boolean: lT }, iterations: { number: cT }, updateInterval: { number: cT }, onlyDynamicEdges: { boolean: lT }, fit: { boolean: lT }, __type__: { object: fT, boolean: lT } }, timestep: { number: cT }, adaptiveTimestep: { boolean: lT }, wind: { x: { number: cT }, y: { number: cT }, __type__: { object: fT } }, __type__: { object: fT, boolean: lT } }, autoResize: { boolean: lT }, clickToUse: { boolean: lT }, locale: { string: dT }, locales: { __any__: { any: "any" }, __type__: { object: fT } }, height: { string: dT }, width: { string: dT }, __type__: { object: fT } }, yT = { nodes: { borderWidth: [1, 0, 10, 1], borderWidthSelected: [2, 0, 10, 1], color: { border: ["color", "#2B7CE9"], background: ["color", "#97C2FC"], highlight: { border: ["color", "#2B7CE9"], background: ["color", "#D2E5FF"] }, hover: { border: ["color", "#2B7CE9"], background: ["color", "#D2E5FF"] } }, opacity: [0, 0, 1, 0.1], fixed: { x: false, y: false }, font: { color: ["color", "#343434"], size: [14, 0, 100, 1], face: ["arial", "verdana", "tahoma"], background: ["color", "none"], strokeWidth: [0, 0, 50, 1], strokeColor: ["color", "#ffffff"] }, hidden: false, labelHighlightBold: true, physics: true, scaling: { min: [10, 0, 200, 1], max: [30, 0, 200, 1], label: { enabled: false, min: [14, 0, 200, 1], max: [30, 0, 200, 1], maxVisible: [30, 0, 200, 1], drawThreshold: [5, 0, 20, 1] } }, shadow: { enabled: false, color: "rgba(0,0,0,0.5)", size: [10, 0, 20, 1], x: [5, -30, 30, 1], y: [5, -30, 30, 1] }, shape: ["ellipse", "box", "circle", "database", "diamond", "dot", "square", "star", "text", "triangle", "triangleDown", "hexagon"], shapeProperties: { borderDashes: false, borderRadius: [6, 0, 20, 1], interpolation: true, useImageSize: false }, size: [25, 0, 200, 1] }, edges: { arrows: { to: { enabled: false, scaleFactor: [1, 0, 3, 0.05], type: "arrow" }, middle: { enabled: false, scaleFactor: [1, 0, 3, 0.05], type: "arrow" }, from: { enabled: false, scaleFactor: [1, 0, 3, 0.05], type: "arrow" } }, endPointOffset: { from: [0, -10, 10, 1], to: [0, -10, 10, 1] }, arrowStrikethrough: true, color: { color: ["color", "#848484"], highlight: ["color", "#848484"], hover: ["color", "#848484"], inherit: ["from", "to", "both", true, false], opacity: [1, 0, 1, 0.05] }, dashes: false, font: { color: ["color", "#343434"], size: [14, 0, 100, 1], face: ["arial", "verdana", "tahoma"], background: ["color", "none"], strokeWidth: [2, 0, 50, 1], strokeColor: ["color", "#ffffff"], align: ["horizontal", "top", "middle", "bottom"] }, hidden: false, hoverWidth: [1.5, 0, 5, 0.1], labelHighlightBold: true, physics: true, scaling: { min: [1, 0, 100, 1], max: [15, 0, 100, 1], label: { enabled: true, min: [14, 0, 200, 1], max: [30, 0, 200, 1], maxVisible: [30, 0, 200, 1], drawThreshold: [5, 0, 20, 1] } }, selectionWidth: [1.5, 0, 5, 0.1], selfReferenceSize: [20, 0, 200, 1], selfReference: { size: [20, 0, 200, 1], angle: [Math.PI / 2, -6 * Math.PI, 6 * Math.PI, Math.PI / 8], renderBehindTheNode: true }, shadow: { enabled: false, color: "rgba(0,0,0,0.5)", size: [10, 0, 20, 1], x: [5, -30, 30, 1], y: [5, -30, 30, 1] }, smooth: { enabled: true, type: ["dynamic", "continuous", "discrete", "diagonalCross", "straightCross", "horizontal", "vertical", "curvedCW", "curvedCCW", "cubicBezier"], forceDirection: ["horizontal", "vertical", "none"], roundness: [0.5, 0, 1, 0.05] }, width: [1, 0, 30, 1] }, layout: { hierarchical: { enabled: false, levelSeparation: [150, 20, 500, 5], nodeSpacing: [100, 20, 500, 5], treeSpacing: [200, 20, 500, 5], blockShifting: true, edgeMinimization: true, parentCentralization: true, direction: ["UD", "DU", "LR", "RL"], sortMethod: ["hubsize", "directed"], shakeTowards: ["leaves", "roots"] } }, interaction: { dragNodes: true, dragView: true, hideEdgesOnDrag: false, hideEdgesOnZoom: false, hideNodesOnDrag: false, hover: false, keyboard: { enabled: false, speed: { x: [10, 0, 40, 1], y: [10, 0, 40, 1], zoom: [0.02, 0, 0.1, 5e-3] }, bindToWindow: true, autoFocus: true }, multiselect: false, navigationButtons: false, selectable: true, selectConnectedEdges: true, hoverConnectedEdges: true, tooltipDelay: [300, 0, 1e3, 25], zoomView: true, zoomSpeed: [1, 0.1, 2, 0.1] }, manipulation: { enabled: false, initiallyActive: false }, physics: { enabled: true, barnesHut: { theta: [0.5, 0.1, 1, 0.05], gravitationalConstant: [-2e3, -3e4, 0, 50], centralGravity: [0.3, 0, 10, 0.05], springLength: [95, 0, 500, 5], springConstant: [0.04, 0, 1.2, 5e-3], damping: [0.09, 0, 1, 0.01], avoidOverlap: [0, 0, 1, 0.01] }, forceAtlas2Based: { theta: [0.5, 0.1, 1, 0.05], gravitationalConstant: [-50, -500, 0, 1], centralGravity: [0.01, 0, 1, 5e-3], springLength: [95, 0, 500, 5], springConstant: [0.08, 0, 1.2, 5e-3], damping: [0.4, 0, 1, 0.01], avoidOverlap: [0, 0, 1, 0.01] }, repulsion: { centralGravity: [0.2, 0, 10, 0.05], springLength: [200, 0, 500, 5], springConstant: [0.05, 0, 1.2, 5e-3], nodeDistance: [100, 0, 500, 5], damping: [0.09, 0, 1, 0.01] }, hierarchicalRepulsion: { centralGravity: [0.2, 0, 10, 0.05], springLength: [100, 0, 500, 5], springConstant: [0.01, 0, 1.2, 5e-3], nodeDistance: [120, 0, 500, 5], damping: [0.09, 0, 1, 0.01], avoidOverlap: [0, 0, 1, 0.01] }, maxVelocity: [50, 0, 150, 1], minVelocity: [0.1, 0.01, 0.5, 0.01], solver: ["barnesHut", "forceAtlas2Based", "repulsion", "hierarchicalRepulsion"], timestep: [0.5, 0.01, 1, 0.01], wind: { x: [0, -10, 10, 0.1], y: [0, -10, 10, 0.1] } } }, mT = function(t2, e2, i2) {
        var o2;
        return !(!Qp(t2).call(t2, "physics") || !Qp(o2 = yT.physics.solver).call(o2, e2) || i2.physics.solver === e2 || "wind" === e2);
      }, bT = Object.freeze({ __proto__: null, allOptions: gT, configuratorHideOption: mT, configureOptions: yT }), wT = function() {
        function t2() {
          vh(this, t2);
        }
        return wu(t2, [{ key: "getDistances", value: function(t3, e2, i2) {
          for (var o2 = {}, n2 = t3.edges, r2 = 0; r2 < e2.length; r2++) {
            var s2 = {};
            o2[e2[r2]] = s2;
            for (var a2 = 0; a2 < e2.length; a2++) s2[e2[a2]] = r2 == a2 ? 0 : 1e9;
          }
          for (var h2 = 0; h2 < i2.length; h2++) {
            var d2 = n2[i2[h2]];
            true === d2.connected && void 0 !== o2[d2.fromId] && void 0 !== o2[d2.toId] && (o2[d2.fromId][d2.toId] = 1, o2[d2.toId][d2.fromId] = 1);
          }
          for (var l2 = e2.length, c2 = 0; c2 < l2; c2++) for (var u2 = e2[c2], f2 = o2[u2], p2 = 0; p2 < l2 - 1; p2++) for (var v2 = e2[p2], g2 = o2[v2], y2 = p2 + 1; y2 < l2; y2++) {
            var m2 = e2[y2], b2 = o2[m2], w2 = Math.min(g2[m2], g2[u2] + f2[m2]);
            g2[m2] = w2, b2[v2] = w2;
          }
          return o2;
        } }]), t2;
      }(), kT = function() {
        function t2(e2, i2, o2) {
          vh(this, t2), this.body = e2, this.springLength = i2, this.springConstant = o2, this.distanceSolver = new wT();
        }
        return wu(t2, [{ key: "setOptions", value: function(t3) {
          t3 && (t3.springLength && (this.springLength = t3.springLength), t3.springConstant && (this.springConstant = t3.springConstant));
        } }, { key: "solve", value: function(t3, e2) {
          var i2 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], o2 = this.distanceSolver.getDistances(this.body, t3, e2);
          this._createL_matrix(o2), this._createK_matrix(o2), this._createE_matrix();
          for (var n2 = 0, r2 = Math.max(1e3, Math.min(10 * this.body.nodeIndices.length, 6e3)), s2 = 1e9, a2 = 0, h2 = 0, d2 = 0, l2 = 0, c2 = 0; s2 > 0.01 && n2 < r2; ) {
            n2 += 1;
            var u2 = df(this._getHighestEnergyNode(i2), 4);
            for (a2 = u2[0], s2 = u2[1], h2 = u2[2], d2 = u2[3], l2 = s2, c2 = 0; l2 > 1 && c2 < 5; ) {
              c2 += 1, this._moveNode(a2, h2, d2);
              var f2 = df(this._getEnergy(a2), 3);
              l2 = f2[0], h2 = f2[1], d2 = f2[2];
            }
          }
        } }, { key: "_getHighestEnergyNode", value: function(t3) {
          for (var e2 = this.body.nodeIndices, i2 = this.body.nodes, o2 = 0, n2 = e2[0], r2 = 0, s2 = 0, a2 = 0; a2 < e2.length; a2++) {
            var h2 = e2[a2];
            if (true !== i2[h2].predefinedPosition || true === i2[h2].isCluster && true === t3 || true !== i2[h2].options.fixed.x || true !== i2[h2].options.fixed.y) {
              var d2 = df(this._getEnergy(h2), 3), l2 = d2[0], c2 = d2[1], u2 = d2[2];
              o2 < l2 && (o2 = l2, n2 = h2, r2 = c2, s2 = u2);
            }
          }
          return [n2, o2, r2, s2];
        } }, { key: "_getEnergy", value: function(t3) {
          var e2 = df(this.E_sums[t3], 2), i2 = e2[0], o2 = e2[1];
          return [Math.sqrt(Math.pow(i2, 2) + Math.pow(o2, 2)), i2, o2];
        } }, { key: "_moveNode", value: function(t3, e2, i2) {
          for (var o2 = this.body.nodeIndices, n2 = this.body.nodes, r2 = 0, s2 = 0, a2 = 0, h2 = n2[t3].x, d2 = n2[t3].y, l2 = this.K_matrix[t3], c2 = this.L_matrix[t3], u2 = 0; u2 < o2.length; u2++) {
            var f2 = o2[u2];
            if (f2 !== t3) {
              var p2 = n2[f2].x, v2 = n2[f2].y, g2 = l2[f2], y2 = c2[f2], m2 = 1 / Math.pow(Math.pow(h2 - p2, 2) + Math.pow(d2 - v2, 2), 1.5);
              r2 += g2 * (1 - y2 * Math.pow(d2 - v2, 2) * m2), s2 += g2 * (y2 * (h2 - p2) * (d2 - v2) * m2), a2 += g2 * (1 - y2 * Math.pow(h2 - p2, 2) * m2);
            }
          }
          var b2 = (e2 / r2 + i2 / s2) / (s2 / r2 - a2 / s2), w2 = -(s2 * b2 + e2) / r2;
          n2[t3].x += w2, n2[t3].y += b2, this._updateE_matrix(t3);
        } }, { key: "_createL_matrix", value: function(t3) {
          var e2 = this.body.nodeIndices, i2 = this.springLength;
          this.L_matrix = [];
          for (var o2 = 0; o2 < e2.length; o2++) {
            this.L_matrix[e2[o2]] = {};
            for (var n2 = 0; n2 < e2.length; n2++) this.L_matrix[e2[o2]][e2[n2]] = i2 * t3[e2[o2]][e2[n2]];
          }
        } }, { key: "_createK_matrix", value: function(t3) {
          var e2 = this.body.nodeIndices, i2 = this.springConstant;
          this.K_matrix = [];
          for (var o2 = 0; o2 < e2.length; o2++) {
            this.K_matrix[e2[o2]] = {};
            for (var n2 = 0; n2 < e2.length; n2++) this.K_matrix[e2[o2]][e2[n2]] = i2 * Math.pow(t3[e2[o2]][e2[n2]], -2);
          }
        } }, { key: "_createE_matrix", value: function() {
          var t3 = this.body.nodeIndices, e2 = this.body.nodes;
          this.E_matrix = {}, this.E_sums = {};
          for (var i2 = 0; i2 < t3.length; i2++) this.E_matrix[t3[i2]] = [];
          for (var o2 = 0; o2 < t3.length; o2++) {
            for (var n2 = t3[o2], r2 = e2[n2].x, s2 = e2[n2].y, a2 = 0, h2 = 0, d2 = o2; d2 < t3.length; d2++) {
              var l2 = t3[d2];
              if (l2 !== n2) {
                var c2 = e2[l2].x, u2 = e2[l2].y, f2 = 1 / Math.sqrt(Math.pow(r2 - c2, 2) + Math.pow(s2 - u2, 2));
                this.E_matrix[n2][d2] = [this.K_matrix[n2][l2] * (r2 - c2 - this.L_matrix[n2][l2] * (r2 - c2) * f2), this.K_matrix[n2][l2] * (s2 - u2 - this.L_matrix[n2][l2] * (s2 - u2) * f2)], this.E_matrix[l2][o2] = this.E_matrix[n2][d2], a2 += this.E_matrix[n2][d2][0], h2 += this.E_matrix[n2][d2][1];
              }
            }
            this.E_sums[n2] = [a2, h2];
          }
        } }, { key: "_updateE_matrix", value: function(t3) {
          for (var e2 = this.body.nodeIndices, i2 = this.body.nodes, o2 = this.E_matrix[t3], n2 = this.K_matrix[t3], r2 = this.L_matrix[t3], s2 = i2[t3].x, a2 = i2[t3].y, h2 = 0, d2 = 0, l2 = 0; l2 < e2.length; l2++) {
            var c2 = e2[l2];
            if (c2 !== t3) {
              var u2 = o2[l2], f2 = u2[0], p2 = u2[1], v2 = i2[c2].x, g2 = i2[c2].y, y2 = 1 / Math.sqrt(Math.pow(s2 - v2, 2) + Math.pow(a2 - g2, 2)), m2 = n2[c2] * (s2 - v2 - r2[c2] * (s2 - v2) * y2), b2 = n2[c2] * (a2 - g2 - r2[c2] * (a2 - g2) * y2);
              o2[l2] = [m2, b2], h2 += m2, d2 += b2;
              var w2 = this.E_sums[c2];
              w2[0] += m2 - f2, w2[1] += b2 - p2;
            }
          }
          this.E_sums[t3] = [h2, d2];
        } }]), t2;
      }();
      function _T(t2, e2, i2) {
        var o2, n2, r2, s2, a2 = this;
        if (!(this instanceof _T)) throw new SyntaxError("Constructor must be called with the new operator");
        this.options = {}, this.defaultOptions = { locale: "en", locales: Kb, clickToUse: false }, wo(this.options, this.defaultOptions), this.body = { container: t2, nodes: {}, nodeIndices: [], edges: {}, edgeIndices: [], emitter: { on: Wo(o2 = this.on).call(o2, this), off: Wo(n2 = this.off).call(n2, this), emit: Wo(r2 = this.emit).call(r2, this), once: Wo(s2 = this.once).call(s2, this) }, eventListeners: { onTap: function() {
        }, onTouch: function() {
        }, onDoubleTap: function() {
        }, onHold: function() {
        }, onDragStart: function() {
        }, onDrag: function() {
        }, onDragEnd: function() {
        }, onMouseWheel: function() {
        }, onPinch: function() {
        }, onMouseMove: function() {
        }, onRelease: function() {
        }, onContext: function() {
        } }, data: { nodes: null, edges: null }, functions: { createNode: function() {
        }, createEdge: function() {
        }, getPointer: function() {
        } }, modules: {}, view: { scale: 1, translation: { x: 0, y: 0 } }, selectionBox: { show: false, position: { start: { x: 0, y: 0 }, end: { x: 0, y: 0 } } } }, this.bindEventListeners(), this.images = new $b(function() {
          return a2.body.emitter.emit("_requestRedraw");
        }), this.groups = new Ek(), this.canvas = new CO(this.body), this.selectionHandler = new VC(this.body, this.canvas), this.interactionHandler = new IO(this.body, this.canvas, this.selectionHandler), this.view = new SO(this.body, this.canvas), this.renderer = new _O(this.body, this.canvas), this.physics = new cO(this.body), this.layoutEngine = new rT(this.body), this.clustering = new kO(this.body), this.manipulation = new hT(this.body, this.canvas, this.selectionHandler, this.interactionHandler), this.nodesHandler = new rE(this.body, this.images, this.groups, this.layoutEngine), this.edgesHandler = new tO(this.body, this.images, this.groups), this.body.modules.kamadaKawai = new kT(this.body, 150, 0.05), this.body.modules.clustering = this.clustering, this.canvas._create(), this.setOptions(i2), this.setData(e2);
      }
      $o(_T.prototype), _T.prototype.setOptions = function(t2) {
        var e2 = this;
        if (null === t2 && (t2 = void 0), void 0 !== t2) {
          true === vb.validate(t2, gT) && console.error("%cErrors have been found in the supplied options object.", pb);
          if (Nm(["locale", "locales", "clickToUse"], this.options, t2), void 0 !== t2.locale && (t2.locale = function(t3, e3) {
            try {
              var i3 = df(e3.split(/[-_ /]/, 2), 2), o2 = i3[0], n2 = i3[1], r2 = null != o2 ? o2.toLowerCase() : null, s2 = null != n2 ? n2.toUpperCase() : null;
              if (r2 && s2) {
                var a2, h2 = r2 + "-" + s2;
                if (Object.prototype.hasOwnProperty.call(t3, h2)) return h2;
                console.warn(yf(a2 = "Unknown variant ".concat(s2, " of language ")).call(a2, r2, "."));
              }
              if (r2) {
                var d2 = r2;
                if (Object.prototype.hasOwnProperty.call(t3, d2)) return d2;
                console.warn("Unknown language ".concat(r2));
              }
              return console.warn("Unknown locale ".concat(e3, ", falling back to English.")), "en";
            } catch (t4) {
              return console.error(t4), console.warn("Unexpected error while normalizing locale ".concat(e3, ", falling back to English.")), "en";
            }
          }(t2.locales || this.options.locales, t2.locale)), t2 = this.layoutEngine.setOptions(t2.layout, t2), this.canvas.setOptions(t2), this.groups.setOptions(t2.groups), this.nodesHandler.setOptions(t2.nodes), this.edgesHandler.setOptions(t2.edges), this.physics.setOptions(t2.physics), this.manipulation.setOptions(t2.manipulation, t2, this.options), this.interactionHandler.setOptions(t2.interaction), this.renderer.setOptions(t2.interaction), this.selectionHandler.setOptions(t2.interaction), void 0 !== t2.groups && this.body.emitter.emit("refreshNodes"), "configure" in t2 && (this.configurator || (this.configurator = new cb(this, this.body.container, yT, this.canvas.pixelRatio, mT)), this.configurator.setOptions(t2.configure)), this.configurator && true === this.configurator.options.enabled) {
            var i2 = { nodes: {}, edges: {}, layout: {}, interaction: {}, manipulation: {}, physics: {}, global: {} };
            Rm(i2.nodes, this.nodesHandler.options), Rm(i2.edges, this.edgesHandler.options), Rm(i2.layout, this.layoutEngine.options), Rm(i2.interaction, this.selectionHandler.options), Rm(i2.interaction, this.renderer.options), Rm(i2.interaction, this.interactionHandler.options), Rm(i2.manipulation, this.manipulation.options), Rm(i2.physics, this.physics.options), Rm(i2.global, this.canvas.options), Rm(i2.global, this.options), this.configurator.setModuleOptions(i2);
          }
          void 0 !== t2.clickToUse ? true === t2.clickToUse ? void 0 === this.activator && (this.activator = new lb(this.canvas.frame), this.activator.on("change", function() {
            e2.body.emitter.emit("activate");
          })) : (void 0 !== this.activator && (this.activator.destroy(), delete this.activator), this.body.emitter.emit("activate")) : this.body.emitter.emit("activate"), this.canvas.setSize(), this.body.emitter.emit("startSimulation");
        }
      }, _T.prototype._updateVisibleIndices = function() {
        var t2 = this.body.nodes, e2 = this.body.edges;
        for (var i2 in this.body.nodeIndices = [], this.body.edgeIndices = [], t2) Object.prototype.hasOwnProperty.call(t2, i2) && (this.clustering._isClusteredNode(i2) || false !== t2[i2].options.hidden || this.body.nodeIndices.push(t2[i2].id));
        for (var o2 in e2) if (Object.prototype.hasOwnProperty.call(e2, o2)) {
          var n2 = e2[o2], r2 = t2[n2.fromId], s2 = t2[n2.toId], a2 = void 0 !== r2 && void 0 !== s2;
          !this.clustering._isClusteredEdge(o2) && false === n2.options.hidden && a2 && false === r2.options.hidden && false === s2.options.hidden && this.body.edgeIndices.push(n2.id);
        }
      }, _T.prototype.bindEventListeners = function() {
        var t2 = this;
        this.body.emitter.on("_dataChanged", function() {
          t2.edgesHandler._updateState(), t2.body.emitter.emit("_dataUpdated");
        }), this.body.emitter.on("_dataUpdated", function() {
          t2.clustering._updateState(), t2._updateVisibleIndices(), t2._updateValueRange(t2.body.nodes), t2._updateValueRange(t2.body.edges), t2.body.emitter.emit("startSimulation"), t2.body.emitter.emit("_requestRedraw");
        });
      }, _T.prototype.setData = function(t2) {
        if (this.body.emitter.emit("resetPhysics"), this.body.emitter.emit("_resetData"), this.selectionHandler.unselectAll(), t2 && t2.dot && (t2.nodes || t2.edges)) throw new SyntaxError('Data must contain either parameter "dot" or  parameter pair "nodes" and "edges", but not both.');
        if (this.setOptions(t2 && t2.options), t2 && t2.dot) {
          console.warn("The dot property has been deprecated. Please use the static convertDot method to convert DOT into vis.network format and use the normal data format with nodes and edges. This converter is used like this: var data = vis.network.convertDot(dotString);");
          var e2 = qb(t2.dot);
          this.setData(e2);
        } else if (t2 && t2.gephi) {
          console.warn("The gephi property has been deprecated. Please use the static convertGephi method to convert gephi into vis.network format and use the normal data format with nodes and edges. This converter is used like this: var data = vis.network.convertGephi(gephiJson);");
          var i2 = Yb(t2.gephi);
          this.setData(i2);
        } else this.nodesHandler.setData(t2 && t2.nodes, true), this.edgesHandler.setData(t2 && t2.edges, true), this.body.emitter.emit("_dataChanged"), this.body.emitter.emit("_dataLoaded"), this.body.emitter.emit("initPhysics");
      }, _T.prototype.destroy = function() {
        for (var t2 in this.body.emitter.emit("destroy"), this.body.emitter.off(), this.off(), delete this.groups, delete this.canvas, delete this.selectionHandler, delete this.interactionHandler, delete this.view, delete this.renderer, delete this.physics, delete this.layoutEngine, delete this.clustering, delete this.manipulation, delete this.nodesHandler, delete this.edgesHandler, delete this.configurator, delete this.images, this.body.nodes) Object.prototype.hasOwnProperty.call(this.body.nodes, t2) && delete this.body.nodes[t2];
        for (var e2 in this.body.edges) Object.prototype.hasOwnProperty.call(this.body.edges, e2) && delete this.body.edges[e2];
        Dm(this.body.container);
      }, _T.prototype._updateValueRange = function(t2) {
        var e2, i2 = void 0, o2 = void 0, n2 = 0;
        for (e2 in t2) if (Object.prototype.hasOwnProperty.call(t2, e2)) {
          var r2 = t2[e2].getValue();
          void 0 !== r2 && (i2 = void 0 === i2 ? r2 : Math.min(r2, i2), o2 = void 0 === o2 ? r2 : Math.max(r2, o2), n2 += r2);
        }
        if (void 0 !== i2 && void 0 !== o2) for (e2 in t2) Object.prototype.hasOwnProperty.call(t2, e2) && t2[e2].setValueRange(i2, o2, n2);
      }, _T.prototype.isActive = function() {
        return !this.activator || this.activator.active;
      }, _T.prototype.setSize = function() {
        return this.canvas.setSize.apply(this.canvas, arguments);
      }, _T.prototype.canvasToDOM = function() {
        return this.canvas.canvasToDOM.apply(this.canvas, arguments);
      }, _T.prototype.DOMtoCanvas = function() {
        return this.canvas.DOMtoCanvas.apply(this.canvas, arguments);
      }, _T.prototype.findNode = function() {
        return this.clustering.findNode.apply(this.clustering, arguments);
      }, _T.prototype.isCluster = function() {
        return this.clustering.isCluster.apply(this.clustering, arguments);
      }, _T.prototype.openCluster = function() {
        return this.clustering.openCluster.apply(this.clustering, arguments);
      }, _T.prototype.cluster = function() {
        return this.clustering.cluster.apply(this.clustering, arguments);
      }, _T.prototype.getNodesInCluster = function() {
        return this.clustering.getNodesInCluster.apply(this.clustering, arguments);
      }, _T.prototype.clusterByConnection = function() {
        return this.clustering.clusterByConnection.apply(this.clustering, arguments);
      }, _T.prototype.clusterByHubsize = function() {
        return this.clustering.clusterByHubsize.apply(this.clustering, arguments);
      }, _T.prototype.updateClusteredNode = function() {
        return this.clustering.updateClusteredNode.apply(this.clustering, arguments);
      }, _T.prototype.getClusteredEdges = function() {
        return this.clustering.getClusteredEdges.apply(this.clustering, arguments);
      }, _T.prototype.getBaseEdge = function() {
        return this.clustering.getBaseEdge.apply(this.clustering, arguments);
      }, _T.prototype.getBaseEdges = function() {
        return this.clustering.getBaseEdges.apply(this.clustering, arguments);
      }, _T.prototype.updateEdge = function() {
        return this.clustering.updateEdge.apply(this.clustering, arguments);
      }, _T.prototype.clusterOutliers = function() {
        return this.clustering.clusterOutliers.apply(this.clustering, arguments);
      }, _T.prototype.getSeed = function() {
        return this.layoutEngine.getSeed.apply(this.layoutEngine, arguments);
      }, _T.prototype.enableEditMode = function() {
        return this.manipulation.enableEditMode.apply(this.manipulation, arguments);
      }, _T.prototype.disableEditMode = function() {
        return this.manipulation.disableEditMode.apply(this.manipulation, arguments);
      }, _T.prototype.addNodeMode = function() {
        return this.manipulation.addNodeMode.apply(this.manipulation, arguments);
      }, _T.prototype.editNode = function() {
        return this.manipulation.editNode.apply(this.manipulation, arguments);
      }, _T.prototype.editNodeMode = function() {
        return console.warn("Deprecated: Please use editNode instead of editNodeMode."), this.manipulation.editNode.apply(this.manipulation, arguments);
      }, _T.prototype.addEdgeMode = function() {
        return this.manipulation.addEdgeMode.apply(this.manipulation, arguments);
      }, _T.prototype.editEdgeMode = function() {
        return this.manipulation.editEdgeMode.apply(this.manipulation, arguments);
      }, _T.prototype.deleteSelected = function() {
        return this.manipulation.deleteSelected.apply(this.manipulation, arguments);
      }, _T.prototype.getPositions = function() {
        return this.nodesHandler.getPositions.apply(this.nodesHandler, arguments);
      }, _T.prototype.getPosition = function() {
        return this.nodesHandler.getPosition.apply(this.nodesHandler, arguments);
      }, _T.prototype.storePositions = function() {
        return this.nodesHandler.storePositions.apply(this.nodesHandler, arguments);
      }, _T.prototype.moveNode = function() {
        return this.nodesHandler.moveNode.apply(this.nodesHandler, arguments);
      }, _T.prototype.getBoundingBox = function() {
        return this.nodesHandler.getBoundingBox.apply(this.nodesHandler, arguments);
      }, _T.prototype.getConnectedNodes = function(t2) {
        return void 0 !== this.body.nodes[t2] ? this.nodesHandler.getConnectedNodes.apply(this.nodesHandler, arguments) : this.edgesHandler.getConnectedNodes.apply(this.edgesHandler, arguments);
      }, _T.prototype.getConnectedEdges = function() {
        return this.nodesHandler.getConnectedEdges.apply(this.nodesHandler, arguments);
      }, _T.prototype.startSimulation = function() {
        return this.physics.startSimulation.apply(this.physics, arguments);
      }, _T.prototype.stopSimulation = function() {
        return this.physics.stopSimulation.apply(this.physics, arguments);
      }, _T.prototype.stabilize = function() {
        return this.physics.stabilize.apply(this.physics, arguments);
      }, _T.prototype.getSelection = function() {
        return this.selectionHandler.getSelection.apply(this.selectionHandler, arguments);
      }, _T.prototype.setSelection = function() {
        return this.selectionHandler.setSelection.apply(this.selectionHandler, arguments);
      }, _T.prototype.getSelectedNodes = function() {
        return this.selectionHandler.getSelectedNodeIds.apply(this.selectionHandler, arguments);
      }, _T.prototype.getSelectedEdges = function() {
        return this.selectionHandler.getSelectedEdgeIds.apply(this.selectionHandler, arguments);
      }, _T.prototype.getNodeAt = function() {
        var t2 = this.selectionHandler.getNodeAt.apply(this.selectionHandler, arguments);
        return void 0 !== t2 && void 0 !== t2.id ? t2.id : t2;
      }, _T.prototype.getEdgeAt = function() {
        var t2 = this.selectionHandler.getEdgeAt.apply(this.selectionHandler, arguments);
        return void 0 !== t2 && void 0 !== t2.id ? t2.id : t2;
      }, _T.prototype.selectNodes = function() {
        return this.selectionHandler.selectNodes.apply(this.selectionHandler, arguments);
      }, _T.prototype.selectEdges = function() {
        return this.selectionHandler.selectEdges.apply(this.selectionHandler, arguments);
      }, _T.prototype.unselectAll = function() {
        this.selectionHandler.unselectAll.apply(this.selectionHandler, arguments), this.selectionHandler.commitWithoutEmitting.apply(this.selectionHandler), this.redraw();
      }, _T.prototype.redraw = function() {
        return this.renderer.redraw.apply(this.renderer, arguments);
      }, _T.prototype.getScale = function() {
        return this.view.getScale.apply(this.view, arguments);
      }, _T.prototype.getViewPosition = function() {
        return this.view.getViewPosition.apply(this.view, arguments);
      }, _T.prototype.fit = function() {
        return this.view.fit.apply(this.view, arguments);
      }, _T.prototype.moveTo = function() {
        return this.view.moveTo.apply(this.view, arguments);
      }, _T.prototype.focus = function() {
        return this.view.focus.apply(this.view, arguments);
      }, _T.prototype.releaseNode = function() {
        return this.view.releaseNode.apply(this.view, arguments);
      }, _T.prototype.getOptionsFromConfigurator = function() {
        var t2 = {};
        return this.configurator && (t2 = this.configurator.getOptions.apply(this.configurator)), t2;
      };
      var xT = qb;
      t.Network = _T, t.NetworkImages = $b, t.networkDOTParser = Ub, t.networkGephiParser = Xb, t.networkOptions = bT, t.parseDOTNetwork = xT, t.parseGephiNetwork = Yb;
    });
  }
});

// node_modules/react-graph-vis/node_modules/uuid/rng-browser.js
var require_rng_browser = __commonJS({
  "node_modules/react-graph-vis/node_modules/uuid/rng-browser.js"(exports, module) {
    var rng;
    var crypto2 = global.crypto || global.msCrypto;
    if (crypto2 && crypto2.getRandomValues) {
      _rnds8 = new Uint8Array(16);
      rng = function whatwgRNG() {
        crypto2.getRandomValues(_rnds8);
        return _rnds8;
      };
    }
    var _rnds8;
    if (!rng) {
      _rnds = new Array(16);
      rng = function() {
        for (var i = 0, r; i < 16; i++) {
          if ((i & 3) === 0) r = Math.random() * 4294967296;
          _rnds[i] = r >>> ((i & 3) << 3) & 255;
        }
        return _rnds;
      };
    }
    var _rnds;
    module.exports = rng;
  }
});

// node_modules/react-graph-vis/node_modules/uuid/uuid.js
var require_uuid = __commonJS({
  "node_modules/react-graph-vis/node_modules/uuid/uuid.js"(exports, module) {
    var _rng = require_rng_browser();
    var _byteToHex = [];
    var _hexToByte = {};
    for (i = 0; i < 256; i++) {
      _byteToHex[i] = (i + 256).toString(16).substr(1);
      _hexToByte[_byteToHex[i]] = i;
    }
    var i;
    function parse(s, buf, offset) {
      var i2 = buf && offset || 0, ii = 0;
      buf = buf || [];
      s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {
        if (ii < 16) {
          buf[i2 + ii++] = _hexToByte[oct];
        }
      });
      while (ii < 16) {
        buf[i2 + ii++] = 0;
      }
      return buf;
    }
    function unparse(buf, offset) {
      var i2 = offset || 0, bth = _byteToHex;
      return bth[buf[i2++]] + bth[buf[i2++]] + bth[buf[i2++]] + bth[buf[i2++]] + "-" + bth[buf[i2++]] + bth[buf[i2++]] + "-" + bth[buf[i2++]] + bth[buf[i2++]] + "-" + bth[buf[i2++]] + bth[buf[i2++]] + "-" + bth[buf[i2++]] + bth[buf[i2++]] + bth[buf[i2++]] + bth[buf[i2++]] + bth[buf[i2++]] + bth[buf[i2++]];
    }
    var _seedBytes = _rng();
    var _nodeId = [
      _seedBytes[0] | 1,
      _seedBytes[1],
      _seedBytes[2],
      _seedBytes[3],
      _seedBytes[4],
      _seedBytes[5]
    ];
    var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 16383;
    var _lastMSecs = 0;
    var _lastNSecs = 0;
    function v1(options, buf, offset) {
      var i2 = buf && offset || 0;
      var b = buf || [];
      options = options || {};
      var clockseq = options.clockseq !== void 0 ? options.clockseq : _clockseq;
      var msecs = options.msecs !== void 0 ? options.msecs : (/* @__PURE__ */ new Date()).getTime();
      var nsecs = options.nsecs !== void 0 ? options.nsecs : _lastNSecs + 1;
      var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 1e4;
      if (dt < 0 && options.clockseq === void 0) {
        clockseq = clockseq + 1 & 16383;
      }
      if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === void 0) {
        nsecs = 0;
      }
      if (nsecs >= 1e4) {
        throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
      }
      _lastMSecs = msecs;
      _lastNSecs = nsecs;
      _clockseq = clockseq;
      msecs += 122192928e5;
      var tl = ((msecs & 268435455) * 1e4 + nsecs) % 4294967296;
      b[i2++] = tl >>> 24 & 255;
      b[i2++] = tl >>> 16 & 255;
      b[i2++] = tl >>> 8 & 255;
      b[i2++] = tl & 255;
      var tmh = msecs / 4294967296 * 1e4 & 268435455;
      b[i2++] = tmh >>> 8 & 255;
      b[i2++] = tmh & 255;
      b[i2++] = tmh >>> 24 & 15 | 16;
      b[i2++] = tmh >>> 16 & 255;
      b[i2++] = clockseq >>> 8 | 128;
      b[i2++] = clockseq & 255;
      var node = options.node || _nodeId;
      for (var n = 0; n < 6; n++) {
        b[i2 + n] = node[n];
      }
      return buf ? buf : unparse(b);
    }
    function v4(options, buf, offset) {
      var i2 = buf && offset || 0;
      if (typeof options == "string") {
        buf = options == "binary" ? new Array(16) : null;
        options = null;
      }
      options = options || {};
      var rnds = options.random || (options.rng || _rng)();
      rnds[6] = rnds[6] & 15 | 64;
      rnds[8] = rnds[8] & 63 | 128;
      if (buf) {
        for (var ii = 0; ii < 16; ii++) {
          buf[i2 + ii] = rnds[ii];
        }
      }
      return buf || unparse(rnds);
    }
    var uuid = v4;
    uuid.v1 = v1;
    uuid.v4 = v4;
    uuid.parse = parse;
    uuid.unparse = unparse;
    module.exports = uuid;
  }
});

// node_modules/react-graph-vis/lib/index.js
var require_lib = __commonJS({
  "node_modules/react-graph-vis/lib/index.js"(exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _createClass = /* @__PURE__ */ function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _defaultsDeep = require_defaultsDeep2();
    var _defaultsDeep2 = _interopRequireDefault(_defaultsDeep);
    var _isEqual = require_isEqual();
    var _isEqual2 = _interopRequireDefault(_isEqual);
    var _differenceWith = require_differenceWith();
    var _differenceWith2 = _interopRequireDefault(_differenceWith);
    var _visData = require_vis_data_min();
    var _visNetwork = require_vis_network_min();
    var _uuid = require_uuid();
    var _uuid2 = _interopRequireDefault(_uuid);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var Graph = function(_Component) {
      _inherits(Graph2, _Component);
      function Graph2(props) {
        _classCallCheck(this, Graph2);
        var _this = _possibleConstructorReturn(this, (Graph2.__proto__ || Object.getPrototypeOf(Graph2)).call(this, props));
        var identifier = props.identifier;
        _this.updateGraph = _this.updateGraph.bind(_this);
        _this.state = {
          identifier: identifier !== void 0 ? identifier : _uuid2.default.v4()
        };
        _this.container = _react2.default.createRef();
        return _this;
      }
      _createClass(Graph2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.edges = new _visData.DataSet();
          this.edges.add(this.props.graph.edges);
          this.nodes = new _visData.DataSet();
          this.nodes.add(this.props.graph.nodes);
          this.updateGraph();
        }
      }, {
        key: "shouldComponentUpdate",
        value: function shouldComponentUpdate(nextProps, nextState) {
          var nodesChange = !(0, _isEqual2.default)(this.props.graph.nodes, nextProps.graph.nodes);
          var edgesChange = !(0, _isEqual2.default)(this.props.graph.edges, nextProps.graph.edges);
          var optionsChange = !(0, _isEqual2.default)(this.props.options, nextProps.options);
          var eventsChange = !(0, _isEqual2.default)(this.props.events, nextProps.events);
          if (nodesChange) {
            var idIsEqual = function idIsEqual2(n1, n2) {
              return n1.id === n2.id;
            };
            var nodesRemoved = (0, _differenceWith2.default)(this.props.graph.nodes, nextProps.graph.nodes, idIsEqual);
            var nodesAdded = (0, _differenceWith2.default)(nextProps.graph.nodes, this.props.graph.nodes, idIsEqual);
            var nodesChanged = (0, _differenceWith2.default)((0, _differenceWith2.default)(nextProps.graph.nodes, this.props.graph.nodes, _isEqual2.default), nodesAdded);
            this.patchNodes({ nodesRemoved, nodesAdded, nodesChanged });
          }
          if (edgesChange) {
            var edgesRemoved = (0, _differenceWith2.default)(this.props.graph.edges, nextProps.graph.edges, _isEqual2.default);
            var edgesAdded = (0, _differenceWith2.default)(nextProps.graph.edges, this.props.graph.edges, _isEqual2.default);
            var edgesChanged = (0, _differenceWith2.default)((0, _differenceWith2.default)(nextProps.graph.edges, this.props.graph.edges, _isEqual2.default), edgesAdded);
            this.patchEdges({ edgesRemoved, edgesAdded, edgesChanged });
          }
          if (optionsChange) {
            this.Network.setOptions(nextProps.options);
          }
          if (eventsChange) {
            var events = this.props.events || {};
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = void 0;
            try {
              for (var _iterator = Object.keys(events)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var eventName = _step.value;
                this.Network.off(eventName, events[eventName]);
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
            events = nextProps.events || {};
            var _iteratorNormalCompletion2 = true;
            var _didIteratorError2 = false;
            var _iteratorError2 = void 0;
            try {
              for (var _iterator2 = Object.keys(events)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                var _eventName = _step2.value;
                this.Network.on(_eventName, events[_eventName]);
              }
            } catch (err) {
              _didIteratorError2 = true;
              _iteratorError2 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion2 && _iterator2.return) {
                  _iterator2.return();
                }
              } finally {
                if (_didIteratorError2) {
                  throw _iteratorError2;
                }
              }
            }
          }
          return false;
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate() {
          this.updateGraph();
        }
      }, {
        key: "patchEdges",
        value: function patchEdges(_ref) {
          var edgesRemoved = _ref.edgesRemoved, edgesAdded = _ref.edgesAdded, edgesChanged = _ref.edgesChanged;
          this.edges.remove(edgesRemoved);
          this.edges.add(edgesAdded);
          this.edges.update(edgesChanged);
        }
      }, {
        key: "patchNodes",
        value: function patchNodes(_ref2) {
          var nodesRemoved = _ref2.nodesRemoved, nodesAdded = _ref2.nodesAdded, nodesChanged = _ref2.nodesChanged;
          this.nodes.remove(nodesRemoved);
          this.nodes.add(nodesAdded);
          this.nodes.update(nodesChanged);
        }
      }, {
        key: "updateGraph",
        value: function updateGraph() {
          var defaultOptions = {
            physics: {
              stabilization: false
            },
            autoResize: false,
            edges: {
              smooth: false,
              color: "#000000",
              width: 0.5,
              arrows: {
                to: {
                  enabled: true,
                  scaleFactor: 0.5
                }
              }
            }
          };
          var options = (0, _defaultsDeep2.default)(defaultOptions, this.props.options);
          this.Network = new _visNetwork.Network(this.container.current, Object.assign({}, this.props.graph, {
            edges: this.edges,
            nodes: this.nodes
          }), options);
          if (this.props.getNetwork) {
            this.props.getNetwork(this.Network);
          }
          if (this.props.getNodes) {
            this.props.getNodes(this.nodes);
          }
          if (this.props.getEdges) {
            this.props.getEdges(this.edges);
          }
          var events = this.props.events || {};
          var _iteratorNormalCompletion3 = true;
          var _didIteratorError3 = false;
          var _iteratorError3 = void 0;
          try {
            for (var _iterator3 = Object.keys(events)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
              var eventName = _step3.value;
              this.Network.on(eventName, events[eventName]);
            }
          } catch (err) {
            _didIteratorError3 = true;
            _iteratorError3 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion3 && _iterator3.return) {
                _iterator3.return();
              }
            } finally {
              if (_didIteratorError3) {
                throw _iteratorError3;
              }
            }
          }
        }
      }, {
        key: "render",
        value: function render() {
          var identifier = this.state.identifier;
          var style = this.props.style;
          return _react2.default.createElement("div", {
            id: identifier,
            ref: this.container,
            style
          }, identifier);
        }
      }]);
      return Graph2;
    }(_react.Component);
    Graph.defaultProps = {
      graph: {},
      style: { width: "100%", height: "100%" }
    };
    Graph.propTypes = {
      graph: _propTypes2.default.object,
      style: _propTypes2.default.object,
      getNetwork: _propTypes2.default.func,
      getNodes: _propTypes2.default.func,
      getEdges: _propTypes2.default.func
    };
    exports.default = Graph;
  }
});
export default require_lib();
/*! Bundled license information:

vis-data/peer/umd/vis-data.min.js:
  (**
   * vis-data
   * http://visjs.org/
   *
   * Manage unstructured data using DataSet. Add, update, and remove data, and listen for changes in the data.
   *
   * @version 7.1.9
   * @date    2023-11-24T17:53:34.179Z
   *
   * @copyright (c) 2011-2017 Almende B.V, http://almende.com
   * @copyright (c) 2017-2019 visjs contributors, https://github.com/visjs
   *
   * @license
   * vis.js is dual licensed under both
   *
   *   1. The Apache 2.0 License
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   *   and
   *
   *   2. The MIT License
   *      http://opensource.org/licenses/MIT
   *
   * vis.js may be distributed under either license.
   *)
  (*! Hammer.JS - v2.0.17-rc - 2019-12-16
     * http://naver.github.io/egjs
     *
     * Forked By Naver egjs
     * Copyright (c) hammerjs
     * Licensed under the MIT license *)

vis-data/peer/umd/vis-data.js:
  (**
   * vis-data
   * http://visjs.org/
   *
   * Manage unstructured data using DataSet. Add, update, and remove data, and listen for changes in the data.
   *
   * @version 7.1.9
   * @date    2023-11-24T17:53:34.179Z
   *
   * @copyright (c) 2011-2017 Almende B.V, http://almende.com
   * @copyright (c) 2017-2019 visjs contributors, https://github.com/visjs
   *
   * @license
   * vis.js is dual licensed under both
   *
   *   1. The Apache 2.0 License
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   *   and
   *
   *   2. The MIT License
   *      http://opensource.org/licenses/MIT
   *
   * vis.js may be distributed under either license.
   *)
  (*! Hammer.JS - v2.0.17-rc - 2019-12-16
   * http://naver.github.io/egjs
   *
   * Forked By Naver egjs
   * Copyright (c) hammerjs
   * Licensed under the MIT license *)

vis-network/peer/umd/vis-network.min.js:
  (**
   * vis-network
   * https://visjs.github.io/vis-network/
   *
   * A dynamic, browser-based visualization library.
   *
   * @version 9.1.9
   * @date    2023-11-03T01:42:27.418Z
   *
   * @copyright (c) 2011-2017 Almende B.V, http://almende.com
   * @copyright (c) 2017-2019 visjs contributors, https://github.com/visjs
   *
   * @license
   * vis.js is dual licensed under both
   *
   *   1. The Apache 2.0 License
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   *   and
   *
   *   2. The MIT License
   *      http://opensource.org/licenses/MIT
   *
   * vis.js may be distributed under either license.
   *)
  (*! Hammer.JS - v2.0.17-rc - 2019-12-16
  	 * http://naver.github.io/egjs
  	 *
  	 * Forked By Naver egjs
  	 * Copyright (c) hammerjs
  	 * Licensed under the MIT license *)
*/
//# sourceMappingURL=react-graph-vis.js.map
